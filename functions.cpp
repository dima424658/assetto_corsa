
void __thiscall ACCamera::ACCamera(ACCamera *this);

bool __cdecl std::_Fputc<wchar_t>(wchar_t _Wchar, _iobuf *_File);
void __thiscall CameraManager::CameraManager(CameraManager *this, const std::wstring *filename);

void __thiscall CameraManager::~CameraManager(CameraManager *this);
void __thiscall ACCamera::ACCamera(ACCamera *this, const ACCamera *__that);
void __thiscall std::wofstream::`vbase destructor(std::wofstream *this);
void __thiscall CameraManager::load(CameraManager *this, std::wstring filename, bool merge);
ACCamera *__thiscall CameraManager::getActiveCamera(CameraManager *this, float normalizedSplinePosition);
void __thiscall CameraManager::initCamerasDistanceRanges(CameraManager *this, const Spline *spline);
void __thiscall std::vector<ACCamera>::push_back(std::vector<ACCamera> *this, const ACCamera *_Val);
void __thiscall std::vector<ACCamera>::clear(std::vector<ACCamera> *this);
void __thiscall std::wofstream::wofstream(std::wofstream *this, const std::wstring *_Str, int _Mode, int _Prot, int a5);
void __thiscall std::wofstream::~wofstream<wchar_t,std::char_traits<wchar_t>>(std::wofstream *this);
void __thiscall std::wofstream::close(std::wofstream *this);
void __thiscall std::wfilebuf::~wfilebuf<wchar_t,std::char_traits<wchar_t>>(std::wfilebuf *this);
unsigned __int16 __thiscall std::wfilebuf::overflow(std::wfilebuf *this, unsigned __int16 _Meta);
unsigned __int16 __thiscall std::wfilebuf::pbackfail(std::wfilebuf *this, unsigned __int16 _Meta);
wchar_t __thiscall std::wfilebuf::underflow(std::wfilebuf *this);
wint_t __thiscall std::wfilebuf::uflow(std::wfilebuf *this);
std::fpos<int> *__thiscall std::wfilebuf::seekoff(std::wfilebuf *this, std::fpos<int> *result, __int64 _Off, int _Way, int __formal);
std::fpos<int> *__thiscall std::wfilebuf::seekpos(std::wfilebuf *this, std::fpos<int> *result, std::fpos<int> _Pos, int __formal);
std::wfilebuf *__thiscall std::wfilebuf::setbuf(std::wfilebuf *this, wchar_t *_Buffer, __int64 _Count);
int __thiscall std::wfilebuf::sync(std::wfilebuf *this);
void __thiscall std::wfilebuf::imbue(std::wfilebuf *this, const std::locale *_Loc);
char *__thiscall std::wofstream::`scalar deleting destructor'(std::wofstream *this, unsigned int a2);
std::wfilebuf *__thiscall std::wfilebuf::`vector deleting destructor'(std::wfilebuf *this, unsigned int a2);
void __thiscall std::vector<ACCamera>::_Reserve(std::vector<ACCamera> *this, unsigned int _Count);
void __thiscall std::vector<ACCamera>::_Tidy(std::vector<ACCamera> *this);
std::wfilebuf *__thiscall std::wfilebuf::open(std::wfilebuf *this, const wchar_t *_Filename, int _Mode, int _Prot);
std::wfilebuf *__thiscall std::wfilebuf::close(std::wfilebuf *this);
char __thiscall std::wfilebuf::_Endwrite(std::wfilebuf *this);
void __thiscall std::wfilebuf::_Reset_back(std::wfilebuf *this);
void __thiscall std::wfilebuf::_Set_back(std::wfilebuf *this);
void __thiscall std::vector<ACCamera>::_Reallocate(std::vector<ACCamera> *this, unsigned int _Count);
const float *__cdecl std::max<float>(const float *_Left, const float *_Right);
std::wostream *__cdecl std::endl<wchar_t,std::char_traits<wchar_t>>(std::wostream *_Ostr);
std::wostream *__cdecl std::operator<<<wchar_t>(std::wostream *_Ostr, const std::wstring *_Str);
std::locale::facet *__cdecl std::use_facet<std::codecvt<wchar_t,char,int>>(const std::locale *_Loc);
// void __usercall std::_For_each<ACCamera *,_lambda_d3941f6d703475ff830cadf6b94202ed_>(ACCamera *_First@<ecx>, ACCamera *_Last@<edx>, CameraManager::getActiveCamera::__l6::<lambda_d3941f6d703475ff830cadf6b94202ed> *_Func);
// void __usercall std::_For_each<ACCamera *,_lambda_1859dab662e780a0b6d323c7a676d06f_>(ACCamera *_First@<ecx>, ACCamera *_Last@<edx>, CameraManager::initCamerasDistanceRanges::__l14::<lambda_1859dab662e780a0b6d323c7a676d06f> *_Func);
ACCamera *__cdecl std::_Uninit_move<ACCamera *,ACCamera *,std::allocator<ACCamera>,ACCamera>(ACCamera *_First, ACCamera *_Last, ACCamera *_Dest);
char *__thiscall std::wofstream::`vector deleting destructor'(_DWORD *this, unsigned int a2);
double __cdecl pow();
vec3f *__cdecl normalize(vec3f *result, const vec3f *v);
double __cdecl saturate(float v);
void __thiscall PPFX::PFX_INITPARAM::PFX_INITPARAM(PPFX::PFX_INITPARAM *this);
void __thiscall PPFX::PFX_INITPARAM::Initialize(PPFX::PFX_INITPARAM *this);
void __thiscall KGLYebisParticle::initialize(KGLYebisParticle *this, KGLVolume volume, KGLPostProcessing *pp);
void __thiscall KGLYebisParticleSet::KGLYebisParticleSet(KGLYebisParticleSet *this, int aNumberOfParticles, const KGLVolume *volume, KGLPostProcessing *pp);
void __thiscall KGLYebisParticleSet::update(KGLYebisParticleSet *this, const KGLVolume *v, KGLPostProcessing *pp);
void __thiscall KGLYebisParticleManager::KGLYebisParticleManager(KGLYebisParticleManager *this, KGLPostProcessing *pp);
void __thiscall KGLYebisParticleManager::setupPfxParticles(KGLYebisParticleManager *this, PPFX::IPfxContext_Dx11 *pPfxContext);
void __cdecl ks_critical_error(const std::wstring *error);
// void __usercall CameraForwardYebis::initPostProcessing(CameraForwardYebis *this@<ecx>, PPFX::CTextureUtil *a2@<edx>, const char *a3@<esi>);
KGLYebisParticleManager *__thiscall KGLYebisParticleManager::`scalar deleting destructor'(KGLYebisParticleManager *this, unsigned int a2);
void __thiscall CameraForwardYebis::setPostProcessing(CameraForwardYebis *this);
// void __usercall CameraForwardYebis::applyPostProcessing(CameraForwardYebis *this@<ecx>, _DWORD *a2@<ebx>);
// void __userpurge CameraForwardYebis::CameraForwardYebis(CameraForwardYebis *this@<ecx>, unsigned int a2@<ebx>, const std::wstring *iname, GraphicsManager *graphics, bool blur, bool isYebis, int numberOfParticleGenerators);
CameraForwardYebis *__fastcall CameraForwardYebis::`vector deleting destructor'(CameraForwardYebis *this, PPFX::CTextureUtil *a2, unsigned int a3);
void __thiscall Event<ksgui::OnSpinnerValueChanged>::~Event<ksgui::OnSpinnerValueChanged>(Event<int> *this);
char __thiscall CameraForwardYebis::readPPSetOptions(CameraForwardYebis *this, std::wstring name);
char __thiscall CameraForwardYebis::loadPPSet(CameraForwardYebis *this, std::wstring name);
void __thiscall CameraForwardYebis::initRenderTargets(CameraForwardYebis *this);
// void __userpurge CameraForwardYebis::onResize(CameraForwardYebis *this@<ecx>, unsigned int a2@<ebx>, const OnWindowResize *message);
// void __usercall CameraForwardYebis::updateYebisParameters(CameraForwardYebis *this@<ecx>, float a2@<xmm1>);
void __thiscall CameraForwardYebis::render(CameraForwardYebis *this, Node *blurred, Node *unblurred, Node *shadow, float dt);
KGLRenderTarget *__thiscall CameraForwardYebis::getYebisDestinationRenderTarget(CameraForwardYebis *this);
void __thiscall CameraForwardYebis::resetYebisStates(CameraForwardYebis *this);
void __thiscall CameraForwardYebis::setSolveBlurRenderTarget(CameraForwardYebis *this);
void __thiscall CameraForwardYebis::renderApplyEffect(CameraForwardYebis *this, Node *blurred, Node *unblurred, Node *shadow, float dt);
void __fastcall CameraForwardYebis::~CameraForwardYebis(CameraForwardYebis *this, PPFX::CTextureUtil *a2);
void __thiscall Event<std::wstring>::trigger(Event<OnGearRequestEvent> *this, const OnGearRequestEvent *message);
void __thiscall Event<std::wstring>::addHandler(Event<OnPhysicsStepCompleted> *this, std::function<void __cdecl(OnPhysicsStepCompleted const &)> h, void *owner);
void __thiscall std::vector<KGLYebisParticle>::push_back(std::vector<KGLYebisParticle> *this, KGLYebisParticle *_Val);
void __thiscall std::vector<KGLYebisParticleSet>::push_back(std::vector<KGLYebisParticleSet> *this, KGLYebisParticleSet *_Val);
void __thiscall std::vector<KGLYebisParticleSet>::~vector<KGLYebisParticleSet>(std::vector<KGLYebisParticleSet> *this);
void __thiscall std::function<float __cdecl (void)>::~function<float __cdecl (void)>(std::function<void __cdecl(SetupItem *)> *this);
void __thiscall std::pair<void *,std::function<void __cdecl (OnMouseUpEvent const &)>>::~pair<void *,std::function<void __cdecl (OnMouseUpEvent const &)>>(Task *this);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (OnMouseUpEvent const &)>>>::push_back(std::vector<std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> >> *this, const std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> > *_Val);
void __thiscall std::vector<KGLYebisParticle>::_Reserve(std::vector<KGLYebisParticle> *this, unsigned int _Count);
void __thiscall std::vector<KGLYebisParticleSet>::_Reserve(std::vector<KGLYebisParticleSet> *this, unsigned int _Count);
void __thiscall std::_Func_class<void,bool const &>::~_Func_class<void,bool const &>(std::_Func_class<void,SetupItem *> *this);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (OnReplayStatusChanged const &)>>>::_Destroy(std::vector<std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> >> *this, std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> > *_First, std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> > *_Last);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (OnNewSessionEvent const &)>>>::_Reserve(std::vector<std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> >> *this, unsigned int _Count);
void __thiscall std::vector<KGLYebisParticle>::_Reallocate(std::vector<KGLYebisParticle> *this, unsigned int _Count);
void __thiscall std::vector<KGLYebisParticleSet>::_Destroy(std::vector<KGLYebisParticleSet> *this, KGLYebisParticleSet *_First, KGLYebisParticleSet *_Last);
void __thiscall std::vector<KGLYebisParticleSet>::_Reallocate(std::vector<KGLYebisParticleSet> *this, unsigned int _Count);
std::_Func_impl<std::_Callable_obj<<lambda_0b31ec168befd650aaa97b4af43d34d2>,0>,std::allocator<std::_Func_class<void,OnWindowResize const &> >,void,OnWindowResize const &> *__thiscall std::_Func_base<void,OnWindowResize const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_0b31ec168befd650aaa97b4af43d34d2>,0>,std::allocator<std::_Func_class<void,OnWindowResize const &> >,void,OnWindowResize const &> *this, unsigned int a2);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (OnPhysicsStepCompleted const &)>>>::_Reallocate(std::vector<std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> >> *this, unsigned int _Count);
const int *__cdecl std::min<int>(const int *_Left, const int *_Right);
std::wstring *__cdecl std::operator+<wchar_t>(std::wstring *result, std::wstring *_Left, const wchar_t *_Right);
std::wstring *__cdecl std::operator+<wchar_t>(std::wstring *result, std::wstring *_Left, const std::wstring *_Right);
double __cdecl clamp<float>(float v, float m0, float m1);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<void *,std::function<void __cdecl (bool const &)>>>>>(std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> > *_First, std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> > *_Last);
void __thiscall std::allocator<std::pair<void *,std::function<void __cdecl (OnMouseDownEvent const &)>>>::construct<std::pair<void *,std::function<void __cdecl (OnMouseDownEvent const &)>>,std::pair<void *,std::function<void __cdecl (OnMouseDownEvent const &)>> &>(std::allocator<std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> > > *this, std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> > *_Ptr, const std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> > *_Val);
void __thiscall std::_Wrap_alloc<std::allocator<std::pair<void *,std::function<void __cdecl (vec3f const &)>>>>::destroy<std::pair<void *,std::function<void __cdecl (vec3f const &)>>>(std::_Wrap_alloc<std::allocator<Task> > *this, Task *_Ptr);
void __thiscall std::_Wrap_alloc<std::allocator<KGLYebisParticleSet>>::destroy<KGLYebisParticleSet>(std::_Wrap_alloc<std::allocator<KGLYebisParticleSet> > *this, KGLYebisParticleSet *_Ptr);
void __thiscall std::vector<KGLYebisParticle>::vector<KGLYebisParticle>(std::vector<KGLYebisParticle> *this, const std::vector<KGLYebisParticle> *_Right);
char __thiscall std::vector<KGLYebisParticle>::_Buy(std::vector<KGLYebisParticle> *this, unsigned int _Capacity);
// KGLYebisParticle *__usercall std::_Uninit_move<KGLYebisParticle *,KGLYebisParticle *,std::allocator<KGLYebisParticle>,KGLYebisParticle>@<eax>(KGLYebisParticle *_First@<ecx>, KGLYebisParticle *_Last@<edx>, KGLYebisParticle *_Dest);
// KGLYebisParticleSet *__usercall std::_Uninit_move<KGLYebisParticleSet *,KGLYebisParticleSet *,std::allocator<KGLYebisParticleSet>,KGLYebisParticleSet>@<eax>(KGLYebisParticleSet *_First@<ecx>, KGLYebisParticleSet *_Last@<edx>, KGLYebisParticleSet *_Dest);
std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> > *__cdecl std::_Uninit_move<std::pair<void *,std::function<void __cdecl (OnReplayStatusChanged const &)>> *,std::pair<void *,std::function<void __cdecl (OnReplayStatusChanged const &)>> *,std::allocator<std::pair<void *,std::function<void __cdecl (OnReplayStatusChanged const &)>>>,std::pair<void *,std::function<void __cdecl (OnReplayStatusChanged const &)>>>(std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> > *_First, std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> > *_Last, std::pair<void *,std::function<void __cdecl(OnPhysicsStepCompleted const &)> > *_Dest);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0b31ec168befd650aaa97b4af43d34d2_,0>,std::allocator<std::_Func_class<void,OnWindowResize const &>>,void,OnWindowResize const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_0b31ec168befd650aaa97b4af43d34d2>,0>,std::allocator<std::_Func_class<void,OnWindowResize const &> >,void,OnWindowResize const &> *this, void *_Where);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_0b31ec168befd650aaa97b4af43d34d2_,0>,std::allocator<std::_Func_class<void,OnWindowResize const &>>,void,OnWindowResize const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0b31ec168befd650aaa97b4af43d34d2>,0>,std::allocator<std::_Func_class<void,OnWindowResize const &> >,void,OnWindowResize const &> *this@<ecx>, PPFX::CTextureUtil *a2@<edx>, const char *a3@<esi>, const OnWindowResize *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0b31ec168befd650aaa97b4af43d34d2_,0>,std::allocator<std::_Func_class<void,OnWindowResize const &>>,void,OnWindowResize const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0b31ec168befd650aaa97b4af43d34d2>,0>,std::allocator<std::_Func_class<void,OnWindowResize const &> >,void,OnWindowResize const &> *this);
std::_Callable_obj<<lambda_77ca9348bb85863f3ac03214213671f3>,0> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_034d48754ea12fd9a7c51584058b5d75_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Get(std::_Func_impl<std::_Callable_obj<<lambda_77ca9348bb85863f3ac03214213671f3>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8d056ed3cbf33029f77a1aded06f61a9_,0>,std::allocator<std::_Func_class<void,std::vector<SteamLeaderboardEntry> const &>>,void,std::vector<SteamLeaderboardEntry> const &>::_Delete_this(std::_Func_impl<std::_Callable_obj<<lambda_cbbbee75040862a861784e2053a8fd34>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, bool _Deallocate);
void __thiscall YebisPP::YebisPP(YebisPP *this, GraphicsManager *graphics, int width, int height, ID3D11RenderTargetView *rtv);
void __thiscall YebisPP::~YebisPP(YebisPP *this);
// void __userpurge YebisPP::applyPostProcessing(YebisPP *this@<ecx>, _DWORD *a2@<ebx>, ID3D11ShaderResourceView *srcSRV, DXGI_FORMAT srcFormat, ID3D11ShaderResourceView *srcDepthSRV, ID3D11RenderTargetView *dstRTV, DXGI_FORMAT dstFormat);
// void __userpurge YebisPP::updatePPCameraValues(YebisPP *this@<ecx>, int a2@<edi>, int a3@<esi>, float dt, Camera *camera, float a6, float a7, float a8, float a9, vec3f cameraPosition, vec3f cameraTarget, mat44f result, __m128i a13, __m128i a14, __m128i a15, __m128i a16);
void __thiscall YebisPP::updatePP(YebisPP *this, bool updateExp);
bool __thiscall YebisPP::loadPPSet(YebisPP *this, const std::wstring *name);
char __thiscall YebisPP::readPPSet(YebisPP *this, std::wstring name);
void __fastcall YebisPP::initPP(YebisPP *this, PPFX::CTextureUtil *a2);
int __stdcall EnumJoysticksCallbackDI(const DIDEVICEINSTANCEW *pdidInstance, void *pContext);
void __thiscall std::pair<_GUID,std::wstring>::~pair<_GUID,std::wstring>(std::pair<_GUID,std::wstring > *this);
void __thiscall DirectInput::DirectInput(DirectInput *this);
DirectInput *__thiscall DirectInput::`vector deleting destructor'(DirectInput *this, unsigned int a2);
void __thiscall DirectInput::~DirectInput(DirectInput *this);
void __thiscall DirectInput::initJoys(DirectInput *this);
void __cdecl DirectInput::singleton();
int DirectInput::cleanup();
InputDevice *__thiscall DirectInput::getDevice(DirectInput *this, int index);
void __thiscall DirectInput::poll(DirectInput *this);
void __thiscall DirectInput::forceFF(DirectInput *this, float v);
void __thiscall std::vector<std::pair<_GUID,std::wstring>>::push_back(std::vector<std::pair<_GUID,std::wstring >> *this, std::pair<_GUID,std::wstring > *_Val);
void __thiscall std::vector<std::pair<_GUID,std::wstring>>::~vector<std::pair<_GUID,std::wstring>>(std::vector<std::pair<_GUID,std::wstring >> *this);
void __thiscall std::vector<std::pair<_GUID,std::wstring>>::_Reserve(std::vector<std::pair<_GUID,std::wstring >> *this, unsigned int _Count);
void __thiscall std::vector<std::pair<_GUID,std::wstring>>::_Reallocate(std::vector<std::pair<_GUID,std::wstring >> *this, unsigned int _Count);
// __m128i *__usercall std::make_pair<_GUID const &,std::wstring &>@<eax>(const _GUID *_Val1@<edx>, __m128i *a2@<ecx>, std::wstring *_Val2);
void __fastcall std::_For_each<InputDevice * *,_lambda_6452013f698eed48c996500d868acda6_>(InputDevice **_First, InputDevice **_Last);
void __fastcall std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<_GUID,std::wstring>>>>(std::pair<_GUID,std::wstring > *_First, std::pair<_GUID,std::wstring > *_Last);
// std::pair<_GUID,std::wstring > *__usercall std::_Uninit_move<std::pair<_GUID,std::wstring> *,std::pair<_GUID,std::wstring> *,std::allocator<std::pair<_GUID,std::wstring>>,std::pair<_GUID,std::wstring>>@<eax>(std::pair<_GUID,std::wstring > *_First@<ecx>, std::pair<_GUID,std::wstring > *_Last@<edx>, std::pair<_GUID,std::wstring > *_Dest);
void __thiscall InputDeviceState::InputDeviceState(InputDeviceState *this);
void __thiscall InputDevice::InputDevice(InputDevice *this, _GUID guid, const std::wstring *name, DirectInput *di);
void __thiscall InputDevice::~InputDevice(InputDevice *this);
void __thiscall InputDevice::setG27Leds(InputDevice *this, float rpm, float minRpm, float maxRpm);
bool __thiscall InputDevice::poll(InputDevice *this);
void __thiscall InputDevice::sendFF(InputDevice *this, float v, float damper);
void __thiscall InputDevice::initFF(InputDevice *this);
void __thiscall vec2f::vec2f(vec2f *this, float ix, float iy);
void __thiscall vec4f::vec4f(vec4f *this, float ix, float iy, float iz, float iw);
void __thiscall Texture::Texture(Texture *this);
double __thiscall ksgui::ksRect::getWidth(ksgui::ksRect *this);
double __thiscall ksgui::ksRect::getHeight(ksgui::ksRect *this);
double __thiscall ksgui::Control::getWidth(ksgui::Control *this);
double __thiscall ksgui::Control::getHeight(ksgui::Control *this);
void __thiscall ksgui::Control::onVisibleChanged(ksgui::Control *this, BOOL newValue);
bool __thiscall ksgui::Control::isMousePressing(ksgui::Control *this);
void __thiscall ksgui::Control::setText(ACControl *this, const std::wstring *itext);
std::wstring *__thiscall ksgui::Control::getText(ACControl *this);
void __thiscall ksgui::Control::Control(ksgui::Control *this, const std::wstring *iname, ksgui::GUI *igui);
ksgui::Control *__thiscall ksgui::Control::`vector deleting destructor'(ksgui::Control *this, unsigned int a2);
void __thiscall ksgui::Control::~Control(ksgui::Control *this);
void __thiscall ksgui::Control::setVisible(ksgui::Control *this, BOOL value);
void __thiscall ksgui::Control::onKeyChar(ksgui::Control *this, const unsigned int key);
void __thiscall ksgui::Control::onKeyDown(ksgui::Control *this, const OnKeyEvent *message);
void __thiscall ksgui::Form::setPosition(ksgui::Form *this, float left, float top);
void __thiscall ksgui::Control::setSize(ksgui::Control *this, float w, float h);
vec2f *__thiscall ksgui::Control::localToWorld(ksgui::Control *this, vec2f *result, const vec2f *pos);
void __thiscall ksgui::Control::getWorldRect(ksgui::Control *this, ksgui::ksRect *irect);
void __thiscall ksgui::Control::addControl(ksgui::Control *this, ksgui::Control *c);
// void __userpurge ksgui::Control::render(ksgui::Control *this@<ecx>, int a2@<edi>, int a3@<esi>, float dt, __int64 g, float a6);
bool __thiscall ksgui::Control::hitTest(ksgui::Control *this, int x, int y);
char __thiscall ksgui::Control::onMouseDown(ksgui::Control *this, const OnMouseDownEvent *message);
vec2f *__thiscall ksgui::Control::worldToLocal(ksgui::Control *this, vec2f *result, const vec2f *pos);
void __thiscall ksgui::MovingBar::onMouseUp(ksgui::ScrollBar *this, const OnMouseUpEvent *message);
void __thiscall ksgui::Control::onMouseWheelMovedEvent(ksgui::Control *this, const OnMouseWheelMovedEvent *message);
void __thiscall ksgui::Control::onMouseMove(ksgui::Control *this, const OnMouseMoveEvent *message);
// void __usercall ksgui::Control::stepRepeatInterval(ksgui::Control *this@<ecx>, float a2@<xmm1>);
void __thiscall ksgui::Control::setRepeatInterval(ksgui::Control *this, float i);
void __thiscall ksgui::Control::scaleByMult(ksgui::Form *this);
void __thiscall ksgui::Control::scaleByMult(ksgui::Control *this, float value);
void __thiscall ksgui::Control::resetBaseRect(ksgui::Control *this);
std::shared_ptr<Font> *__thiscall std::shared_ptr<Font>::operator=(std::shared_ptr<Font> *this, std::shared_ptr<Font> *_Right);
void __thiscall std::shared_ptr<Material>::~shared_ptr<Material>(std::shared_ptr<Material> *this);
void __thiscall std::vector<CarAvatar *>::push_back(std::vector<int> *this, int *_Val);
void __thiscall std::vector<unsigned int>::_Reserve(std::vector<unsigned int> *this, unsigned int _Count);
void __thiscall std::_Ptr_base<Font>::_Reset(std::_Ptr_base<Material> *this, Material *_Other_ptr, std::_Ref_count_base *_Other_rep);
// void __usercall std::_For_each<ksgui::Control * *,_lambda_f624a9a8e6d823ff11bac2228292279e_>(ksgui::Control **_First@<ecx>, ksgui::Control **_Last@<edx>, ksgui::GUI::doRender2D::__l6::<lambda_5edc30011f485dca24617bd54e057b95> *_Func);
// void __usercall std::_For_each<ksgui::Control * *,_lambda_d50b5470df2e0764e668f5d922579a51_>(ksgui::Control **_First@<ecx>, ksgui::Control **_Last@<edx>, ksgui::ScrollBar::onMouseMove::__l8::<lambda_9d5005f86c92d875b5a52100a4f938cc> *_Func);
void __thiscall ksgui::TextInput::TextInput(ksgui::TextInput *this, std::wstring name, ksgui::GUI *gui);
ksgui::TextInput *__thiscall ksgui::TextInput::`scalar deleting destructor'(ksgui::TextInput *this, unsigned int a2);
void __thiscall ksgui::TextInput::~TextInput(ksgui::TextInput *this);
char __thiscall ksgui::TextInput::onMouseDown(ksgui::TextInput *this, const OnMouseDownEvent *message);
void __thiscall ksgui::TextInput::render(ksgui::TextInput *this, float dt);
void __thiscall ksgui::TextInput::validateText(ksgui::TextInput *this);
void __thiscall ksgui::TextInput::onKeyChar(ksgui::TextInput *this, const unsigned int key);
std::wstring *__thiscall std::wstring::substr(std::wstring *this, std::wstring *result, unsigned int _Off, unsigned int _Count);
// void __userpurge ksgui::Form::Form(ksgui::Form *this@<ecx>, unsigned int a2@<ebx>, std::wstring iname, ksgui::GUI *igui, bool icanBeScaled);
RaceFuelMonitor *__thiscall CarPhysicsForm::`scalar deleting destructor'(RaceFuelMonitor *this, unsigned int a2);
Texture *__thiscall Texture::operator=(Texture *this, const Texture *__that);
void __thiscall ksgui::Form::~Form(ksgui::Form *this);
void __thiscall ksgui::Form::setIconVisible(ksgui::Form *this, BOOL visible);
void __thiscall ksgui::Form::setSize(ksgui::Form *this, float w, float h);
void __thiscall FormOpenVR::render(CarLabel *this, float dt);
void __thiscall ksgui::Form::onKeyChar(ksgui::Form *this, const unsigned int key);
void __thiscall ksgui::Form::onKeyDown(ksgui::Form *this, const OnKeyEvent *message);
// void __userpurge ksgui::Form::setIcon(ksgui::Form *this@<ecx>, unsigned int a2@<ebx>, std::wstring fileName);
void __thiscall ksgui::Form::setAutoHideMode(ksgui::Form *this, BOOL mode);
void __thiscall ksgui::Form::onTitleClicked(ksgui::Form *this, const ksgui::OnControlClicked *message);
bool __thiscall ksgui::Form::hitTest(ksgui::Form *this, int x, int y);
void __thiscall ksgui::Form::onMouseMove(ksgui::Form *this, const OnMouseMoveEvent *message);
void __thiscall ksgui::Form::setIconPosition(ksgui::Form *this, float x, float y);
void __thiscall ksgui::Form::setIconSize(ksgui::Form *this, float width, float height);
void __thiscall ksgui::Form::onVisibleChanged(ksgui::Form *this, bool newValue);
void __thiscall ksgui::Form::scaleByMult(ksgui::Form *this, float value);
void __thiscall Event<ksgui::OnControlClicked>::addHandler(Event<OnMouseWheelMovedEvent> *this, std::function<void __cdecl(OnMouseWheelMovedEvent const &)> h, void *owner);
TyreCompoundDef *__thiscall std::_Vector_iterator<std::_Vector_val<std::_Simple_types<TyreCompoundDef>>>::operator*(std::_Vector_iterator<std::_Vector_val<std::_Simple_types<TyreCompoundDef> > > *this);
void __thiscall std::_Func_base<void,ksgui::OnControlClicked const &>::~_Func_base<void,ksgui::OnControlClicked const &>(std::_Func_base<void,ksgui::OnControlClicked const &> *this);
std::_Func_impl<std::_Callable_obj<<lambda_cbbbee75040862a861784e2053a8fd34>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3abf7af9598375885462e215404b46cd_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_cbbbee75040862a861784e2053a8fd34>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7ffb5add27fa3e33ec5e92d923531aea_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_7ffb5add27fa3e33ec5e92d923531aea>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7ffb5add27fa3e33ec5e92d923531aea_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_7ffb5add27fa3e33ec5e92d923531aea>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7ffb5add27fa3e33ec5e92d923531aea_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_7ffb5add27fa3e33ec5e92d923531aea>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e00edf51e6525464b5b5e6881e9d562a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_e00edf51e6525464b5b5e6881e9d562a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e00edf51e6525464b5b5e6881e9d562a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e00edf51e6525464b5b5e6881e9d562a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e00edf51e6525464b5b5e6881e9d562a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e00edf51e6525464b5b5e6881e9d562a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9b17e9c2d11d0f7ed55335283d8b2666_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_9b17e9c2d11d0f7ed55335283d8b2666>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9b17e9c2d11d0f7ed55335283d8b2666_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9b17e9c2d11d0f7ed55335283d8b2666>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9b17e9c2d11d0f7ed55335283d8b2666_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9b17e9c2d11d0f7ed55335283d8b2666>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_08e29b92e4b60cda246fdf5627899f11_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_08e29b92e4b60cda246fdf5627899f11>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_08e29b92e4b60cda246fdf5627899f11_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_08e29b92e4b60cda246fdf5627899f11>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_08e29b92e4b60cda246fdf5627899f11_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_08e29b92e4b60cda246fdf5627899f11>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_902ec98bb7f6d5083bdccbd2c93000ad_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_902ec98bb7f6d5083bdccbd2c93000ad>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_902ec98bb7f6d5083bdccbd2c93000ad_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_902ec98bb7f6d5083bdccbd2c93000ad>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_902ec98bb7f6d5083bdccbd2c93000ad_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_902ec98bb7f6d5083bdccbd2c93000ad>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall ksgui::Graph::Graph(ksgui::Graph *this, std::wstring iname, ksgui::GUI *igui);
ksgui::Graph *__thiscall ksgui::Graph::`scalar deleting destructor'(ksgui::Graph *this, unsigned int a2);
void __thiscall ksgui::Graph::~Graph(ksgui::Graph *this);
int __thiscall ksgui::Graph::getSeriesCount(ksgui::Graph *this);
// void __userpurge ksgui::Graph::render(ksgui::Graph *this@<ecx>, __int64 a2@<esi:edi>, float dt);
double __thiscall ksgui::Graph::getValuesAtPercentage(ksgui::Graph *this, int serieIndex, float perc);
// void __userpurge ksgui::Graph::addSerie(ksgui::Graph *this@<ecx>, __int128 color);
void __thiscall ksgui::Graph::addValue(ksgui::Graph *this, unsigned int serieIndex, float v);
void __thiscall ksgui::Graph::clearSerie(ksgui::Graph *this, unsigned int serieIndex);
void __thiscall std::vector<MaterialVar *>::vector<MaterialVar *>(AnimationBlender *this);
std::_Vector_iterator<std::_Vector_val<std::_Simple_types<TyreCompoundDef> > > *__thiscall std::vector<SetupTab *>::begin(std::vector<TyreCompoundDef> *this, std::_Vector_iterator<std::_Vector_val<std::_Simple_types<TyreCompoundDef> > > *result);
void __thiscall std::vector<ksgui::GraphReferenceAxis>::push_back(std::vector<ksgui::GraphReferenceAxis> *this, const ksgui::GraphReferenceAxis *_Val);
void __thiscall CameraForward::render(TyreTester *this, float erp, float cfm);
void __thiscall std::vector<ksgui::GraphReferenceAxis>::_Reserve(std::vector<ksgui::GraphReferenceAxis> *this, unsigned int _Count);
void __thiscall std::vector<ksgui::GraphReferenceAxis>::_Reallocate(std::vector<ksgui::GraphReferenceAxis> *this, unsigned int _Count);
void __fastcall std::_For_each<ksgui::ValueSerie * *,_lambda_0b1c56a28df98bfd25df65ca3e2253bf_>(ksgui::ValueSerie **_First, ksgui::ValueSerie **_Last);
// void __usercall std::_For_each<ksgui::ValueSerie * *,_lambda_40e4f03e691bbb06cce0cbde395b6058_>(ksgui::ValueSerie **_First@<ecx>, ksgui::ValueSerie **_Last@<edx>, ksgui::Graph::checkMaxValuesCount::__l5::<lambda_40e4f03e691bbb06cce0cbde395b6058> *_Func);
// void __usercall std::_For_each<ksgui::GraphReferenceAxis *,_lambda_80c2e79c72036e060c7f061fcd34e37e_>(ksgui::GraphReferenceAxis *_First@<ecx>, ksgui::GraphReferenceAxis *_Last@<edx>, ksgui::Graph::renderAxes::__l8::<lambda_80c2e79c72036e060c7f061fcd34e37e> *_Func);
// ksgui::GraphReferenceAxis *__usercall std::_Uninit_move<ksgui::GraphReferenceAxis *,ksgui::GraphReferenceAxis *,std::allocator<ksgui::GraphReferenceAxis>,ksgui::GraphReferenceAxis>@<eax>(ksgui::GraphReferenceAxis *_First@<ecx>, ksgui::GraphReferenceAxis *_Last@<edx>, ksgui::GraphReferenceAxis *_Dest);
std::wstring *__thiscall ksgui::ListBoxRowData::getColumn(ksgui::ListBoxRowData *this, std::wstring *result, unsigned int columnIndex);
void __thiscall ksgui::ListBox::ListBox(ksgui::ListBox *this, std::wstring name, unsigned int rowNumber, unsigned int colNumber, ksgui::GUI *aGui, bool isDressed);
void __thiscall lambda_f5c7443580a4e5111a2e790270367f71_::operator()(ksgui::ListBox::{ctor}::__l15::<lambda_f5c7443580a4e5111a2e790270367f71> *this, const ksgui::OnControlClicked *message);
ksgui::ListBox *__thiscall ksgui::ListBox::`scalar deleting destructor'(ksgui::ListBox *this, unsigned int a2);
void __thiscall std::map<unsigned int,dxSpace *>::~map<unsigned int,dxSpace *>(std::map<unsigned int,dxSpace *> *this);
void __thiscall ksgui::ListBox::selectItem(ksgui::ListBox *this, int itemIndex);
void __thiscall ksgui::ListBox::selectItemByName(ksgui::ListBox *this, const std::wstring *itemText);
void __thiscall ksgui::ListBox::clear(ksgui::ListBox *this);
void __thiscall ksgui::ListBox::addItem(ksgui::ListBox *this, const ksgui::ListBoxRowData *item);
void __thiscall ksgui::ListBox::onMouseWheelMovedEvent(ksgui::ListBox *this, const OnMouseWheelMovedEvent *message);
void __thiscall ksgui::ListBox::scrollToTop(ksgui::ListBox *this);
void __thiscall ksgui::ListBox::scrollToCenterOnSelected(ksgui::ListBox *this);
void __thiscall ksgui::ListBox::scrollToBottom(ksgui::ListBox *this);
void __thiscall ksgui::ListBox::scrollListBoxToItem(ksgui::ListBox *this, int itemId);
ksgui::ListBoxRowData *__thiscall ksgui::ListBox::getSelectedItem(ksgui::ListBox *this);
void __thiscall ksgui::ListBox::setItemsFontSize(ksgui::ListBox *this, float size);
void __thiscall ksgui::ListBox::setSize(ksgui::ListBox *this, float w, float h);
void __thiscall ksgui::ListBox::~ListBox(ksgui::ListBox *this);
void __thiscall ksgui::ListBox::drawCellsBackgrounds(ksgui::ListBox *this, bool value);
void __thiscall ksgui::ListBox::render(ksgui::ListBox *this, float dt);
int __thiscall ksgui::ListBox::getItemIdFromName(ksgui::ListBox *this, const std::wstring *aName);
VisualDamageManager::GlassBreakablePart *__thiscall std::vector<VisualDamageManager::GlassBreakablePart>::operator[](std::vector<VisualDamageManager::GlassBreakablePart> *this, unsigned int _Pos);
void __thiscall Event<ksgui::OnScrollBarValueChanged>::addHandler(Event<ksgui::OnScrollBarValueChanged> *this, std::function<void __cdecl(ksgui::OnScrollBarValueChanged const &)> h, void *owner);
void __thiscall std::vector<ksgui::ListBoxRowData>::~vector<ksgui::ListBoxRowData>(std::vector<ksgui::ListBoxRowData> *this);
void __thiscall std::vector<ksgui::ListBoxRowData>::push_back(std::vector<ksgui::ListBoxRowData> *this, const ksgui::ListBoxRowData *_Val);
vec4f *__thiscall std::map<unsigned int,vec4f>::operator[](std::map<unsigned int,vec4f> *this, unsigned int *_Keyval);
char __thiscall std::vector<std::wstring>::_Buy(std::vector<std::wstring> *this, unsigned int _Capacity);
void __thiscall std::vector<ksgui::ListBoxRowData>::_Reserve(std::vector<ksgui::ListBoxRowData> *this, unsigned int _Count);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (ksgui::OnScrollBarValueChanged const &)>>>::_Reserve(std::vector<std::pair<void *,std::function<void __cdecl(ksgui::OnScrollBarValueChanged const &)> >> *this, unsigned int _Count);
void __thiscall std::vector<ksgui::ListBoxRowData>::_Reallocate(std::vector<ksgui::ListBoxRowData> *this, unsigned int _Count);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > > *__thiscall std::_Tree<std::_Tmap_traits<unsigned int,dxSpace *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const,dxSpace *>>,0>>::erase(std::_Tree<std::_Tmap_traits<unsigned int,dxSpace *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,dxSpace *> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > > _Last);
std::_Func_impl<std::_Callable_obj<<lambda_a2628dfe18e7e5502c312a63f8e7e51b>,0>,std::allocator<std::_Func_class<void,ksgui::OnScrollBarValueChanged const &> >,void,ksgui::OnScrollBarValueChanged const &> *__thiscall std::_Func_base<void,ksgui::OnScrollBarValueChanged const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_a2628dfe18e7e5502c312a63f8e7e51b>,0>,std::allocator<std::_Func_class<void,ksgui::OnScrollBarValueChanged const &> >,void,ksgui::OnScrollBarValueChanged const &> *this, unsigned int a2);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (ksgui::OnScrollBarValueChanged const &)>>>::_Reallocate(std::vector<std::pair<void *,std::function<void __cdecl(ksgui::OnScrollBarValueChanged const &)> >> *this, unsigned int _Count);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > > *__thiscall std::_Tree<std::_Tmap_traits<unsigned int,vec4f,std::less<unsigned int>,std::allocator<std::pair<unsigned int const,vec4f>>,0>>::erase(std::_Tree<std::_Tmap_traits<unsigned int,dxSpace *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,dxSpace *> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > > _Where);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TelemetryChannelDef>>,0>>::_Lrotate(std::_Tree<std::_Tmap_traits<unsigned int,bool,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,bool> >,0> > *this, std::_Tree_node<std::pair<unsigned int const ,bool>,void *> *_Wherenode);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,CBuffer *,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,CBuffer *>>,0>>::_Rrotate(std::_Tree<std::_Tmap_traits<unsigned int,bool,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,bool> >,0> > *this, std::_Tree_node<std::pair<unsigned int const ,bool>,void *> *_Wherenode);
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned int const,vec4f>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned int const ,vec4f>> > *this);
void __thiscall std::shared_ptr<Font>::shared_ptr<Font>(std::shared_ptr<Font> *this, Font *_Px);
const int *__cdecl std::max<int>(const int *_Left, const int *_Right);
void __thiscall std::shared_ptr<Font>::_Resetp<Font>(std::shared_ptr<Font> *this, Font *_Px);
std::_Tree_node<std::pair<unsigned int const ,vec4f>,void *> *__thiscall std::_Tree_buy<std::pair<unsigned int const,vec4f>>::_Buynode<std::piecewise_construct_t const &,std::tuple<unsigned int &&>,std::tuple<>>(std::_Tree_buy<std::pair<unsigned int const ,vec4f>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<unsigned int &&> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,vec4f> > > > *__thiscall std::_Tree<std::_Tmap_traits<unsigned int,vec4f,std::less<unsigned int>,std::allocator<std::pair<unsigned int const,vec4f>>,0>>::_Insert_hint<std::pair<unsigned int const,vec4f> &,std::_Tree_node<std::pair<unsigned int const,vec4f>,void *> *>(std::_Tree<std::_Tmap_traits<unsigned int,vec4f,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,vec4f> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,vec4f> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,vec4f> > > > _Where, std::pair<unsigned int const ,vec4f> *_Val, std::_Tree_node<std::pair<unsigned int const ,vec4f>,void *> *_Newnode);
void __fastcall std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<void *,std::function<void __cdecl (ksgui::OnScrollBarValueChanged const &)>>>>>(std::pair<void *,std::function<void __cdecl(ksgui::OnScrollBarValueChanged const &)> > *_First, std::pair<void *,std::function<void __cdecl(ksgui::OnScrollBarValueChanged const &)> > *_Last);
std::_Tree_node<std::pair<unsigned int const ,vec4f>,void *> **__thiscall std::_Tree_buy<std::pair<unsigned int const,vec4f>>::_Buynode0(std::_Tree_buy<std::pair<unsigned int const ,vec4f>> *this);
void __thiscall std::_Ref_count<Font>::_Destroy(std::_Ref_count<Font> *this);
void __thiscall std::_Ref_count<PyModule>::_Delete_this(std::_Ref_count<Material> *this);
void __thiscall ksgui::ListBoxRowData::ListBoxRowData(ksgui::ListBoxRowData *this, const ksgui::ListBoxRowData *__that);
std::_Ref_count_obj<Font> *__thiscall std::_Ref_count_base::`scalar deleting destructor'(std::_Ref_count_obj<Font> *this, unsigned int a2);
void __thiscall std::vector<std::wstring>::vector<std::wstring>(std::vector<std::wstring> *this, const std::vector<std::wstring> *_Right);
void __thiscall std::vector<vec4f>::vector<vec4f>(std::vector<vec4f> *this, const std::vector<vec4f> *_Right);
char __thiscall std::vector<PyMethodDef>::_Buy(std::vector<PyMethodDef> *this, unsigned int _Capacity);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,vec4f> > > > *__thiscall std::_Tree<std::_Tmap_traits<unsigned int,vec4f,std::less<unsigned int>,std::allocator<std::pair<unsigned int const,vec4f>>,0>>::_Insert_at<std::pair<unsigned int const,vec4f> &,std::_Tree_node<std::pair<unsigned int const,vec4f>,void *> *>(std::_Tree<std::_Tmap_traits<unsigned int,vec4f,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,vec4f> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,vec4f> > > > *result, bool _Addleft, std::_Tree_node<std::pair<unsigned int const ,vec4f>,void *> *_Wherenode, std::pair<unsigned int const ,vec4f> *_Val, std::_Tree_node<std::pair<unsigned int const ,vec4f>,void *> *_Node);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,vec4f> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<unsigned int,vec4f,std::less<unsigned int>,std::allocator<std::pair<unsigned int const,vec4f>>,0>>::_Insert_nohint<std::pair<unsigned int const,vec4f> &,std::_Tree_node<std::pair<unsigned int const,vec4f>,void *> *>(std::_Tree<std::_Tmap_traits<unsigned int,vec4f,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,vec4f> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,vec4f> > > >,bool> *result, bool _Leftish, std::pair<unsigned int const ,vec4f> *_Val, std::_Tree_node<std::pair<unsigned int const ,vec4f>,void *> *_Newnode);
// ksgui::ListBoxRowData *__usercall std::_Uninit_move<ksgui::ListBoxRowData *,ksgui::ListBoxRowData *,std::allocator<ksgui::ListBoxRowData>,ksgui::ListBoxRowData>@<eax>(ksgui::ListBoxRowData *_First@<ecx>, ksgui::ListBoxRowData *_Last@<edx>, ksgui::ListBoxRowData *_Dest);
// std::pair<void *,std::function<void __cdecl(ksgui::OnScrollBarValueChanged const &)> > *__usercall std::_Uninit_move<std::pair<void *,std::function<void __cdecl (ksgui::OnScrollBarValueChanged const &)>> *,std::pair<void *,std::function<void __cdecl (ksgui::OnScrollBarValueChanged const &)>> *,std::allocator<std::pair<void *,std::function<void __cdecl (ksgui::OnScrollBarValueChanged const &)>>>,std::pair<void *,std::function<void __cdecl (ksgui::OnScrollBarValueChanged const &)>>>@<eax>(std::pair<void *,std::function<void __cdecl(ksgui::OnScrollBarValueChanged const &)> > *_First@<ecx>, std::pair<void *,std::function<void __cdecl(ksgui::OnScrollBarValueChanged const &)> > *_Last@<edx>, std::pair<void *,std::function<void __cdecl(ksgui::OnScrollBarValueChanged const &)> > *_Dest);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a2628dfe18e7e5502c312a63f8e7e51b_,0>,std::allocator<std::_Func_class<void,ksgui::OnScrollBarValueChanged const &>>,void,ksgui::OnScrollBarValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_a2628dfe18e7e5502c312a63f8e7e51b>,0>,std::allocator<std::_Func_class<void,ksgui::OnScrollBarValueChanged const &> >,void,ksgui::OnScrollBarValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a2628dfe18e7e5502c312a63f8e7e51b_,0>,std::allocator<std::_Func_class<void,ksgui::OnScrollBarValueChanged const &>>,void,ksgui::OnScrollBarValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a2628dfe18e7e5502c312a63f8e7e51b>,0>,std::allocator<std::_Func_class<void,ksgui::OnScrollBarValueChanged const &> >,void,ksgui::OnScrollBarValueChanged const &> *this, const ksgui::OnScrollBarValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a2628dfe18e7e5502c312a63f8e7e51b_,0>,std::allocator<std::_Func_class<void,ksgui::OnScrollBarValueChanged const &>>,void,ksgui::OnScrollBarValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a2628dfe18e7e5502c312a63f8e7e51b>,0>,std::allocator<std::_Func_class<void,ksgui::OnScrollBarValueChanged const &> >,void,ksgui::OnScrollBarValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f5c7443580a4e5111a2e790270367f71_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f5c7443580a4e5111a2e790270367f71>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f5c7443580a4e5111a2e790270367f71_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f5c7443580a4e5111a2e790270367f71>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f5c7443580a4e5111a2e790270367f71_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f5c7443580a4e5111a2e790270367f71>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall ksgui::ListBoxRowData::~ListBoxRowData(ksgui::ListBoxRowData *this);
std::wstring *__cdecl std::_Uninit_copy<std::wstring const *,std::wstring *,std::allocator<std::wstring>>(const std::wstring *_First, const std::wstring *_Last, std::wstring *_Dest);
// FormChat::ChatIntensities *__usercall std::_Uninit_copy<vec4f const *,vec4f *,std::allocator<vec4f>>@<eax>(FormChat::ChatIntensities *_First@<ecx>, FormChat::ChatIntensities *_Last@<edx>, FormChat::ChatIntensities *_Dest);
void __thiscall std::_Ref_count_base::~_Ref_count_base(std::_Ref_count_base *this);
IRayCaster *__thiscall TyreTester::createRayCaster(TyreTester *this, float length);
void __thiscall ksgui::CheckBox::CheckBox(ksgui::CheckBox *this, std::wstring name, ksgui::GUI *gui);
void __thiscall lambda_66bcb7225d8e2a7cac79eca9e7d87839_::operator()(ksgui::CheckBox::{ctor}::__l8::<lambda_66bcb7225d8e2a7cac79eca9e7d87839> *this, const ksgui::OnControlClicked *cKev);
ksgui::CheckBox *__thiscall ksgui::CheckBox::`vector deleting destructor'(ksgui::CheckBox *this, unsigned int a2);
// void __userpurge ksgui::CheckBox::render(ksgui::CheckBox *this@<ecx>, int a2@<edi>, float dt);
void __thiscall ksgui::CheckBox::setCheck(ksgui::CheckBox *this, bool aCheck);
void __thiscall ksgui::CheckBox::~CheckBox(ksgui::CheckBox *this);
BOOL __cdecl std::operator!=<wchar_t>(const std::wstring *_Left, const wchar_t *_Right);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_66bcb7225d8e2a7cac79eca9e7d87839_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_66bcb7225d8e2a7cac79eca9e7d87839>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_66bcb7225d8e2a7cac79eca9e7d87839_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_66bcb7225d8e2a7cac79eca9e7d87839>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_66bcb7225d8e2a7cac79eca9e7d87839_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_66bcb7225d8e2a7cac79eca9e7d87839>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall ksgui::Label::Label(ksgui::Label *this, std::wstring iname, ksgui::GUI *igui);
ksgui::Label *__thiscall ksgui::Label::`vector deleting destructor'(ksgui::Label *this, unsigned int a2);
void __thiscall ksgui::Label::render(ksgui::Label *this, float dt);
void __thiscall ksgui::Label::scaleByMult(ksgui::Label *this, float value);
void __thiscall ksgui::ActiveButton::ActiveButton(ksgui::ActiveButton *this, std::wstring name, ksgui::GUI *gui);
ksgui::ActiveButton *__thiscall ksgui::ActiveButton::`scalar deleting destructor'(ksgui::ActiveButton *this, unsigned int a2);
// void __userpurge ksgui::ActiveButton::setMultipleTexture(ksgui::ActiveButton *this@<ecx>, unsigned int a2@<ebx>, std::wstring filename);
void __thiscall ksgui::ActiveButton::setText(ksgui::ActiveButton *this, const std::wstring *aText);
void __thiscall ksgui::ActiveButton::~ActiveButton(ksgui::ActiveButton *this);
// void __userpurge ksgui::ActiveButton::render(ksgui::ActiveButton *this@<ecx>, __int64 a2@<esi:edi>, float dt);
void __thiscall ksgui::ActiveButton::onVisibleChanged(ksgui::ActiveButton *this, bool newValue);
void __thiscall ksgui::ActiveButton::onMouseMove(ksgui::ActiveButton *this, const OnMouseMoveEvent *message);
void __thiscall ksgui::Spinner::Spinner(ksgui::Spinner *this, const std::wstring *iname, ksgui::GUI *igui, bool isDressed, bool mirrored);
void __thiscall lambda_5dbbc594715d588d8ab242bbd148f5bd_::operator()(ksgui::Spinner::{ctor}::__l11::<lambda_5dbbc594715d588d8ab242bbd148f5bd> *this, const ksgui::OnControlClicked *ev);
ksgui::Spinner *__thiscall ksgui::Spinner::`vector deleting destructor'(ksgui::Spinner *this, unsigned int a2);
void __thiscall ksgui::Spinner::setValue(ksgui::Spinner *this, const std::wstring *itemName);
void __thiscall ksgui::Spinner::setDrawArrows(ksgui::Spinner *this, bool draw);
void __thiscall ksgui::Spinner::setSize(ksgui::Spinner *this, float w, float h);
void __thiscall ksgui::Spinner::~Spinner(ksgui::Spinner *this);
void __thiscall ksgui::Spinner::setPosition(ksgui::Spinner *this, float x, float y);
void __thiscall ksgui::Spinner::setValue(ksgui::Spinner *this, int v);
std::wstring *__thiscall ksgui::Spinner::getCurrentItem(ksgui::Spinner *this, std::wstring *result);
void __thiscall ksgui::Spinner::onMouseMove(ksgui::Spinner *this, const OnMouseMoveEvent *message);
char __thiscall ksgui::Spinner::onMouseDown(ksgui::Spinner *this, const OnMouseDownEvent *message);
// void __userpurge ksgui::Spinner::render(ksgui::Spinner *this@<ecx>, int a2@<edi>, float dt);
int __thiscall ksgui::Spinner::getValue(ksgui::Spinner *this);
void __thiscall ksgui::Spinner::setRepeatInterval(ksgui::Spinner *this, float i);
void __thiscall ksgui::Spinner::addItem(ksgui::Spinner *this, std::wstring item);
void __thiscall ksgui::Spinner::setLabelText(ksgui::Spinner *this, std::wstring text);
void __thiscall ksgui::Spinner::scaleByMult(ksgui::Spinner *this, float value);
void __thiscall ksgui::Spinner::resize(ksgui::Spinner *this);
std::shared_ptr<Font> *__thiscall std::shared_ptr<Font>::operator=(std::shared_ptr<Font> *this, const std::shared_ptr<Font> *_Right);
BOOL __thiscall std::vector<Turbo>::empty(std::vector<TyreCompoundDef> *this);
void __thiscall std::vector<std::wstring>::push_back(std::vector<std::wstring> *this, const std::wstring *_Val);
std::wostream *__cdecl std::operator<<<wchar_t,std::char_traits<wchar_t>>(std::wostream *_Ostr, const wchar_t *_Val);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5dbbc594715d588d8ab242bbd148f5bd_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_5dbbc594715d588d8ab242bbd148f5bd>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5dbbc594715d588d8ab242bbd148f5bd_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5dbbc594715d588d8ab242bbd148f5bd>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5dbbc594715d588d8ab242bbd148f5bd_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5dbbc594715d588d8ab242bbd148f5bd>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ae730b0ac2b312f3aaf2ecf44e6041f9_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_ae730b0ac2b312f3aaf2ecf44e6041f9>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ae730b0ac2b312f3aaf2ecf44e6041f9_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ae730b0ac2b312f3aaf2ecf44e6041f9>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ae730b0ac2b312f3aaf2ecf44e6041f9_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ae730b0ac2b312f3aaf2ecf44e6041f9>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_423364afba2ead5d586b98508453de4a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_423364afba2ead5d586b98508453de4a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_423364afba2ead5d586b98508453de4a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_423364afba2ead5d586b98508453de4a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_423364afba2ead5d586b98508453de4a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_423364afba2ead5d586b98508453de4a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4d71a226907d2fe87e6a6f8aa1b72322_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_4d71a226907d2fe87e6a6f8aa1b72322>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4d71a226907d2fe87e6a6f8aa1b72322_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4d71a226907d2fe87e6a6f8aa1b72322>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4d71a226907d2fe87e6a6f8aa1b72322_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4d71a226907d2fe87e6a6f8aa1b72322>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall ksgui::ProgressBar::ProgressBar(ksgui::ProgressBar *this, std::wstring iname, ksgui::GUI *igui);
ksgui::ProgressBar *__thiscall ksgui::ProgressBar::`scalar deleting destructor'(ksgui::ProgressBar *this, unsigned int a2);
// void __userpurge ksgui::ProgressBar::render(ksgui::ProgressBar *this@<ecx>, int a2@<edi>, float dt);
void __thiscall ksgui::ProgressBar::renderHorizontal(ksgui::ProgressBar *this);
void __thiscall ksgui::ProgressBar::renderVertical(ksgui::ProgressBar *this);
void __thiscall ksgui::TextBox::TextBox(ksgui::TextBox *this, std::wstring name, ksgui::GUI *gui, eFontType fontType);
ksgui::TextBox *__thiscall ksgui::TextBox::`scalar deleting destructor'(ksgui::TextBox *this, unsigned int a2);
void __thiscall ksgui::TextBox::~TextBox(ksgui::TextBox *this);
void __thiscall ksgui::TextBox::setFormattedText(ksgui::TextBox *this, std::wstring aText);
void __thiscall std::wistringstream::`vbase destructor(std::wistringstream *this);
// void __userpurge ksgui::TextBox::render(ksgui::TextBox *this@<ecx>, float a2@<ebx>, __int64 a3@<esi:edi>, float dt);
char __thiscall ksgui::TextBox::onMouseDown(ksgui::TextBox *this, const OnMouseDownEvent *message);
void __thiscall std::wistringstream::wistringstream(std::wistringstream *this, const std::wstring *_Str, int _Mode, int a4);
_DWORD *__thiscall std::wistringstream::`scalar deleting destructor'(std::wistringstream *this, unsigned int a2);
void __thiscall std::wstringbuf::wstringbuf(std::wstringbuf *this, const std::wstring *_Str, int _Mode);
_DWORD *__thiscall std::wistringstream::`vector deleting destructor'(_DWORD *this, unsigned int a2);
unsigned int __thiscall Texture::height(Texture *this);
void __thiscall ksgui::CustomSpinner::CustomSpinner(ksgui::CustomSpinner *this, std::wstring name, ksgui::GUI *aGui, CustomSpinnerMode aMode);
ksgui::CustomSpinner *__thiscall ksgui::CustomSpinner::`scalar deleting destructor'(ksgui::CustomSpinner *this, unsigned int a2);
// void __userpurge ksgui::CustomSpinner::render(ksgui::CustomSpinner *this@<ecx>, __int64 a2@<esi:edi>, float dt, float a4, float a5, float a6, float x, float a8, float a9);
void __thiscall ksgui::CustomSpinner::setSize(ksgui::CustomSpinner *this, float w, float h);
void __thiscall ksgui::CustomSpinner::scaleByMult(ksgui::CustomSpinner *this, float value);
void __thiscall ksgui::CustomSpinner::resize(ksgui::CustomSpinner *this);
void __thiscall ksgui::Slider::Slider(ksgui::Slider *this, std::wstring name, ksgui::GUI *myGui, bool dressed);
ksgui::Slider *__thiscall ksgui::Slider::`vector deleting destructor'(ksgui::Slider *this, unsigned int a2);
void __thiscall ksgui::Slider::setMarkerLeftPosition(ksgui::Slider *this, float perc);
void __thiscall ksgui::Slider::setMarkerRightPosition(ksgui::Slider *this, float perc);
void __thiscall ksgui::Slider::resetMarkers(ksgui::Slider *this);
void __thiscall ksgui::Slider::onMouseUp(ksgui::Slider *this, const OnMouseUpEvent *message);
void __thiscall ksgui::Slider::setSize(ksgui::Slider *this, float w, float h);
void __thiscall ksgui::Slider::updateMarkers(ksgui::Slider *this);
bool __thiscall ksgui::Slider::onMouseDown(ksgui::Slider *this, const OnMouseDownEvent *message);
void __thiscall ksgui::Slider::onMouseMove(ksgui::Slider *this, const OnMouseMoveEvent *message);
void __thiscall ksgui::Slider::render(ksgui::Slider *this, float dt);
void __thiscall ksgui::Slider::~Slider(ksgui::Slider *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d452b7b8ac4454d2cf2eb9d00360569d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d452b7b8ac4454d2cf2eb9d00360569d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d452b7b8ac4454d2cf2eb9d00360569d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d452b7b8ac4454d2cf2eb9d00360569d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d452b7b8ac4454d2cf2eb9d00360569d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d452b7b8ac4454d2cf2eb9d00360569d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_179be6a1e0f9efd6d1ed2af4c0761881_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_179be6a1e0f9efd6d1ed2af4c0761881>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_179be6a1e0f9efd6d1ed2af4c0761881_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_179be6a1e0f9efd6d1ed2af4c0761881>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall ksgui::GameScreen::GameScreen(ksgui::GameScreen *this, std::wstring iname, ksgui::GUI *igui);
ksgui::GameScreen *__thiscall ksgui::GameScreen::`vector deleting destructor'(ksgui::GameScreen *this, unsigned int a2);
void __thiscall ksgui::GameScreen::~GameScreen(ksgui::GameScreen *this);
void __thiscall ksgui::GameScreen::render(ksgui::GameScreen *this, float dt);
void __thiscall ksgui::GameScreen::showDesktop(ksgui::GameScreen *this);
void __thiscall ksgui::GameScreen::shutdown(ksgui::GameScreen *this);
void __thiscall ksgui::GameScreen::addControl(ksgui::GameScreen *this, ksgui::Control *c, bool addToTaskBar);
char __thiscall ksgui::GameScreen::onMouseDown(ksgui::GameScreen *this, const OnMouseDownEvent *message);
void __thiscall ksgui::GameScreen::onMouseUp(ksgui::GameScreen *this, const OnMouseUpEvent *message);
void __thiscall ksgui::GameScreen::onMouseMove(ksgui::GameScreen *this, const OnMouseMoveEvent *message);
void __thiscall ksgui::GameScreen::onMouseWheelMovedEvent(ksgui::GameScreen *this, const OnMouseWheelMovedEvent *message);
std::wstring *__cdecl std::to_wstring(std::wstring *result, int _Val);
unsigned int __thiscall Texture::width(Texture *this);
void __thiscall ksgui::GUI::GUI(ksgui::GUI *this, GraphicsManager *graphics, std::wstring aapplicationName, KeyboardManager *keyManager);
ksgui::GUI *__thiscall ksgui::GUI::`vector deleting destructor'(ksgui::GUI *this, unsigned int a2);
void __thiscall std::map<std::wstring,ksgui::GUI::FormData>::~map<std::wstring,ksgui::GUI::FormData>(std::map<std::wstring,ksgui::GUI::FormData> *this);
vec4f *__thiscall ksgui::GUI::getSkinColor(ksgui::GUI *this, vec4f *result, std::wstring key, std::wstring value);
void __thiscall ksgui::GUI::~GUI(ksgui::GUI *this);
void __thiscall ksgui::GUI::setAudioEngine(ksgui::GUI *this, AudioEngine *engine);
// void __usercall ksgui::GUI::doRender2D(ksgui::GUI *this@<ecx>, int a2@<xmm1>);
void __thiscall ksgui::GUI::render(ksgui::GUI *this, float dt);
void __thiscall ksgui::GUI::addControl(ksgui::GUI *this, ksgui::Control *c);
void __thiscall ksgui::GUI::fromIni(ksgui::GUI *this, ksgui::GUI::FormData *data, const std::wstring *section);
void __thiscall ksgui::GUI::fromMemory(ksgui::GUI *this, ksgui::GUI::FormData *data, const std::wstring *section);
void __thiscall ksgui::GUI::serializeMemoryForm(ksgui::GUI *this, ksgui::Form *form);
void __thiscall ksgui::GUI::serializeForms(ksgui::GUI *this, std::wstring filename);
void __thiscall ksgui::GUI::deserializeFormDesktop(ksgui::GUI *this, ksgui::Form *form, int idDesktop);
void __thiscall ksgui::GUI::deserializeOldForm(ksgui::GUI *this, ksgui::Form *form);
void __thiscall ksgui::GUI::deserializeForm(ksgui::GUI *this, ksgui::Form *form);
void __thiscall ksgui::GUI::attachToRenderWindowEvents(ksgui::GUI *this, RenderWindow *window);
void __thiscall ksgui::GUI::onMouseDown(ksgui::GUI *this, const OnMouseDownEvent *message);
void __thiscall ksgui::GUI::onMouseUp(ksgui::GUI *this, const OnMouseUpEvent *message);
void __thiscall ksgui::GUI::onKeyChar(ksgui::GUI *this, const unsigned int key);
void __thiscall ksgui::GUI::onKeyDown(ksgui::GUI *this, const OnKeyEvent *message);
void __thiscall ksgui::GUI::init3DMode(ksgui::GUI *this, unsigned int width, unsigned int height, Node *referenceFrame, Camera *camera, vec3f posOffset);
void __thiscall ksgui::GUI::onMouseMove(ksgui::GUI *this, const OnMouseMoveEvent *message);
// void __userpurge ksgui::GUI::preRender3D(ksgui::GUI *this@<ecx>, __int64 a2@<esi:edi>, __int128 dt);
void __thiscall ksgui::GUI::renderVPointer(ksgui::GUI *this);
void __thiscall ksgui::GUI::render3D(ksgui::GUI *this, float dt);
void __thiscall ksgui::EventReplicator<OnMouseDownEvent>::~EventReplicator<OnMouseDownEvent>(ksgui::EventReplicator<OnMouseDownEvent> *this);
ksgui::GUI::FormData *__thiscall std::map<std::wstring,ksgui::GUI::FormData>::operator[](std::map<std::wstring,ksgui::GUI::FormData> *this, const std::wstring *_Keyval);
bool __thiscall std::less<std::wstring>::operator()(std::less<std::wstring > *this, const std::wstring *_Left, const std::wstring *_Right);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,ksgui::GUI::FormData,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,ksgui::GUI::FormData>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<std::wstring,ksgui::GUI::FormData,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,ksgui::GUI::FormData> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,ksgui::GUI::FormData>,void *> *_Rootnode);
char __thiscall Event<OnMouseDownEvent>::removeHandler(Event<OnMouseDownEvent> *this, void *owner);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,ksgui::GUI::FormData> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,ksgui::GUI::FormData,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,ksgui::GUI::FormData>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,ksgui::GUI::FormData,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,ksgui::GUI::FormData> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,ksgui::GUI::FormData> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,ksgui::GUI::FormData> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,ksgui::GUI::FormData> > > > _Last);
std::_Tree_node<std::pair<std::wstring const ,TyreCompoundStrategy>,void *> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,CBuffer *,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,CBuffer *>>,0>>::_Lbound(std::_Tree<std::_Tmap_traits<std::wstring,TyreCompoundStrategy,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TyreCompoundStrategy> >,0> > *this, const std::wstring *_Keyval);
std::_Func_impl<std::_Callable_obj<<lambda_b0dda33c716fd65b9018e26f97c3e87e>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *__thiscall std::_Func_base<void,int const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_b0dda33c716fd65b9018e26f97c3e87e>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_768582e1d5cd9e81dfeae2964a80b4f2>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_768582e1d5cd9e81dfeae2964a80b4f2_,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &>>,void,OnMouseDownEvent const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_768582e1d5cd9e81dfeae2964a80b4f2>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_6fcf7586af684b3ce06df51a714e3b3d>,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &> >,void,OnMouseUpEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6fcf7586af684b3ce06df51a714e3b3d_,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &>>,void,OnMouseUpEvent const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_6fcf7586af684b3ce06df51a714e3b3d>,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &> >,void,OnMouseUpEvent const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_cb2db8490a70cebb618e3cebe0d1b31c>,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &> >,void,OnMouseMoveEvent const &> *__thiscall std::_Func_base<void,OnMouseMoveEvent const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_cb2db8490a70cebb618e3cebe0d1b31c>,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &> >,void,OnMouseMoveEvent const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_b7850abbd65656492c0caaa76bf8aff6>,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &> >,void,OnMouseWheelMovedEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b7850abbd65656492c0caaa76bf8aff6_,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &>>,void,OnMouseWheelMovedEvent const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_b7850abbd65656492c0caaa76bf8aff6>,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &> >,void,OnMouseWheelMovedEvent const &> *this, unsigned int a2);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,ksgui::GUI::FormData> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,ksgui::GUI::FormData,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,ksgui::GUI::FormData>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,ksgui::GUI::FormData,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,ksgui::GUI::FormData> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,ksgui::GUI::FormData> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,ksgui::GUI::FormData> > > > _Where);
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const,ksgui::GUI::FormData>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const ,ksgui::GUI::FormData>> > *this);
std::wstring *__cdecl std::operator+<wchar_t>(std::wstring *result, std::wstring *_Left, std::wstring *_Right);
double __cdecl lerpDelta<float>(float current, float target, float k, float dt);
std::wstring *__thiscall std::wstring::insert(std::wstring *this, unsigned int _Off, const std::wstring *_Right, unsigned int _Roff, unsigned int _Count);
// void __usercall std::_For_each<ksgui::Form * *,_lambda_baef331bdaab4694c04ffb899df10ccd_>(ksgui::Form **_First@<ecx>, ksgui::Form **_Last@<edx>, ksgui::GUI::{ctor}::__l16::<lambda_b0dda33c716fd65b9018e26f97c3e87e>::()::__l22::<lambda_baef331bdaab4694c04ffb899df10ccd> *_Func);
// void __usercall std::_For_each<ksgui::Form * *,_lambda_fbcb217f99cfcaf541b1d436927d8778_>(ksgui::Form **_First@<ecx>, ksgui::Form **_Last@<edx>, ksgui::GUI::serializeForms::__l11::<lambda_fbcb217f99cfcaf541b1d436927d8778> *_Func);
std::_Tree_node<std::pair<std::wstring const ,ksgui::GUI::FormData>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,ksgui::GUI::FormData>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,ksgui::GUI::FormData>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring const &> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,ksgui::GUI::FormData> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,ksgui::GUI::FormData,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,ksgui::GUI::FormData>>,0>>::_Insert_hint<std::pair<std::wstring const,ksgui::GUI::FormData> &,std::_Tree_node<std::pair<std::wstring const,ksgui::GUI::FormData>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,ksgui::GUI::FormData,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,ksgui::GUI::FormData> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,ksgui::GUI::FormData> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,ksgui::GUI::FormData> > > > _Where, std::pair<std::wstring const ,ksgui::GUI::FormData> *_Val, std::_Tree_node<std::pair<std::wstring const ,ksgui::GUI::FormData>,void *> *_Newnode);
// std::pair<void *,std::function<void __cdecl(OnMouseDownEvent const &)> > *__usercall std::_Move<std::pair<void *,std::function<void __cdecl (OnMouseDownEvent const &)>> *,std::pair<void *,std::function<void __cdecl (OnMouseDownEvent const &)>> *>@<eax>(std::pair<void *,std::function<void __cdecl(OnMouseDownEvent const &)> > *_First@<ecx>, std::pair<void *,std::function<void __cdecl(OnMouseDownEvent const &)> > *_Last@<edx>, std::pair<void *,std::function<void __cdecl(OnMouseDownEvent const &)> > *_Dest);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,ksgui::GUI::FormData,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,ksgui::GUI::FormData>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<std::wstring,ksgui::GUI::FormData,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,ksgui::GUI::FormData> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,ksgui::GUI::FormData>,void *> *_Newnode);
std::_Tree_node<std::pair<std::wstring const ,ksgui::GUI::FormData>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,ksgui::GUI::FormData>>::_Buynode0(std::_Tree_buy<std::pair<std::wstring const ,ksgui::GUI::FormData>> *this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,ksgui::GUI::FormData> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,ksgui::GUI::FormData,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,ksgui::GUI::FormData>>,0>>::_Insert_at<std::pair<std::wstring const,ksgui::GUI::FormData> &,std::_Tree_node<std::pair<std::wstring const,ksgui::GUI::FormData>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,ksgui::GUI::FormData,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,ksgui::GUI::FormData> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,ksgui::GUI::FormData> > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::wstring const ,ksgui::GUI::FormData>,void *> *_Wherenode, std::pair<std::wstring const ,ksgui::GUI::FormData> *_Val, std::_Tree_node<std::pair<std::wstring const ,ksgui::GUI::FormData>,void *> *_Node);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,ksgui::GUI::FormData> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,ksgui::GUI::FormData,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,ksgui::GUI::FormData>>,0>>::_Insert_nohint<std::pair<std::wstring const,ksgui::GUI::FormData> &,std::_Tree_node<std::pair<std::wstring const,ksgui::GUI::FormData>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,ksgui::GUI::FormData,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,ksgui::GUI::FormData> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,ksgui::GUI::FormData> > > >,bool> *result, bool _Leftish, std::pair<std::wstring const ,ksgui::GUI::FormData> *_Val, std::_Tree_node<std::pair<std::wstring const ,ksgui::GUI::FormData>,void *> *_Newnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b0dda33c716fd65b9018e26f97c3e87e_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_b0dda33c716fd65b9018e26f97c3e87e>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b0dda33c716fd65b9018e26f97c3e87e_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b0dda33c716fd65b9018e26f97c3e87e>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this, const int *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b0dda33c716fd65b9018e26f97c3e87e_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b0dda33c716fd65b9018e26f97c3e87e>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_768582e1d5cd9e81dfeae2964a80b4f2_,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &>>,void,OnMouseDownEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_768582e1d5cd9e81dfeae2964a80b4f2>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_768582e1d5cd9e81dfeae2964a80b4f2_,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &>>,void,OnMouseDownEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_768582e1d5cd9e81dfeae2964a80b4f2>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *this, const OnMouseDownEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_768582e1d5cd9e81dfeae2964a80b4f2_,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &>>,void,OnMouseDownEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_768582e1d5cd9e81dfeae2964a80b4f2>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6fcf7586af684b3ce06df51a714e3b3d_,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &>>,void,OnMouseUpEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_6fcf7586af684b3ce06df51a714e3b3d>,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &> >,void,OnMouseUpEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6fcf7586af684b3ce06df51a714e3b3d_,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &>>,void,OnMouseUpEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6fcf7586af684b3ce06df51a714e3b3d>,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &> >,void,OnMouseUpEvent const &> *this, const OnMouseUpEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6fcf7586af684b3ce06df51a714e3b3d_,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &>>,void,OnMouseUpEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6fcf7586af684b3ce06df51a714e3b3d>,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &> >,void,OnMouseUpEvent const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cb2db8490a70cebb618e3cebe0d1b31c_,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &>>,void,OnMouseMoveEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_cb2db8490a70cebb618e3cebe0d1b31c>,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &> >,void,OnMouseMoveEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cb2db8490a70cebb618e3cebe0d1b31c_,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &>>,void,OnMouseMoveEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_cb2db8490a70cebb618e3cebe0d1b31c>,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &> >,void,OnMouseMoveEvent const &> *this, const OnMouseMoveEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cb2db8490a70cebb618e3cebe0d1b31c_,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &>>,void,OnMouseMoveEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_cb2db8490a70cebb618e3cebe0d1b31c>,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &> >,void,OnMouseMoveEvent const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b7850abbd65656492c0caaa76bf8aff6_,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &>>,void,OnMouseWheelMovedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_b7850abbd65656492c0caaa76bf8aff6>,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &> >,void,OnMouseWheelMovedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b7850abbd65656492c0caaa76bf8aff6_,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &>>,void,OnMouseWheelMovedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b7850abbd65656492c0caaa76bf8aff6>,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &> >,void,OnMouseWheelMovedEvent const &> *this, const OnMouseWheelMovedEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b7850abbd65656492c0caaa76bf8aff6_,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &>>,void,OnMouseWheelMovedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b7850abbd65656492c0caaa76bf8aff6>,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &> >,void,OnMouseWheelMovedEvent const &> *this);
double __cdecl sin();
double __cdecl cos();
void __thiscall ksgui::PopOver::PopOver(ksgui::PopOver *this, std::wstring name, ksgui::GUI *aGui);
ksgui::PopOver *__thiscall ksgui::PopOver::`vector deleting destructor'(ksgui::PopOver *this, unsigned int a2);
void __thiscall ksgui::PopOver::setLabelTitle(ksgui::PopOver *this, std::wstring aTitle);
void __thiscall ksgui::PopOver::setText(ksgui::PopOver *this, std::wstring aText);
void __thiscall ksgui::PopOver::render(ksgui::PopOver *this, float dt);
void __thiscall ksgui::PopOver::renderPopOver(ksgui::PopOver *this, float dt);
void __thiscall ksgui::ListBoxRow::ListBoxRow(ksgui::ListBoxRow *this, std::wstring name, unsigned int numberOfColumns, ksgui::GUI *aGui);
ksgui::ListBoxRow *__thiscall ksgui::ListBoxRow::`vector deleting destructor'(ksgui::ListBoxRow *this, unsigned int a2);
void __thiscall ksgui::ListBoxRow::setSize(ksgui::ListBoxRow *this, float width, float height);
// void __usercall ksgui::ListBoxRow::setPosition(ksgui::ListBoxRow *this@<ecx>, float a2@<xmm2>);
void __thiscall ksgui::ListBoxRow::clear(ksgui::ListBoxRow *this);
void __thiscall ksgui::ListBoxRow::setRow(ksgui::ListBoxRow *this, ksgui::ListBoxRowData *data);
void __thiscall ksgui::ListBoxRow::setFontAlignment(ksgui::ListBoxRow *this, eFontAlign alignment);
// void __userpurge ksgui::ListBoxRow::render(ksgui::ListBoxRow *this@<ecx>, GLRenderer *a2@<esi>, float dt);
void __thiscall TabBar::TabBar(TabBar *this, std::wstring name, ksgui::GUI *igui);
void __thiscall lambda_fe11ff885f9187f517dcab75665bb098_::operator()(TabBar::{ctor}::__l3::<lambda_fe11ff885f9187f517dcab75665bb098> *this, const ksgui::OnControlClicked *ev);
void __thiscall lambda_5d308dca4a93e0d78f34fea3775734ad_::operator()(TabBar::{ctor}::__l4::<lambda_5d308dca4a93e0d78f34fea3775734ad> *this, const ksgui::OnControlClicked *ev);
TabBar *__thiscall TabBar::`scalar deleting destructor'(TabBar *this, unsigned int a2);
void __thiscall TabBar::orderAlphabetically(TabBar *this, unsigned int beginIndex, unsigned int endIndex);
void __thiscall TabBar::~TabBar(TabBar *this);
void __thiscall TabBar::addTab(TabBar *this, std::wstring name, unsigned int myIndex);
void __thiscall TabBar::updateTabBarPosition(TabBar *this);
// void __userpurge TabBar::render(TabBar *this@<ecx>, int a2@<edi>, float dt);
// void __usercall TabBar::updateTabs(TabBar *this@<ecx>, float a2@<xmm1>);
void __thiscall TabBar::onTabClicked(TabBar *this, const ksgui::OnControlClicked *message);
void __thiscall TabBar::updateRollOnIndex(TabBar *this, const LastMousePosition *lm);
void __thiscall TabBar::onMouseMove(TabBar *this, const OnMouseMoveEvent *message);
double __cdecl sign<float>(const float *v);
// void __usercall std::_Sort<ksgui::Label * *,int,_lambda_9b8ddcb336fad3a01a4c2e5686bdfd5f_>(ksgui::Label **_First@<ecx>, ksgui::Label **_Last@<edx>, int _Ideal, TabBar::orderAlphabetically::__l3::<lambda_9b8ddcb336fad3a01a4c2e5686bdfd5f> _Pred);
// std::pair<ksgui::Label * *,ksgui::Label * *> *__usercall std::_Unguarded_partition<ksgui::Label * *,_lambda_9b8ddcb336fad3a01a4c2e5686bdfd5f_>@<eax>(ksgui::Label **_First@<edx>, std::pair<ksgui::Label * *,ksgui::Label * *> *a2@<ecx>, ksgui::Label **_Last);
// void __usercall std::_Median<ksgui::Label * *,_lambda_9b8ddcb336fad3a01a4c2e5686bdfd5f_>(ksgui::Label **_First@<ecx>, ksgui::Label **_Mid@<edx>, ksgui::Label **_Last);
void __fastcall std::_Make_heap<ksgui::Label * *,int,ksgui::Label *,_lambda_9b8ddcb336fad3a01a4c2e5686bdfd5f_>(ksgui::Label **_First, ksgui::Label **_Last);
void __fastcall std::_Sort_heap<ksgui::Label * *,_lambda_9b8ddcb336fad3a01a4c2e5686bdfd5f_>(ksgui::Label **_First, ksgui::Label **_Last);
void __fastcall std::_Insertion_sort1<ksgui::Label * *,_lambda_9b8ddcb336fad3a01a4c2e5686bdfd5f_,ksgui::Label *>(ksgui::Label **_First, ksgui::Label **_Last);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe11ff885f9187f517dcab75665bb098_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_fe11ff885f9187f517dcab75665bb098>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe11ff885f9187f517dcab75665bb098_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fe11ff885f9187f517dcab75665bb098>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe11ff885f9187f517dcab75665bb098_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fe11ff885f9187f517dcab75665bb098>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d308dca4a93e0d78f34fea3775734ad_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_5d308dca4a93e0d78f34fea3775734ad>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d308dca4a93e0d78f34fea3775734ad_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5d308dca4a93e0d78f34fea3775734ad>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d308dca4a93e0d78f34fea3775734ad_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5d308dca4a93e0d78f34fea3775734ad>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5b811461632966e03786fb7487dffe30_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_5b811461632966e03786fb7487dffe30>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5b811461632966e03786fb7487dffe30_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5b811461632966e03786fb7487dffe30>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5b811461632966e03786fb7487dffe30_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5b811461632966e03786fb7487dffe30>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
// void __usercall std::_Med3<ksgui::Label * *,_lambda_9b8ddcb336fad3a01a4c2e5686bdfd5f_>(ksgui::Label **_First@<ecx>, ksgui::Label **_Mid@<edx>, ksgui::Label **_Last);
// void __usercall std::_Adjust_heap<ksgui::Label * *,int,ksgui::Label *,_lambda_9b8ddcb336fad3a01a4c2e5686bdfd5f_>(ksgui::Label **_First@<ecx>, int _Hole@<edx>, int _Bottom, ksgui::Label **_Val);
// void __usercall std::_Push_heap<ksgui::Label * *,int,ksgui::Label *,_lambda_9b8ddcb336fad3a01a4c2e5686bdfd5f_>(ksgui::Label **_First@<ecx>, int _Hole@<edx>, int _Top, ksgui::Label **_Val);
void __thiscall ksgui::Taskbar::Taskbar(ksgui::Taskbar *this, ksgui::GUI *igui);
void __thiscall lambda_abf66501ac6ae93bc8ef9f8a3e9640f0_::operator()(ksgui::Taskbar::{ctor}::__l5::<lambda_abf66501ac6ae93bc8ef9f8a3e9640f0> *this, const ksgui::OnControlClicked *ev);
void __thiscall lambda_5d648f0e4b03d6ca9f4f68a0dccdd151_::operator()(ksgui::Taskbar::{ctor}::__l8::<lambda_5d648f0e4b03d6ca9f4f68a0dccdd151> *this, const ksgui::OnControlClicked *ev);
ksgui::Taskbar *__thiscall ksgui::Taskbar::`scalar deleting destructor'(ksgui::Taskbar *this, unsigned int a2);
void __thiscall ksgui::Taskbar::selectVirtualDesktop(ksgui::Taskbar *this, int id);
ksgui::Control *__thiscall ksgui::Taskbar::addDesktop(ksgui::Taskbar *this, int id, int x, int y);
void __thiscall lambda_c4e3fc1bef8f584ac038b7ed2e9e0120_::operator()(ksgui::Taskbar::addDesktop::__l3::<lambda_c4e3fc1bef8f584ac038b7ed2e9e0120> *this, const ksgui::OnControlClicked *ev);
__int16 __thiscall ksgui::Taskbar::cycleDekstop(ksgui::Taskbar *this);
void __thiscall ksgui::Taskbar::mouseWheelMoved(ksgui::Taskbar *this, const OnMouseWheelMovedEvent *message);
void __thiscall ksgui::Taskbar::~Taskbar(ksgui::Taskbar *this);
void __thiscall ksgui::Taskbar::render(ksgui::Taskbar *this, float dt);
void __thiscall ksgui::Taskbar::addForm(ksgui::Taskbar *this, ksgui::Form *form);
void __thiscall ksgui::Taskbar::onAppClicked(ksgui::Taskbar *this, const ksgui::OnControlClicked *message);
void __thiscall ksgui::Taskbar::onMouseMove(ksgui::Taskbar *this, const OnMouseMoveEvent *message);
void __thiscall ksgui::Taskbar::setTopAppIndex(ksgui::Taskbar *this, int i);
void __thiscall ksgui::Taskbar::updateAppIconsPosition(ksgui::Taskbar *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_abf66501ac6ae93bc8ef9f8a3e9640f0_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_abf66501ac6ae93bc8ef9f8a3e9640f0>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_abf66501ac6ae93bc8ef9f8a3e9640f0_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_abf66501ac6ae93bc8ef9f8a3e9640f0>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_abf66501ac6ae93bc8ef9f8a3e9640f0_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_abf66501ac6ae93bc8ef9f8a3e9640f0>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d648f0e4b03d6ca9f4f68a0dccdd151_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_5d648f0e4b03d6ca9f4f68a0dccdd151>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d648f0e4b03d6ca9f4f68a0dccdd151_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5d648f0e4b03d6ca9f4f68a0dccdd151>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d648f0e4b03d6ca9f4f68a0dccdd151_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5d648f0e4b03d6ca9f4f68a0dccdd151>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c4e3fc1bef8f584ac038b7ed2e9e0120_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_c4e3fc1bef8f584ac038b7ed2e9e0120>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c4e3fc1bef8f584ac038b7ed2e9e0120_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c4e3fc1bef8f584ac038b7ed2e9e0120>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c4e3fc1bef8f584ac038b7ed2e9e0120_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c4e3fc1bef8f584ac038b7ed2e9e0120>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_acea4276788b5926c342176de16db96c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_acea4276788b5926c342176de16db96c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_acea4276788b5926c342176de16db96c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_acea4276788b5926c342176de16db96c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_acea4276788b5926c342176de16db96c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_acea4276788b5926c342176de16db96c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall DefaultSystemMessage::DefaultSystemMessage(DefaultSystemMessage *this, ksgui::GUI *gui);
DefaultSystemMessage *__thiscall DefaultSystemMessage::`scalar deleting destructor'(DefaultSystemMessage *this, unsigned int a2);
// void __userpurge DefaultSystemMessage::render(DefaultSystemMessage *this@<ecx>, int a2@<esi>, float dt);
void __thiscall DefaultSystemMessage::setMessage(DefaultSystemMessage *this, std::wstring title, std::wstring description);
void __thiscall ksgui::MovingBar::MovingBar(ksgui::MovingBar *this, ksgui::ScrollBar *scrollBar, ksgui::GUI *aGui);
ksgui::MovingBar *__thiscall ksgui::MovingBar::`scalar deleting destructor'(ksgui::MovingBar *this, unsigned int a2);
char __thiscall ksgui::MovingBar::onMouseDown(ksgui::MovingBar *this, const OnMouseDownEvent *message);
void __thiscall ksgui::MovingBar::onMouseMove(ksgui::MovingBar *this, const OnMouseMoveEvent *message);
void __thiscall ksgui::MovingBar::render(ksgui::MovingBar *this, float dt);
void __thiscall ksgui::ScrollBar::onMouseWheelMovedEvent(ksgui::ScrollBar *this, const OnMouseWheelMovedEvent *message);
void __thiscall ksgui::ScrollBar::ScrollBar(ksgui::ScrollBar *this, std::wstring iname, ksgui::GUI *igui, bool isDressed);
ksgui::ScrollBar *__thiscall ksgui::ScrollBar::`scalar deleting destructor'(ksgui::ScrollBar *this, unsigned int a2);
void __thiscall Event<ksgui::OnScrollBarValueChanged>::~Event<ksgui::OnScrollBarValueChanged>(Event<ksgui::OnScrollBarValueChanged> *this);
void __thiscall ksgui::ScrollBar::~ScrollBar(ksgui::ScrollBar *this);
void __thiscall ksgui::ScrollBar::setSize(ksgui::ScrollBar *this, float w, float h);
void __thiscall ksgui::ScrollBar::setValue(ksgui::ScrollBar *this, unsigned int v);
void __thiscall ksgui::ScrollBar::render(ksgui::ScrollBar *this, float dt);
void __thiscall ksgui::ScrollBar::setRepeatInterval(ksgui::ScrollBar *this, float i);
void __thiscall ksgui::ScrollBar::drawArrow(ksgui::ScrollBar *this, ksgui::Control *button, ksgui::eArrowsDirection direction);
void __thiscall ksgui::ScrollBar::onMouseMove(ksgui::ScrollBar *this, const OnMouseMoveEvent *message);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_61e7e921a0569f7590625406f5e7931f_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_61e7e921a0569f7590625406f5e7931f>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_61e7e921a0569f7590625406f5e7931f_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_61e7e921a0569f7590625406f5e7931f>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_61e7e921a0569f7590625406f5e7931f_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_61e7e921a0569f7590625406f5e7931f>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8164b334b8b1f82ed164e6f6e1f67840_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_8164b334b8b1f82ed164e6f6e1f67840>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8164b334b8b1f82ed164e6f6e1f67840_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8164b334b8b1f82ed164e6f6e1f67840>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8164b334b8b1f82ed164e6f6e1f67840_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8164b334b8b1f82ed164e6f6e1f67840>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
// void __userpurge ksgui::TaskBarIcon::TaskBarIcon(ksgui::TaskBarIcon *this@<ecx>, unsigned int a2@<ebx>, std::wstring name, std::shared_ptr<Font> appFont, ksgui::GUI *igui);
ksgui::TaskBarIcon *__thiscall ksgui::TaskBarIcon::`vector deleting destructor'(ksgui::TaskBarIcon *this, unsigned int a2);
void __thiscall ksgui::TaskBarIcon::setDescriptionText(ksgui::TaskBarIcon *this, std::wstring text);
void __thiscall ksgui::TaskBarIcon::hide(ksgui::TaskBarIcon *this, bool value);
void __thiscall ksgui::TaskBarIcon::onMouseMove(ksgui::TaskBarIcon *this, const OnMouseMoveEvent *message);
// void __userpurge ksgui::TaskBarIcon::setIcon(ksgui::TaskBarIcon *this@<ecx>, unsigned int a2@<ebx>, std::wstring filename);
// void __userpurge ksgui::TaskBarIcon::render(ksgui::TaskBarIcon *this@<ecx>, int a2@<edi>, float dt);
std::wstring *__cdecl std::operator+<wchar_t>(std::wstring *result, const std::wstring *_Left, const std::wstring *_Right);
void __thiscall UDPSocket::UDPSocket(UDPSocket *this);
void __thiscall UDPSocket::~UDPSocket(UDPSocket *this);
void __thiscall UDPSocket::setBlockingMode(UDPSocket *this, BOOL imode);
void __thiscall UDPSocket::addListener(UDPSocket *this, std::function<void __cdecl(UDPMessage const &)> listener);
std::function<void __cdecl(UDPMessage const &)> *__thiscall UDPSocket::receive(UDPSocket *this, int maxPackets);
void __thiscall std::vector<std::function<void __cdecl (UDPMessage const &)>>::~vector<std::function<void __cdecl (UDPMessage const &)>>(std::vector<std::function<void __cdecl(UDPMessage const &)>> *this);
void __thiscall std::vector<std::function<void __cdecl (UDPMessage const &)>>::push_back(std::vector<std::function<void __cdecl(UDPMessage const &)>> *this, const std::function<void __cdecl(UDPMessage const &)> *_Val);
void __thiscall std::vector<std::function<void __cdecl (UDPMessage const &)>>::_Reserve(std::vector<std::function<void __cdecl(UDPMessage const &)>> *this, unsigned int _Count);
void __thiscall std::vector<std::function<void __cdecl (UDPMessage const &)>>::_Reallocate(std::vector<std::function<void __cdecl(UDPMessage const &)>> *this, unsigned int _Count);
void __thiscall std::_Wrap_alloc<std::allocator<std::function<void __cdecl (UDPMessage const &)>>>::construct<std::function<void __cdecl (UDPMessage const &)>,std::function<void __cdecl (UDPMessage const &)> const &>(std::_Wrap_alloc<std::allocator<std::function<void __cdecl(UDPMessage const &)> > > *this, std::function<void __cdecl(UDPMessage const &)> *_Ptr, const std::function<void __cdecl(UDPMessage const &)> *<_Args_0>);
void __fastcall std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::function<void __cdecl (UDPMessage const &)>>>>(std::function<void __cdecl(UDPMessage const &)> *_First, std::function<void __cdecl(UDPMessage const &)> *_Last);
void __thiscall std::_Wrap_alloc<std::allocator<std::function<void __cdecl (UDPMessage const &)>>>::destroy<std::function<void __cdecl (UDPMessage const &)>>(std::_Wrap_alloc<std::allocator<std::function<void __cdecl(UDPMessage const &)> > > *this, std::function<void __cdecl(UDPMessage const &)> *_Ptr);
// std::function<void __cdecl(UDPMessage const &)> *__usercall std::_Uninit_move<std::function<void __cdecl (UDPMessage const &)> *,std::function<void __cdecl (UDPMessage const &)> *,std::allocator<std::function<void __cdecl (UDPMessage const &)>>,std::function<void __cdecl (UDPMessage const &)>>@<eax>(std::function<void __cdecl(UDPMessage const &)> *_First@<ecx>, std::function<void __cdecl(UDPMessage const &)> *_Last@<edx>, std::function<void __cdecl(UDPMessage const &)> *_Dest);
void __thiscall IPAddress::IPAddress(IPAddress *this);
void __thiscall IPAddress::IPAddress(IPAddress *this, const std::wstring *addr, unsigned __int16 port);
void __thiscall UDPPacket::UDPPacket(UDPPacket *this);
void __thiscall UDPPacket::UDPPacket(UDPPacket *this, const std::vector<unsigned char> *idata);
void __thiscall UDPPacket::~UDPPacket(UDPPacket *this);
void __thiscall UDPPacket::UDPPacket(UDPPacket *this, const UDPMessage *msg);
void __thiscall UDPPacket::UDPPacket(UDPPacket *this, const UDPPacket *r);
UDPPacket *__thiscall UDPPacket::operator=(UDPPacket *this, const UDPPacket *r);
unsigned int __thiscall UDPPacket::getSize(UDPPacket *this);
void __thiscall UDPPacket::send(UDPPacket *this, UDPSocket *sok);
void __thiscall UDPPacket::send(UDPPacket *this, TCPSocket *sok);
void __thiscall UDPPacket::writeStringANSI(UDPPacket *this, const std::wstring *st);
void __thiscall UDPPacket::writeString(UDPPacket *this, const std::wstring *st);
void __thiscall UDPPacket::writeString(UDPPacket *this, const std::string *st);
std::wstring *__thiscall UDPPacket::readStringW(UDPPacket *this, std::wstring *result);
std::wstring *__thiscall UDPPacket::readBigStringW(UDPPacket *this, std::wstring *result);
std::string *__thiscall UDPPacket::readString(UDPPacket *this, std::string *result);
bool __thiscall UDPPacket::isEOF(UDPPacket *this);
void __thiscall std::string::string(std::string *this, const std::string *_Right);
void __thiscall std::string::string(std::string *this, std::string *_Right);
wchar_t *__thiscall std::wstring::operator[](std::wstring *this, unsigned int _Off);
void __thiscall std::wstring::resize(std::wstring *this, unsigned int _Newsize);
void __thiscall std::string::_Assign_rv(std::string *this, std::string *_Right);
unsigned __int8 __thiscall UDPPacket::read<unsigned char>(UDPPacket *this);
int __thiscall UDPPacket::read<unsigned short>(UDPPacket *this);
void __thiscall std::thread::~thread(std::thread *this);
void __thiscall std::thread::join(std::thread *this);
void __thiscall TCPQueue::push(TCPQueue *this, unsigned __int8 *data, unsigned int size);
std::vector<unsigned char> *__thiscall TCPQueue::getPacket(TCPQueue *this, std::vector<unsigned char> *result);
void __thiscall TCPSocket::TCPSocket(TCPSocket *this);
void __thiscall TCPSocket::~TCPSocket(TCPSocket *this);
BOOL __thiscall TCPSocket::connect(TCPSocket *this, const IPAddress *target);
void __thiscall TCPSocket::setBlockingMode(TCPSocket *this, BOOL imode);
void __thiscall TCPSocket::addListener(TCPSocket *this, std::function<void __cdecl(UDPMessage const &)> listener);
std::vector<unsigned char> *__thiscall TCPSocket::receivePacket(TCPSocket *this, std::vector<unsigned char> *result);
int __thiscall TCPSocket::receive(TCPSocket *this, int maxPackets);
void __thiscall std::vector<unsigned char>::resize(std::vector<unsigned char> *this, unsigned int _Newsize);
void __thiscall Concurrency::concurrent_queue<float,std::allocator<float>>::_Move_item(Concurrency::concurrent_queue<float,std::allocator<float> > *this, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Dst, unsigned int _Index, void *_Src);
void __thiscall Concurrency::concurrent_queue<float,std::allocator<float>>::_Assign_and_destroy_item(Concurrency::concurrent_queue<float,std::allocator<float> > *this, void *_Dst, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Src, unsigned int _Index);
Concurrency::details::_Concurrent_queue_base_v4::_Page *__thiscall Concurrency::concurrent_queue<float,std::allocator<float>>::_Allocate_page(Concurrency::concurrent_queue<float,std::allocator<float> > *this);
void __thiscall Concurrency::concurrent_queue<float,std::allocator<float>>::_Deallocate_page(Concurrency::concurrent_queue<float,std::allocator<float> > *this, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Pg);
void __thiscall std::vector<unsigned char>::_Reserve(std::vector<unsigned char> *this, unsigned int _Count);
Concurrency::concurrent_queue<unsigned int,std::allocator<unsigned int> > *__thiscall Concurrency::concurrent_queue<unsigned int,std::allocator<unsigned int>>::`vector deleting destructor'(Concurrency::concurrent_queue<unsigned int,std::allocator<unsigned int> > *this, unsigned int a2);
void __thiscall std::vector<unsigned char>::_Reallocate(std::vector<unsigned char> *this, unsigned int _Count);
void __thiscall Concurrency::concurrent_queue<unsigned int,std::allocator<unsigned int>>::~concurrent_queue<unsigned int,std::allocator<unsigned int>>(Concurrency::concurrent_queue<unsigned int,std::allocator<unsigned int> > *this);
int InitKSNetwork();
// int __stdcall ShutdownKSNetwork();
void __thiscall StaticParticleSystem::StaticParticleSystem(StaticParticleSystem *this, const std::wstring *a_name, GraphicsManager *graphics, int a_maxParticleCount, const Texture *a_texture);
StaticParticleSystem *__thiscall StaticParticleSystem::`vector deleting destructor'(StaticParticleSystem *this, unsigned int a2);
void __thiscall StaticParticleSystem::~StaticParticleSystem(StaticParticleSystem *this);
void __thiscall StaticParticleSystem::render(StaticParticleSystem *this, RenderContext *rc);
void __thiscall StaticParticleSystem::addParticle(StaticParticleSystem *this, const StaticParticle *particle);
std::vector<unsigned short> *__thiscall ParticleSystem::generateIndexBuffer(ParticleSystem *this, std::vector<unsigned short> *result, int pcount);
void __thiscall StaticParticleSystem::initIndexBuffer(ParticleSystem *this);
void __thiscall StaticParticleSystem::finalize(StaticParticleSystem *this);
void __thiscall std::vector<StaticParticle>::push_back(std::vector<StaticParticle> *this, const StaticParticle *_Val);
void __thiscall std::vector<unsigned short>::push_back(std::vector<unsigned short> *this, const unsigned __int16 *_Val);
void __thiscall std::vector<StaticParticle>::_Reallocate(std::vector<StaticParticle> *this, unsigned int _Count);
void __thiscall std::vector<StaticParticle>::_Reserve(std::vector<StaticParticle> *this, unsigned int _Count);
void __thiscall std::vector<unsigned short>::_Reserve(std::vector<unsigned short> *this, unsigned int _Count);
void __thiscall std::vector<unsigned short>::_Reallocate(std::vector<unsigned short> *this, unsigned int _Count);
// StaticParticle *__usercall std::_Uninit_move<StaticParticle *,StaticParticle *,std::allocator<StaticParticle>,StaticParticle>@<eax>(StaticParticle *_First@<ecx>, StaticParticle *_Last@<edx>, StaticParticle *_Dest);
void __thiscall ParticleSystem::ParticleSystem(ParticleSystem *this, const std::wstring *a_name, GraphicsManager *graphics, int a_maxParticleCount, const Texture *a_texture);
ParticleSystem *__thiscall ParticleSystem::`vector deleting destructor'(ParticleSystem *this, unsigned int a2);
void __thiscall ParticleSystem::~ParticleSystem(ParticleSystem *this);
void __thiscall ParticleSystem::step(ParticleSystem *this, float dt);
void __thiscall ParticleSystem::render(ParticleSystem *this, RenderContext *rc);
void __thiscall ParticleSystem::clearParticles(ParticleSystem *this);
void __thiscall ParticleSystem::disable(ParticleSystem *this);
void __thiscall std::vector<Particle>::push_back(std::vector<Particle> *this, const Particle *_Val);
void __thiscall std::vector<Particle>::_Reserve(std::vector<Particle> *this, unsigned int _Count);
void __thiscall std::vector<Particle>::_Reallocate(std::vector<Particle> *this, unsigned int _Count);
// Particle *__usercall std::_Move<Particle *,Particle *>@<eax>(Particle *_First@<ecx>, Particle *_Last@<edx>, Particle *_Dest);
// Particle *__usercall std::_Uninit_move<Particle *,Particle *,std::allocator<Particle>,Particle>@<eax>(Particle *_First@<ecx>, Particle *_Last@<edx>, Particle *_Dest);
double __cdecl ksRand();
double __cdecl ksRand(float minv, float maxv);
// void __userpurge ParticleGenerator::ParticleGenerator(ParticleGenerator *this@<ecx>, __m128 a2@<xmm0>, ParticleSystem *a_particleSystem, std::wstring a_filename, float aFrequency);
void __thiscall ParticleGenerator::~ParticleGenerator(ParticleGenerator *this);
void __thiscall ParticleGenerator::generateParticle(ParticleGenerator *this, const vec3f *pos, const vec3f *velocity, long double now, long double timeRate);
void __thiscall Particle::Particle(Particle *this);
void __thiscall ParticleGenerator::loadINI(ParticleGenerator *this);
void __cdecl ksPhysicsCoreODEFactory::create();
SliderJointODE *__thiscall SliderJointODE::`vector deleting destructor'(SliderJointODE *this, unsigned int a2);
void __thiscall IPhysicsCore::~IPhysicsCore(IPhysicsCore *this);
IPhysicsCore *__thiscall IPhysicsCore::`vector deleting destructor'(IPhysicsCore *this, unsigned int a2);
void __thiscall SliderJointODE::setERPCFM(SliderJointODE *this, float erp, float cfm);
void __thiscall BallJointODE::setERPCFM(FixedJointODE *this, float erp, float cfm);
CoreCPUTimes *__thiscall PhysicsCore::getCoreCPUTimes(PhysicsCore *this, CoreCPUTimes *result);
void __thiscall PhysicsCore::PhysicsCore(PhysicsCore *this);
PhysicsCore *__thiscall PhysicsCore::`scalar deleting destructor'(PhysicsCore *this, unsigned int a2);
void __thiscall PhysicsCore::~PhysicsCore(PhysicsCore *this);
// void __usercall PhysicsCore::initMultithreading(PhysicsCore *this@<ecx>, __m128 a2@<xmm0>);
void __thiscall PhysicsCore::step(PhysicsCore *this, float dt);
void __thiscall PhysicsCore::createRigidBody(PhysicsCore *this);
void __thiscall PhysicsCore::release(PhysicsCore *this);
IJoint *__thiscall PhysicsCore::createDistanceJoint(PhysicsCore *this, IRigidBody *rb1, IRigidBody *rb2, const vec3f *p1, const vec3f *p2);
void __thiscall PhysicsCore::reseatDistanceJointLocal(PhysicsCore *this, IJoint *joint, const vec3f *p1, const vec3f *p2);
IJoint *__thiscall PhysicsCore::createBumpJoint(PhysicsCore *this, IRigidBody *rb1, IRigidBody *rb2, const vec3f *p1, float rangeUp, float rangeDn);
IJoint *__thiscall PhysicsCore::createFixedJoint(PhysicsCore *this, IRigidBody *rb1, IRigidBody *rb2);
IJoint *__thiscall PhysicsCore::createBallJoint(PhysicsCore *this, IRigidBody *rb1, IRigidBody *rb2, const vec3f *pos);
IJoint *__thiscall PhysicsCore::createSliderJoint(PhysicsCore *this, IRigidBody *rb1, IRigidBody *rb2, const vec3f *axis);
void __thiscall PhysicsCore::createCollisionMesh(PhysicsCore *this, float *vertices, unsigned int numVertices, unsigned __int16 *indices, int indexCount, const mat44f *worldMatrix, IRigidBody *body, unsigned int group, unsigned int mask, unsigned int space_id);
void __cdecl rayNearCallback(void *data, dxGeom *o1, dxGeom *o2);
RayCastHit *__thiscall PhysicsCore::rayCast(PhysicsCore *this, RayCastHit *result, const vec3f *pos, const vec3f *dir, float length);
RayCastHit *__thiscall PhysicsCore::rayCast(PhysicsCore *this, RayCastHit *result, const vec3f *pos, const vec3f *dir, dxGeom *rayc);
void __thiscall PhysicsCore::setCollisionCallback(PhysicsCore *this, ICollisionCallback *callback);
void __cdecl nearCallback(void *data, dxGeom *o1, dxGeom *o2);
void __thiscall PhysicsCore::collisionStep(PhysicsCore *this);
void __thiscall PhysicsCore::onCollision(PhysicsCore *this, dContactGeom *contacts, int numContacts, dxGeom *g0, dxGeom *g1);
void __thiscall PhysicsCore::setSliderAxis(PhysicsCore *this, IJoint *joint, const vec3f *axis, const vec3f *anchor);
void __thiscall PhysicsCore::createRayCaster(PhysicsCore *this, float length);
void __thiscall PhysicsCore::setNoCollisionSteps(PhysicsCore *this, int steps);
dxSpace *__thiscall PhysicsCore::getStaticSubSpace(PhysicsCore *this, unsigned int index);
dxSpace *__thiscall PhysicsCore::getDynamicSubSpace(PhysicsCore *this, unsigned int index);
void __thiscall PhysicsCore::resetCollisions(PhysicsCore *this);
dxSpace **__thiscall std::map<unsigned int,dxSpace *>::operator[](std::map<unsigned int,dxSpace *> *this, const unsigned int *_Keyval);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > > *__thiscall std::_Tree<std::_Tmap_traits<unsigned int,dxSpace *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const,dxSpace *>>,0>>::find(std::_Tree<std::_Tmap_traits<unsigned int,dxSpace *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,dxSpace *> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > > *result, const unsigned int *_Keyval);
std::_Tree_node<std::pair<unsigned int const ,dxSpace *>,void *> *__thiscall std::_Tree_buy<std::pair<unsigned int const,dxSpace *>>::_Buynode<std::piecewise_construct_t const &,std::tuple<unsigned int const &>,std::tuple<>>(std::_Tree_buy<std::pair<unsigned int const ,dxSpace *>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<unsigned int const &> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > > *__thiscall std::_Tree<std::_Tmap_traits<unsigned int,dxSpace *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const,dxSpace *>>,0>>::_Insert_hint<std::pair<unsigned int const,dxSpace *> &,std::_Tree_node<std::pair<unsigned int const,dxSpace *>,void *> *>(std::_Tree<std::_Tmap_traits<unsigned int,dxSpace *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,dxSpace *> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > > _Where, std::pair<unsigned int const ,dxSpace *> *_Val, std::_Tree_node<std::pair<unsigned int const ,dxSpace *>,void *> *_Newnode);
std::_Tree_node<std::pair<unsigned int const ,dxSpace *>,void *> **__thiscall std::_Tree_buy<std::pair<unsigned int const,dxSpace *>>::_Buynode0(std::_Tree_buy<std::pair<unsigned int const ,dxSpace *>> *this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > > *__thiscall std::_Tree<std::_Tmap_traits<unsigned int,dxSpace *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const,dxSpace *>>,0>>::_Insert_at<std::pair<unsigned int const,dxSpace *> &,std::_Tree_node<std::pair<unsigned int const,dxSpace *>,void *> *>(std::_Tree<std::_Tmap_traits<unsigned int,dxSpace *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,dxSpace *> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > > *result, bool _Addleft, std::_Tree_node<std::pair<unsigned int const ,dxSpace *>,void *> *_Wherenode, std::pair<unsigned int const ,dxSpace *> *_Val, std::_Tree_node<std::pair<unsigned int const ,dxSpace *>,void *> *_Node);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<unsigned int,dxSpace *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const,dxSpace *>>,0>>::_Insert_nohint<std::pair<unsigned int const,dxSpace *> &,std::_Tree_node<std::pair<unsigned int const,dxSpace *>,void *> *>(std::_Tree<std::_Tmap_traits<unsigned int,dxSpace *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,dxSpace *> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,dxSpace *> > > >,bool> *result, bool _Leftish, std::pair<unsigned int const ,dxSpace *> *_Val, std::_Tree_node<std::pair<unsigned int const ,dxSpace *>,void *> *_Newnode);
void __thiscall ICollisionObject::~ICollisionObject(ICollisionObject *this);
RBCollisionMesh *__thiscall ICollisionObject::`scalar deleting destructor'(RBCollisionMesh *this, unsigned int a2);
IRigidBody *__thiscall IRigidBody::`vector deleting destructor'(IRigidBody *this, unsigned int a2);
void __thiscall std::_Func_class<void,OnPhysicsStepCompleted const &>::_Set(std::_Func_class<void,OnPhysicsStepCompleted const &> *this, std::_Func_base<void,OnPhysicsStepCompleted const &> *_Ptr);
void *__thiscall RBCollisionMesh::getUserPointer(RBCollisionMesh *this);
Car *__thiscall RaceEngineer::getCar(RaceEngineer *this);
unsigned int __thiscall RBCollisionMesh::getMask(RBCollisionMesh *this);
void __thiscall RigidBodyODE::RigidBodyODE(RigidBodyODE *this, PhysicsCore *core);
RigidBodyODE *__thiscall RigidBodyODE::`vector deleting destructor'(RigidBodyODE *this, unsigned int a2);
void __thiscall RigidBodyODE::~RigidBodyODE(RigidBodyODE *this);
double __thiscall RigidBodyODE::getMass(RigidBodyODE *this);
void __thiscall RigidBodyODE::release(RigidBodyODE *this);
void __thiscall RigidBodyODE::setMassExplicitInertia(RigidBodyODE *this, float totalMass, float x, float y, float z);
void __thiscall RigidBodyODE::setMassBox(RigidBodyODE *this, float m, float x, float y, float z);
vec3f *__thiscall RigidBodyODE::getLocalInertia(RigidBodyODE *this, vec3f *result);
mat44f *__thiscall RigidBodyODE::getWorldMatrix(RigidBodyODE *this, mat44f *result, float interpolationT);
vec3f *__thiscall RigidBodyODE::localToWorld(RigidBodyODE *this, vec3f *result, const vec3f *p);
vec3f *__thiscall RigidBodyODE::worldToLocal(RigidBodyODE *this, vec3f *result, const vec3f *p);
vec3f *__thiscall RigidBodyODE::localToWorldNormal(RigidBodyODE *this, vec3f *result, const vec3f *p);
vec3f *__thiscall RigidBodyODE::worldToLocalNormal(RigidBodyODE *this, vec3f *result, const vec3f *p);
void __thiscall RigidBodyODE::stop(RigidBodyODE *this, float amount);
vec3f *__thiscall RigidBodyODE::getVelocity(RigidBodyODE *this, vec3f *result);
void __thiscall RigidBodyODE::setVelocity(RigidBodyODE *this, const vec3f *vel);
void __thiscall RigidBodyODE::setPosition(RigidBodyODE *this, const vec3f *pos);
// void __userpurge RigidBodyODE::setRotation(RigidBodyODE *this@<ecx>, char a2@<efl>, const mat44f *mat);
vec3f *__thiscall RigidBodyODE::getPosition(RigidBodyODE *this, vec3f *result, float interpolationT);
vec3f *__thiscall RigidBodyODE::getAngularVelocity(RigidBodyODE *this, vec3f *result);
vec3f *__thiscall RigidBodyODE::getLocalAngularVelocity(RigidBodyODE *this, vec3f *result);
vec3f *__thiscall RigidBodyODE::getLocalVelocity(RigidBodyODE *this, vec3f *result);
void __thiscall RigidBodyODE::addMeshCollider(RigidBodyODE *this, float *vertices, unsigned int verticesCount, unsigned __int16 *indices, unsigned int indicesCount, mat44f mat, unsigned int category, unsigned int collideMask, unsigned int spaceId);
void __thiscall RigidBodyODE::setMeshCollideMask(RigidBodyODE *this, unsigned int meshIndex, unsigned int mask);
void __thiscall RigidBodyODE::setMeshCollideCategory(RigidBodyODE *this, unsigned int meshIndex, unsigned int category);
unsigned int __thiscall RigidBodyODE::getMeshCollideCategory(RigidBodyODE *this, unsigned int meshIndex);
unsigned int __thiscall RigidBodyODE::getMeshCollideMask(RigidBodyODE *this, unsigned int meshIndex);
void __thiscall RigidBodyODE::setBoxColliderMask(RigidBodyODE *this, unsigned int box, unsigned int mask);
unsigned int __thiscall RigidBodyODE::addBoxCollider(RigidBodyODE *this, const vec3f *pos, const vec3f *size, unsigned int category, unsigned int mask, unsigned int spaceId);
void __thiscall RigidBodyODE::addLocalForce(RigidBodyODE *this, const vec3f *f);
void __thiscall RigidBodyODE::addLocalTorque(RigidBodyODE *this, const vec3f *t);
void __thiscall RigidBodyODE::addLocalForceAtPos(RigidBodyODE *this, const vec3f *f, const vec3f *p);
void __thiscall RigidBodyODE::addLocalForceAtLocalPos(RigidBodyODE *this, const vec3f *f, const vec3f *p);
void __thiscall RigidBodyODE::addForceAtLocalPos(RigidBodyODE *this, const vec3f *f, const vec3f *p);
vec3f *__thiscall RigidBodyODE::getLocalPointVelocity(RigidBodyODE *this, vec3f *result, const vec3f *p);
vec3f *__thiscall RigidBodyODE::getPointVelocity(RigidBodyODE *this, vec3f *result, const vec3f *p);
void __thiscall RigidBodyODE::addForceAtPos(RigidBodyODE *this, const vec3f *f, const vec3f *p);
void __thiscall RigidBodyODE::addTorque(RigidBodyODE *this, const vec3f *t);
void __thiscall RigidBodyODE::setAngularVelocity(RigidBodyODE *this, const vec3f *vel);
void __thiscall RigidBodyODE::setAutoDisable(RigidBodyODE *this, bool mode);
BOOL __thiscall RigidBodyODE::isEnabled(RigidBodyODE *this);
void __thiscall RigidBodyODE::setEnabled(RigidBodyODE *this, bool value);
void __thiscall std::vector<std::shared_ptr<BodyCollisionMesh>>::push_back(std::vector<std::shared_ptr<BodyCollisionMesh>> *this, const std::shared_ptr<BodyCollisionMesh> *_Val);
void __thiscall std::vector<std::shared_ptr<BodyCollisionMesh>>::_Reserve(std::vector<std::shared_ptr<BodyCollisionMesh>> *this, unsigned int _Count);
void __thiscall std::vector<std::shared_ptr<BodyCollisionMesh>>::_Reallocate(std::vector<std::shared_ptr<BodyCollisionMesh>> *this, unsigned int _Count);
void __thiscall std::shared_ptr<BodyCollisionMesh>::_Resetp<BodyCollisionMesh>(std::shared_ptr<BodyCollisionMesh> *this, BodyCollisionMesh *_Px);
void __fastcall std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::shared_ptr<BodyCollisionMesh>>>>(std::shared_ptr<BodyCollisionMesh> *_First, std::shared_ptr<BodyCollisionMesh> *_Last);
BodyCollisionMesh *__thiscall BodyCollisionMesh::`scalar deleting destructor'(BodyCollisionMesh *this, unsigned int a2);
void __thiscall std::_Ref_count<BodyCollisionMesh>::_Destroy(std::_Ref_count<BodyCollisionMesh> *this);
// std::shared_ptr<BodyCollisionMesh> *__usercall std::_Uninit_move<std::shared_ptr<BodyCollisionMesh> *,std::shared_ptr<BodyCollisionMesh> *,std::allocator<std::shared_ptr<BodyCollisionMesh>>,std::shared_ptr<BodyCollisionMesh>>@<eax>(std::shared_ptr<BodyCollisionMesh> *_First@<ecx>, std::shared_ptr<BodyCollisionMesh> *_Last@<edx>, std::shared_ptr<BodyCollisionMesh> *_Dest);
void __thiscall CollisionMeshODE::CollisionMeshODE(CollisionMeshODE *this, PhysicsCore *core, float *vertices, int numVertices, unsigned __int16 *indices, int indexCount, unsigned int group, unsigned int mask, unsigned int space_id);
CollisionMeshODE *__thiscall CollisionMeshODE::`scalar deleting destructor'(CollisionMeshODE *this, unsigned int a2);
void __thiscall CollisionMeshODE::release(FSWinCmdUsbHid *this);
void __thiscall CollisionMeshODE::setUserPointer(KeyboardManager *this, IKeyEventListener *l);
void *__thiscall CollisionMeshODE::getUserPointer(CollisionMeshODE *this);
unsigned int __thiscall CollisionMeshODE::getGroup(CollisionMeshODE *this);
unsigned int __thiscall CollisionMeshODE::getMask(CollisionMeshODE *this);
IRayCaster *__thiscall IRayCaster::`vector deleting destructor'(IRayCaster *this, unsigned int a2);
// void __userpurge RayCaster::RayCaster(RayCaster *this@<ecx>, int a2@<xmm2>, PhysicsCore *core);
RayCaster *__thiscall RayCaster::`scalar deleting destructor'(RayCaster *this, unsigned int a2);
RayCastHit *__thiscall RayCaster::rayCast(RayCaster *this, RayCastHit *result, const vec3f *pos, const vec3f *dir);
void __thiscall RayCaster::release(RayCaster *this);
void __thiscall PyEnvironment::PyEnvironment(PyEnvironment *this, const char *iname);
void __thiscall PyEnvironment::addFunc(PyEnvironment *this, const char *name, _object *(__cdecl *func)(_object *, _object *));
void __thiscall PyEnvironment::addTerminator(PyEnvironment *this);
void __thiscall std::vector<FormChat::ChatIntensities>::_Reserve(std::vector<FormChat::ChatIntensities> *this, unsigned int _Count);
void __thiscall std::vector<FormChat::ChatIntensities>::_Reallocate(std::vector<FormChat::ChatIntensities> *this, unsigned int _Count);
_object *__cdecl PyInit_emb();
void __thiscall PyInterpreter::PyInterpreter(PyInterpreter *this, PyEnvironment *ienv);
void __thiscall PyInterpreter::~PyInterpreter(PyInterpreter *this);
std::vector<PyMethodDef> *__thiscall std::vector<PyMethodDef>::operator=(std::vector<PyMethodDef> *this, const std::vector<PyMethodDef> *_Right);
// PyMethodDef *__usercall std::_Copy_impl<PyMethodDef *,PyMethodDef *>@<eax>(PyMethodDef *_First@<ecx>, PyMethodDef *_Last@<edx>, PyMethodDef *_Dest); idb
std::wstring *__cdecl pyString(std::wstring *result, _object *o);
void pyError();
void __thiscall PyModule::PyModule(PyModule *this, const std::wstring *name);
void __thiscall PyModule::~PyModule(PyModule *this);
void __stdcall timer2_callback(unsigned int uTimerID, unsigned int uMsg, unsigned int param, unsigned int dw1, unsigned int dw2);
void __thiscall TimerProcess::TimerProcess(TimerProcess *this, int interval, std::function<void __cdecl(void)> callback);
void __thiscall TimerProcess::~TimerProcess(TimerProcess *this);
void __thiscall TimerProcess::step(TimerProcess *this);
void __thiscall std::_Func_class<void,>::operator()(std::_Func_class<void> *this);
void __thiscall std::condition_variable::~condition_variable(std::condition_variable *this);
void __thiscall ThreadPool::ThreadPool(ThreadPool *this, int inumThreads, std::function<void __cdecl(int)> initFun);
ThreadPool *__thiscall ThreadPool::`vector deleting destructor'(ThreadPool *this, unsigned int a2);
void __thiscall std::mutex::~mutex(std::mutex *this);
void __thiscall ThreadPool::~ThreadPool(ThreadPool *this);
void __thiscall ThreadPool::addTask(ThreadPool *this, Task *task);
void __thiscall WorkerThread::operator()(WorkerThread *this);
void __thiscall std::unique_lock<std::mutex>::~unique_lock<std::mutex>(std::unique_lock<std::mutex> *this);
void __thiscall std::vector<std::thread>::push_back(std::vector<std::thread> *this, std::thread *_Val);
void __thiscall std::deque<Task *>::push_back(std::deque<Task *> *this, Task **_Val);
void __thiscall std::deque<Task *>::~deque<Task *>(std::deque<Task *> *this);
void __thiscall std::vector<std::thread>::_Reserve(std::vector<std::thread> *this, unsigned int _Count);
void __thiscall std::vector<std::thread>::_Tidy(std::vector<std::thread> *this);
std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Task *> > > *__thiscall std::deque<Task *>::begin(std::deque<Task *> *this, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Task *> > > *result);
void __thiscall std::deque<Task *>::_Growmap(std::deque<Task *> *this, unsigned int _Count);
void __thiscall std::deque<Task *>::_Tidy(std::deque<Task *> *this);
void __thiscall std::vector<std::thread>::_Reallocate(std::vector<std::thread> *this, unsigned int _Count);
void __thiscall std::thread::thread(std::thread *this, WorkerThread *_Fx);
ThreadPool **__fastcall std::_Decay_copy<WorkerThread>(ThreadPool **a1, WorkerThread *_Fx);
void __thiscall std::_LaunchPad<std::_Bind<0,void,WorkerThread,>>::~_LaunchPad<std::_Bind<0,void,WorkerThread,>>(std::_LaunchPad<std::_Bind<0,void,WorkerThread> > *this);
unsigned int __thiscall std::_LaunchPad<std::_Bind<0,void,WorkerThread,>>::_Run(std::_LaunchPad<std::_Bind<0,void,WorkerThread> > *_Ln);
void __thiscall std::_LaunchPad<std::_Bind<0,void,WorkerThread,>>::_LaunchPad<std::_Bind<0,void,WorkerThread,>>(std::_LaunchPad<std::_Bind<0,void,WorkerThread> > *this, std::_Bind<0,void,WorkerThread> *_Tgt);
// std::thread *__usercall std::_Uninit_move<std::thread *,std::thread *,std::allocator<std::thread>,std::thread>@<eax>(std::thread *_First@<ecx>, std::thread *_Last@<edx>, std::thread *_Dest);
std::wstring *__thiscall CarAvatar::getCurrentSkin(CarAvatar *this, std::wstring *result);
void __thiscall Lap::~Lap(Lap *this);
int __thiscall Sim::getCarsCount(Sim *this);
std::wstring *__cdecl timeToString(std::wstring *result, int t, int dec);
std::wstring *__cdecl timeToDiffString(std::wstring *result, int t, int dec);
std::wstring *__cdecl timeToSectorString(std::wstring *result, int t, int dec);
void __thiscall ACStandardLeaderboard::ACStandardLeaderboard(ACStandardLeaderboard *this, Sim *aSim, int numberOfRows, bool aFocusOnPlayer);
void __thiscall CommandItem::CommandItem(CarAudioFMOD::{ctor}::__l51::<lambda_d8094ee7e2dbdd4a9a921b54d17e0eee> *this, CarAudioFMOD *_This);
ACStandardLeaderboard *__thiscall ACStandardLeaderboard::`scalar deleting destructor'(ACStandardLeaderboard *this, unsigned int a2);
void __thiscall std::map<CarAvatar *,Texture>::~map<CarAvatar *,Texture>(std::map<CarAvatar *,Texture> *this);
void __thiscall ACStandardLeaderboard::~ACStandardLeaderboard(ACStandardLeaderboard *this);
void __thiscall ACStandardLeaderboard::onVisibleChanged(ACStandardLeaderboard *this, BOOL newValue);
void __thiscall ACStandardLeaderboard::setLastSession(ACStandardLeaderboard *this);
void __thiscall ACStandardLeaderboard::render(ACStandardLeaderboard *this, float dt);
void __thiscall Session::~Session(Session *this);
ACStandardLeaderboard::RowInfo *__thiscall ACStandardLeaderboard::retrieveRowInfo(ACStandardLeaderboard *this, ACStandardLeaderboard::RowInfo *result, const std::vector<LeaderboardEntry> *lb, const int leaderboardIndex);
void __thiscall ACStandardLeaderboard::printLBCar(ACStandardLeaderboard *this, int rowIndex, const LeaderboardEntry *lb, int time, int gap, ksgui::ksRect wrect);
char __thiscall ACStandardLeaderboard::onMouseDown(ACStandardLeaderboard *this, const OnMouseDownEvent *message);

void __thiscall ksgui::FormRenderStats::FormRenderStats(ksgui::FormRenderStats *this, ksgui::GUI *igui, GameTime *igameTime);
void __thiscall ksgui::FormRenderStats::render(ksgui::FormRenderStats *this, float dt);
void __thiscall CarPhysicsForm::CarPhysicsForm(CarPhysicsForm *this, CarAvatar *icar);
// void __userpurge CarPhysicsForm::render(CarPhysicsForm *this@<ecx>, int a2@<edi>, float dt);
BOOL __thiscall std::unique_ptr<RaceEngineer>::operator bool(std::unique_ptr<RaceEngineer> *this);
std::wstring *__cdecl timeToWString(std::wstring *result, int t, bool quotes, bool forceSeconds);
// void __userpurge PlayerCurrentTime::PlayerCurrentTime(PlayerCurrentTime *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
PlayerCurrentTime *__thiscall PlayerCurrentTime::`vector deleting destructor'(PlayerCurrentTime *this, unsigned int a2);
void __thiscall PlayerCurrentTime::~PlayerCurrentTime(PlayerCurrentTime *this);
// void __userpurge PlayerCurrentTime::render(PlayerCurrentTime *this@<ecx>, int a2@<edi>, float dt);
std::wstring *__thiscall PlayerCurrentTime::getSectorSplitsString(PlayerCurrentTime *this, std::wstring *result, Lap *lap, Lap *bestLap, int bestLapSplit);
void __thiscall PlayerCurrentTime::renderBackground(PlayerCurrentTime *this);
// void __userpurge CarPedalsForm::CarPedalsForm(CarPedalsForm *this@<ecx>, unsigned int a2@<ebx>, CarAvatar *icar);
void __thiscall CarPedalsForm::render(CarPedalsForm *this, float dt);
// void __userpurge FormRunningTime::FormRunningTime(FormRunningTime *this@<ecx>, unsigned int a2@<ebx>, Sim *isim);
void __thiscall FormRunningTime::render(FormRunningTime *this, float dt);
TimeLimitedTest *__thiscall GameObject::getGameObject<TimeLimitedTest>(GameObject *this);
double __thiscall Speed::kmh(Speed *this);
InterpolatingSpline *__thiscall AISpline::getBaseSpline(AISpline *this);
InterpolatingSpline *__thiscall AISplineRecorder::getLeftSpline(AISplineRecorder *this);
void __thiscall FormAI::FormAI(FormAI *this, Sim *isim);

void __thiscall FormAI::render(FormAI *this, float dt);
void __thiscall FormAI::onBeginPitlaneClicked(FormAI *this, const ksgui::OnControlClicked *message);
void __thiscall FormAI::renderSplines(FormAI *this);
void __thiscall std::unique_ptr<Font>::~unique_ptr<Font>(std::unique_ptr<Font> *this);
void __thiscall std::ofstream::ofstream(std::ofstream *this, int a2);
void __thiscall std::ofstream::~ofstream<char,std::char_traits<char>>(std::ofstream *this);
char *__thiscall std::ofstream::`vector deleting destructor'(std::ofstream *this, unsigned int a2);
void __thiscall std::_Func_base<void,>::~_Func_base<void,>(std::_Func_base<void> *this);
std::_Func_impl<std::_Callable_obj<<lambda_a7077912a4fc28b29ba435389990c81a>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_93cf287dbbd0523058720d62547dec8b_,0>,std::allocator<std::_Func_class<void,>>,void,>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_a7077912a4fc28b29ba435389990c81a>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
void __thiscall std::_Func_base<void,ksgui::OnSpinnerValueChanged const &>::~_Func_base<void,ksgui::OnSpinnerValueChanged const &>(std::_Func_base<void,ksgui::OnSpinnerValueChanged const &> *this);
std::_Func_impl<std::_Callable_obj<<lambda_f15c06616ae14ad5acca2d6b7d54f0dd>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_30161f25a4bf4c58baa13fc3444faf5f_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_f15c06616ae14ad5acca2d6b7d54f0dd>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_e5802f3d00876f053c8cc91e8eef3c1e>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e5802f3d00876f053c8cc91e8eef3c1e_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_e5802f3d00876f053c8cc91e8eef3c1e>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_cb48ad9147d9ce8fc011e44c5655f084>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e4259459b8b90148ff700e9e5b5051f5_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_cb48ad9147d9ce8fc011e44c5655f084>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, unsigned int a2);
TrackAvatar *__thiscall GameObject::getGameObject<TrackAvatar>(GameObject *this);
std::vector<CarAvatar *> *__thiscall GameObject::getGameObjects<CarAvatar>(GameObject *this, std::vector<CarAvatar *> *result);

void __thiscall ACSuspension::ACSuspension(ACSuspension *this, CarAvatar *icar);

void __thiscall ACSuspension::~ACSuspension(ACSuspension *this);
// void __userpurge ACSuspension::render(ACSuspension *this@<ecx>, int a2@<esi>, float dt);
void __thiscall ACSuspension::renderWireframe(ACSuspension *this);
void __thiscall ACSuspension::renderCamber(ACSuspension *this, GLRenderer *gl, vec3f pos, int index);
void __thiscall ACSuspension::renderTyreTemp(ACSuspension *this, const vec3f *basePos, int index);
void __thiscall ACSuspension::drawBumpGraph(ACSuspension *this, GLRenderer *gl, const vec3f *basepos, std::vector<float> *data);
void __thiscall std::vector<float>::vector<float>(std::vector<float> *this, unsigned int _Count);
std::_Vector_iterator<std::_Vector_val<std::_Simple_types<TyreCompoundDef> > > *__thiscall std::vector<Mesh *>::end(std::vector<TyreCompoundDef> *this, std::_Vector_iterator<std::_Vector_val<std::_Simple_types<TyreCompoundDef> > > *result);
std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Node *> > > *__thiscall std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DigitalItem *>>>::operator++(std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Node *> > > *this);
BOOL __thiscall std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DigitalItem *>>>::operator!=(std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<TyreCompoundDef> > > *this, const std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<TyreCompoundDef> > > *_Right);
// void __usercall std::_For_each<float *,_lambda_bccb89b370b3b805e2b051ec9329db20_>(float *_First@<ecx>, float *_Last@<edx>, ACSuspension::drawBumpGraph::__l3::<lambda_bccb89b370b3b805e2b051ec9329db20> *_Func);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ccf398edd801b4dbe719b812bb0fca8e_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_ccf398edd801b4dbe719b812bb0fca8e>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ccf398edd801b4dbe719b812bb0fca8e_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ccf398edd801b4dbe719b812bb0fca8e>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, const OnNodeRenderEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ccf398edd801b4dbe719b812bb0fca8e_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ccf398edd801b4dbe719b812bb0fca8e>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9efbbb5595438b541c9fda0e3a65385b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_9efbbb5595438b541c9fda0e3a65385b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9efbbb5595438b541c9fda0e3a65385b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9efbbb5595438b541c9fda0e3a65385b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9efbbb5595438b541c9fda0e3a65385b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9efbbb5595438b541c9fda0e3a65385b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0945d1ee6f3715a8f8a96786b012476c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_0945d1ee6f3715a8f8a96786b012476c>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0945d1ee6f3715a8f8a96786b012476c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0945d1ee6f3715a8f8a96786b012476c>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0945d1ee6f3715a8f8a96786b012476c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0945d1ee6f3715a8f8a96786b012476c>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6a15bbff2823da7dfeebe61bd5b0f820_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_6a15bbff2823da7dfeebe61bd5b0f820>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6a15bbff2823da7dfeebe61bd5b0f820_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6a15bbff2823da7dfeebe61bd5b0f820>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6a15bbff2823da7dfeebe61bd5b0f820_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6a15bbff2823da7dfeebe61bd5b0f820>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall FormGameStats::FormGameStats(FormGameStats *this, Game *igame);
void __thiscall FormGameStats::render(FormGameStats *this, float dt);
Sim *__thiscall GameObject::getGameObject<Sim>(GameObject *this);
PhysicsAvatar *__thiscall GameObject::getGameObject<PhysicsAvatar>(GameObject *this);
double __thiscall Speed::toSystemDefault(Speed *this);
// void __userpurge FormGear::FormGear(FormGear *this@<ecx>, unsigned int a2@<ebx>, CarAvatar *acar);
FormGear *__thiscall FormGear::`scalar deleting destructor'(FormGear *this, unsigned int a2);
void __thiscall FormGear::~FormGear(FormGear *this);
void __thiscall FormGear::render(FormGear *this, float dt);
void __thiscall std::vector<bool>::~vector<bool>(std::vector<bool> *this);
std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > > *__thiscall std::vector<bool>::back(std::vector<bool> *this, std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > > *result);
void __thiscall std::vector<bool>::push_back(std::vector<bool> *this, const bool *_Val);
std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > > *__thiscall std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int>>>::operator=(std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > > *this, bool _Val);
std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *__thiscall std::vector<bool>::end(std::vector<bool> *this, std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *result);
std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *__thiscall std::vector<bool>::_Insert_n(std::vector<bool> *this, std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *result, std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > _Where, unsigned int _Count, const bool *_Val);
std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *__thiscall std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int>>>::operator+(std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *this, std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *result, int _Off);
int __thiscall std::vector<bool>::_Insert_x(std::vector<bool> *this, std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > _Where, unsigned int _Count);
std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *__thiscall std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int>>>::operator+=(std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *this, int _Off);
void __thiscall std::vector<unsigned int>::_Construct_n(std::vector<unsigned int> *this, unsigned int _Count, const unsigned int *_Pval);
void __thiscall std::vector<int>::resize(std::vector<int> *this, unsigned int _Newsize, const int *_Val);
PushToPassManager *__thiscall GameObject::getGameObject<PushToPassManager>(GameObject *this);
void __cdecl std::_Fill<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int>>>,bool>(std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > _First, std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > _Last, const bool *_Val);
std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *__cdecl std::_Copy_backward<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int>>>,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int>>>>(std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *result, std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > _First, std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > _Last, std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > _Dest);
void __thiscall ElectronicAidsForm::ElectronicAidsForm(ElectronicAidsForm *this, CarAvatar *acar);
// void __userpurge ElectronicAidsForm::render(ElectronicAidsForm *this@<ecx>, int a2@<edi>, int a3@<esi>, float dt);
// void __userpurge FormMGU::FormMGU(FormMGU *this@<ecx>, unsigned int a2@<ebx>, CarAvatar *aCar);
// void __userpurge FormMGU::render(FormMGU *this@<ecx>, void (__cdecl *a2)(void *)@<esi>, float dt);
void __thiscall std::pair<int,std::wstring>::~pair<int,std::wstring>(std::pair<int,std::wstring > *this);
// void __userpurge FormLogoAC::FormLogoAC(FormLogoAC *this@<ecx>, unsigned int a2@<ebx>, ksgui::GUI *a_gui);
void __thiscall FormWings::FormWings(FormWings *this, CarAvatar *a_car);
// void __userpurge FormWings::render(FormWings *this@<ecx>, int a2@<esi>, float dt);
void __thiscall lambda_688874ebe683a9e63fed80aceac55e50_::operator()(FormWings::render::__l14::<lambda_688874ebe683a9e63fed80aceac55e50> *this, WingState *s);
void __thiscall FormWings::onRenderNode(FormWings *this, const OnNodeRenderEvent *ev);
void __thiscall lambda_ad449b5959aa2ecefc91e9886e575a88_::operator()(FormWings::onRenderNode::__l12::<lambda_ad449b5959aa2ecefc91e9886e575a88> *this, WingData *d);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_658c70aa79bc230d452be7da80b18909_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_658c70aa79bc230d452be7da80b18909>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_658c70aa79bc230d452be7da80b18909_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_658c70aa79bc230d452be7da80b18909>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, const OnNodeRenderEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_658c70aa79bc230d452be7da80b18909_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_658c70aa79bc230d452be7da80b18909>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this);
void __thiscall TrackMap::TrackMap(TrackMap *this, ksgui::GUI *a_gui, Sim *a_sim, bool zoomed);
TrackMap *__thiscall TrackMap::`vector deleting destructor'(TrackMap *this, unsigned int a2);
// void __usercall TrackMap::initParameters(TrackMap *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall TrackMap::createMap(TrackMap *this);
// void __usercall TrackMap::loadMap(TrackMap *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall TrackMap::setSize(ComparativeTelemetry *this, float width, float height);
void __thiscall TrackMap::showMapOnScreen(TrackMap *this);
// void __userpurge TrackMap::render(TrackMap *this@<ecx>, __int64 a2@<esi:edi>, float dt);
void __thiscall TrackMap::showMapOnScreenZoom(TrackMap *this, vec3f carPosition, vec3f carDirection);
void __thiscall TrackMap::~TrackMap(TrackMap *this);
void __thiscall std::ofstream::close(std::ofstream *this);
void __thiscall std::vector<CarItemCmp>::_Reserve(std::vector<CarItemCmp> *this, unsigned int _Count);
void __thiscall std::vector<vec2f>::_Reallocate(std::vector<CarItemCmp> *this, unsigned int _Count);
std::ostream *__cdecl std::operator<<<std::char_traits<char>>(std::ostream *_Ostr, const char *_Val);
std::ostream *__cdecl std::endl<char,std::char_traits<char>>(std::ostream *_Ostr);
// CarItemCmp *__usercall std::_Uninit_move<CarItemCmp *,CarItemCmp *,std::allocator<CarItemCmp>,CarItemCmp>@<eax>(CarItemCmp *_First@<ecx>, CarItemCmp *_Last@<edx>, CarItemCmp *_Dest);
void __thiscall FormBallast::FormBallast(FormBallast *this, CarAvatar *aCar);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3479fde088a2586ab0371d2b7374ba88_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_3479fde088a2586ab0371d2b7374ba88>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3479fde088a2586ab0371d2b7374ba88_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3479fde088a2586ab0371d2b7374ba88>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3479fde088a2586ab0371d2b7374ba88_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3479fde088a2586ab0371d2b7374ba88>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
// __m128 __usercall DirectX::XMMatrixMultiply@<xmm0>(__m128 *a1@<ecx>, __m128 a2@<xmm0>);
// __m128 __usercall DirectX::XMMatrixInverse@<xmm0>(__m128 *pDeterminant@<ecx>, __m128 a2@<xmm0>, __m128 a3@<xmm1>, __m128 a4@<xmm2>, __m128 a5@<xmm3>);
void __cdecl mul(mat44f *result, const mat44f *matrix1, const mat44f *matrix2);
void __thiscall DrivableCameraDef::DrivableCameraDef(DrivableCameraDef *this);
// void __usercall CameraCarDefinition::CameraCarDefinition(CameraCarDefinition *this@<ecx>, __m128 a2@<xmm0>);
// void __userpurge FormCamera::FormCamera(FormCamera *this@<ecx>, unsigned int a2@<ebx>, Sim *a_sim, CameraForwardYebis *camera);
void __thiscall FormCamera::render(FormCamera *this, float dt);
void __thiscall FormCamera::selectCamera(FormCamera *this, CameraMode mode, int index);
void __thiscall FormCamera::setCamera(FormCamera *this);
void __thiscall FormCamera::decreaseExp(FormCamera *this);
void __thiscall FormCamera::increaseExp(FormCamera *this);
// void __usercall FormCamera::setExp(FormCamera *this@<ecx>, float a2@<xmm1>);
void __thiscall FormCamera::updateSens(FormCamera *this);
void __thiscall FormCamera::elev(FormCamera *this, int direction);
void __thiscall FormCamera::move(FormCamera *this, int direction);
void __thiscall FormCamera::strafe(FormCamera *this, int direction);
void __thiscall FormCamera::rotate(FormCamera *this, vec3f v, int direction);
void __thiscall FormCamera::savecameraF1(FormCamera *this);
void __thiscall FormCamera::savecameraF6(FormCamera *this);

void __thiscall ksgui::ListBoxRowData::ListBoxRowData(ksgui::ListBoxRowData *this, std::wstring text);
void __thiscall FormVolumes::FormVolumes(FormVolumes *this, Sim *aSim);
void __thiscall FormVolumes::refreshDrivers(FormVolumes *this);
// void __userpurge FormVolumes::setSpinner(FormVolumes *this@<ecx>, float a2@<xmm3>, ksgui::Spinner *obj, float *lasttop);
// void __userpurge FormVolumes::saveVolume(float _Val@<xmm1>, FormVolumes *this, const std::wstring key);
void __thiscall FormVolumes::render(FormVolumes *this, float dt);
void __thiscall FormVolumes::setSound(FormVolumes *this, __int16 camera, bool value, bool save);

// void __userpurge FormOpenVR::FormOpenVR(FormOpenVR *this@<ecx>, double a2@<st0>, Sim *aSim);

// void __userpurge RacePosition::RacePosition(RacePosition *this@<ecx>, unsigned int a2@<ebx>, Sim *sim);
void __thiscall RacePosition::render(RacePosition *this, float dt);
void __thiscall TripleScreenManager::TripleScreenManager(TripleScreenManager *this, Sim *sim);

void __thiscall TripleScreenManager::initGraphicalComponents(TripleScreenManager *this);
void __thiscall TripleScreenManager::~TripleScreenManager(TripleScreenManager *this);
void __thiscall TripleScreenManager::onSpinnerValueChanged(TripleScreenManager *this, const ksgui::OnSpinnerValueChanged *ev);
// void __userpurge TripleScreenManager::render(TripleScreenManager *this@<ecx>, int a2@<edi>, float dt);
void __thiscall TripleScreenManager::updateGraphicalInterfaceData(TripleScreenManager *this);
// void __usercall TripleScreenManager::drawDriverHead(TripleScreenManager *this@<ecx>, float a2@<xmm1>);
void __thiscall TripleScreenManager::drawVirtualDisplay(TripleScreenManager *this, VirtualDisplay *vd);
// void __userpurge TripleScreenManager::rotateLateralScreen(TripleScreenManager *this, VirtualDisplay *vd, int rotationVertex);
void __thiscall std::ofstream::ofstream(std::ofstream *this, const std::wstring *_Str, int _Mode, int _Prot, int a5);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_23e776f362589beac0a905822178c0c1_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_23e776f362589beac0a905822178c0c1>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e4259459b8b90148ff700e9e5b5051f5_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fc76229021f6c517e9c24007c8695db8>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_23e776f362589beac0a905822178c0c1_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_23e776f362589beac0a905822178c0c1>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e4259459b8b90148ff700e9e5b5051f5_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e4259459b8b90148ff700e9e5b5051f5>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e4259459b8b90148ff700e9e5b5051f5_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e4259459b8b90148ff700e9e5b5051f5>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fc76229021f6c517e9c24007c8695db8_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_fc76229021f6c517e9c24007c8695db8>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fc76229021f6c517e9c24007c8695db8_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fc76229021f6c517e9c24007c8695db8>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e64a5c5f931b39b099847573e8d90873_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e64a5c5f931b39b099847573e8d90873>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e64a5c5f931b39b099847573e8d90873_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e64a5c5f931b39b099847573e8d90873>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
// void __userpurge TelemetryApp::TelemetryApp(TelemetryApp *this@<ecx>, unsigned int a2@<ebx>, CarAvatar *car);
// void __userpurge TelemetryApp::render(TelemetryApp *this@<ecx>, int a2@<edi>, std::vector<unsigned int> *a3@<esi>, float dt);
// void __userpurge PerformanceMeterApp::PerformanceMeterApp(PerformanceMeterApp *this@<ecx>, unsigned int a2@<ebx>, CarAvatar *car);
// void __userpurge PerformanceMeterApp::render(PerformanceMeterApp *this@<ecx>, int a2@<edi>, float dt);
// void __userpurge NetMonitorForm::NetMonitorForm(NetMonitorForm *this@<ecx>, unsigned int a2@<ebx>, Sim *sim);
// void __userpurge NetMonitorForm::render(NetMonitorForm *this@<ecx>, void (__cdecl *a2)(void *)@<esi>, float dt);
ACClient *__thiscall GameObject::getGameObject<ACClient>(GameObject *this);
// void __userpurge perf::perf(perf *this@<ecx>, unsigned int a2@<xmm2>, std::wstring aName, eDriverPerformanceType aType);
// void __userpurge ACDriverPerformance::ACDriverPerformance(ACDriverPerformance *this@<ecx>, unsigned int a2@<ebx>, CarAvatar *aCar);

void __thiscall ACDriverPerformance::render(ACDriverPerformance *this, float dt);
// void __usercall ACDriverPerformance::updateData(ACDriverPerformance *this@<ecx>, float a2@<xmm1>);
void __thiscall ACDriverPerformance::renderOnVideo(ACDriverPerformance *this);
// ACDriverPerformance *__userpurge ACDriverPerformance::fromFloatToString@<eax>(float a1@<xmm2>, ACDriverPerformance *this);
char __thiscall ACDriverPerformance::saveDriverRecords(ACDriverPerformance *this);
// char __usercall ACDriverPerformance::loadDriverRecords@<al>(ACDriverPerformance *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall ACDriverPerformance::~ACDriverPerformance(ACDriverPerformance *this);
void __thiscall std::vector<perf>::push_back(std::vector<perf> *this, const perf *_Val);
void __thiscall std::vector<perf>::~vector<perf>(std::vector<perf> *this);
void __thiscall std::wofstream::wofstream(std::wofstream *this, int a2);
void __thiscall std::vector<perf>::_Destroy(std::vector<perf> *this, perf *_First, perf *_Last);
void __thiscall std::vector<perf>::_Reserve(std::vector<perf> *this, unsigned int _Count);
void __thiscall std::vector<perf>::_Reallocate(std::vector<perf> *this, unsigned int _Count);
std::wstring *__cdecl std::operator+<wchar_t>(std::wstring *result, const std::wstring *_Left, std::wstring *_Right);
BOOL __cdecl std::operator!=<wchar_t>(const std::wstring *_Left, const std::wstring *_Right);
std::wistream *__cdecl std::operator>><wchar_t>(std::wistream *_Istr, std::wstring *_Str);
void __thiscall perf::perf(perf *this, const perf *__that);
// perf *__usercall std::_Uninit_move<perf *,perf *,std::allocator<perf>,perf>@<eax>(perf *_First@<ecx>, perf *_Last@<edx>, perf *_Dest);
// void __userpurge ACHelp::ACHelp(ACHelp *this@<ecx>, unsigned int a2@<ebx>, ksgui::GUI *aGui);
void __thiscall ksgui::Form::getHeaderHeight(ksgui::Form *this);
// void __userpurge FormChat::ChatIntensities::ChatIntensities(FormChat::ChatIntensities *this@<ecx>, float a2@<xmm3>, float p, float a, float b);
void __thiscall FormChat::FormChat(FormChat *this, Sim *a_sim);

void __thiscall FormChat::ChatMessage::ChatMessage(FormChat::ChatMessage *this);
void __thiscall FormChat::ChatMessage::~ChatMessage(FormChat::ChatMessage *this);
void __thiscall FormChat::~FormChat(FormChat *this);
void __thiscall FormChat::render(FormChat *this, float dt);
void __thiscall FormChat::ChatMessage::ChatMessage(FormChat::ChatMessage *this, const FormChat::ChatMessage *__that);
void __thiscall FormChat::addMessage(FormChat *this, const FormChat::ChatMessage data, int *lines);
void __thiscall FormChat::onChatMessage(FormChat *this, const OnChatMessageEvent *message);
void __thiscall FormChat::onMouseMove(FormChat *this, const OnMouseMoveEvent *message);

// FormChat::ChatMessage *__usercall std::_Uninit_move<FormChat::ChatMessage *,FormChat::ChatMessage *,std::allocator<FormChat::ChatMessage>,FormChat::ChatMessage>@<eax>(FormChat::ChatMessage *_First@<ecx>, FormChat::ChatMessage *_Last@<edx>, FormChat::ChatMessage *_Dest);
KSTime *__cdecl ksTimeFromAngle(KSTime *result, float sunAngle);
GameObject *__thiscall GameObject::getGameObject(GameObject *this, std::wstring name);
// void __userpurge ACTimeFlow::ACTimeFlow(ACTimeFlow *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
ACTimeFlow *__thiscall ACTimeFlow::`vector deleting destructor'(ACTimeFlow *this, unsigned int a2);
// void __userpurge ACTimeFlow::render(ACTimeFlow *this@<ecx>, int a2@<esi>, float dt);
void __thiscall ACTimeFlow::~ACTimeFlow(ACTimeFlow *this);
std::_Func_impl<std::_Callable_obj<<lambda_98eac5797f8cad175fdb11dc42275aa5>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *__thiscall std::_Func_base<void,OnReplayStatusChanged const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_98eac5797f8cad175fdb11dc42275aa5>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_98eac5797f8cad175fdb11dc42275aa5_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_98eac5797f8cad175fdb11dc42275aa5>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_98eac5797f8cad175fdb11dc42275aa5_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_98eac5797f8cad175fdb11dc42275aa5>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_98eac5797f8cad175fdb11dc42275aa5_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_98eac5797f8cad175fdb11dc42275aa5>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7001a55ed7e68206b91fedb1b8917b81_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_7001a55ed7e68206b91fedb1b8917b81>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7001a55ed7e68206b91fedb1b8917b81_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_7001a55ed7e68206b91fedb1b8917b81>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall KeyboardControlsDebug::KeyboardControlsDebug(KeyboardControlsDebug *this, CarAvatar *aCar);
void __thiscall KeyboardControlsDebug::onSpinnerValueChanged(KeyboardControlsDebug *this, const ksgui::OnSpinnerValueChanged *ev);
// void __userpurge KeyboardControlsDebug::render(KeyboardControlsDebug *this@<ecx>, int a2@<edi>, float dt);
// void __userpurge KeyboardControlsDebug::printStringList(KeyboardControlsDebug *this@<ecx>, int a2@<xmm1>, int a3@<xmm2>, std::wstring name);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3988abd2b5764002050306796e1ce6fd_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_3988abd2b5764002050306796e1ce6fd>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_04c6a3f2d3c08b43de0a4d9149dae0ea_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_704b8563bcd33ea08723c70bdf81e25c>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3988abd2b5764002050306796e1ce6fd_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3988abd2b5764002050306796e1ce6fd>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_46f9e066a53870e8c46e3a386a6c5623_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_46f9e066a53870e8c46e3a386a6c5623>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_46f9e066a53870e8c46e3a386a6c5623_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_46f9e066a53870e8c46e3a386a6c5623>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_04c6a3f2d3c08b43de0a4d9149dae0ea_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_04c6a3f2d3c08b43de0a4d9149dae0ea>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_04c6a3f2d3c08b43de0a4d9149dae0ea_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_04c6a3f2d3c08b43de0a4d9149dae0ea>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_47bf9ed23480d86d564fc1b243f4fd71_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_47bf9ed23480d86d564fc1b243f4fd71>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_47bf9ed23480d86d564fc1b243f4fd71_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_47bf9ed23480d86d564fc1b243f4fd71>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_704b8563bcd33ea08723c70bdf81e25c_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_704b8563bcd33ea08723c70bdf81e25c>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_704b8563bcd33ea08723c70bdf81e25c_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_704b8563bcd33ea08723c70bdf81e25c>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall ACHideAll::ACHideAll(ACHideAll *this, Sim *aSim);
std::_Func_impl<std::_Callable_obj<<lambda_adbc95ba9dbbebff7a8f1dd866fed35c>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *__thiscall std::_Func_base<void,bool const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_adbc95ba9dbbebff7a8f1dd866fed35c>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f2652e9655ac4ac94ea406878adb968e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_f2652e9655ac4ac94ea406878adb968e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f2652e9655ac4ac94ea406878adb968e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f2652e9655ac4ac94ea406878adb968e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f2652e9655ac4ac94ea406878adb968e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f2652e9655ac4ac94ea406878adb968e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_83c168d685c22b66debe45fa0467ae4a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_83c168d685c22b66debe45fa0467ae4a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_83c168d685c22b66debe45fa0467ae4a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_83c168d685c22b66debe45fa0467ae4a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_83c168d685c22b66debe45fa0467ae4a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_83c168d685c22b66debe45fa0467ae4a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_adbc95ba9dbbebff7a8f1dd866fed35c_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_adbc95ba9dbbebff7a8f1dd866fed35c>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_adbc95ba9dbbebff7a8f1dd866fed35c_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_adbc95ba9dbbebff7a8f1dd866fed35c>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_adbc95ba9dbbebff7a8f1dd866fed35c_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_adbc95ba9dbbebff7a8f1dd866fed35c>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
// void __userpurge DriverEyesPositioner::DriverEyesPositioner(DriverEyesPositioner *this@<ecx>, unsigned int a2@<ebx>, CarAvatar *aCar);
void __thiscall lambda_b53615026d993601ceadff32f20ea2aa_::operator()(DriverEyesPositioner::{ctor}::__l23::<lambda_b53615026d993601ceadff32f20ea2aa> *this, const ksgui::OnControlClicked *message);
void __thiscall lambda_17b18095ccb9674f1652abfab99daa23_::operator()(DriverEyesPositioner::{ctor}::__l24::<lambda_17b18095ccb9674f1652abfab99daa23> *this, const ksgui::OnControlClicked *message);
void __thiscall lambda_33790941e6efa79c882cc807a739386f_::operator()(DriverEyesPositioner::{ctor}::__l25::<lambda_33790941e6efa79c882cc807a739386f> *this, const ksgui::OnControlClicked *message);
void __thiscall lambda_ae9ff785cc949acf215055d2bb97b522_::operator()(DriverEyesPositioner::{ctor}::__l29::<lambda_ae9ff785cc949acf215055d2bb97b522> *this, const ksgui::OnControlClicked *message);
void __thiscall lambda_d9aa85e9ef7eabc6ae791ef583e23a97_::operator()(DriverEyesPositioner::{ctor}::__l30::<lambda_d9aa85e9ef7eabc6ae791ef583e23a97> *this, const ksgui::OnControlClicked *message);
DriverEyesPositioner *__thiscall DriverEyesPositioner::`scalar deleting destructor'(DriverEyesPositioner *this, unsigned int a2);
void __thiscall DriverEyesPositioner::saveToDashINI(DriverEyesPositioner *this);
void __thiscall DriverEyesPositioner::saveToINI(DriverEyesPositioner *this);
void __thiscall DriverEyesPositioner::saveSettings(DriverEyesPositioner *this);
// void __userpurge DriverEyesPositioner::render(DriverEyesPositioner *this@<ecx>, int a2@<esi>, float dt);
void __thiscall DriverEyesPositioner::onRenderFinished(DriverEyesPositioner *this, const OnNodeRenderEvent *ev);
void __thiscall DriverEyesPositioner::~DriverEyesPositioner(DriverEyesPositioner *this);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, DriverEyesPositioner::{ctor}::__l19::<lambda_a7e28a60ea49c137682d9c8f30f9b8f2> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, DriverEyesPositioner::{ctor}::__l20::<lambda_dbb35f46a481099f6458cc9b74b8f965> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, DriverEyesPositioner::{ctor}::__l21::<lambda_9324bc2ed0d392755afe9f919de0f8ce> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, DriverEyesPositioner::{ctor}::__l22::<lambda_66ac6c49d101590063f7a8543e2b33ef> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, DriverEyesPositioner::{ctor}::__l23::<lambda_b53615026d993601ceadff32f20ea2aa> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, DriverEyesPositioner::{ctor}::__l24::<lambda_17b18095ccb9674f1652abfab99daa23> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, DriverEyesPositioner::{ctor}::__l25::<lambda_33790941e6efa79c882cc807a739386f> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, DriverEyesPositioner::{ctor}::__l29::<lambda_ae9ff785cc949acf215055d2bb97b522> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, DriverEyesPositioner::{ctor}::__l30::<lambda_d9aa85e9ef7eabc6ae791ef583e23a97> *_Func);
void __thiscall std::wstring::_Construct<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>(std::wstring *this, std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > > _First, std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > > _Last, std::forward_iterator_tag __formal);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e5802f3d00876f053c8cc91e8eef3c1e_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e5802f3d00876f053c8cc91e8eef3c1e>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e5802f3d00876f053c8cc91e8eef3c1e_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e5802f3d00876f053c8cc91e8eef3c1e>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, const OnNodeRenderEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e5802f3d00876f053c8cc91e8eef3c1e_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e5802f3d00876f053c8cc91e8eef3c1e>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_07349beeae4824298c40afa3804bcbb9_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_07349beeae4824298c40afa3804bcbb9>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_07349beeae4824298c40afa3804bcbb9_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_07349beeae4824298c40afa3804bcbb9>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_07349beeae4824298c40afa3804bcbb9_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_07349beeae4824298c40afa3804bcbb9>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ad855ed5de67caa43dfb73bd85b03bc_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_8ad855ed5de67caa43dfb73bd85b03bc>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ad855ed5de67caa43dfb73bd85b03bc_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8ad855ed5de67caa43dfb73bd85b03bc>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ad855ed5de67caa43dfb73bd85b03bc_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8ad855ed5de67caa43dfb73bd85b03bc>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9f52db2735766499c12c0ea0deb6f652_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_9f52db2735766499c12c0ea0deb6f652>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9f52db2735766499c12c0ea0deb6f652_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9f52db2735766499c12c0ea0deb6f652>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9f52db2735766499c12c0ea0deb6f652_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9f52db2735766499c12c0ea0deb6f652>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_af5ebad1dc4b8ca34de45101bbf71e69_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_af5ebad1dc4b8ca34de45101bbf71e69>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_af5ebad1dc4b8ca34de45101bbf71e69_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_af5ebad1dc4b8ca34de45101bbf71e69>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_af5ebad1dc4b8ca34de45101bbf71e69_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_af5ebad1dc4b8ca34de45101bbf71e69>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_82d0ff800d36e7527155b8df918bf7c3_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_82d0ff800d36e7527155b8df918bf7c3>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_82d0ff800d36e7527155b8df918bf7c3_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_82d0ff800d36e7527155b8df918bf7c3>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_82d0ff800d36e7527155b8df918bf7c3_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_82d0ff800d36e7527155b8df918bf7c3>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bb6f84c8e4525073ad102766ac6d261b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_bb6f84c8e4525073ad102766ac6d261b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bb6f84c8e4525073ad102766ac6d261b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_bb6f84c8e4525073ad102766ac6d261b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_bb6f84c8e4525073ad102766ac6d261b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_bb6f84c8e4525073ad102766ac6d261b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a7e28a60ea49c137682d9c8f30f9b8f2_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_a7e28a60ea49c137682d9c8f30f9b8f2>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a7e28a60ea49c137682d9c8f30f9b8f2_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a7e28a60ea49c137682d9c8f30f9b8f2>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a7e28a60ea49c137682d9c8f30f9b8f2_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a7e28a60ea49c137682d9c8f30f9b8f2>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_dbb35f46a481099f6458cc9b74b8f965_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_dbb35f46a481099f6458cc9b74b8f965>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_dbb35f46a481099f6458cc9b74b8f965_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_dbb35f46a481099f6458cc9b74b8f965>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_dbb35f46a481099f6458cc9b74b8f965_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_dbb35f46a481099f6458cc9b74b8f965>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9324bc2ed0d392755afe9f919de0f8ce_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_9324bc2ed0d392755afe9f919de0f8ce>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9324bc2ed0d392755afe9f919de0f8ce_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9324bc2ed0d392755afe9f919de0f8ce>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9324bc2ed0d392755afe9f919de0f8ce_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9324bc2ed0d392755afe9f919de0f8ce>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_66ac6c49d101590063f7a8543e2b33ef_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_66ac6c49d101590063f7a8543e2b33ef>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_66ac6c49d101590063f7a8543e2b33ef_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_66ac6c49d101590063f7a8543e2b33ef>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_66ac6c49d101590063f7a8543e2b33ef_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_66ac6c49d101590063f7a8543e2b33ef>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b53615026d993601ceadff32f20ea2aa_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_b53615026d993601ceadff32f20ea2aa>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b53615026d993601ceadff32f20ea2aa_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b53615026d993601ceadff32f20ea2aa>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b53615026d993601ceadff32f20ea2aa_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b53615026d993601ceadff32f20ea2aa>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_17b18095ccb9674f1652abfab99daa23_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_17b18095ccb9674f1652abfab99daa23>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_17b18095ccb9674f1652abfab99daa23_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_17b18095ccb9674f1652abfab99daa23>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_17b18095ccb9674f1652abfab99daa23_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_17b18095ccb9674f1652abfab99daa23>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_33790941e6efa79c882cc807a739386f_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_33790941e6efa79c882cc807a739386f>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_33790941e6efa79c882cc807a739386f_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_33790941e6efa79c882cc807a739386f>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_33790941e6efa79c882cc807a739386f_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_33790941e6efa79c882cc807a739386f>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ae9ff785cc949acf215055d2bb97b522_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_ae9ff785cc949acf215055d2bb97b522>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ae9ff785cc949acf215055d2bb97b522_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ae9ff785cc949acf215055d2bb97b522>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ae9ff785cc949acf215055d2bb97b522_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ae9ff785cc949acf215055d2bb97b522>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d9aa85e9ef7eabc6ae791ef583e23a97_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d9aa85e9ef7eabc6ae791ef583e23a97>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d9aa85e9ef7eabc6ae791ef583e23a97_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d9aa85e9ef7eabc6ae791ef583e23a97>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d9aa85e9ef7eabc6ae791ef583e23a97_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d9aa85e9ef7eabc6ae791ef583e23a97>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
// void __userpurge FFBForm::FFBForm(FFBForm *this@<ecx>, unsigned int a2@<ebx>, CarAvatar *aCar);
void __thiscall lambda_7fdde5224257478b9f42537cd9101c59_::operator()(FFBForm::{ctor}::__l21::<lambda_7fdde5224257478b9f42537cd9101c59> *this, const ksgui::OnControlClicked *ev);
void __thiscall lambda_5ce3c9a008ef626a8ac295554bddaa75_::operator()(FFBForm::{ctor}::__l26::<lambda_5ce3c9a008ef626a8ac295554bddaa75> *this, const OnLapCompletedEvent *ev);
void __thiscall lambda_308aaf104fba68aa0bf5f8b69dfaf8be_::operator()(FFBForm::{ctor}::__l36::<lambda_308aaf104fba68aa0bf5f8b69dfaf8be> *this, const ksgui::OnSpinnerValueChanged *ev);
void __thiscall lambda_185e42ccf2dd3b0a13185cb8ee5ec2b7_::operator()(FFBForm::{ctor}::__l41::<lambda_185e42ccf2dd3b0a13185cb8ee5ec2b7> *this, const ksgui::OnSpinnerValueChanged *ev);
void __thiscall lambda_1595c1b2612b51953ab806a0bf2fcfef_::operator()(FFBForm::{ctor}::__l46::<lambda_1595c1b2612b51953ab806a0bf2fcfef> *this, const ksgui::OnSpinnerValueChanged *ev);
void __thiscall lambda_0e8c66a4b0ccd493a3b9ef491b78a026_::operator()(FFBForm::{ctor}::__l51::<lambda_0e8c66a4b0ccd493a3b9ef491b78a026> *this, const ksgui::OnSpinnerValueChanged *ev);
void __thiscall lambda_753bb7bea2d1fa579acc626be2eae045_::operator()(FFBForm::{ctor}::__l55::<lambda_753bb7bea2d1fa579acc626be2eae045> *this, const ksgui::OnControlClicked *ev);
FFBForm *__thiscall FFBForm::`vector deleting destructor'(FFBForm *this, unsigned int a2);
void __thiscall FFBForm::saveFFB(FFBForm *this);
void __thiscall FFBForm::render(FFBForm *this, float dt);
void __thiscall FFBForm::shutdown(FFBForm *this);
void __thiscall FFBForm::~FFBForm(FFBForm *this);
std::_Func_impl<std::_Callable_obj<<lambda_c9b91ae19c4ec20e9e1041d264b58c4a>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5ce3c9a008ef626a8ac295554bddaa75_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_c9b91ae19c4ec20e9e1041d264b58c4a>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, unsigned int a2);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, FFBForm::{ctor}::__l55::<lambda_753bb7bea2d1fa579acc626be2eae045> *_Func);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d2df1809daeed8a92c8365fcf118b116_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_d2df1809daeed8a92c8365fcf118b116>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d2df1809daeed8a92c8365fcf118b116_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d2df1809daeed8a92c8365fcf118b116>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d2df1809daeed8a92c8365fcf118b116_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d2df1809daeed8a92c8365fcf118b116>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d91802a48d0e7f53b67b620818c2ad43_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d91802a48d0e7f53b67b620818c2ad43>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d91802a48d0e7f53b67b620818c2ad43_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d91802a48d0e7f53b67b620818c2ad43>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d91802a48d0e7f53b67b620818c2ad43_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d91802a48d0e7f53b67b620818c2ad43>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7fdde5224257478b9f42537cd9101c59_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_7fdde5224257478b9f42537cd9101c59>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7fdde5224257478b9f42537cd9101c59_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_7fdde5224257478b9f42537cd9101c59>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7fdde5224257478b9f42537cd9101c59_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_7fdde5224257478b9f42537cd9101c59>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5cdc6dbe0ccd312e9dfa5d835cf47ed3_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_5cdc6dbe0ccd312e9dfa5d835cf47ed3>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5cdc6dbe0ccd312e9dfa5d835cf47ed3_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5cdc6dbe0ccd312e9dfa5d835cf47ed3>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5cdc6dbe0ccd312e9dfa5d835cf47ed3_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5cdc6dbe0ccd312e9dfa5d835cf47ed3>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5ce3c9a008ef626a8ac295554bddaa75_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_5ce3c9a008ef626a8ac295554bddaa75>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5ce3c9a008ef626a8ac295554bddaa75_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5ce3c9a008ef626a8ac295554bddaa75>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5ce3c9a008ef626a8ac295554bddaa75_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5ce3c9a008ef626a8ac295554bddaa75>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_308aaf104fba68aa0bf5f8b69dfaf8be_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_308aaf104fba68aa0bf5f8b69dfaf8be>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_308aaf104fba68aa0bf5f8b69dfaf8be_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_308aaf104fba68aa0bf5f8b69dfaf8be>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_308aaf104fba68aa0bf5f8b69dfaf8be_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_308aaf104fba68aa0bf5f8b69dfaf8be>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_185e42ccf2dd3b0a13185cb8ee5ec2b7_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_185e42ccf2dd3b0a13185cb8ee5ec2b7>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_185e42ccf2dd3b0a13185cb8ee5ec2b7_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_185e42ccf2dd3b0a13185cb8ee5ec2b7>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_185e42ccf2dd3b0a13185cb8ee5ec2b7_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_185e42ccf2dd3b0a13185cb8ee5ec2b7>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1595c1b2612b51953ab806a0bf2fcfef_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1595c1b2612b51953ab806a0bf2fcfef>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1595c1b2612b51953ab806a0bf2fcfef_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1595c1b2612b51953ab806a0bf2fcfef>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1595c1b2612b51953ab806a0bf2fcfef_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1595c1b2612b51953ab806a0bf2fcfef>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0e8c66a4b0ccd493a3b9ef491b78a026_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Func_impl<std::_Callable_obj<_lambda_0e8c66a4b0ccd493a3b9ef491b78a026_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>(std::_Func_impl<std::_Callable_obj<<lambda_0e8c66a4b0ccd493a3b9ef491b78a026>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, FFBForm::{ctor}::__l51::<lambda_0e8c66a4b0ccd493a3b9ef491b78a026> *_Val, const std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0e8c66a4b0ccd493a3b9ef491b78a026>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> > *_Ax);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0e8c66a4b0ccd493a3b9ef491b78a026_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_0e8c66a4b0ccd493a3b9ef491b78a026>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0e8c66a4b0ccd493a3b9ef491b78a026_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0e8c66a4b0ccd493a3b9ef491b78a026>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0e8c66a4b0ccd493a3b9ef491b78a026_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0e8c66a4b0ccd493a3b9ef491b78a026>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_753bb7bea2d1fa579acc626be2eae045_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_753bb7bea2d1fa579acc626be2eae045>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_753bb7bea2d1fa579acc626be2eae045_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_753bb7bea2d1fa579acc626be2eae045>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_753bb7bea2d1fa579acc626be2eae045_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_753bb7bea2d1fa579acc626be2eae045>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_93cf287dbbd0523058720d62547dec8b_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_93cf287dbbd0523058720d62547dec8b>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_93cf287dbbd0523058720d62547dec8b_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_93cf287dbbd0523058720d62547dec8b>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_93cf287dbbd0523058720d62547dec8b_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_93cf287dbbd0523058720d62547dec8b>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3b85c2c638db5255e58d1303ff39c564_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_3b85c2c638db5255e58d1303ff39c564>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3b85c2c638db5255e58d1303ff39c564_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3b85c2c638db5255e58d1303ff39c564>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3b85c2c638db5255e58d1303ff39c564_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3b85c2c638db5255e58d1303ff39c564>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0312ebdb6e1c3cd969cc0385482ba73d_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_0312ebdb6e1c3cd969cc0385482ba73d>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0312ebdb6e1c3cd969cc0385482ba73d_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0312ebdb6e1c3cd969cc0385482ba73d>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0312ebdb6e1c3cd969cc0385482ba73d_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0312ebdb6e1c3cd969cc0385482ba73d>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a7077912a4fc28b29ba435389990c81a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_a7077912a4fc28b29ba435389990c81a>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a7077912a4fc28b29ba435389990c81a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a7077912a4fc28b29ba435389990c81a>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a7077912a4fc28b29ba435389990c81a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a7077912a4fc28b29ba435389990c81a>,0>,std::allocator<std::_Func_class<void> >,void> *this);
char __thiscall std::_Test_callable<_lambda_0e8c66a4b0ccd493a3b9ef491b78a026_>(FSWinCmdWheelConfig *this);
// void __userpurge SetupDebug::SetupDebug(SetupDebug *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
// void __userpurge SetupDebug::render(SetupDebug *this@<ecx>, int a2@<edi>, float dt);
// void __userpurge SetupDebug::printStringList(SetupDebug *this@<ecx>, int a2@<xmm1>, int a3@<xmm2>, std::wstring name);
std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Wing> > > *__thiscall std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Wing>>>::operator++(std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Wing> > > *this);
void __thiscall TyreWearingDebug::TyreWearingDebug(TyreWearingDebug *this, Sim *aSim);
// void __userpurge TyreWearingDebug::render(TyreWearingDebug *this@<ecx>, int a2@<edi>, float dt);
void __thiscall ACDCarEngineer::ACDCarEngineer(ACDCarEngineer *this, Sim *asim);
// void __userpurge ACDCarEngineer::render(ACDCarEngineer *this@<ecx>, int a2@<esi>, float deltaT);
// void __userpurge GPUProfilerApp::GPUProfilerApp(GPUProfilerApp *this@<ecx>, unsigned int a2@<ebx>, GraphicsManager *graphics, ksgui::GUI *igui);
// void __userpurge GPUProfilerApp::render(GPUProfilerApp *this@<ecx>, int a2@<edi>, int a3@<esi>, float dt);
void __thiscall std::vector<QueryData>::~vector<QueryData>(std::vector<QueryData> *this);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<QueryData>>>(QueryData *_First, QueryData *_Last);
void __thiscall std::_Wrap_alloc<std::allocator<QueryData>>::destroy<QueryData>(std::_Wrap_alloc<std::allocator<QueryData> > *this, QueryData *_Ptr);
void __thiscall QueryData::~QueryData(QueryData *this);
// void __userpurge ACEssentials::ACEssentials(ACEssentials *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
ACEssentials *__thiscall ACEssentials::`scalar deleting destructor'(ACEssentials *this, unsigned int a2);
// void __userpurge ACEssentials::render(ACEssentials *this@<ecx>, int a2@<edi>, float dt);
void __thiscall FormDriverModel::FormDriverModel(FormDriverModel *this, CarAvatar *aCar);
void __thiscall lambda_d585b647a5665d78a2e60f3ee5d46edd_::_lambda_d585b647a5665d78a2e60f3ee5d46edd_(FormDriverModel::{ctor}::__l43::<lambda_d585b647a5665d78a2e60f3ee5d46edd> *this, const std::wstring *__filename, FormDriverModel *_This);
void __thiscall lambda_d585b647a5665d78a2e60f3ee5d46edd_::operator()(FormDriverModel::{ctor}::__l43::<lambda_d585b647a5665d78a2e60f3ee5d46edd> *this, const ksgui::OnControlClicked *ev);
void __thiscall FormDriverModel::updateForces(FormDriverModel *this);
void __thiscall FormDriverModel::render(FormDriverModel *this, float dt);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, FormDriverModel::{ctor}::__l43::<lambda_d585b647a5665d78a2e60f3ee5d46edd> *_Func);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4d8035fa4009959b4cdd71326fc7fa0b_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_4d8035fa4009959b4cdd71326fc7fa0b>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4d8035fa4009959b4cdd71326fc7fa0b_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fe5a91515c9953887c1460f0044c9dca>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4d8035fa4009959b4cdd71326fc7fa0b_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4d8035fa4009959b4cdd71326fc7fa0b>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4c92995575c5794bd396a7a9e00c1789_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_4c92995575c5794bd396a7a9e00c1789>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4c92995575c5794bd396a7a9e00c1789_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4c92995575c5794bd396a7a9e00c1789>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_47d07b2d836dc5977966343d84141a44_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_47d07b2d836dc5977966343d84141a44>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_47d07b2d836dc5977966343d84141a44_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_47d07b2d836dc5977966343d84141a44>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe5a91515c9953887c1460f0044c9dca_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_fe5a91515c9953887c1460f0044c9dca>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe5a91515c9953887c1460f0044c9dca_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fe5a91515c9953887c1460f0044c9dca>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_86b1dcff24ed3ac8cd41b2c1af768aef_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_86b1dcff24ed3ac8cd41b2c1af768aef>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_86b1dcff24ed3ac8cd41b2c1af768aef_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_86b1dcff24ed3ac8cd41b2c1af768aef>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_86b1dcff24ed3ac8cd41b2c1af768aef_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_86b1dcff24ed3ac8cd41b2c1af768aef>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6efc1d0bf9b940ce381d15e5d54a45e0_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_6efc1d0bf9b940ce381d15e5d54a45e0>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6efc1d0bf9b940ce381d15e5d54a45e0_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6efc1d0bf9b940ce381d15e5d54a45e0>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6efc1d0bf9b940ce381d15e5d54a45e0_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6efc1d0bf9b940ce381d15e5d54a45e0>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c3b871161022629a3ea893f648b1ef9e_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_c3b871161022629a3ea893f648b1ef9e>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c3b871161022629a3ea893f648b1ef9e_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c3b871161022629a3ea893f648b1ef9e>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c3b871161022629a3ea893f648b1ef9e_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c3b871161022629a3ea893f648b1ef9e>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_58a5d9153cd1f5a891a57050d4d01fec_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_58a5d9153cd1f5a891a57050d4d01fec>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_58a5d9153cd1f5a891a57050d4d01fec_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_58a5d9153cd1f5a891a57050d4d01fec>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_58a5d9153cd1f5a891a57050d4d01fec_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_58a5d9153cd1f5a891a57050d4d01fec>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_81144551637da43cbdd0a64c1fd66994_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_81144551637da43cbdd0a64c1fd66994>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_81144551637da43cbdd0a64c1fd66994_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_81144551637da43cbdd0a64c1fd66994>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_81144551637da43cbdd0a64c1fd66994_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_81144551637da43cbdd0a64c1fd66994>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d585b647a5665d78a2e60f3ee5d46edd_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Func_impl<std::_Callable_obj<_lambda_d585b647a5665d78a2e60f3ee5d46edd_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>(std::_Func_impl<std::_Callable_obj<<lambda_d585b647a5665d78a2e60f3ee5d46edd>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, FormDriverModel::{ctor}::__l43::<lambda_d585b647a5665d78a2e60f3ee5d46edd> *_Val, const std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d585b647a5665d78a2e60f3ee5d46edd>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> > *_Ax);
std::_Func_base<void,ksgui::OnControlClicked const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d585b647a5665d78a2e60f3ee5d46edd_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_d585b647a5665d78a2e60f3ee5d46edd>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d585b647a5665d78a2e60f3ee5d46edd_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d585b647a5665d78a2e60f3ee5d46edd>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d585b647a5665d78a2e60f3ee5d46edd_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d585b647a5665d78a2e60f3ee5d46edd>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
std::_Func_impl<std::_Callable_obj<<lambda_d585b647a5665d78a2e60f3ee5d46edd>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d585b647a5665d78a2e60f3ee5d46edd_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_d585b647a5665d78a2e60f3ee5d46edd>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, unsigned int a2);
void __thiscall PhotoMode::PhotoMode(PhotoMode *this, Sim *aSim);
void __thiscall lambda_d95bf0dd7f50592fc1cd23cfa4fcdc46_::operator()(PhotoMode::{ctor}::__l11::<lambda_d95bf0dd7f50592fc1cd23cfa4fcdc46> *this, const ksgui::OnControlClicked *message);
PhotoMode *__thiscall PhotoMode::`scalar deleting destructor'(PhotoMode *this, unsigned int a2);
void __thiscall PhotoMode::onMouseWheelMovedEvent(PhotoMode *this, const OnMouseWheelMovedEvent *message);
void __thiscall PhotoMode::render(PhotoMode *this, float dt);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, PhotoMode::{ctor}::__l20::<lambda_b77ccd4e3e9508a9cd389ca17e0af2d5> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, PhotoMode::{ctor}::__l21::<lambda_224aac95dd10d440658a5a5597d5a682> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, PhotoMode::{ctor}::__l22::<lambda_58f2cfb783c46db37b5e71f4833d033e> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, PhotoMode::{ctor}::__l23::<lambda_17c8a280ea512bb44dc36c1d857399b0> *_Func);
SunAnimator *__thiscall GameObject::getGameObject<SunAnimator>(GameObject *this);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, PhotoMode::{ctor}::__l24::<lambda_38281e3cd09ddb6094da750f8bc62b9a> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, PhotoMode::{ctor}::__l25::<lambda_59900e1a24bc294cc201d779764b60ee> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, PhotoMode::{ctor}::__l26::<lambda_3a149be7f1eca55709e851c5bfe061b2> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, PhotoMode::{ctor}::__l27::<lambda_fae0a4f4dd717169c690cc86b0fb2f34> *_Func);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d95bf0dd7f50592fc1cd23cfa4fcdc46_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d95bf0dd7f50592fc1cd23cfa4fcdc46>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d95bf0dd7f50592fc1cd23cfa4fcdc46_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d95bf0dd7f50592fc1cd23cfa4fcdc46>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d95bf0dd7f50592fc1cd23cfa4fcdc46_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d95bf0dd7f50592fc1cd23cfa4fcdc46>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b153d7ac7522b694d7363c1d40dd8371_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_b153d7ac7522b694d7363c1d40dd8371>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b153d7ac7522b694d7363c1d40dd8371_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b153d7ac7522b694d7363c1d40dd8371>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b153d7ac7522b694d7363c1d40dd8371_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b153d7ac7522b694d7363c1d40dd8371>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ad77994dfc8a6f57307d540f8e68a3ef_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_ad77994dfc8a6f57307d540f8e68a3ef>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ad77994dfc8a6f57307d540f8e68a3ef_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ad77994dfc8a6f57307d540f8e68a3ef>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ad77994dfc8a6f57307d540f8e68a3ef_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ad77994dfc8a6f57307d540f8e68a3ef>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_dfebd4b51ab9a56e80442c11d8b8cbe2_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_dfebd4b51ab9a56e80442c11d8b8cbe2>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_dfebd4b51ab9a56e80442c11d8b8cbe2_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_dfebd4b51ab9a56e80442c11d8b8cbe2>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_dfebd4b51ab9a56e80442c11d8b8cbe2_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_dfebd4b51ab9a56e80442c11d8b8cbe2>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9391e0b978300af3f794bece46ddc832_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_9391e0b978300af3f794bece46ddc832>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9391e0b978300af3f794bece46ddc832_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9391e0b978300af3f794bece46ddc832>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9391e0b978300af3f794bece46ddc832_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9391e0b978300af3f794bece46ddc832>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3f6c45a970da4332f4e69b3f7d943ec7_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_3f6c45a970da4332f4e69b3f7d943ec7>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3f6c45a970da4332f4e69b3f7d943ec7_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3f6c45a970da4332f4e69b3f7d943ec7>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3f6c45a970da4332f4e69b3f7d943ec7_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3f6c45a970da4332f4e69b3f7d943ec7>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_83b33431ecd54d2189d665f1211daa3e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_83b33431ecd54d2189d665f1211daa3e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_83b33431ecd54d2189d665f1211daa3e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_83b33431ecd54d2189d665f1211daa3e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_83b33431ecd54d2189d665f1211daa3e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_83b33431ecd54d2189d665f1211daa3e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_41cf28f9ab5794b669dc79d6761a3dac_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_41cf28f9ab5794b669dc79d6761a3dac>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_41cf28f9ab5794b669dc79d6761a3dac_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_41cf28f9ab5794b669dc79d6761a3dac>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_41cf28f9ab5794b669dc79d6761a3dac_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_41cf28f9ab5794b669dc79d6761a3dac>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b77ccd4e3e9508a9cd389ca17e0af2d5_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_b77ccd4e3e9508a9cd389ca17e0af2d5>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b77ccd4e3e9508a9cd389ca17e0af2d5_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b77ccd4e3e9508a9cd389ca17e0af2d5>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b77ccd4e3e9508a9cd389ca17e0af2d5_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b77ccd4e3e9508a9cd389ca17e0af2d5>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_224aac95dd10d440658a5a5597d5a682_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_224aac95dd10d440658a5a5597d5a682>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_224aac95dd10d440658a5a5597d5a682_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_224aac95dd10d440658a5a5597d5a682>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_224aac95dd10d440658a5a5597d5a682_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_224aac95dd10d440658a5a5597d5a682>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_58f2cfb783c46db37b5e71f4833d033e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_58f2cfb783c46db37b5e71f4833d033e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_58f2cfb783c46db37b5e71f4833d033e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_58f2cfb783c46db37b5e71f4833d033e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, int a2@<esi>, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_58f2cfb783c46db37b5e71f4833d033e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_58f2cfb783c46db37b5e71f4833d033e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_17c8a280ea512bb44dc36c1d857399b0_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_17c8a280ea512bb44dc36c1d857399b0>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_17c8a280ea512bb44dc36c1d857399b0_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_17c8a280ea512bb44dc36c1d857399b0>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, int a2@<esi>, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_17c8a280ea512bb44dc36c1d857399b0_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_17c8a280ea512bb44dc36c1d857399b0>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_38281e3cd09ddb6094da750f8bc62b9a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_38281e3cd09ddb6094da750f8bc62b9a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_38281e3cd09ddb6094da750f8bc62b9a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_38281e3cd09ddb6094da750f8bc62b9a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, __m128 a2@<xmm4>, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_38281e3cd09ddb6094da750f8bc62b9a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_38281e3cd09ddb6094da750f8bc62b9a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_59900e1a24bc294cc201d779764b60ee_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_59900e1a24bc294cc201d779764b60ee>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_59900e1a24bc294cc201d779764b60ee_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_59900e1a24bc294cc201d779764b60ee>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, __m128 a2@<xmm4>, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_59900e1a24bc294cc201d779764b60ee_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_59900e1a24bc294cc201d779764b60ee>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3a149be7f1eca55709e851c5bfe061b2_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_3a149be7f1eca55709e851c5bfe061b2>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_3a149be7f1eca55709e851c5bfe061b2_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3a149be7f1eca55709e851c5bfe061b2>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, __m128 a2@<xmm4>, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3a149be7f1eca55709e851c5bfe061b2_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3a149be7f1eca55709e851c5bfe061b2>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fae0a4f4dd717169c690cc86b0fb2f34_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_fae0a4f4dd717169c690cc86b0fb2f34>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_fae0a4f4dd717169c690cc86b0fb2f34_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fae0a4f4dd717169c690cc86b0fb2f34>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, __m128 a2@<xmm4>, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fae0a4f4dd717169c690cc86b0fb2f34_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fae0a4f4dd717169c690cc86b0fb2f34>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
// void __userpurge FriendsLeaderboardDisplayer::FriendsLeaderboardDisplayer(FriendsLeaderboardDisplayer *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
void __thiscall lambda_8d056ed3cbf33029f77a1aded06f61a9_::operator()(FriendsLeaderboardDisplayer::{ctor}::__l10::<lambda_8d056ed3cbf33029f77a1aded06f61a9> *this, const std::vector<SteamLeaderboardEntry> *leaderboard);
FriendsLeaderboardDisplayer *__thiscall FriendsLeaderboardDisplayer::`scalar deleting destructor'(FriendsLeaderboardDisplayer *this, unsigned int a2);
void __thiscall FriendsLeaderboardDisplayer::~FriendsLeaderboardDisplayer(FriendsLeaderboardDisplayer *this);
// void __userpurge FriendsLeaderboardDisplayer::render(FriendsLeaderboardDisplayer *this@<ecx>, int a2@<edi>, int a3@<esi>, float dt);
void __thiscall Event<std::vector<SteamLeaderboardEntry>>::addHandler(Event<std::vector<SteamLeaderboardEntry> > *this, std::function<void __cdecl(std::vector<SteamLeaderboardEntry> const &)> h, void *owner);
void __thiscall std::vector<FriendsLeaderboardDisplayer::FriendsLeaderboardElement>::push_back(std::vector<FriendsLeaderboardDisplayer::FriendsLeaderboardElement> *this, FriendsLeaderboardDisplayer::FriendsLeaderboardElement *_Val);
void __thiscall std::vector<FriendsLeaderboardDisplayer::FriendsLeaderboardElement>::_Reserve(std::vector<FriendsLeaderboardDisplayer::FriendsLeaderboardElement> *this, unsigned int _Count);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (std::vector<SteamLeaderboardEntry> const &)>>>::_Reserve(std::vector<std::pair<void *,std::function<void __cdecl(std::vector<SteamLeaderboardEntry> const &)> >> *this, unsigned int _Count);
void __thiscall std::vector<FriendsLeaderboardDisplayer::FriendsLeaderboardElement>::_Reallocate(std::vector<FriendsLeaderboardDisplayer::FriendsLeaderboardElement> *this, unsigned int _Count);
std::_Func_impl<std::_Callable_obj<<lambda_8d056ed3cbf33029f77a1aded06f61a9>,0>,std::allocator<std::_Func_class<void,std::vector<SteamLeaderboardEntry> const &> >,void,std::vector<SteamLeaderboardEntry> const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8d056ed3cbf33029f77a1aded06f61a9_,0>,std::allocator<std::_Func_class<void,std::vector<SteamLeaderboardEntry> const &>>,void,std::vector<SteamLeaderboardEntry> const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_8d056ed3cbf33029f77a1aded06f61a9>,0>,std::allocator<std::_Func_class<void,std::vector<SteamLeaderboardEntry> const &> >,void,std::vector<SteamLeaderboardEntry> const &> *this, unsigned int a2);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (std::vector<SteamLeaderboardEntry> const &)>>>::_Reallocate(std::vector<std::pair<void *,std::function<void __cdecl(std::vector<SteamLeaderboardEntry> const &)> >> *this, unsigned int _Count);
SteamInterface *__thiscall GameObject::getGameObject<SteamInterface>(GameObject *this);
GameMode *__thiscall GameObject::getGameObject<GameMode>(GameObject *this);
// FriendsLeaderboardDisplayer::FriendsLeaderboardElement *__usercall std::_Uninit_move<FriendsLeaderboardDisplayer::FriendsLeaderboardElement *,FriendsLeaderboardDisplayer::FriendsLeaderboardElement *,std::allocator<FriendsLeaderboardDisplayer::FriendsLeaderboardElement>,FriendsLeaderboardDisplayer::FriendsLeaderboardElement>@<eax>(FriendsLeaderboardDisplayer::FriendsLeaderboardElement *_First@<ecx>, FriendsLeaderboardDisplayer::FriendsLeaderboardElement *_Last@<edx>, FriendsLeaderboardDisplayer::FriendsLeaderboardElement *_Dest);
// std::pair<void *,std::function<void __cdecl(std::vector<SteamLeaderboardEntry> const &)> > *__usercall std::_Uninit_move<std::pair<void *,std::function<void __cdecl (std::vector<SteamLeaderboardEntry> const &)>> *,std::pair<void *,std::function<void __cdecl (std::vector<SteamLeaderboardEntry> const &)>> *,std::allocator<std::pair<void *,std::function<void __cdecl (std::vector<SteamLeaderboardEntry> const &)>>>,std::pair<void *,std::function<void __cdecl (std::vector<SteamLeaderboardEntry> const &)>>>@<eax>(std::pair<void *,std::function<void __cdecl(std::vector<SteamLeaderboardEntry> const &)> > *_First@<ecx>, std::pair<void *,std::function<void __cdecl(std::vector<SteamLeaderboardEntry> const &)> > *_Last@<edx>, std::pair<void *,std::function<void __cdecl(std::vector<SteamLeaderboardEntry> const &)> > *_Dest);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8d056ed3cbf33029f77a1aded06f61a9_,0>,std::allocator<std::_Func_class<void,std::vector<SteamLeaderboardEntry> const &>>,void,std::vector<SteamLeaderboardEntry> const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_8d056ed3cbf33029f77a1aded06f61a9>,0>,std::allocator<std::_Func_class<void,std::vector<SteamLeaderboardEntry> const &> >,void,std::vector<SteamLeaderboardEntry> const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8d056ed3cbf33029f77a1aded06f61a9_,0>,std::allocator<std::_Func_class<void,std::vector<SteamLeaderboardEntry> const &>>,void,std::vector<SteamLeaderboardEntry> const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8d056ed3cbf33029f77a1aded06f61a9>,0>,std::allocator<std::_Func_class<void,std::vector<SteamLeaderboardEntry> const &> >,void,std::vector<SteamLeaderboardEntry> const &> *this, const std::vector<SteamLeaderboardEntry> *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8d056ed3cbf33029f77a1aded06f61a9_,0>,std::allocator<std::_Func_class<void,std::vector<SteamLeaderboardEntry> const &>>,void,std::vector<SteamLeaderboardEntry> const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8d056ed3cbf33029f77a1aded06f61a9>,0>,std::allocator<std::_Func_class<void,std::vector<SteamLeaderboardEntry> const &> >,void,std::vector<SteamLeaderboardEntry> const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f7932af84dd68b8b3e68cd8d517b0c58_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f7932af84dd68b8b3e68cd8d517b0c58>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f7932af84dd68b8b3e68cd8d517b0c58_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f7932af84dd68b8b3e68cd8d517b0c58>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f7932af84dd68b8b3e68cd8d517b0c58_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f7932af84dd68b8b3e68cd8d517b0c58>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_17f707116808ff48c53c01cdad86bb7d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_17f707116808ff48c53c01cdad86bb7d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_17f707116808ff48c53c01cdad86bb7d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_17f707116808ff48c53c01cdad86bb7d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_17f707116808ff48c53c01cdad86bb7d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_17f707116808ff48c53c01cdad86bb7d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
// void __userpurge TrackDescription::TrackDescription(TrackDescription *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
// void __userpurge TrackDescription::render(TrackDescription *this@<ecx>, int a2@<edi>, float dt);
// void __userpurge LRControl::LRControl(LRControl *this@<ecx>, float a2@<xmm2>, float x, ksgui::Form *aForm, ksgui::GUI *aGui, std::wstring name);
void __thiscall X360ControllerDebug::X360ControllerDebug(X360ControllerDebug *this, Sim *aSim);
void __thiscall lambda_8671f82e2ada3d6acae5515f607dea29_::operator()(X360ControllerDebug::{ctor}::__l13::<lambda_8671f82e2ada3d6acae5515f607dea29> *this, const ksgui::OnControlClicked *message);
// void __userpurge X360ControllerDebug::printStringList(X360ControllerDebug *this@<ecx>, int a2@<xmm1>, int a3@<xmm2>, std::wstring name, vec4f color);
// void __userpurge X360ControllerDebug::render(X360ControllerDebug *this@<ecx>, int a2@<esi>, float dt);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_98220cafbee913606fc4bde590cfa739_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_98220cafbee913606fc4bde590cfa739>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_98220cafbee913606fc4bde590cfa739_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_98220cafbee913606fc4bde590cfa739>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_98220cafbee913606fc4bde590cfa739_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_98220cafbee913606fc4bde590cfa739>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a84bcb22ee10e9bbce22242679299d57_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_a84bcb22ee10e9bbce22242679299d57>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a84bcb22ee10e9bbce22242679299d57_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a84bcb22ee10e9bbce22242679299d57>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a84bcb22ee10e9bbce22242679299d57_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a84bcb22ee10e9bbce22242679299d57>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_52055b6f4e241360b657225286273105_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_52055b6f4e241360b657225286273105>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_52055b6f4e241360b657225286273105_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_52055b6f4e241360b657225286273105>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_52055b6f4e241360b657225286273105_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_52055b6f4e241360b657225286273105>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ebbb66c72c7ac4920a8586e73162044_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_8ebbb66c72c7ac4920a8586e73162044>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ebbb66c72c7ac4920a8586e73162044_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8ebbb66c72c7ac4920a8586e73162044>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ebbb66c72c7ac4920a8586e73162044_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8ebbb66c72c7ac4920a8586e73162044>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6528f4e37745e0aee3de60926cde79d1_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_6528f4e37745e0aee3de60926cde79d1>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6528f4e37745e0aee3de60926cde79d1_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6528f4e37745e0aee3de60926cde79d1>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6528f4e37745e0aee3de60926cde79d1_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6528f4e37745e0aee3de60926cde79d1>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5968cb409d3d62bddbe9dac2128ff060_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_5968cb409d3d62bddbe9dac2128ff060>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5968cb409d3d62bddbe9dac2128ff060_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5968cb409d3d62bddbe9dac2128ff060>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5968cb409d3d62bddbe9dac2128ff060_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5968cb409d3d62bddbe9dac2128ff060>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3abf7af9598375885462e215404b46cd_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_3abf7af9598375885462e215404b46cd>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3abf7af9598375885462e215404b46cd_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3abf7af9598375885462e215404b46cd>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3abf7af9598375885462e215404b46cd_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3abf7af9598375885462e215404b46cd>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e1d5dd795cb6585517a0fa44915a6e4b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e1d5dd795cb6585517a0fa44915a6e4b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e1d5dd795cb6585517a0fa44915a6e4b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e1d5dd795cb6585517a0fa44915a6e4b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e1d5dd795cb6585517a0fa44915a6e4b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e1d5dd795cb6585517a0fa44915a6e4b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e410a5bc041dca31110f839e4a8bbc01_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_e410a5bc041dca31110f839e4a8bbc01>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e410a5bc041dca31110f839e4a8bbc01_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e410a5bc041dca31110f839e4a8bbc01>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e410a5bc041dca31110f839e4a8bbc01_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e410a5bc041dca31110f839e4a8bbc01>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e380350773b66068748caadca2c767c0_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_e380350773b66068748caadca2c767c0>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e380350773b66068748caadca2c767c0_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e380350773b66068748caadca2c767c0>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e380350773b66068748caadca2c767c0_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e380350773b66068748caadca2c767c0>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8671f82e2ada3d6acae5515f607dea29_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_8671f82e2ada3d6acae5515f607dea29>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8671f82e2ada3d6acae5515f607dea29_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8671f82e2ada3d6acae5515f607dea29>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8671f82e2ada3d6acae5515f607dea29_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8671f82e2ada3d6acae5515f607dea29>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
std::wstring *__thiscall ksgui::Spinner::getItemAt(ksgui::Spinner *this, std::wstring *result, unsigned int index);
// void __userpurge PostProcessFilterSelector::PostProcessFilterSelector(PostProcessFilterSelector *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
PostProcessFilterSelector *__thiscall PostProcessFilterSelector::`scalar deleting destructor'(PostProcessFilterSelector *this, unsigned int a2);
void __thiscall PostProcessFilterSelector::~PostProcessFilterSelector(PostProcessFilterSelector *this);
std::vector<std::wstring> *__thiscall std::vector<std::wstring>::operator=(std::vector<std::wstring> *this, std::vector<std::wstring> *_Right);
PostProcessEffectsUpdater *__thiscall GameObject::getGameObject<PostProcessEffectsUpdater>(GameObject *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_aa987d133df4fd7fd6aa7686a5c7b0ae_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_aa987d133df4fd7fd6aa7686a5c7b0ae>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_aa987d133df4fd7fd6aa7686a5c7b0ae_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_aa987d133df4fd7fd6aa7686a5c7b0ae>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_aa987d133df4fd7fd6aa7686a5c7b0ae_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_aa987d133df4fd7fd6aa7686a5c7b0ae>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall LeaderboardApp::LeaderboardApp(LeaderboardApp *this, Sim *aSim);
void __thiscall FormHDR::FormHDR(FormHDR *this, ksgui::GUI *gui, CameraForwardYebis *cameraYebis, Sim *sim);
void __thiscall lambda_7d01fca3e9ee52c3031d566313262bc1_::operator()(FormHDR::{ctor}::__l8::<lambda_7d01fca3e9ee52c3031d566313262bc1> *this, const ksgui::OnControlClicked *ev);
void __thiscall lambda_46a7be93e17a22b77cc31e06c1e036d8_::operator()(FormHDR::{ctor}::__l15::<lambda_46a7be93e17a22b77cc31e06c1e036d8> *this, const ksgui::OnControlClicked *ev);
// void __userpurge FormHDR::render(FormHDR *this@<ecx>, int a2@<edi>, float dt);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7d01fca3e9ee52c3031d566313262bc1_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_7d01fca3e9ee52c3031d566313262bc1>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7d01fca3e9ee52c3031d566313262bc1_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_7d01fca3e9ee52c3031d566313262bc1>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7d01fca3e9ee52c3031d566313262bc1_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_7d01fca3e9ee52c3031d566313262bc1>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cbc7ac63e352068be527d19c59908c1f_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_cbc7ac63e352068be527d19c59908c1f>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cbc7ac63e352068be527d19c59908c1f_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_cbc7ac63e352068be527d19c59908c1f>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cbc7ac63e352068be527d19c59908c1f_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_cbc7ac63e352068be527d19c59908c1f>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_70b0f94afc090b8ac830ff20ba5fa984_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_70b0f94afc090b8ac830ff20ba5fa984>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_70b0f94afc090b8ac830ff20ba5fa984_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_70b0f94afc090b8ac830ff20ba5fa984>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_70b0f94afc090b8ac830ff20ba5fa984_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_70b0f94afc090b8ac830ff20ba5fa984>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f2b220d28947b5c0207a80176cf7ac1f_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_f2b220d28947b5c0207a80176cf7ac1f>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f2b220d28947b5c0207a80176cf7ac1f_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f2b220d28947b5c0207a80176cf7ac1f>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f2b220d28947b5c0207a80176cf7ac1f_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f2b220d28947b5c0207a80176cf7ac1f>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_46a7be93e17a22b77cc31e06c1e036d8_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_46a7be93e17a22b77cc31e06c1e036d8>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_46a7be93e17a22b77cc31e06c1e036d8_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_46a7be93e17a22b77cc31e06c1e036d8>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_46a7be93e17a22b77cc31e06c1e036d8_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_46a7be93e17a22b77cc31e06c1e036d8>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
long double __cdecl saturate(long double v);
std::wstring *__cdecl timeToDiffShort(std::wstring *result, int t);
void __thiscall FormRealTimeTiming::FormRealTimeTiming(FormRealTimeTiming *this, Sim *sim);
void __thiscall lambda_c9b91ae19c4ec20e9e1041d264b58c4a_::operator()(FormRealTimeTiming::{ctor}::__l31::<lambda_c9b91ae19c4ec20e9e1041d264b58c4a> *this, const OnLapCompletedEvent *ev);
FormRealTimeTiming *__thiscall FormRealTimeTiming::`vector deleting destructor'(FormRealTimeTiming *this, unsigned int a2);
void __thiscall FormRealTimeTiming::render(FormRealTimeTiming *this, float dt);
// std::shared_ptr<Font> *__usercall std::make_shared<Font,enum eFontType,float>@<eax>(eFontType *<_Args_0>@<edx>, _DWORD *a2@<ecx>, float *<_Args_1>);
void __thiscall Wind::~Wind(Wind *this);
// void __usercall std::_Sort<CarItemCmp *,int,_lambda_68770df51abce0dd6fbff13ce66ec551_>(CarItemCmp *_First@<ecx>, CarItemCmp *_Last@<edx>, int _Ideal, FormRealTimeTiming::render::__l16::<lambda_9a0e0571fd08e21a8eea0ed7aeaf8a4f> _Pred);
// std::pair<CarItemCmp *,CarItemCmp *> *__usercall std::_Unguarded_partition<CarItemCmp *,_lambda_68770df51abce0dd6fbff13ce66ec551_>@<eax>(CarItemCmp *_First@<edx>, std::pair<CarItemCmp *,CarItemCmp *> *a2@<ecx>, CarItemCmp *_Last);
// void __usercall std::_Median<CarItemCmp *,_lambda_9a0e0571fd08e21a8eea0ed7aeaf8a4f_>(CarItemCmp *_First@<ecx>, CarItemCmp *_Mid@<edx>, CarItemCmp *_Last);
void __fastcall std::_Make_heap<CarItemCmp *,int,CarItemCmp,_lambda_68770df51abce0dd6fbff13ce66ec551_>(CarItemCmp *_First, CarItemCmp *_Last);
void __fastcall std::_Sort_heap<CarItemCmp *,_lambda_68770df51abce0dd6fbff13ce66ec551_>(CarItemCmp *_First, CarItemCmp *_Last);
void __fastcall std::_Insertion_sort1<CarItemCmp *,_lambda_9a0e0571fd08e21a8eea0ed7aeaf8a4f_,CarItemCmp>(CarItemCmp *_First, CarItemCmp *_Last);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3f7155b984f8d27266a007d7497c8239_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_3f7155b984f8d27266a007d7497c8239>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3f7155b984f8d27266a007d7497c8239_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3f7155b984f8d27266a007d7497c8239>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3f7155b984f8d27266a007d7497c8239_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3f7155b984f8d27266a007d7497c8239>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c9b91ae19c4ec20e9e1041d264b58c4a_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_c9b91ae19c4ec20e9e1041d264b58c4a>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c9b91ae19c4ec20e9e1041d264b58c4a_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c9b91ae19c4ec20e9e1041d264b58c4a>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c9b91ae19c4ec20e9e1041d264b58c4a_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c9b91ae19c4ec20e9e1041d264b58c4a>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
// void __usercall std::_Adjust_heap<CarItemCmp *,int,CarItemCmp,_lambda_68770df51abce0dd6fbff13ce66ec551_>(CarItemCmp *_First@<ecx>, int _Hole@<edx>, int _Bottom, CarItemCmp *_Val);
bool __thiscall DynamicController::isReady(DynamicController *this);
TractionType __thiscall Drivetrain::getTractionType(Drivetrain *this);
void __thiscall FormTelemetry::FormTelemetry(FormTelemetry *this, CarAvatar *car_avatar);
void __thiscall lambda_9457bf3edf1a84cb5d031a705cb1b383_::operator()(FormTelemetry::{ctor}::__l9::<lambda_9457bf3edf1a84cb5d031a705cb1b383> *this, const ksgui::OnSpinnerValueChanged *ev);
FormTelemetry *__thiscall FormTelemetry::`scalar deleting destructor'(FormTelemetry *this, unsigned int a2);
void __thiscall std::map<std::wstring,TelemetryChannelDef>::~map<std::wstring,TelemetryChannelDef>(std::map<std::wstring,TelemetryChannelDef> *this);
void __thiscall TelemetryPreset::~TelemetryPreset(TelemetryPreset *this);
void __thiscall FormTelemetry::~FormTelemetry(FormTelemetry *this);
void __thiscall FormTelemetry::render(FormTelemetry *this, float dt);
// void __userpurge FormTelemetry::addChannel(FormTelemetry *this@<ecx>, float a2@<xmm3>, const std::wstring *name, float *input_value, float max_value, float scale, bool isReadOnPhysicsThread, int jumpFrames);
TelemetryChannelDef *__thiscall TelemetryChannelDef::operator=(TelemetryChannelDef *this, const TelemetryChannelDef *__that);
// void __userpurge FormTelemetry::addChannelLambda(FormTelemetry *this@<ecx>, float a2@<xmm2>, float a3@<xmm3>, const std::wstring *name, float scale, bool isReadOnPhysicsThread, std::function<float __cdecl(void)> lambda);
void __thiscall FormTelemetry::initChannels(FormTelemetry *this);
void __thiscall FormTelemetry::applyPreset(FormTelemetry *this, const std::wstring *preset_name);
void __thiscall FormTelemetry::getValuesFromPhysics(FormTelemetry *this);
void __thiscall FormTelemetry::getValuesFromGraphics(FormTelemetry *this);
void __thiscall std::vector<TelemetryGraph>::push_back(std::vector<TelemetryGraph> *this, const TelemetryGraph *_Val);
TelemetryChannelDef *__thiscall std::map<std::wstring,TelemetryChannelDef>::operator[](std::map<std::wstring,TelemetryChannelDef> *this, std::wstring *_Keyval);
TelemetryChannelDef *__thiscall std::map<std::wstring,TelemetryChannelDef>::operator[](std::map<std::wstring,TelemetryChannelDef> *this, const std::wstring *_Keyval);
void __thiscall std::vector<TelemetryPreset>::~vector<TelemetryPreset>(std::vector<TelemetryPreset> *this);
void __thiscall std::vector<TelemetryPreset>::push_back(std::vector<TelemetryPreset> *this, const TelemetryPreset *_Val);
void __thiscall BufferedChannel<float>::BufferedChannel<float>(BufferedChannel<float> *this);
void __thiscall BufferedChannel<float>::~BufferedChannel<float>(BufferedChannel<float> *this);
void __thiscall std::vector<TelemetryGraph>::_Reserve(std::vector<TelemetryGraph> *this, unsigned int _Count);
void __thiscall std::vector<TelemetryPreset>::_Reserve(std::vector<TelemetryPreset> *this, unsigned int _Count);
Concurrency::concurrent_queue<float,std::allocator<float> > *__thiscall Concurrency::concurrent_queue<float,std::allocator<float>>::`vector deleting destructor'(Concurrency::concurrent_queue<float,std::allocator<float> > *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_fbe9a8a72d7f77a9ef5e3c86145af769>,0>,std::allocator<std::_Func_class<float> >,float> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fbe9a8a72d7f77a9ef5e3c86145af769_,0>,std::allocator<std::_Func_class<float,>>,float,>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_fbe9a8a72d7f77a9ef5e3c86145af769>,0>,std::allocator<std::_Func_class<float> >,float> *this, unsigned int a2);
void __thiscall std::vector<TelemetryGraph>::_Reallocate(std::vector<TelemetryGraph> *this, unsigned int _Count);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TelemetryChannelDef> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TelemetryChannelDef>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TelemetryChannelDef> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TelemetryChannelDef> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TelemetryChannelDef> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TelemetryChannelDef> > > > _Last);
unsigned int __thiscall std::vector<TelemetryPreset>::_Grow_to(std::vector<FlameInstanceV2> *this, unsigned int _Count);
void __thiscall std::vector<TelemetryPreset>::_Reallocate(std::vector<TelemetryPreset> *this, unsigned int _Count);
std::_Func_impl<std::_Callable_obj<<lambda_4b59d039ab703025dddb443a6cef518a>,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &> >,void,OnPhysicsStepCompleted const &> *__thiscall std::_Func_base<void,OnPhysicsStepCompleted const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_4b59d039ab703025dddb443a6cef518a>,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &> >,void,OnPhysicsStepCompleted const &> *this, unsigned int a2);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TelemetryChannelDef> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TelemetryChannelDef>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TelemetryChannelDef> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TelemetryChannelDef> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TelemetryChannelDef> > > > _Where);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TelemetryChannelDef>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TelemetryChannelDef> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,TelemetryChannelDef>,void *> *_Rootnode);
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const,TelemetryChannelDef>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const ,TelemetryChannelDef>> > *this);
void __thiscall Concurrency::concurrent_queue<float,std::allocator<float>>::~concurrent_queue<float,std::allocator<float>>(Concurrency::concurrent_queue<float,std::allocator<float> > *this);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l10::<lambda_0b45dc25b54337508d45fb2cc81cebec> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l11::<lambda_99e20ae7fb1672ea9e51d47f360ff173> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l15::<lambda_d234b025edab9d0c5b533f0a90297f61> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l19::<lambda_cb85c02d451b3d35cd73741e92a56ee5> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l23::<lambda_612f2ee5d374d6bc27fecf8107a0eb89> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l24::<lambda_b48c119a6d403e72303dd5cc2bbd8c27> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l25::<lambda_0b2ae9dff0a3fa8ac567838220b45b27> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l26::<lambda_8496b1724944c3ec817a6a7e2a63d90b> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l27::<lambda_e80cedfbc36e85d3b3b0d4f9652fc876> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l28::<lambda_1f4c9a27e18532bd8e175822098b55f2> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l29::<lambda_a370bb2d34fd94e70373d3d5991680b8> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l30::<lambda_52f4e36b5356405b4071f6b5c68e88fb> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l31::<lambda_fbe9a8a72d7f77a9ef5e3c86145af769> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l32::<lambda_5e519fd37e6882212bd572f891d10dc5> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l33::<lambda_9758e3463cfa7bab3606f45749ca7fb7> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l34::<lambda_96deb83e4c8b3efb0eff0d6cd1e7b913> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l35::<lambda_dc6ad93c02f3997160bb08300834b8a8> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l36::<lambda_cd89ab481931db59103e748f4c2355bc> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l37::<lambda_225a8ca640349735bf0d5d8178c1fd73> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l38::<lambda_1c590acddc90ceb5a52ccb6b8f85025f> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l39::<lambda_80a42ccb21c6cb2f77bbd4c29cfddfb2> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l40::<lambda_7640fe02043c10bc53af9e4c17c76c29> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l41::<lambda_2a4bdd3e5f97ff09080f4c8d0c1c555e> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l42::<lambda_ac733f2c7e7196312ea3e1d8a6464c84> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l43::<lambda_58f86a4f724d61a31dde2b7e5263ee76> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l44::<lambda_0947a1311c13784f22521bbdaf5b63eb> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l45::<lambda_2920f72b9ee18298ab81d35933b4fabb> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l46::<lambda_68ea35e34616ccf18f534cd4b6e72d1e> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l47::<lambda_26c3e7d398d580b6c8a0a78573062873> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l48::<lambda_34c8b836dd98b64c1a0d08b8886d306c> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l49::<lambda_07a5f7e914fbc95ecb795c6a0bc85708> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l50::<lambda_50035c619f9709a26e621b9fce45a2cb> *_Func);
void __thiscall std::function<float __cdecl (void)>::function<float __cdecl (void)>(std::function<float __cdecl(void)> *this, FormTelemetry::initChannels::__l51::<lambda_3fb9d18ea5ab16af294885637ca1c983> *_Func);
std::_Tree_node<std::pair<std::wstring const ,TelemetryChannelDef>,void *> *__thiscall std::_Tree_buy<std::pair<std::wstring const,TelemetryChannelDef>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring &&>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,TelemetryChannelDef>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring &&> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TelemetryChannelDef> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TelemetryChannelDef>>,0>>::_Insert_hint<std::pair<std::wstring const,TelemetryChannelDef> &,std::_Tree_node<std::pair<std::wstring const,TelemetryChannelDef>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TelemetryChannelDef> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TelemetryChannelDef> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TelemetryChannelDef> > > > _Where, std::pair<std::wstring const ,TelemetryChannelDef> *_Val, std::_Tree_node<std::pair<std::wstring const ,TelemetryChannelDef>,void *> *_Newnode);
std::_Tree_node<std::pair<std::wstring const ,TelemetryChannelDef>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,TelemetryChannelDef>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,TelemetryChannelDef>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring const &> *<_Val_1>, std::tuple<> *<_Val_2>);
void __fastcall std::_Destroy_range<std::_Wrap_alloc<std::allocator<TelemetryPreset>>>(TelemetryPreset *_First, TelemetryPreset *_Last);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TelemetryChannelDef>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TelemetryChannelDef> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,TelemetryChannelDef>,void *> *_Newnode);
std::_Tree_node<std::pair<std::wstring const ,TelemetryChannelDef>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,TelemetryChannelDef>>::_Buynode0(std::_Tree_buy<std::pair<std::wstring const ,TelemetryChannelDef>> *this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TelemetryChannelDef> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TelemetryChannelDef>>,0>>::_Insert_at<std::pair<std::wstring const,TelemetryChannelDef> &,std::_Tree_node<std::pair<std::wstring const,TelemetryChannelDef>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TelemetryChannelDef> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TelemetryChannelDef> > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::wstring const ,TelemetryChannelDef>,void *> *_Wherenode, std::pair<std::wstring const ,TelemetryChannelDef> *_Val, std::_Tree_node<std::pair<std::wstring const ,TelemetryChannelDef>,void *> *_Node);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TelemetryChannelDef> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TelemetryChannelDef>>,0>>::_Insert_nohint<std::pair<std::wstring const,TelemetryChannelDef> &,std::_Tree_node<std::pair<std::wstring const,TelemetryChannelDef>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,TelemetryChannelDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TelemetryChannelDef> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TelemetryChannelDef> > > >,bool> *result, bool _Leftish, std::pair<std::wstring const ,TelemetryChannelDef> *_Val, std::_Tree_node<std::pair<std::wstring const ,TelemetryChannelDef>,void *> *_Newnode);
void __thiscall std::_Wrap_alloc<std::allocator<TelemetryPreset>>::destroy<TelemetryPreset>(std::_Wrap_alloc<std::allocator<TelemetryPreset> > *this, TelemetryPreset *_Ptr);
void __thiscall std::pair<std::wstring const,TelemetryChannelDef>::~pair<std::wstring const,TelemetryChannelDef>(std::pair<std::wstring const ,TelemetryChannelDef> *this);
// TelemetryGraph *__usercall std::_Uninit_move<TelemetryGraph *,TelemetryGraph *,std::allocator<TelemetryGraph>,TelemetryGraph>@<eax>(TelemetryGraph *_First@<ecx>, TelemetryGraph *_Last@<edx>, TelemetryGraph *_Dest);
// TelemetryPreset *__usercall std::_Uninit_move<TelemetryPreset *,TelemetryPreset *,std::allocator<TelemetryPreset>,TelemetryPreset>@<eax>(TelemetryPreset *_First@<ecx>, TelemetryPreset *_Last@<edx>, TelemetryPreset *_Dest);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9457bf3edf1a84cb5d031a705cb1b383_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_9457bf3edf1a84cb5d031a705cb1b383>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9457bf3edf1a84cb5d031a705cb1b383_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9457bf3edf1a84cb5d031a705cb1b383>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9457bf3edf1a84cb5d031a705cb1b383_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9457bf3edf1a84cb5d031a705cb1b383>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6a09d9ac97f50fd80b6d1c5187e176c0_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_6a09d9ac97f50fd80b6d1c5187e176c0>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6a09d9ac97f50fd80b6d1c5187e176c0_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6a09d9ac97f50fd80b6d1c5187e176c0>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6a09d9ac97f50fd80b6d1c5187e176c0_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6a09d9ac97f50fd80b6d1c5187e176c0>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4b59d039ab703025dddb443a6cef518a_,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &>>,void,OnPhysicsStepCompleted const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_4b59d039ab703025dddb443a6cef518a>,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &> >,void,OnPhysicsStepCompleted const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4b59d039ab703025dddb443a6cef518a_,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &>>,void,OnPhysicsStepCompleted const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4b59d039ab703025dddb443a6cef518a>,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &> >,void,OnPhysicsStepCompleted const &> *this, const OnPhysicsStepCompleted *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4b59d039ab703025dddb443a6cef518a_,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &>>,void,OnPhysicsStepCompleted const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4b59d039ab703025dddb443a6cef518a>,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &> >,void,OnPhysicsStepCompleted const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_871ee79c1458db700aa20d0e1b1dfaf0_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_871ee79c1458db700aa20d0e1b1dfaf0>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_871ee79c1458db700aa20d0e1b1dfaf0_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_871ee79c1458db700aa20d0e1b1dfaf0>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_871ee79c1458db700aa20d0e1b1dfaf0_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_871ee79c1458db700aa20d0e1b1dfaf0>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b645091ddd59e6974900c9db1736ab48_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_b645091ddd59e6974900c9db1736ab48>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
long double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b645091ddd59e6974900c9db1736ab48_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b645091ddd59e6974900c9db1736ab48>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b645091ddd59e6974900c9db1736ab48_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b645091ddd59e6974900c9db1736ab48>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_da65dbe4a397dcf176f6297db8756b05_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_da65dbe4a397dcf176f6297db8756b05>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_da65dbe4a397dcf176f6297db8756b05_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_da65dbe4a397dcf176f6297db8756b05>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_da65dbe4a397dcf176f6297db8756b05_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_da65dbe4a397dcf176f6297db8756b05>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_df7d5d7028ffabd7e37afdaa507e839d_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_df7d5d7028ffabd7e37afdaa507e839d>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_df7d5d7028ffabd7e37afdaa507e839d_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_df7d5d7028ffabd7e37afdaa507e839d>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_df7d5d7028ffabd7e37afdaa507e839d_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_df7d5d7028ffabd7e37afdaa507e839d>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0b45dc25b54337508d45fb2cc81cebec_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_0b45dc25b54337508d45fb2cc81cebec>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0b45dc25b54337508d45fb2cc81cebec_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0b45dc25b54337508d45fb2cc81cebec>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0b45dc25b54337508d45fb2cc81cebec_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0b45dc25b54337508d45fb2cc81cebec>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_99e20ae7fb1672ea9e51d47f360ff173_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_99e20ae7fb1672ea9e51d47f360ff173>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_99e20ae7fb1672ea9e51d47f360ff173_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_99e20ae7fb1672ea9e51d47f360ff173>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_99e20ae7fb1672ea9e51d47f360ff173_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_99e20ae7fb1672ea9e51d47f360ff173>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d234b025edab9d0c5b533f0a90297f61_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d234b025edab9d0c5b533f0a90297f61>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d234b025edab9d0c5b533f0a90297f61_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d234b025edab9d0c5b533f0a90297f61>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d234b025edab9d0c5b533f0a90297f61_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d234b025edab9d0c5b533f0a90297f61>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cb85c02d451b3d35cd73741e92a56ee5_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_cb85c02d451b3d35cd73741e92a56ee5>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cb85c02d451b3d35cd73741e92a56ee5_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_cb85c02d451b3d35cd73741e92a56ee5>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cb85c02d451b3d35cd73741e92a56ee5_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_cb85c02d451b3d35cd73741e92a56ee5>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_612f2ee5d374d6bc27fecf8107a0eb89_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_612f2ee5d374d6bc27fecf8107a0eb89>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_612f2ee5d374d6bc27fecf8107a0eb89_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_612f2ee5d374d6bc27fecf8107a0eb89>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_612f2ee5d374d6bc27fecf8107a0eb89_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_612f2ee5d374d6bc27fecf8107a0eb89>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b48c119a6d403e72303dd5cc2bbd8c27_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_b48c119a6d403e72303dd5cc2bbd8c27>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b48c119a6d403e72303dd5cc2bbd8c27_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b48c119a6d403e72303dd5cc2bbd8c27>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b48c119a6d403e72303dd5cc2bbd8c27_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b48c119a6d403e72303dd5cc2bbd8c27>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0b2ae9dff0a3fa8ac567838220b45b27_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_0b2ae9dff0a3fa8ac567838220b45b27>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0b2ae9dff0a3fa8ac567838220b45b27_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0b2ae9dff0a3fa8ac567838220b45b27>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0b2ae9dff0a3fa8ac567838220b45b27_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0b2ae9dff0a3fa8ac567838220b45b27>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8496b1724944c3ec817a6a7e2a63d90b_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_8496b1724944c3ec817a6a7e2a63d90b>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8496b1724944c3ec817a6a7e2a63d90b_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8496b1724944c3ec817a6a7e2a63d90b>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8496b1724944c3ec817a6a7e2a63d90b_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8496b1724944c3ec817a6a7e2a63d90b>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e80cedfbc36e85d3b3b0d4f9652fc876_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_e80cedfbc36e85d3b3b0d4f9652fc876>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e80cedfbc36e85d3b3b0d4f9652fc876_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e80cedfbc36e85d3b3b0d4f9652fc876>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e80cedfbc36e85d3b3b0d4f9652fc876_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e80cedfbc36e85d3b3b0d4f9652fc876>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1f4c9a27e18532bd8e175822098b55f2_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1f4c9a27e18532bd8e175822098b55f2>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1f4c9a27e18532bd8e175822098b55f2_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1f4c9a27e18532bd8e175822098b55f2>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1f4c9a27e18532bd8e175822098b55f2_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1f4c9a27e18532bd8e175822098b55f2>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a370bb2d34fd94e70373d3d5991680b8_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_a370bb2d34fd94e70373d3d5991680b8>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a370bb2d34fd94e70373d3d5991680b8_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a370bb2d34fd94e70373d3d5991680b8>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a370bb2d34fd94e70373d3d5991680b8_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a370bb2d34fd94e70373d3d5991680b8>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_52f4e36b5356405b4071f6b5c68e88fb_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_52f4e36b5356405b4071f6b5c68e88fb>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_52f4e36b5356405b4071f6b5c68e88fb_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_52f4e36b5356405b4071f6b5c68e88fb>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_52f4e36b5356405b4071f6b5c68e88fb_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_52f4e36b5356405b4071f6b5c68e88fb>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fbe9a8a72d7f77a9ef5e3c86145af769_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_fbe9a8a72d7f77a9ef5e3c86145af769>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fbe9a8a72d7f77a9ef5e3c86145af769_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fbe9a8a72d7f77a9ef5e3c86145af769>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fbe9a8a72d7f77a9ef5e3c86145af769_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fbe9a8a72d7f77a9ef5e3c86145af769>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5e519fd37e6882212bd572f891d10dc5_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_5e519fd37e6882212bd572f891d10dc5>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5e519fd37e6882212bd572f891d10dc5_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5e519fd37e6882212bd572f891d10dc5>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5e519fd37e6882212bd572f891d10dc5_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5e519fd37e6882212bd572f891d10dc5>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9758e3463cfa7bab3606f45749ca7fb7_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_9758e3463cfa7bab3606f45749ca7fb7>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9758e3463cfa7bab3606f45749ca7fb7_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9758e3463cfa7bab3606f45749ca7fb7>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9758e3463cfa7bab3606f45749ca7fb7_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9758e3463cfa7bab3606f45749ca7fb7>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_96deb83e4c8b3efb0eff0d6cd1e7b913_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_96deb83e4c8b3efb0eff0d6cd1e7b913>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_96deb83e4c8b3efb0eff0d6cd1e7b913_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_96deb83e4c8b3efb0eff0d6cd1e7b913>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_96deb83e4c8b3efb0eff0d6cd1e7b913_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_96deb83e4c8b3efb0eff0d6cd1e7b913>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_dc6ad93c02f3997160bb08300834b8a8_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_dc6ad93c02f3997160bb08300834b8a8>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_dc6ad93c02f3997160bb08300834b8a8_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_dc6ad93c02f3997160bb08300834b8a8>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_dc6ad93c02f3997160bb08300834b8a8_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_dc6ad93c02f3997160bb08300834b8a8>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cd89ab481931db59103e748f4c2355bc_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_cd89ab481931db59103e748f4c2355bc>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
long double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cd89ab481931db59103e748f4c2355bc_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_cd89ab481931db59103e748f4c2355bc>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cd89ab481931db59103e748f4c2355bc_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_cd89ab481931db59103e748f4c2355bc>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_225a8ca640349735bf0d5d8178c1fd73_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_225a8ca640349735bf0d5d8178c1fd73>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_225a8ca640349735bf0d5d8178c1fd73_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_225a8ca640349735bf0d5d8178c1fd73>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_225a8ca640349735bf0d5d8178c1fd73_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_225a8ca640349735bf0d5d8178c1fd73>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1c590acddc90ceb5a52ccb6b8f85025f_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1c590acddc90ceb5a52ccb6b8f85025f>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1c590acddc90ceb5a52ccb6b8f85025f_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1c590acddc90ceb5a52ccb6b8f85025f>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1c590acddc90ceb5a52ccb6b8f85025f_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1c590acddc90ceb5a52ccb6b8f85025f>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_80a42ccb21c6cb2f77bbd4c29cfddfb2_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_80a42ccb21c6cb2f77bbd4c29cfddfb2>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_80a42ccb21c6cb2f77bbd4c29cfddfb2_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_80a42ccb21c6cb2f77bbd4c29cfddfb2>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_80a42ccb21c6cb2f77bbd4c29cfddfb2_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_80a42ccb21c6cb2f77bbd4c29cfddfb2>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7640fe02043c10bc53af9e4c17c76c29_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_7640fe02043c10bc53af9e4c17c76c29>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7640fe02043c10bc53af9e4c17c76c29_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_7640fe02043c10bc53af9e4c17c76c29>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7640fe02043c10bc53af9e4c17c76c29_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_7640fe02043c10bc53af9e4c17c76c29>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2a4bdd3e5f97ff09080f4c8d0c1c555e_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_2a4bdd3e5f97ff09080f4c8d0c1c555e>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2a4bdd3e5f97ff09080f4c8d0c1c555e_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2a4bdd3e5f97ff09080f4c8d0c1c555e>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2a4bdd3e5f97ff09080f4c8d0c1c555e_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2a4bdd3e5f97ff09080f4c8d0c1c555e>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ac733f2c7e7196312ea3e1d8a6464c84_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_ac733f2c7e7196312ea3e1d8a6464c84>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ac733f2c7e7196312ea3e1d8a6464c84_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ac733f2c7e7196312ea3e1d8a6464c84>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ac733f2c7e7196312ea3e1d8a6464c84_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ac733f2c7e7196312ea3e1d8a6464c84>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_58f86a4f724d61a31dde2b7e5263ee76_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_58f86a4f724d61a31dde2b7e5263ee76>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_58f86a4f724d61a31dde2b7e5263ee76_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_58f86a4f724d61a31dde2b7e5263ee76>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_58f86a4f724d61a31dde2b7e5263ee76_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_58f86a4f724d61a31dde2b7e5263ee76>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0947a1311c13784f22521bbdaf5b63eb_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_0947a1311c13784f22521bbdaf5b63eb>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0947a1311c13784f22521bbdaf5b63eb_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0947a1311c13784f22521bbdaf5b63eb>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0947a1311c13784f22521bbdaf5b63eb_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0947a1311c13784f22521bbdaf5b63eb>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2920f72b9ee18298ab81d35933b4fabb_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_2920f72b9ee18298ab81d35933b4fabb>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2920f72b9ee18298ab81d35933b4fabb_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2920f72b9ee18298ab81d35933b4fabb>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2920f72b9ee18298ab81d35933b4fabb_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2920f72b9ee18298ab81d35933b4fabb>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_68ea35e34616ccf18f534cd4b6e72d1e_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_68ea35e34616ccf18f534cd4b6e72d1e>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_68ea35e34616ccf18f534cd4b6e72d1e_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_68ea35e34616ccf18f534cd4b6e72d1e>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_68ea35e34616ccf18f534cd4b6e72d1e_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_68ea35e34616ccf18f534cd4b6e72d1e>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_26c3e7d398d580b6c8a0a78573062873_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_26c3e7d398d580b6c8a0a78573062873>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_26c3e7d398d580b6c8a0a78573062873_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_26c3e7d398d580b6c8a0a78573062873>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_26c3e7d398d580b6c8a0a78573062873_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_26c3e7d398d580b6c8a0a78573062873>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_34c8b836dd98b64c1a0d08b8886d306c_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_34c8b836dd98b64c1a0d08b8886d306c>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_34c8b836dd98b64c1a0d08b8886d306c_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_34c8b836dd98b64c1a0d08b8886d306c>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_34c8b836dd98b64c1a0d08b8886d306c_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_34c8b836dd98b64c1a0d08b8886d306c>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_07a5f7e914fbc95ecb795c6a0bc85708_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_07a5f7e914fbc95ecb795c6a0bc85708>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_07a5f7e914fbc95ecb795c6a0bc85708_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_07a5f7e914fbc95ecb795c6a0bc85708>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_07a5f7e914fbc95ecb795c6a0bc85708_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_07a5f7e914fbc95ecb795c6a0bc85708>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_50035c619f9709a26e621b9fce45a2cb_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_50035c619f9709a26e621b9fce45a2cb>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_50035c619f9709a26e621b9fce45a2cb_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_50035c619f9709a26e621b9fce45a2cb>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_50035c619f9709a26e621b9fce45a2cb_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_50035c619f9709a26e621b9fce45a2cb>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3fb9d18ea5ab16af294885637ca1c983_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_3fb9d18ea5ab16af294885637ca1c983>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3fb9d18ea5ab16af294885637ca1c983_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3fb9d18ea5ab16af294885637ca1c983>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3fb9d18ea5ab16af294885637ca1c983_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3fb9d18ea5ab16af294885637ca1c983>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Callable_obj<_lambda_4b59d039ab703025dddb443a6cef518a_,0>::_Callable_obj<_lambda_4b59d039ab703025dddb443a6cef518a_,0>(PitStop::{ctor}::__l65::<lambda_9c16e304e7e2c085ae3f98eceac1031e> *this, PitCrew *const *__pitCrew);
void __thiscall std::pair<std::wstring const,TelemetryChannelDef>::pair<std::wstring const,TelemetryChannelDef>(std::pair<std::wstring const ,TelemetryChannelDef> *this, std::piecewise_construct_t __formal, std::tuple<std::wstring const &> _Val1, std::tuple<> _Val2);
void __thiscall FormDRSZones::FormDRSZones(FormDRSZones *this, CarAvatar *car);
void __thiscall lambda_8eebe7c165de5fc64b7c94d40d00ef91_::operator()(FormDRSZones::{ctor}::__l5::<lambda_8eebe7c165de5fc64b7c94d40d00ef91> *this, const ksgui::OnControlClicked *ev);
void __thiscall lambda_36b96abbd1bbe9f0ee8b621eafae0e15_::operator()(FormDRSZones::{ctor}::__l13::<lambda_36b96abbd1bbe9f0ee8b621eafae0e15> *this, const ksgui::OnControlClicked *ev);
FormDRSZones *__thiscall FormDRSZones::`scalar deleting destructor'(FormDRSZones *this, unsigned int a2);
void __thiscall FormDRSZones::render(FormDRSZones *this, float dt);
void __thiscall std::vector<DRSZone>::push_back(std::vector<vec3f> *this, const vec3f *_Val);
void __thiscall std::vector<DRSZone>::_Reserve(std::vector<vec3f> *this, unsigned int _Count);
void __thiscall std::vector<vec3f>::_Reallocate(std::vector<vec3f> *this, unsigned int _Count);
TimeLineStatus *__cdecl std::_Uninit_move<DataOrderStruct *,DataOrderStruct *,std::allocator<DataOrderStruct>,DataOrderStruct>(TimeLineStatus *_First, TimeLineStatus *_Last, TimeLineStatus *_Dest);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8eebe7c165de5fc64b7c94d40d00ef91_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_8eebe7c165de5fc64b7c94d40d00ef91>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8eebe7c165de5fc64b7c94d40d00ef91_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8eebe7c165de5fc64b7c94d40d00ef91>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8eebe7c165de5fc64b7c94d40d00ef91_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8eebe7c165de5fc64b7c94d40d00ef91>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_36b96abbd1bbe9f0ee8b621eafae0e15_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_36b96abbd1bbe9f0ee8b621eafae0e15>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_36b96abbd1bbe9f0ee8b621eafae0e15_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_36b96abbd1bbe9f0ee8b621eafae0e15>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_36b96abbd1bbe9f0ee8b621eafae0e15_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_36b96abbd1bbe9f0ee8b621eafae0e15>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall ChaseCamEditor::ChaseCamEditor(ChaseCamEditor *this, Sim *sim);
void __thiscall lambda_5d4300ca4f51594cb9ca8b3c898e5602_::operator()(ChaseCamEditor::{ctor}::__l6::<lambda_5d4300ca4f51594cb9ca8b3c898e5602> *this, const ksgui::OnControlClicked *ev);
void __thiscall lambda_cbbbee75040862a861784e2053a8fd34_::operator()(ChaseCamEditor::{ctor}::__l7::<lambda_cbbbee75040862a861784e2053a8fd34> *this, const ksgui::OnControlClicked *ev);
void __thiscall ChaseCamEditor::render(ChaseCamEditor *this, float dt);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cb48ad9147d9ce8fc011e44c5655f084_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_cb48ad9147d9ce8fc011e44c5655f084>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cb48ad9147d9ce8fc011e44c5655f084_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_cb48ad9147d9ce8fc011e44c5655f084>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cb48ad9147d9ce8fc011e44c5655f084_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_cb48ad9147d9ce8fc011e44c5655f084>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_377cdf5e12515769267954fd2b1d6349_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_377cdf5e12515769267954fd2b1d6349>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_377cdf5e12515769267954fd2b1d6349_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_377cdf5e12515769267954fd2b1d6349>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_377cdf5e12515769267954fd2b1d6349_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_377cdf5e12515769267954fd2b1d6349>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_099004683791e5e78b79ba2aa827763b_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_099004683791e5e78b79ba2aa827763b>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_099004683791e5e78b79ba2aa827763b_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_099004683791e5e78b79ba2aa827763b>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_099004683791e5e78b79ba2aa827763b_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_099004683791e5e78b79ba2aa827763b>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d4300ca4f51594cb9ca8b3c898e5602_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_5d4300ca4f51594cb9ca8b3c898e5602>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d4300ca4f51594cb9ca8b3c898e5602_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5d4300ca4f51594cb9ca8b3c898e5602>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d4300ca4f51594cb9ca8b3c898e5602_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5d4300ca4f51594cb9ca8b3c898e5602>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cbbbee75040862a861784e2053a8fd34_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_cbbbee75040862a861784e2053a8fd34>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cbbbee75040862a861784e2053a8fd34_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_cbbbee75040862a861784e2053a8fd34>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cbbbee75040862a861784e2053a8fd34_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_cbbbee75040862a861784e2053a8fd34>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
// void __userpurge RaceFuelMonitor::RaceFuelMonitor(RaceFuelMonitor *this@<ecx>, unsigned int a2@<ebx>, Sim *sim);
void __thiscall RaceFuelMonitor::render(RaceFuelMonitor *this, float dt);
// void __userpurge TyresApp::TyresApp(TyresApp *this@<ecx>, unsigned int a2@<ebx>, CarAvatar *icar);
TyresApp *__thiscall TyresApp::`vector deleting destructor'(TyresApp *this, unsigned int a2);
void __thiscall TyresApp::~TyresApp(TyresApp *this);
void __thiscall TyresApp::render(TyresApp *this, float dt);
void __thiscall TyreTesterForm::TyreTesterForm(TyreTesterForm *this, CarAvatar *acar, ksgui::GUI *agui);
TyreTesterForm *__thiscall TyreTesterForm::`scalar deleting destructor'(TyreTesterForm *this, unsigned int a2);
void __thiscall TyreTesterForm::~TyreTesterForm(TyreTesterForm *this);
void __thiscall TyreTesterForm::render(TyreTesterForm *this, float dt);
// void __userpurge TrackMapHandler::TrackMapHandler(TrackMapHandler *this@<ecx>, unsigned int a2@<ebx>, Sim *sim);
// void __userpurge TrackMapHandler::loadParameters(TrackMapHandler *this@<ecx>, float a2@<xmm1>, float a3@<xmm2>, std::wstring iniPath);
void __thiscall TrackMapHandler::saveParameters(TrackMapHandler *this, std::wstring iniPath);
void __thiscall TrackMapHandler::makePositiveCoordAndCalculateWidthAndHeightRT(TrackMapHandler *this);
void __thiscall TrackMapHandler::createListOfPointsToDrawFromSpline(TrackMapHandler *this);
void __thiscall TrackMapHandler::drawMapOnRenderTarget(TrackMapHandler *this, std::wstring filePath);
void __thiscall TrackMapHandler::~TrackMapHandler(TrackMapHandler *this);
void __thiscall VirtualDisplay::VirtualDisplay(VirtualDisplay *this);
// void __userpurge VirtualDisplay::updateData(VirtualDisplay *this@<ecx>, float a2@<xmm1>, float a3@<xmm2>, vec2f center);
void __thiscall VirtualDisplay::~VirtualDisplay(VirtualDisplay *this);
std::wstring *__thiscall VirtualDisplay::getType(VirtualDisplay *this, std::wstring *result);
void __thiscall std::vector<vec2f>::push_back(std::vector<vec2f> *this, const vec2f *_Val);
dObject *__thiscall dObject::`scalar deleting destructor'(dObject *this, char a2);
void __thiscall dxStepWorkingMemory::~dxStepWorkingMemory(dxStepWorkingMemory *__hidden this); // weak
void __thiscall sub_4DCCC0(int *this);
dxBody *__thiscall dxBody::`vector deleting destructor'(dxBody *this, char a2);
int __thiscall dBodyCreate(_DWORD *this);
int __thiscall dBodyDestroy(void *this);
// void __usercall dBodySetPosition(_DWORD *a1@<ecx>, int a2@<xmm1>, int a3@<xmm2>, int a4@<xmm3>);
// void __usercall dBodySetRotation(__m128i *a1@<edx>, int a2@<ecx>, char a3@<efl>);
// void __usercall dBodyAddRelForceAtRelPos(float *a1@<ecx>, float a2@<xmm1>, float a3@<xmm2>, float a4@<xmm3>, float a5, float a6, float a7);
unsigned int __fastcall dBodySetAutoDisableAverageSamplesCount(int a1, int a2);
// void __usercall dJointGroupEmpty(unsigned int *a1@<ecx>, int a2@<esi>);
// void __usercall dJointAttach(int a1@<edx>, int *a2@<ecx>, int a3);
int __thiscall dWorldDestroy(_DWORD *this);
dxJoint *__fastcall createJoint<dxJointContact>(dxWorld *a1, _DWORD *a2);
void __thiscall sub_4DD990(void *Block);
void __cdecl sub_4DD9D0(int *a1, dxGeom *a2, dxGeom *a3);
int __cdecl sub_4DDA00(dxGeom *a1, dxGeom *a2, int a3, int a4, int a5);
int (__cdecl **dInitColliders())(struct dxGeom *a1, struct dxGeom *a2, int a3, struct dContactGeom *a4, int a5);
// int __usercall dCollide@<eax>(dxGeom *a1@<edx>, dxGeom *a2@<ecx>, int a3, int a4, int a5);
dxGeom *__thiscall dxGeom::dxGeom(dxGeom *this, dxSpace *a2, int a3);
dxGeom *__thiscall dxGeom::`scalar deleting destructor'(dxGeom *this, char a2);
void __thiscall dxGeom::~dxGeom(dxGeom *__hidden this); // weak
int __thiscall dxGeom::AABBTest(dxGeom *this, struct dxGeom *a2, float *const a3);
void __thiscall dxGeom::bodyRemove(dxGeom *__hidden this); // weak
// float *__usercall getBodyPosr@<eax>(float *a1@<edx>, int a2@<ecx>, const struct dxPosR *a3);
float *__thiscall dxGeom::computePosr(dxGeom *this);
char __thiscall dxGeom::controlGeometry(dxGeom *this, int a2, int a3, void *a4, int *a5);
void __fastcall dGeomSetBody(int a1, int a2);
// void __usercall dGeomSetRotation(__m128i *a1@<edx>, dxGeom *a2@<ecx>, char a3@<efl>);
void __thiscall dGeomCreateOffset(_DWORD *this);
// int __usercall sub_4DEEB0@<eax>(int a1@<edx>, int a2@<ecx>, int a3, int (__cdecl *a4)(int, int, int));
void __fastcall dGeomMoved(_DWORD *a1);
dxSpace *__fastcall dxSpace::dxSpace(dxSpace *this, int a2, dxSpace *a3);
dxSpace *__thiscall dxSpace::`scalar deleting destructor'(dxSpace *this, char a2);
void __thiscall dxSpace::~dxSpace(dxSpace *__hidden this); // weak
int __fastcall dxSpace::computeAABB(dxSpace *this);
int __thiscall dxSpace::getGeom(dxSpace *this, int a2);
void __thiscall dxSpace::add(dxSpace *__hidden this, struct dxGeom *); // weak
void __thiscall dxSpace::remove(dxSpace *__hidden this, struct dxGeom *); // weak
int __thiscall dxSpace::dirty(dxSpace *this, struct dxGeom *a2);
void __thiscall dxSimpleSpace::cleanGeoms(dxSimpleSpace *__hidden this); // weak
dxSimpleSpace *__thiscall dxSimpleSpace::collide(dxSimpleSpace *this, void *a2, void (__cdecl *a3)(void *, struct dxGeom *, struct dxGeom *));
char __thiscall dxSimpleSpace::collide2(dxSimpleSpace *this, void *a2, struct dxGeom *a3, int (__cdecl *a4)(void *, int, struct dxGeom *));
int __cdecl sub_4DF640(int a1, int a2, int a3);
// int __usercall dSpaceCollide2@<eax>(dxGeom *a1@<edx>, dxGeom *a2@<ecx>, int a3, int (__cdecl *a4)(int, int, int));
char __thiscall std::vector<unsigned char>::_Buy(_DWORD *this, unsigned int a2);
dxRay *__thiscall dxRay::`vector deleting destructor'(dxRay *this, char a2);
int __thiscall dxRay::computeAABB(dxRay *this);
// int __usercall sub_4DF940@<eax>(float *a1@<edx>, int a2@<ecx>, float a3@<xmm2>, float *a4, int a5);
int __cdecl dCollideRaySphere(float **a1, float **a2, int a3, struct dContactGeom *a4);
int __cdecl dCollideRayBox(float **a1, float **a2, int a3, struct dContactGeom *a4);
int __cdecl dCollideRayCapsule(float **a1, struct dxGeom *a2, int a3, struct dContactGeom *a4);
int __cdecl dCollideRayPlane(struct dxGeom *a1, struct dxGeom *a2, int a3, struct dContactGeom *a4);
int __cdecl dCollideRayCylinder(float **a1, float **a2, int a3, struct dContactGeom *a4);
dxJointSlider *__fastcall dxJointSlider::dxJointSlider(dxJointSlider *this, int a2, dxWorld *a3);
dxJointSlider *__thiscall dxJointSlider::`scalar deleting destructor'(dxJointSlider *this, char a2);
__m128 __thiscall dJointGetSliderPosition(int this);
struct dxJoint::SureMaxInfo *__thiscall dxJointSlider::getSureMaxInfo(dxJointSlider *this, struct dxJoint::SureMaxInfo *a2);
void __thiscall dxJointSlider::getInfo1(dxJointSlider *__hidden this, struct dxJoint::Info1 *); // weak
int __thiscall dxJointSlider::getInfo2(dxJointSlider *this, float a2, float a3, const struct dxJoint::Info2Descr *a4);
int __thiscall FWCmdFFBEffectPeriodicSine::EffectIdGet(FWCmdFFBEffectPeriodicSine *this);
int __thiscall dxJointSlider::size(dxJointSlider *this);
void __thiscall dxJointSlider::setRelativeValues(dxJointSlider *__hidden this); // weak
void __thiscall dxJointSlider::computeInitialRelativeRotation(dxJointSlider *__hidden this); // weak
float *__thiscall dxJointSlider::computeOffset(dxJointSlider *this);
dxJointBall *__fastcall dxJointBall::dxJointBall(dxJointBall *this, int a2, dxWorld *a3);
dxJointBall *__thiscall dxJointBall::`scalar deleting destructor'(dxJointBall *this, char a2);
struct dxJoint::SureMaxInfo *__thiscall dxJointBall::getSureMaxInfo(dxJointBall *this, struct dxJoint::SureMaxInfo *a2);
struct dxJoint::Info1 *__thiscall dxJointBall::getInfo1(dxJointBall *this, struct dxJoint::Info1 *a2);
int __thiscall dxJointBall::getInfo2(dxJointBall *this, float a2, float a3, const struct dxJoint::Info2Descr *a4);
int __thiscall jsonwriter::Array::GetType(jsonwriter::Array *this);
int __thiscall dxJointFixed::size(dxJointFixed *this);
struct dxJoint *__thiscall dxJointBall::setRelativeValues(dxJointBall *this);
dxJointFixed *__fastcall dxJointFixed::dxJointFixed(dxJointFixed *this, int a2, dxWorld *a3);
struct dxJoint::Info1 *__thiscall dxJointFixed::getInfo1(dxJointFixed *this, struct dxJoint::Info1 *a2);
int __thiscall dxJointFixed::getInfo2(dxJointFixed *this, float a2, float a3, const struct dxJoint::Info2Descr *a4);
void __thiscall dJointSetFixed(int this);
int __thiscall FWCmdFFBEffectPositionSpring::EffectIdGet(FWCmdFFBEffectPositionSpring *this);
void __thiscall dxJointFixed::computeInitialRelativeRotation(dxJointFixed *__hidden this); // weak
dxJointDBall *__fastcall dxJointDBall::dxJointDBall(dxJointDBall *this, int a2, dxWorld *a3);
dxJointDBall *__thiscall dxJointDBall::`scalar deleting destructor'(dxJointDBall *this, char a2);
struct dxJoint::SureMaxInfo *__thiscall dxJointDBall::getSureMaxInfo(dxJointDBall *this, struct dxJoint::SureMaxInfo *a2);
struct dxJoint::Info1 *__thiscall dxJointDBall::getInfo1(dxJointDBall *this, struct dxJoint::Info1 *a2);
float *__thiscall dxJointDBall::getInfo2(dxJointDBall *this, float a2, float a3, const struct dxJoint::Info2Descr *a4);
float *__thiscall dxJointDBall::updateTargetDistance(dxJointDBall *this);
// float *__usercall dJointSetDBallAnchor1@<eax>(dxJointDBall *this@<ecx>, float a2@<xmm1>, float a3@<xmm2>, float a4@<xmm3>);
// float *__usercall dJointSetDBallAnchor2@<eax>(dxJointDBall *this@<ecx>, float a2@<xmm1>, float a3@<xmm2>, float a4@<xmm3>);
int dxJointDBall::type();
int __thiscall dxJointDBall::size(dxJointDBall *this);
void *__thiscall Opcode::LSSCache::~LSSCache(Opcode::LSSCache *this);
Opcode::OBBCache *__thiscall Opcode::OBBCache::OBBCache(Opcode::OBBCache *this);
// Opcode::LSSCache *__usercall Opcode::LSSCache::LSSCache@<eax>(Opcode::LSSCache *this@<ecx>, __m128 a2@<xmm0>);
void __thiscall VertexUseCache::~VertexUseCache(VertexUseCache *__hidden this); // weak
// TrimeshCollidersCache *__usercall TrimeshCollidersCache::TrimeshCollidersCache@<eax>(TrimeshCollidersCache *this@<ecx>, __m128 a2@<xmm0>);
// char __usercall sub_4E3300@<al>(int a1@<ecx>, __m128 a2@<xmm0>);
void __thiscall TrimeshCollidersCache::~TrimeshCollidersCache(TrimeshCollidersCache *__hidden this); // weak
char sub_4E3650();
int sub_4E3760();
// char __usercall sub_4E3860@<al>(char a1@<cl>, __m128 a2@<xmm0>);
// void __usercall FetchTriangle(int a1@<edx>, int a2@<ecx>, struct dxTriMesh *a3, float *a4, float *a5);
BOOL __thiscall dMassCheck(float *this);
int __fastcall dMassSetZero(_DWORD *a1);
BOOL __thiscall dMassSetParameters(float *this);
dxPlane *__thiscall dxPlane::`scalar deleting destructor'(dxPlane *this, char a2);
float *__thiscall dxBox::computeAABB(dxBox *this);
// dxGeom *__usercall dCreateBox@<eax>(dxSpace *a1@<ecx>, float a2@<xmm1>, float a3@<xmm2>, float a4@<xmm3>);
double __cdecl dGeomBoxPointDepth(int a1, float a2, float a3, float a4);
// int __usercall sub_4E4360@<eax>(char *a1@<edx>, int a2@<ecx>, char *a3);
// float *__usercall cullPoints@<eax>(float *a1@<edx>, signed int a2@<ecx>, int a3, float *const a4, _DWORD *a5);
// int __usercall dBoxBox@<eax>(float *a1@<edx>, float *a2@<ecx>, float *a3, float *a4, float *a5, float *a6, _DWORD *a7, float a8, int *a9, int a10, int a11, int a12);
int __cdecl dCollideBoxBox(struct dxGeom *a1, struct dxGeom *a2, int a3, struct dContactGeom *a4, int a5);
int __cdecl dCollideBoxPlane(struct dxGeom *a1, struct dxGeom *a2, unsigned __int16 a3, struct dContactGeom *a4, int a5);
void __thiscall dRSetIdentity(_DWORD *this);
void __fastcall dQfromR(float *a1, float *a2);
float *__thiscall IceMaths::Point::operator-(float *this, float *a2, float *a3);
float *__thiscall IceMaths::Point::operator^(float *this, float *a2, float *a3);
dxTriMeshData *__thiscall dxTriMeshData::dxTriMeshData(dxTriMeshData *this);
float *__thiscall dxTriMeshData::Build(dxTriMeshData *this, char *a2, int a3, int a4, const void *a5, int a6, int a7, const void *a8, bool a9);
dxTriMesh *__thiscall dxTriMesh::dxTriMesh(dxTriMesh *this, dxSpace *a2, dxTriMeshData *a3);
dxTriMesh *__thiscall dxTriMesh::`vector deleting destructor'(dxTriMesh *this, char a2);
void __thiscall dxTriMesh::~dxTriMesh(dxTriMesh *__hidden this); // weak
char __thiscall dxTriMesh::controlGeometry(dxTriMesh *this, int a2, int a3, int *a4, int *a5);
char __thiscall dxTriMesh::controlGeometry_SetMergeSphereContacts(dxTriMesh *this, int a2);
char __thiscall dxTriMesh::controlGeometry_GetMergeSphereContacts(dxTriMesh *this, int *a2);
float *__thiscall dxTriMesh::computeAABB(dxTriMesh *this);
int __thiscall _dSafeNormalize3(float *this);
// int __usercall dPlaneSpace@<eax>(int a1@<edx>, float *a2@<ecx>, int a3);
// int __usercall dOrthogonalizeR@<eax>(int a1@<ecx>, char a2@<efl>);
void __thiscall dxMutexGroupLockHelper::~dxMutexGroupLockHelper(dxMutexGroupLockHelper *__hidden this); // weak
void __thiscall dxWorldProcessContext::~dxWorldProcessContext(dxWorldProcessContext *__hidden this); // weak
int __thiscall dxWorldProcessContext::CleanupWorldReferences(dxWorldProcessContext *this);
char __thiscall dxWorldProcessContext::EnsureStepperSyncObjectsAreAllocated(dxWorldProcessContext *this, struct dxWorld *a2);
signed __int32 *__fastcall dxWorldProcessContext::ObtainStepperMemArena(dxWorldProcessContext *this);
bool __thiscall dxWorldProcessContext::ReallocateStepperMemArenas(dxWorldProcessContext *this, struct dxWorld *a2, unsigned int a3, unsigned int a4, int (__cdecl **a5)(unsigned int), float a6, unsigned int a7);
int __thiscall dxWorldProcessContext::FreeArenasList(_DWORD *this);
int __thiscall dxWorldProcessContext::LockForAddLimotSerialization(dxWorldProcessContext *this);
int __thiscall dxWorldProcessContext::UnlockForAddLimotSerialization(dxWorldProcessContext *this);
// void __usercall dInternalHandleAutoDisabling(int a1@<ecx>, float a2@<xmm1>);
// int (__cdecl *__usercall dxStepBody@<eax>(int a1@<ecx>, float a2@<xmm1>))(int);
// unsigned int __usercall sub_4E9330@<eax>(unsigned int *a1@<edx>, unsigned int *a2@<ecx>, float a3@<xmm3>, _DWORD *a4);
// BOOL __usercall dxProcessIslands@<eax>(int a1@<edx>, int a2@<ecx>, int a3@<xmm2>);
int __cdecl dxIslandsProcessingCallContext::ThreadedProcessJobStart_Callback(dxIslandsProcessingCallContext *a1);
int __thiscall dxIslandsProcessingCallContext::ThreadedProcessJobStart(dxIslandsProcessingCallContext *this);
int __cdecl dxIslandsProcessingCallContext::ThreadedProcessIslandSearch_Callback(dxIslandsProcessingCallContext **a1);
int __thiscall dxIslandsProcessingCallContext::ThreadedProcessIslandSearch(dxIslandsProcessingCallContext *this, struct dxSingleIslandCallContext *a2);
int __cdecl dxIslandsProcessingCallContext::ThreadedProcessIslandStepper_Callback(char *a1);
// _DWORD *__usercall dxWorldProcessMemArena::ReallocateMemArena@<eax>(unsigned int a1@<edx>, _DWORD *a2@<ecx>, float a3@<xmm3>, int (__cdecl **a4)(unsigned int), unsigned int a5);
// bool __usercall dxReallocateWorldProcessContext@<al>(unsigned int *a1@<edx>, int a2@<ecx>, int a3@<xmm2>);
int __cdecl sub_4E9D00(char *Format, va_list ArgList);
void __noreturn dDebug(int a1, char *Format, ...);
int dMessage(int a1, char *a2, ...);
// float *__usercall sub_4E9E80@<eax>(int a1@<edx>, float *a2@<ecx>, int a3, int a4, int a5, int a6);
// int __usercall sub_4E9F30@<eax>(unsigned int a1@<edx>, float *a2@<ecx>, int a3, unsigned int a4);
// int __usercall sub_4EA000@<eax>(unsigned int a1@<edx>, float *a2@<ecx>, int a3, unsigned int a4);
// int (__cdecl *__usercall dxStepIsland@<eax>(__m128 a1@<xmm0>, const struct dxStepperProcessingCallContext *a2))(int);
int __cdecl sub_4EA250(volatile __int32 *a1);
int __thiscall sub_4EA260(volatile __int32 *this);
int __cdecl sub_4EB2F0(_DWORD *a1);
int __thiscall sub_4EB300(_DWORD *this);
// int __usercall sub_4EB580@<eax>(__m128 a1@<xmm0>, int a2);
// int (__cdecl *__usercall sub_4EB590@<eax>(int a1@<ecx>, __m128 a2@<xmm0>))(int);
// int __usercall sub_4EB8C0@<eax>(__m128 a1@<xmm0>, _DWORD *a2);
// int __usercall sub_4EB8D0@<eax>(_DWORD *a1@<ecx>, __m128 a2@<xmm0>);
int __cdecl sub_4EBBF0(_DWORD **a1, int a2, struct dxCallReleasee *a3);
float *__thiscall sub_4EBC60(volatile signed __int32 *this);
int __cdecl sub_4EC1D0(_DWORD **a1, int a2, struct dxCallReleasee *a3);
signed __int32 __thiscall sub_4EC240(volatile signed __int32 *this);
int __cdecl sub_4EC670(_DWORD *a1);
int (__cdecl *__thiscall sub_4EC680(_DWORD *this))(int);
unsigned int __cdecl dxEstimateStepMemoryRequirements(struct dxBody *const *, unsigned int, struct dxJoint *const *, unsigned int); // weak
unsigned int __cdecl dxEstimateStepMaxCallCount(unsigned int, unsigned int); // weak
dxJointContact *__thiscall dxJointContact::`scalar deleting destructor'(dxJointContact *this, char a2);
struct dxJoint::SureMaxInfo *__thiscall dxJointContact::getSureMaxInfo(dxJointContact *this, struct dxJoint::SureMaxInfo *a2);
struct dxJoint::Info1 *__thiscall dxJointContact::getInfo1(dxJointContact *this, struct dxJoint::Info1 *a2);
int __thiscall dxJointContact::getInfo2(dxJointContact *this, float a2, float a3, const struct dxJoint::Info2Descr *a4);
int __thiscall FWCmdFFBEffectPeriodicTriangle::EffectIdGet(FWCmdFFBEffectPeriodicTriangle *this);
int __thiscall dxJointContact::size(dxJointContact *this);
void *__cdecl dAlloc(size_t Size);
void *__cdecl dRealloc(void *Block, int a2, size_t Size);
void __cdecl dFree(void *Block, int a2);
dxWorld *__fastcall dxWorld::dxWorld(dxWorld *this);
dxWorld *__thiscall dxWorld::`scalar deleting destructor'(dxWorld *this, char a2);
int __thiscall dxWorld::RetrieveThreadingDefaultImpl(dxWorld *this, struct dxThreadingImplementation **a2);
BOOL __cdecl _dFactorCholesky(int *a1);
// float *__usercall _dSolveCholesky@<eax>(int a1@<edx>, unsigned int a2@<ecx>, int a3, __m128 *a4);
BOOL __fastcall _dInvertPDMatrix(void *Src, unsigned int a2);
BOOL __thiscall _dIsPositiveDefinite(void *Src);
// void __usercall _dVectorScale(__m128 *a1@<edx>, unsigned int a2@<ecx>, int a3);
// void __usercall _dLDLTAddTL(float *a1@<edx>, int a2@<ecx>, float *a3, int a4, int a5, int *a6);
// char *__usercall _dLDLTRemove@<eax>(char *a1@<edx>, int a2@<ecx>, int a3, float *a4, float *a5, signed int a6, int a7, int *a8);
// char *__usercall _dRemoveRowCol@<eax>(char *a1@<edx>, int a2@<ecx>, int a3, int a4);
dxJoint *__fastcall dxJoint::dxJoint(dxJoint *this, int a2, dxWorld *a3);
dxJoint *__thiscall dxJoint::`vector deleting destructor'(dxJoint *this, char a2);
int __thiscall dxJointGroup::exportJoints(dxJointGroup *this, struct dxJoint **a2);
// int __usercall setBall@<eax>(int a1@<edx>, int a2@<ecx>, float a3@<xmm1>, float a4@<xmm2>, struct dxJoint *a5, float *a6);
// int __usercall setFixedOrientation@<eax>(_DWORD *a1@<edx>, int a2@<ecx>, float a3@<xmm1>, float a4@<xmm2>, struct dxJoint *a5, float a6);
// struct dxJoint *__usercall setAnchors@<eax>(int a1@<edx>, int a2@<ecx>, float a3@<xmm1>, float a4@<xmm2>, float a5@<xmm3>, struct dxJoint *a6);
// int __usercall setAxes@<eax>(int a1@<ecx>, float a2@<xmm1>, float a3@<xmm2>, float a4@<xmm3>);
// struct dxJoint *__usercall getAnchor2@<eax>(float *a1@<edx>, int a2@<ecx>, struct dxJoint *a3);
// int __userpurge dxJointLimitMotor::addLimot@<eax>(dxJointLimitMotor *this@<ecx>, float a2@<xmm2>, float **a3, int *a4, const struct dxJoint::Info2Descr *a5, float *a6, const float *const a7, int a8);
int __thiscall dObStack::alloc(dObStack *this, unsigned int a2);
double __cdecl dGeomCapsulePointDepth(int a1, float a2, float a3, float a4);
int __cdecl dCollideCapsuleSphere(struct dxGeom *a1, struct dxGeom *a2, int a3, struct dContactGeom *a4);
int __cdecl dCollideCapsuleBox(struct dxGeom *a1, struct dxGeom *a2, int a3, struct dContactGeom *a4, int a5);
int __cdecl dCollideCapsuleCapsule(struct dxGeom *a1, struct dxGeom *a2, unsigned __int16 a3, struct dContactGeom *a4, int a5);
int __cdecl dCollideCapsulePlane(struct dxGeom *a1, struct dxGeom *a2, unsigned __int16 a3, struct dContactGeom *a4, int a5);
// float *__usercall MakeMatrix@<eax>(const float *a1@<edx>, const float *a2@<ecx>, float *a3);
// char __usercall sub_4F1010@<al>(__m128 *a1@<edx>, __m128 *a2@<ecx>, float a3@<xmm1>, float *a4, float *a5, float *a6, float *a7, float *a8);
int __cdecl dCollideSTL(const struct Model **a1, struct dxGeom *a2, int a3, struct dContactGeom *a4, int a5);
void __thiscall dArray<dxTriMesh::SphereTC>::push(dArrayBase *this, __int128 a2, __int128 a3, __int64 a4, int a5);
double __cdecl dGeomSpherePointDepth(int a1, float a2, float a3, float a4);
int __cdecl dCollideSphereSphere(struct dxGeom *a1, struct dxGeom *a2, int a3, struct dContactGeom *a4);
int __cdecl dCollideSphereBox(float **a1, float **a2, int a3, struct dContactGeom *a4);
int __cdecl dCollideSpherePlane(struct dxGeom *a1, struct dxGeom *a2, int a3, struct dContactGeom *a4);
int __cdecl dCollideTrimeshPlane(float **a1, struct dxGeom *a2, unsigned __int16 a3, struct dContactGeom *a4, int a5);
// __m128 __usercall ClosestPointBetweenSegments@<xmm0>(float *a1@<edx>, float *a2@<ecx>, float (*a3)[4], float (*a4)[4], float (*a5)[4], float (*a6)[4]);
// char __usercall IsPointInPolygon@<al>(int *a1@<edx>, float *a2@<ecx>, float *const a3, unsigned int *a4, float *a5);
int __cdecl dCollideConvexPlane(struct dxGeom *a1, struct dxGeom *a2, unsigned __int16 a3, struct dContactGeom *a4, int a5);
int __cdecl dCollideSphereConvex(float **a1, struct dxGeom *a2, int a3, struct dContactGeom *a4);
int __cdecl FWCmdFFBEffectConstant::EffectIdGet();
// char __usercall CheckSATConvexFaces@<al>(_DWORD *a1@<edx>, _DWORD *a2@<ecx>, struct dxConvex *a3);
// char __usercall CheckSATConvexEdges@<al>(_DWORD *a1@<edx>, _DWORD *a2@<ecx>, struct dxConvex *a3);
unsigned int __thiscall GetSupportSide(int *this);
// int __usercall TestConvexIntersection@<eax>(_DWORD *a1@<edx>, int a2@<ecx>, struct dxConvex *a3, struct dxConvex *a4, int a5);
int __cdecl dCollideConvexConvex(struct dxGeom *a1, struct dxGeom *a2, struct dxConvex *a3, struct dContactGeom *a4, int a5);
BOOL __cdecl dCollideRayConvex(float **a1, float **a2, int a3, struct dContactGeom *a4);
void __thiscall HeightFieldPlane::~HeightFieldPlane(void *);
int __cdecl sub_4F5DF0(struct dxGeom *a1, const struct Model **a2, unsigned __int16 a3, struct dContactGeom *a4, int a5);
// int __userpurge dxHeightfieldData::GetHeight@<xmm0>(dxHeightfieldData *this@<ecx>, int a2, int a3);
int __thiscall dxHeightfield::allocatePlaneBuffer(dxHeightfield *this, unsigned int a2);
_DWORD *__thiscall dxHeightfield::allocateHeightBuffer(dxHeightfield *this, unsigned int a2, unsigned int a3);
int __thiscall dxHeightfield::dCollideHeightfieldZone(dxHeightfield *this, int a2, int a3, int a4, int a5, struct dxGeom *a6, int a7, unsigned int a8, struct dContactGeom *a9, int a10);
int __cdecl dCollideHeightfield(struct dxGeom *a1, struct dxGeom *a2, unsigned int a3, struct dContactGeom *a4, int a5);
void __thiscall sCylinderTrimeshColliderData::_OptimizeLocalContacts(sCylinderTrimeshColliderData *__hidden this); // weak
int __thiscall sCylinderTrimeshColliderData::_ProcessLocalContacts(sCylinderTrimeshColliderData *this, struct dContactGeom *a2, struct dxGeom *a3, struct dxTriMesh *a4);
char __thiscall sCylinderTrimeshColliderData::_cldTestAxis(sCylinderTrimeshColliderData *this, const float (*a2)[4], const float (*a3)[4], const float (*a4)[4], float (*a5)[4], int a6, bool a7);
char __thiscall sCylinderTrimeshColliderData::_cldTestCircleToEdgeAxis(sCylinderTrimeshColliderData *this, const float (*a2)[4], const float (*a3)[4], const float (*a4)[4], const float (*a5)[4], const float (*a6)[4], const float (*a7)[4], const float (*a8)[4], int a9);
bool __thiscall sCylinderTrimeshColliderData::_cldTestSeparatingAxes(sCylinderTrimeshColliderData *__hidden this, const float (*)[4], const float (*)[4], const float (*)[4]); // weak
char __thiscall sCylinderTrimeshColliderData::_cldClipCylinderEdgeToTriangle(sCylinderTrimeshColliderData *this, const float (*a2)[4], const float (*a3)[4], const float (*a4)[4]);
int __thiscall sCylinderTrimeshColliderData::_cldClipCylinderToTriangle(sCylinderTrimeshColliderData *this, const float (*a2)[4], const float (*a3)[4], const float (*a4)[4]);
char __thiscall sCylinderTrimeshColliderData::TestOneTriangleVsCylinder(sCylinderTrimeshColliderData *this, const float (*a2)[4], const float (*a3)[4], const float (*a4)[4], bool a5);
char *__thiscall sCylinderTrimeshColliderData::_InitCylinderTrimeshData(sCylinderTrimeshColliderData *this, float **a2, float **a3);
int __thiscall sCylinderTrimeshColliderData::TestCollisionForSingleTriangle(sCylinderTrimeshColliderData *this, int a2, int a3, float (*const a4)[4], bool *a5);
// char __usercall sub_4FA230@<al>(int a1@<edx>, Opcode::OBBCollider *a2@<ecx>, int a3, int a4, unsigned int a5);
int __cdecl dCollideCylinderTrimesh(struct dxGeom *a1, float **a2, int a3, struct dContactGeom *a4, int a5);
void __thiscall dArray<dxTriMesh::BoxTC>::push(dArrayBase *this, __int128 a2, __int128 a3, __int128 a4, __int128 a5, __int128 a6, __int64 a7);
void __thiscall sCylinderBoxData::_cldInitCylinderBox(sCylinderBoxData *__hidden this); // weak
int __thiscall sCylinderBoxData::_cldTestAxis(sCylinderBoxData *this, float (*a2)[4], int a3);
int __thiscall sCylinderBoxData::_cldTestEdgeCircleAxis(sCylinderBoxData *this, const float (*a2)[4], const float (*a3)[4], const float (*a4)[4], int a5);
BOOL __thiscall sCylinderBoxData::_cldTestSeparatingAxes(sCylinderBoxData *this);
int __thiscall sCylinderBoxData::_cldClipCylinderToBox(sCylinderBoxData *this);
int __thiscall sCylinderBoxData::_cldClipBoxToCylinder(sCylinderBoxData *this);
int __cdecl dCollideCylinderBox(struct dxGeom *a1, struct dxGeom *a2, int a3, struct dContactGeom *a4, int a5);
void __thiscall sTrimeshCapsuleColliderData::_OptimizeLocalContacts(sTrimeshCapsuleColliderData *__hidden this); // weak
unsigned int __thiscall sTrimeshCapsuleColliderData::_ProcessLocalContacts(sTrimeshCapsuleColliderData *this, struct dContactGeom *a2, struct dxTriMesh *a3, struct dxGeom *a4);
// int __usercall sTrimeshCapsuleColliderData::_cldClipEdgeToPlane@<eax>(float *a1@<edx>, float *a2@<ecx>, float (*a3)[4]);
int __thiscall sTrimeshCapsuleColliderData::_cldTestAxis(sTrimeshCapsuleColliderData *this, const float (*a2)[4], const float (*a3)[4], const float (*a4)[4], float *const a5, int a6, int a7);
int __thiscall sTrimeshCapsuleColliderData::_cldTestSeparatingAxesOfCapsule(sTrimeshCapsuleColliderData *this, const float (*a2)[4], const float (*a3)[4], const float (*a4)[4], unsigned __int8 a5);
unsigned int __thiscall sTrimeshCapsuleColliderData::_cldTestOneTriangleVSCapsule(sTrimeshCapsuleColliderData *this, const float (*a2)[4], const float (*a3)[4], const float (*a4)[4], unsigned __int8 a5);
int __thiscall sTrimeshCapsuleColliderData::SetupInitialContext(sTrimeshCapsuleColliderData *this, const __m128i **a2, struct dxGeom *a3, int a4, int a5);
int __thiscall sTrimeshCapsuleColliderData::TestCollisionForSingleTriangle(sTrimeshCapsuleColliderData *this, int a2, int a3, float (*const a4)[4], unsigned __int8 a5, bool *a6);
// char __usercall sub_4FF430@<al>(int a1@<edx>, Opcode::OBBCollider *a2@<ecx>, int a3, int a4, unsigned int a5);
unsigned int __cdecl dCollideCCTL(const __m128i **a1, struct dxGeom *a2, int a3, struct dContactGeom *a4, int a5);
int __cdecl dCollideCylinderPlane(struct dxGeom *a1, struct dxGeom *a2, unsigned __int16 a3, struct dContactGeom *a4, int a5);
// char __userpurge sTrimeshBoxColliderData::_cldTestFace@<al>(sTrimeshBoxColliderData *this@<ecx>, float a2@<xmm1>, float a3@<xmm2>, float a4@<xmm3>, float a5, float a6, _DWORD *a7, float a8, float a9, float *const a10, int a11);
// char __userpurge sTrimeshBoxColliderData::_cldTestEdge@<al>(sTrimeshBoxColliderData *this@<ecx>, float a2@<xmm1>, float a3@<xmm2>, float a4@<xmm3>, float a5, float *a6, float a7, float a8, float *const a9, int a10);
// int __usercall sub_500140@<eax>(int a1@<edx>, int a2@<ecx>, int a3, int *a4, float *a5);
char __thiscall sTrimeshBoxColliderData::_cldTestSeparatingAxes(sTrimeshBoxColliderData *this, const float (*a2)[4], const float (*a3)[4], const float (*a4)[4]);
int *__thiscall sTrimeshBoxColliderData::_cldClipping(sTrimeshBoxColliderData *this, const float (*a2)[4], const float (*a3)[4], const float (*a4)[4], float *a5);
struct dContactGeom *__thiscall sTrimeshBoxColliderData::SetupInitialContext(sTrimeshBoxColliderData *this, struct dxTriMesh *a2, int **a3, int a4, struct dContactGeom *a5, int a6);
int __thiscall sTrimeshBoxColliderData::TestCollisionForSingleTriangle(sTrimeshBoxColliderData *this, int a2, float *a3, float (*const a4)[4], bool *a5);
// char __usercall sub_502F70@<al>(_DWORD *a1@<edx>, int a2@<ecx>, int a3, dxGeom *a4, struct Opcode::OBBCache *a5);
int __cdecl dCollideBTL(int (__cdecl **a1)(struct dxGeom *, int **, float *), int **a2, int a3, struct dContactGeom *a4, int a5);
// float *__usercall sub_5033E0@<eax>(int a1@<edx>, int a2@<ecx>, int a3, int a4, int a5, float *a6, float *a7, float *a8, float a9, int *a10);
int __cdecl dCollideCylinderSphere(struct dxGeom *a1, struct dxGeom *a2, int a3, struct dContactGeom *a4);
int __cdecl dCollideRTL(const struct Model **a1, struct dxGeom *a2, unsigned __int16 a3, struct dContactGeom *a4, int a5);
float *__thiscall dxGeomTransform::computeFinalTx(dxGeomTransform *this);
int __cdecl dCollideTransform(struct dxGeom *a1, struct dxGeom *a2, int a3, struct dContactGeom *a4, int a5);
__int64 __fastcall UpdateContactKey(_DWORD *a1, int a2);
int __fastcall AddContactToNode(_DWORD *a1, int a2);
int __fastcall RemoveArbitraryContactFromSet(int a1, int a2);
// char __usercall AllocNewContact@<al>(char **a1@<edx>, _DWORD *a2@<ecx>, const float *const a3, struct dContactGeom **a4, int a5, struct CONTACT_KEY_HASH_TABLE *a6, struct dContactGeom *a7);
int __cdecl FreeExistingContact(struct dContactGeom *a1, int a2, struct CONTACT_KEY_HASH_TABLE *a3, struct dContactGeom *a4);
// float *__usercall PushNewContact@<eax>(int a1@<edx>, int a2@<ecx>, struct dxGeom *a3, struct dxGeom *a4, _DWORD *a5, float *a6, const float *const a7, const float *a8, struct dContactGeom *a9, int a10, struct CONTACT_KEY_HASH_TABLE *a11, struct dContactGeom *a12);
// int __usercall dCollideTTL@<eax>(const float *a1@<xmm0>, struct dxGeom *a2, struct dxGeom *a3, const float *a4, struct dContactGeom *a5, struct CONTACT_KEY_HASH_TABLE *a6);
// float *__usercall sub_504A10@<eax>(_DWORD *a1@<edx>, float *a2@<ecx>, float a3@<xmm1>);
// int __usercall sub_504D90@<eax>(float *a1@<edx>, int a2@<ecx>, float a3@<xmm2>, int a4);
float *__cdecl ClipPointsByTri(const float (*a1)[4], float *a2, const float (*const a3)[4], float *a4);
// void *__usercall FindTriangleTriangleCollision@<eax>(int a1@<edx>, float *a2@<ecx>, const float (*const a3)[4], float (*a4)[4]);
// char __usercall sub_505440@<al>(int a1@<edx>, float *a2@<ecx>, const float *a3@<xmm0>, struct dxGeom *a4, struct dxGeom *a5, int a6, int a7, const float *a8, struct dContactGeom *a9, int a10, struct CONTACT_KEY_HASH_TABLE *a11, struct dContactGeom *a12);
char __thiscall IceCore::Container::Resize(IceCore::Container *this, unsigned int a2);
void COdeTls::CleanupForThread();
void __stdcall COdeTls::FreeTrimeshCollidersCache_Callback(TrimeshCollidersCache *a1);
void *__stdcall sub_5056B0(size_t Size);
void *__stdcall sub_5056E0(void *Block, size_t Size);
void __stdcall sub_505710(void *Block);
_DWORD *__thiscall IceMaths::Point::operator-(_DWORD *this, _DWORD *a2);
_DWORD *__thiscall IceMaths::Matrix4x4::operator IceMaths::Matrix3x3(int *this, _DWORD *a2);
float *__thiscall IceMaths::Matrix4x4::operator*(float *this, float *a2, float *a3);
void __thiscall Opcode::Collider::InitQuery(Opcode::Collider *__hidden this); // weak
// BOOL __usercall CoplanarTriTri@<eax>(int a1@<edx>, _DWORD *a2@<ecx>, const struct IceMaths::Point *a3, const struct IceMaths::Point *a4, const struct IceMaths::Point *a5, const struct IceMaths::Point *a6, const struct IceMaths::Point *a7);
Opcode::AABBTreeCollider *__thiscall Opcode::AABBTreeCollider::AABBTreeCollider(Opcode::AABBTreeCollider *this);
Opcode::AABBTreeCollider *__thiscall Opcode::AABBTreeCollider::`vector deleting destructor'(Opcode::AABBTreeCollider *this, char a2);
void __thiscall Opcode::AABBTreeCollider::~AABBTreeCollider(Opcode::AABBTreeCollider *__hidden this); // weak
const char *__thiscall Opcode::OBBCollider::ValidateSettings(Opcode::OBBCollider *__hidden this); // weak
char __thiscall Opcode::AABBTreeCollider::Collide(Opcode::AABBTreeCollider *this, struct Opcode::BVTCache *a2, const struct IceMaths::Matrix4x4 *a3, const struct IceMaths::Matrix4x4 *a4);
int __thiscall Opcode::AABBTreeCollider::InitQuery(Opcode::AABBTreeCollider *this, const struct IceMaths::Matrix4x4 *a2, const struct IceMaths::Matrix4x4 *a3);
char __thiscall Opcode::AABBTreeCollider::Collide(Opcode::AABBTreeCollider *this, const struct Opcode::AABBCollisionNode **a2, const struct Opcode::AABBCollisionNode **a3, const struct IceMaths::Matrix4x4 *a4, const struct IceMaths::Matrix4x4 *a5, struct IceCore::Pair *a6);
char __thiscall Opcode::AABBTreeCollider::Collide(Opcode::AABBTreeCollider *this, const struct Opcode::AABBNoLeafNode **a2, const struct Opcode::AABBNoLeafNode **a3, const struct IceMaths::Matrix4x4 *a4, const struct IceMaths::Matrix4x4 *a5, struct IceCore::Pair *a6);
char __thiscall Opcode::AABBTreeCollider::Collide(Opcode::AABBTreeCollider *this, const struct Opcode::AABBQuantizedTree *a2, const struct Opcode::AABBQuantizedTree *a3, const struct IceMaths::Matrix4x4 *a4, const struct IceMaths::Matrix4x4 *a5, struct IceCore::Pair *a6);
char __thiscall Opcode::AABBTreeCollider::Collide(Opcode::AABBTreeCollider *this, const struct Opcode::AABBQuantizedNoLeafTree *a2, const struct Opcode::AABBQuantizedNoLeafTree *a3, const struct IceMaths::Matrix4x4 *a4, const struct IceMaths::Matrix4x4 *a5, struct IceCore::Pair *a6);
void __thiscall Opcode::AABBTreeCollider::_Collide(Opcode::AABBTreeCollider *__hidden this, const struct Opcode::AABBCollisionNode *, const struct Opcode::AABBCollisionNode *); // weak
void __thiscall Opcode::AABBTreeCollider::PrimTest(Opcode::AABBTreeCollider *this, int a2, unsigned int a3);
void __fastcall Opcode::AABBTreeCollider::_CollideTriBox(Opcode::AABBTreeCollider *this, int a2, const struct Opcode::AABBNoLeafNode *a3);
void __fastcall Opcode::AABBTreeCollider::_CollideBoxTri(Opcode::AABBTreeCollider *this, int a2, const struct Opcode::AABBNoLeafNode *a3);
void __thiscall Opcode::AABBTreeCollider::_Collide(Opcode::AABBTreeCollider *__hidden this, const struct Opcode::AABBNoLeafNode *, const struct Opcode::AABBNoLeafNode *); // weak
void __thiscall Opcode::AABBTreeCollider::_Collide(Opcode::AABBTreeCollider *__hidden this, const struct Opcode::AABBQuantizedNode *, const struct Opcode::AABBQuantizedNode *, const struct IceMaths::Point *, const struct IceMaths::Point *, const struct IceMaths::Point *, const struct IceMaths::Point *); // weak
void __fastcall Opcode::AABBTreeCollider::_CollideTriBox(Opcode::AABBTreeCollider *this, int a2, const struct Opcode::AABBQuantizedNoLeafNode **a3);
void __fastcall Opcode::AABBTreeCollider::_CollideBoxTri(Opcode::AABBTreeCollider *this, int a2, const struct Opcode::AABBQuantizedNoLeafNode **a3);
void __thiscall Opcode::AABBTreeCollider::_Collide(Opcode::AABBTreeCollider *__hidden this, const struct Opcode::AABBQuantizedNoLeafNode *, const struct Opcode::AABBQuantizedNoLeafNode *); // weak
void __thiscall Opcode::VolumeCollider::InitQuery(Opcode::VolumeCollider *__hidden this); // weak
int __thiscall Opcode::SphereCollider::SphereTriOverlap(Opcode::SphereCollider *this, const struct IceMaths::Point *a2, const struct IceMaths::Point *a3, const struct IceMaths::Point *a4);
Opcode::SphereCollider *__thiscall Opcode::SphereCollider::`scalar deleting destructor'(Opcode::SphereCollider *this, char a2);
void __thiscall Opcode::SphereCollider::~SphereCollider(Opcode::SphereCollider *__hidden this); // weak
char __thiscall Opcode::SphereCollider::Collide(Opcode::SphereCollider *this, struct Opcode::SphereCache *a2, const struct IceMaths::Sphere *a3, const struct Model *a4, const struct IceMaths::Matrix4x4 *a5, const struct IceMaths::Matrix4x4 *a6);
int __thiscall Opcode::SphereCollider::InitQuery(Opcode::SphereCollider *this, struct Opcode::SphereCache *a2, const struct IceMaths::Sphere *a3, const struct IceMaths::Matrix4x4 *a4, const struct IceMaths::Matrix4x4 *a5);
void __thiscall Opcode::SphereCollider::_Collide(Opcode::SphereCollider *__hidden this, const struct Opcode::AABBCollisionNode *); // weak
int __thiscall Opcode::SphereCollider::_CollideNoPrimitiveTest(Opcode::SphereCollider *this, const struct Opcode::AABBCollisionNode *a2);
void __thiscall Opcode::SphereCollider::_Collide(Opcode::SphereCollider *__hidden this, const struct Opcode::AABBQuantizedNode *); // weak
int __thiscall Opcode::SphereCollider::_CollideNoPrimitiveTest(Opcode::SphereCollider *this, const struct Opcode::AABBQuantizedNode **a2);
void __fastcall Opcode::SphereCollider::_Collide(Opcode::SphereCollider *this, int a2, const struct Opcode::AABBNoLeafNode *a3);
int __fastcall Opcode::SphereCollider::_CollideNoPrimitiveTest(unsigned int this, int a2, const struct Opcode::AABBNoLeafNode *a3);
void __fastcall Opcode::SphereCollider::_Collide(Opcode::SphereCollider *this, int a2, const struct Opcode::AABBQuantizedNoLeafNode *a3);
int __fastcall Opcode::SphereCollider::_CollideNoPrimitiveTest(unsigned int this, int a2, const struct Opcode::AABBQuantizedNoLeafNode **a3);
float *__thiscall IceMaths::Point::operator+(float *this, float *a2, float *a3);
// float *__userpurge IceMaths::Point::operator*@<eax>(float *a1@<ecx>, float a2@<xmm2>, float *a3);
float *__fastcall IceMaths::operator*(float *a1, float *a2);
float *__thiscall IceMaths::Point::operator*(float *this, float *a2, float *a3);
float *__thiscall IceMaths::Matrix3x3::operator*(float *this, float *a2, float *a3);
Opcode::RayCollider *__thiscall Opcode::RayCollider::`scalar deleting destructor'(Opcode::RayCollider *this, char a2);
void __thiscall Opcode::RayCollider::~RayCollider(Opcode::RayCollider *__hidden this); // weak
const char *__thiscall Opcode::RayCollider::ValidateSettings(Opcode::RayCollider *__hidden this); // weak
char __thiscall Opcode::RayCollider::Collide(Opcode::RayCollider *this, const struct IceMaths::Ray *a2, const struct Model *a3, const struct IceMaths::Matrix4x4 *a4, unsigned int *a5);
int __thiscall Opcode::RayCollider::InitQuery(Opcode::RayCollider *this, const struct IceMaths::Ray *a2, const struct IceMaths::Matrix4x4 *a3, unsigned int *a4);
void __thiscall Opcode::RayCollider::_SegmentStab(Opcode::RayCollider *__hidden this, const struct Opcode::AABBCollisionNode *); // weak
void __thiscall Opcode::RayCollider::_SegmentStab(Opcode::RayCollider *__hidden this, const struct Opcode::AABBQuantizedNode *); // weak
void __thiscall Opcode::RayCollider::_SegmentStab(Opcode::RayCollider *this, const struct Opcode::AABBNoLeafNode **a2);
void __thiscall Opcode::RayCollider::_SegmentStab(Opcode::RayCollider *this, const struct Opcode::AABBQuantizedNoLeafNode **a2);
void __thiscall Opcode::RayCollider::_RayStab(Opcode::RayCollider *__hidden this, const struct Opcode::AABBCollisionNode *); // weak
void __thiscall Opcode::RayCollider::_RayStab(Opcode::RayCollider *this, const struct Opcode::AABBQuantizedNode **a2);
void __thiscall Opcode::RayCollider::_RayStab(Opcode::RayCollider *__hidden this, const struct Opcode::AABBNoLeafNode *); // weak
void __thiscall Opcode::RayCollider::_RayStab(Opcode::RayCollider *this, const struct Opcode::AABBQuantizedNoLeafNode **a2);
float *__thiscall IceMaths::Matrix3x3::operator*(float *this, float *a2, float *a3);
Opcode::OBBCollider *__thiscall Opcode::OBBCollider::OBBCollider(Opcode::OBBCollider *this);
Opcode::OBBCollider *__thiscall Opcode::OBBCollider::`scalar deleting destructor'(Opcode::OBBCollider *this, char a2);
void __thiscall Opcode::OBBCollider::~OBBCollider(Opcode::OBBCollider *__hidden this); // weak
char __thiscall Opcode::OBBCollider::Collide(Opcode::OBBCollider *this, struct Opcode::OBBCache *a2, const struct IceMaths::OBB *a3, const struct Model *a4, const struct IceMaths::Matrix4x4 *a5, const struct IceMaths::Matrix4x4 *a6);
int __thiscall Opcode::OBBCollider::InitQuery(Opcode::OBBCollider *this, struct Opcode::OBBCache *a2, const struct IceMaths::OBB *a3, const struct IceMaths::Matrix4x4 *a4, const struct IceMaths::Matrix4x4 *a5);
void __thiscall Opcode::OBBCollider::_Collide(Opcode::OBBCollider *__hidden this, const struct Opcode::AABBCollisionNode *); // weak
const struct Opcode::AABBCollisionNode *__thiscall Opcode::OBBCollider::_CollideNoPrimitiveTest(Opcode::OBBCollider *this, const struct Opcode::AABBCollisionNode *a2);
void __thiscall Opcode::OBBCollider::_Collide(Opcode::OBBCollider *this, const struct Opcode::AABBQuantizedNode **a2);
int __thiscall Opcode::OBBCollider::_CollideNoPrimitiveTest(Opcode::OBBCollider *this, const struct Opcode::AABBQuantizedNode **a2);
void __fastcall Opcode::OBBCollider::_Collide(Opcode::OBBCollider *this, int a2, const struct Opcode::AABBNoLeafNode *a3);
int __fastcall Opcode::OBBCollider::_CollideNoPrimitiveTest(unsigned int this, int a2, const struct Opcode::AABBNoLeafNode *a3);
void __fastcall Opcode::OBBCollider::_Collide(Opcode::OBBCollider *this, int a2, const struct Opcode::AABBQuantizedNoLeafNode **a3);
int __fastcall Opcode::OBBCollider::_CollideNoPrimitiveTest(unsigned int this, int a2, const struct Opcode::AABBQuantizedNoLeafNode *a3);
// int __usercall dCollideSpheres@<eax>(float *a1@<edx>, float *a2@<ecx>, float a3@<xmm1>, float a4@<xmm3>, float *const a5);
// float *__usercall dClosestLineSegmentPoints@<eax>(float *a1@<edx>, float *a2@<ecx>, float *a3, float *a4, float *a5, _DWORD *a6);
// const float *__usercall dClosestLineBoxPoints@<eax>(float *a1@<edx>, float *a2@<ecx>, const float *a3, const float *const a4, const float *const a5, float *a6, float *a7);
// int __usercall dClipPolyToPlane@<eax>(int a1@<edx>, int a2@<ecx>, const float (*const a3)[4], int *a4, float (*const a5)[4]);
void __thiscall dArrayBase::_setSize(dArrayBase *this, int a2, int a3);
int __thiscall Opcode::MeshInterface::FetchTriangleFromSingles(Opcode::MeshInterface *this, struct Opcode::VertexPointers *a2, unsigned int a3, struct IceMaths::Point *const a4);
int __thiscall Opcode::MeshInterface::FetchExTriangleFromSingles(Opcode::MeshInterface *this, struct Opcode::VertexPointersEx *a2, unsigned int a3, struct IceMaths::Point *const a4);
double __thiscall Opcode::AABBTreeBuilder::GetSplittingValue(Opcode::AABBTreeBuilder *this, const unsigned __int16 *a2, unsigned int a3, const struct IceMaths::AABB *a4, unsigned int a5);
BOOL __thiscall Opcode::AABBTreeBuilder::ValidateSubdivision(Opcode::AABBTreeBuilder *this, const unsigned __int16 *a2, unsigned int a3, const struct IceMaths::AABB *a4);
Opcode::AABBTreeBuilder *__thiscall Opcode::AABBTreeBuilder::`scalar deleting destructor'(Opcode::AABBTreeBuilder *this, char a2);
void __thiscall Opcode::AABBTreeOfTrianglesBuilder::~AABBTreeOfTrianglesBuilder(Opcode::AABBTreeOfTrianglesBuilder *__hidden this); // weak
Opcode::Model *__thiscall Opcode::Model::`vector deleting destructor'(Opcode::Model *this, char a2);
void __thiscall Opcode::Model::~Model(Opcode::Model *__hidden this); // weak
void __thiscall Opcode::Model::Release(Opcode::Model *__hidden this); // weak
char __thiscall Opcode::Model::Build(Opcode::AABBTree **this, const struct Opcode::OPCODECREATE *a2);
int __thiscall Opcode::Model::GetUsedBytes(Opcode::Model *this);
Opcode::BaseModel *__thiscall Opcode::BaseModel::`scalar deleting destructor'(Opcode::BaseModel *this, char a2);
void __thiscall Opcode::BaseModel::~BaseModel(Opcode::BaseModel *__hidden this); // weak
bool __thiscall Opcode::BaseModel::CreateTree(Opcode::BaseModel *__hidden this, bool, bool); // weak
int __thiscall Opcode::BaseModel::Refit(Opcode::BaseModel *this);
int __thiscall dxThreadingBase::PostThreadedCallsGroup(dxThreadingBase *this, int *a2, unsigned int a3, struct dxCallReleasee *a4, int (__cdecl *a5)(void *, unsigned int, struct dxCallReleasee *), void *a6, const char *a7);
// int __usercall sub_52F850@<eax>(int a1@<edx>, int a2@<ecx>, int a3, int a4, int a5, int a6);
// char __usercall sub_52FB30@<al>(int a1@<edx>, int a2@<ecx>, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14);
dLCP *__thiscall dLCP::dLCP(dLCP *this, int a2, int a3, int a4, float *a5, float *a6, float *a7, float *a8, float *a9, float *a10, float *a11, float *a12, float *a13, float *a14, float *a15, bool *a16, int *a17, int *a18, int *a19, float **a20);
int __thiscall dLCP::transfer_i_to_C(dLCP *this, int a2);
int __fastcall dLCP::transfer_i_from_N_to_C(dLCP *this, int a2, int a3);
char __thiscall dLCP::transfer_i_from_C_to_N(dLCP *this, int a2, int *a3);
int __thiscall dLCP::pN_equals_ANC_times_qC(dLCP *this, float *a2, float *a3);
__m128 *__thiscall dLCP::pN_plusequals_ANi(dLCP *this, float *a2, __m128 *a3, int a4);
// void __userpurge dLCP::pC_plusequals_s_times_qC(dLCP *this@<ecx>, float a2@<xmm2>, __m128 a3@<xmm3>, __m128 *a4, float a5, float *a6);
// __m128 *__userpurge dLCP::pN_plusequals_s_times_qN@<eax>(dLCP *this@<ecx>, float a2@<xmm2>, __m128 a3@<xmm3>, float *a4, __m128 *a5, float *a6);
void __thiscall dLCP::solve1(dLCP *this, float *a2, int a3, int a4, int a5);
int __thiscall dLCP::unpermute(dLCP *this);
// void *__usercall dSolveLCP@<eax>(int a1@<edx>, int **a2@<ecx>, struct dxWorldProcessMemArena *a3, __m128 *a4, __m128 *Src, float *a6, float *a7, float *a8, float *a9, float *a10);
int __cdecl sub_5320C0(int a1, int a2);
int __cdecl sub_5320D0(int a1, int a2);
int __cdecl sub_5320E0(int a1, int a2, int a3);
int __cdecl sub_532100(int a1, int a2, int a3);
int __cdecl sub_532120(int a1);
int __cdecl sub_532130(int a1, int a2);
int __cdecl sub_532140(int a1, int a2);
int __cdecl sub_532150(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9);
int __cdecl sub_532180(int a1, int a2, int a3);
int __cdecl sub_5321A0(int a1, int a2, int a3, int a4);
int __cdecl sub_5321C0(int a1);
int __cdecl sub_5321D0(int a1, int a2);
_DWORD *__thiscall dxtemplateThreadingImplementation<dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>,dxtemplateJobListSelfHandler<dxSelfWakeup,dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>>>::`vector deleting destructor'(_DWORD *Block, char a2);
void __thiscall dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>::FreeJobInfoPoolInfos(_DWORD *this);
int __thiscall dxtemplateThreadingImplementation<dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>,dxtemplateJobListSelfHandler<dxSelfWakeup,dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>>>::FreeInstance(void *this);
_DWORD *__stdcall dxtemplateThreadingImplementation<dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>,dxtemplateJobListSelfHandler<dxSelfWakeup,dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>>>::AllocMutexGroup(int a1);
void __stdcall dxtemplateThreadingImplementation<dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>,dxtemplateJobListSelfHandler<dxSelfWakeup,dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>>>::FreeMutexGroup(_DWORD *Block);
_WORD *dxtemplateThreadingImplementation<dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>,dxtemplateJobListSelfHandler<dxSelfWakeup,dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>>>::AllocACallWait();
_WORD *__stdcall dxtemplateThreadingImplementation<dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>,dxtemplateJobListSelfHandler<dxSelfWakeup,dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>>>::ResetACallWait(_WORD *a1);
void __stdcall dxtemplateThreadingImplementation<dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>,dxtemplateJobListSelfHandler<dxSelfWakeup,dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>>>::FreeACallWait(void *Block);
bool __thiscall dxtemplateThreadingImplementation<dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>,dxtemplateJobListSelfHandler<dxSelfWakeup,dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>>>::PreallocateJobInfos(_DWORD *this, unsigned int a2);
int __thiscall dxtemplateThreadingImplementation<dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>,dxtemplateJobListSelfHandler<dxSelfWakeup,dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>>>::ScheduleNewJob(int *this, int a2, _DWORD *a3, int a4, int a5, int a6, int a7, int a8, int a9);
int __stdcall dxtemplateThreadingImplementation<dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>,dxtemplateJobListSelfHandler<dxSelfWakeup,dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>>>::AlterJobDependenciesCount(int a1, int a2);
unsigned __int8 __thiscall dxtemplateThreadingImplementation<dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>,dxtemplateJobListSelfHandler<dxSelfWakeup,dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>>>::WaitJobCompletion(int ***this, _DWORD *a2, unsigned __int8 *a3, int a4);
_DWORD *__thiscall dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>::ExtractJobInfoFromPoolOrAllocate(_DWORD *this);
bool __thiscall dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>::DoPreallocateJobInfos(_DWORD *this, int a2);
void __thiscall dxtemplateJobListSelfHandler<dxSelfWakeup,dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>>::PerformJobProcessingSession(int ***this);
_DWORD *__thiscall dxtemplateJobListContainer<dxFakeLull,dxFakeMutex,dxFakeAtomicsProvider>::ReleaseAJob(_DWORD *this, _DWORD *a2, char a3, int a4);
// int __usercall _dSolveL1T@<eax>(int a1@<edx>, int a2@<ecx>, unsigned int a3, int a4);
// int __usercall _dSolveL1@<eax>(__m128 *a1@<edx>, float *a2@<ecx>, int a3, int a4);
// __int128 __usercall _dDot@<xmm0>(float *a1@<edx>, float *a2@<ecx>, unsigned int a3);
// dxPlane *__userpurge dxPlane::dxPlane@<eax>(dxPlane *this@<ecx>, dxSpace *a2, float a3, float a4, float a5, float a6);
// __int64 __usercall dxPlane::computeAABB@<edx:eax>(dxPlane *this@<ecx>, char a2@<efl>);
void _nextafterf();
int __fastcall IceMaths::InvertPRMatrix(_DWORD *a1, int a2);
bool __thiscall odeou::CTLSStorageArray::SetArrayLockedFlag(odeou::CTLSStorageArray *__hidden this); // weak
signed __int32 __thiscall odeou::CTLSStorageArray::ResetArrayLockedFlag(odeou::CTLSStorageArray *this);
char *__fastcall odeou::CTLSStorageArray::AllocateInstance(int a1);
signed __int32 __thiscall odeou::CTLSStorageArray::FreeStorageBlockOnThreadExit(odeou::CTLSStorageArray *this, struct odeou::CTLSStorageBlock *a2, unsigned int a3);
char __thiscall odeou::CTLSStorageArray::FindFreeStorageBlock(odeou::CTLSStorageArray *this, struct odeou::CTLSStorageBlock **a2, unsigned int a3, bool a4);
bool __thiscall odeou::CTLSStorageArray::FindFreeStorageBlockIndexWithPossibilityVerified(odeou::CTLSStorageArray *__hidden this, unsigned int *, bool); // weak
char __thiscall odeou::CTLSStorageArray::FindAbandonedStorageBlockIndex(odeou::CTLSStorageArray *this, unsigned int *a2, unsigned int a3);
int __thiscall odeou::CTLSStorageArray::TranslateClientHandles(odeou::CTLSStorageArray *this, void **const a2, unsigned int *const a3, void *const **a4, const unsigned int **a5);
HANDLE __thiscall odeou::CTLSStorageArray::FreeStorageAllBlocks(odeou::CTLSStorageArray *this, unsigned int a2);
odeou::CTLSStorageArray *__thiscall odeou::CTLSStorageArray::ReinitializeStorageSingleBlock(odeou::CTLSStorageArray *this, struct odeou::CTLSStorageBlock *a2, unsigned int a3);
char __thiscall odeou::CTLSStorageInstance::FindFreeStorageBlockInArrayList(odeou::CTLSStorageInstance *this, struct odeou::CTLSStorageBlock **a2);
void __thiscall odeou::CTLSStorageInstance::FreeStorageArrayList(odeou::CTLSStorageInstance *__hidden this, struct odeou::CTLSStorageArray *); // weak
char __fastcall odeou::CThreadLocalStorage::AllocateAndSetStorageValue(DWORD **a1, int a2, int a3, int a4);
char __thiscall odeou::CTLSInitialization::InitializeTLSAPI(_DWORD *this, int a2);
int odeou::CTLSInitialization::FinalizeTLSAPI(void); // weak
int __fastcall Opcode::VolumeCollider::_Dump(unsigned int this, int a2, const struct Opcode::AABBNoLeafNode *a3);
int __fastcall Opcode::VolumeCollider::_Dump(unsigned int this, int a2, const struct Opcode::AABBQuantizedNoLeafNode *a3);
int __thiscall Opcode::VolumeCollider::_Dump(Opcode::VolumeCollider *this, const struct Opcode::AABBCollisionNode *a2);
int __thiscall Opcode::VolumeCollider::_Dump(Opcode::VolumeCollider *this, const struct Opcode::AABBQuantizedNode *a2);
BOOL __thiscall IceMaths::OBB::IsInside(IceMaths::OBB *this, const struct IceMaths::OBB *a2);
_DWORD *__thiscall IceMaths::Matrix3x3::operator IceMaths::Matrix4x4(int *this, _DWORD *a2);
float *__thiscall IceMaths::Point::operator*(float *this, float *a2, float *a3);
int __thiscall IceMaths::AABB::SetMinMax(IceMaths::AABB *this, const struct IceMaths::Point *a2, const struct IceMaths::Point *a3);
void __thiscall Opcode::AABBTreeNode::AABBTreeNode(void *);
void __thiscall Opcode::AABBTreeNode::~AABBTreeNode(void *);
int __thiscall Opcode::AABBTreeNode::Split(Opcode::AABBTreeNode *this, unsigned int a2, struct Opcode::AABBTreeBuilder *a3);
char __thiscall Opcode::AABBTreeNode::Subdivide(Opcode::AABBTreeNode *this, struct Opcode::AABBTreeBuilder *a2);
void __thiscall Opcode::AABBTreeNode::_BuildHierarchy(Opcode::AABBTreeNode *__hidden this, struct Opcode::AABBTreeBuilder *); // weak
void __thiscall Opcode::AABBTree::~AABBTree(Opcode::AABBTree *__hidden this); // weak
void __thiscall Opcode::AABBTree::Release(Opcode::AABBTree *__hidden this); // weak
char __thiscall Opcode::AABBTree::Build(Opcode::AABBTree *this, struct Opcode::AABBTreeBuilder *a2);
char __thiscall Opcode::AABBTreeOfTrianglesBuilder::ComputeGlobalBox(Opcode::AABBTreeOfTrianglesBuilder *this, const unsigned __int16 *a2, unsigned int a3, struct IceMaths::AABB *a4);
float *__thiscall Opcode::AABBTreeOfTrianglesBuilder::GetSplittingValues(_DWORD *this, float *a2, int a3);
double __thiscall Opcode::AABBTreeOfTrianglesBuilder::GetSplittingValue(Opcode::AABBTreeOfTrianglesBuilder *this, unsigned int a2, unsigned int a3);
double __thiscall Opcode::AABBTreeOfTrianglesBuilder::GetSplittingValue(Opcode::AABBTreeOfTrianglesBuilder *this, const unsigned __int16 *a2, unsigned int a3, const struct IceMaths::AABB *a4, unsigned int a5);
void __thiscall Opcode::AABBCollisionNode::AABBCollisionNode(void *);
void __thiscall Opcode::AABBQuantizedNode::AABBQuantizedNode(void *);
void __thiscall Opcode::AABBNoLeafNode::AABBNoLeafNode(void *);
void __thiscall Opcode::AABBQuantizedNoLeafNode::AABBQuantizedNoLeafNode(void *);
void __thiscall Opcode::AABBOptimizedTree::~AABBOptimizedTree(Opcode::AABBOptimizedTree *__hidden this); // weak
Opcode::AABBOptimizedTree *__thiscall Opcode::AABBOptimizedTree::`scalar deleting destructor'(Opcode::AABBOptimizedTree *this, char a2);
int __thiscall Opcode::AABBCollisionTree::GetUsedBytes(Opcode::AABBCollisionTree *this);
int __thiscall Opcode::AABBNoLeafTree::GetUsedBytes(Opcode::AABBNoLeafTree *this);
int __thiscall Opcode::AABBQuantizedTree::GetUsedBytes(Opcode::AABBQuantizedTree *this);
int __thiscall Opcode::AABBQuantizedNoLeafTree::GetUsedBytes(Opcode::AABBQuantizedNoLeafTree *this);
// int __usercall sub_535460@<eax>(int a1@<edx>, int a2@<ecx>, int *a3, unsigned int a4);
// int __usercall sub_535560@<eax>(int a1@<edx>, int a2@<ecx>, int *a3, int a4);
Opcode::AABBCollisionTree *__thiscall Opcode::AABBCollisionTree::`vector deleting destructor'(Opcode::AABBCollisionTree *this, char a2);
char *__thiscall Opcode::AABBCollisionNode::`vector deleting destructor'(Opcode::AABBCollisionNode *this, unsigned int a2);
char __thiscall Opcode::AABBCollisionTree::Build(Opcode::AABBCollisionTree *this, int a2);
bool __thiscall AIDriver::getAction(AIDriver *this, DriverActions anAction);
char __thiscall Opcode::AABBCollisionTree::Walk(Opcode::AABBCollisionTree *this, unsigned __int8 (__cdecl *a2)(int, int), int a3);
// void __usercall sub_535840(unsigned __int8 (__cdecl *a1)(int, int)@<edx>, int a2@<ecx>, int a3);
Opcode::AABBNoLeafTree *__thiscall Opcode::AABBNoLeafTree::`vector deleting destructor'(Opcode::AABBNoLeafTree *this, char a2);
char *__thiscall Opcode::AABBNoLeafNode::`vector deleting destructor'(Opcode::AABBNoLeafNode *this, unsigned int a2);
char __thiscall Opcode::AABBNoLeafTree::Build(Opcode::AABBNoLeafTree *this, int a2);
char __thiscall Opcode::AABBNoLeafTree::Refit(Opcode::AABBNoLeafTree *this, const struct Opcode::MeshInterface *a2);
char __thiscall Opcode::AABBNoLeafTree::Walk(Opcode::AABBNoLeafTree *this, unsigned __int8 (__cdecl *a2)(int, int), int a3);
// void __usercall sub_535F60(unsigned __int8 (__cdecl *a1)(int, int)@<edx>, int a2@<ecx>, int a3);
Opcode::AABBQuantizedTree *__thiscall Opcode::AABBQuantizedTree::`scalar deleting destructor'(Opcode::AABBQuantizedTree *this, char a2);
char *__thiscall Opcode::AABBQuantizedNode::`vector deleting destructor'(Opcode::AABBQuantizedNode *this, unsigned int a2);
char __thiscall Opcode::AABBQuantizedTree::Build(Opcode::AABBQuantizedTree *this, struct Opcode::AABBTree *count);
char __thiscall Opcode::AABBQuantizedTree::Walk(Opcode::AABBQuantizedTree *this, unsigned __int8 (__cdecl *a2)(int, int), int a3);
// void __usercall sub_536670(unsigned __int8 (__cdecl *a1)(int, int)@<edx>, int a2@<ecx>, int a3);
Opcode::AABBQuantizedNoLeafTree *__thiscall Opcode::AABBQuantizedNoLeafTree::`vector deleting destructor'(Opcode::AABBQuantizedNoLeafTree *this, char a2);
char *__thiscall Opcode::AABBQuantizedNoLeafNode::`vector deleting destructor'(Opcode::AABBQuantizedNoLeafNode *this, unsigned int a2);
char __thiscall Opcode::AABBQuantizedNoLeafTree::Build(Opcode::AABBQuantizedNoLeafTree *this, struct Opcode::AABBTree *count);
char __thiscall Opcode::AABBQuantizedNoLeafTree::Walk(Opcode::AABBQuantizedNoLeafTree *this, unsigned __int8 (__cdecl *a2)(int, int), int a3);
// void __usercall sub_536DB0(unsigned __int8 (__cdecl *a1)(int, int)@<edx>, int a2@<ecx>, int a3);
// float *__usercall sub_536DF0@<eax>(float *a1@<edx>, float *a2@<ecx>, int a3, int a4);
// float *__usercall sub_536F00@<eax>(float *a1@<edx>, float *a2@<ecx>, int a3, int a4);
// int __usercall _dFactorLDLT@<eax>(float *a1@<edx>, float *a2@<ecx>, int a3, int a4);
double __cdecl atan();
void __thiscall ITyreModel::~ITyreModel(ITyreModel *this);
ITyreModel *__thiscall ITyreModel::`scalar deleting destructor'(ITyreModel *this, unsigned int a2);
void __thiscall SCTM::SCTM(SCTM *this);
SCTM *__thiscall SCTM::`vector deleting destructor'(SCTM *this, unsigned int a2);
void __thiscall SCTM::~SCTM(SCTM *this);
TyreModelOutput *__thiscall SCTM::solve(SCTM *this, TyreModelOutput *result, const TyreModelInput *in);
double __thiscall SCTM::getStaticDY(SCTM *this, float load);
// float __usercall SCTM::getStaticDX@<xmm0>(SCTM *this@<ecx>, float ref@<xmm1>);
LRESULT __stdcall WndProc(HWND__ *hWnd, unsigned int message, unsigned int wParam, int lParam);
HWND __cdecl kglOpenWindow(const wchar_t *title, unsigned int width, unsigned int height, unsigned int window_mode);
int __cdecl kglWindowStep();
void __cdecl kglWindowSetOnResize(void (__cdecl *onResize)(unsigned int, unsigned int));
void __cdecl kglWindowSetOnMouseDown(void (__cdecl *f)(int, int, int));
void __cdecl kglWindowSetOnMouseUp(void (__cdecl *f)(int, int, int));
void __cdecl kglWindowSetOnMouseWheel(void (__cdecl *f)(int, int, float));
void __cdecl kglWindowSetOnMouseMove(void (__cdecl *f)(int, int));
void __cdecl kglWindowSetOnChar(void (__cdecl *f)(unsigned int));
void __cdecl kglWindowSetOnKeyDown(void (__cdecl *f)(unsigned int));
void __cdecl kglWindowSetOnKeyUp(void (__cdecl *f)(unsigned int));
void __cdecl kglWindowSetOnClose(void (__cdecl *f)());
BOOL __cdecl kglWindowHasFocus(void *window);
void __cdecl kglWindowSetFocus(void *window);
void __thiscall ksgui::ConnectedLabel::ConnectedLabel(ksgui::ConnectedLabel *this, const std::wstring *iname, ksgui::GUI *igui, float *var);
ksgui::ConnectedLabel *__thiscall ksgui::ConnectedLabel::`vector deleting destructor'(ksgui::ConnectedLabel *this, unsigned int a2);
void __thiscall ksgui::ConnectedLabel::ConnectedLabel(ksgui::ConnectedLabel *this, const std::wstring *iname, ksgui::GUI *igui, int *var);
void __thiscall ksgui::ConnectedLabel::init(ksgui::ConnectedLabel *this);
void __thiscall ksgui::ConnectedLabel::~ConnectedLabel(ksgui::ConnectedLabel *this);
void __thiscall ksgui::ConnectedLabel::render(ksgui::ConnectedLabel *this, float dt);
void __thiscall ACCameraManager::ACCameraManager(ACCameraManager *this, Sim *isim, CameraForward *icamera);
void __thiscall ACCameraManager::~ACCameraManager(ACCameraManager *this);
void __thiscall lambda_5d20acf28da395ad9126c0d1d99304b2_::operator()(ACCameraManager::{ctor}::__l50::<lambda_5d20acf28da395ad9126c0d1d99304b2> *this, const float dt);
std::_Func_impl<std::_Callable_obj<<lambda_5e83a24f9ed0e174be47eb11727406f8>,0>,std::allocator<std::_Func_class<void,ACCamera const &> >,void,ACCamera const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5e83a24f9ed0e174be47eb11727406f8_,0>,std::allocator<std::_Func_class<void,ACCamera const &>>,void,ACCamera const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_5e83a24f9ed0e174be47eb11727406f8>,0>,std::allocator<std::_Func_class<void,ACCamera const &> >,void,ACCamera const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_5d20acf28da395ad9126c0d1d99304b2>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_409b327e16c7dfd0efeda47555bff056_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_5d20acf28da395ad9126c0d1d99304b2>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, unsigned int a2);
ACCameraManager *__thiscall ACCameraManager::`vector deleting destructor'(ACCameraManager *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5e83a24f9ed0e174be47eb11727406f8_,0>,std::allocator<std::_Func_class<void,ACCamera const &>>,void,ACCamera const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_5e83a24f9ed0e174be47eb11727406f8>,0>,std::allocator<std::_Func_class<void,ACCamera const &> >,void,ACCamera const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d20acf28da395ad9126c0d1d99304b2_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5d20acf28da395ad9126c0d1d99304b2>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, const float *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d20acf28da395ad9126c0d1d99304b2_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_5d20acf28da395ad9126c0d1d99304b2>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d20acf28da395ad9126c0d1d99304b2_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5d20acf28da395ad9126c0d1d99304b2>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5e83a24f9ed0e174be47eb11727406f8_,0>,std::allocator<std::_Func_class<void,ACCamera const &>>,void,ACCamera const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5e83a24f9ed0e174be47eb11727406f8>,0>,std::allocator<std::_Func_class<void,ACCamera const &> >,void,ACCamera const &> *this);
void __thiscall ACCameraManager::fadeIn(ACCameraManager *this, FadeModeDef aFadeMode);
bool __thiscall ACCameraManager::isCameraOnBoard(ACCameraManager *this, CarAvatar *car);
bool __thiscall ACCameraManager::isVirtualMirrorOn(ACCameraManager *this);
void __thiscall ACCameraManager::loadPreviousSessionUserCamera(ACCameraManager *this);
void __thiscall ACCameraManager::registerToFadeInEvent(ACCameraManager *this, std::function<void __cdecl(bool const &)> f, void *sender);
void __thiscall ACCameraManager::setAudioDistanceScale(ACCameraManager *this);
void __thiscall ACCameraManager::setCameraCarIndex(ACCameraManager *this, int index);
void __thiscall ACCameraManager::setDrivableCarIndex(ACCameraManager *this, int index);
void __thiscall ACCameraManager::setKeyboardInputEnabled(ACCameraManager *this, bool value);
void __thiscall ACCameraManager::setMode(ACCameraManager *this, CameraMode imode, bool force, bool pIsRandom);
void __thiscall ACCameraManager::stepCameraRandom(ACCameraManager *this, int lastCarIndex);
void __thiscall ACCameraManager::update(ACCameraManager *this, float deltaT);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<ChatElement>>>(ChatElement *_First, ChatElement *_Last);
ChatElement *__cdecl std::_Uninit_move<ChatElement *,ChatElement *,std::allocator<ChatElement>,ChatElement>(ChatElement *_First, ChatElement *_Last, ChatElement *_Dest);
void __thiscall ACChat::ACChat(ACChat *this, Sim *aSim);
void __thiscall std::vector<ChatElement>::~vector<ChatElement>(std::vector<ChatElement> *this);
void __thiscall ACChat::~ACChat(ACChat *this);
void __thiscall lambda_76236101e3eaa907b75e3afcab748728_::operator()(ACChat::{ctor}::__l10::<lambda_76236101e3eaa907b75e3afcab748728> *this, const std::wstring *text);
ACChat *__thiscall ACChat::`vector deleting destructor'(ACChat *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_76236101e3eaa907b75e3afcab748728_,0>,std::allocator<std::_Func_class<void,std::wstring const &>>,void,std::wstring const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_76236101e3eaa907b75e3afcab748728>,0>,std::allocator<std::_Func_class<void,std::wstring const &> >,void,std::wstring const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_76236101e3eaa907b75e3afcab748728_,0>,std::allocator<std::_Func_class<void,std::wstring const &>>,void,std::wstring const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_76236101e3eaa907b75e3afcab748728>,0>,std::allocator<std::_Func_class<void,std::wstring const &> >,void,std::wstring const &> *this, const std::wstring *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_da4d08dd4ba38c2fb57b85b2222553ad_,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &>>,void,OnChatMessageEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_da4d08dd4ba38c2fb57b85b2222553ad>,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &> >,void,OnChatMessageEvent const &> *this, const OnChatMessageEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_da4d08dd4ba38c2fb57b85b2222553ad_,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &>>,void,OnChatMessageEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_da4d08dd4ba38c2fb57b85b2222553ad>,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &> >,void,OnChatMessageEvent const &> *this, void *_Where);
void __thiscall std::vector<ChatElement>::_Reallocate(std::vector<ChatElement> *this, unsigned int _Count);
void __thiscall std::vector<ChatElement>::_Reserve(std::vector<ChatElement> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_76236101e3eaa907b75e3afcab748728_,0>,std::allocator<std::_Func_class<void,std::wstring const &>>,void,std::wstring const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_76236101e3eaa907b75e3afcab748728>,0>,std::allocator<std::_Func_class<void,std::wstring const &> >,void,std::wstring const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_da4d08dd4ba38c2fb57b85b2222553ad_,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &>>,void,OnChatMessageEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_da4d08dd4ba38c2fb57b85b2222553ad>,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &> >,void,OnChatMessageEvent const &> *this);
void __thiscall ACChat::onChatMessage(ACChat *this, const OnChatMessageEvent *message);
// void __userpurge ACChat::render(ACChat *this@<ecx>, int a2@<esi>, float dt);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, ACClient::onMessageTCP::__l105::<lambda_034d48754ea12fd9a7c51584058b5d75> *_Func);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, ACClient::onMessageTCP::__l110::<lambda_62015fcb806c2b758d752e087f67d5bf> *_Func);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, ACClient::onMessageTCP::__l103::<lambda_77fa972dbd724f64a8dd777ab67ae855> *_Func);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, ACClient::onMessageTCP::__l119::<lambda_88b327a3fa7ea4738e9f6936855fc9a2> *_Func);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, ACClient::onMessage::__l11::<lambda_89215cb97f19fb82d16432a1c1a52916> *_Func);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, ACClient::onMessageTCP::__l18::<lambda_8ed240dda8b0abb382e2531a3d8b0b1c> *_Func);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, ACClient::onMessageTCP::__l99::<lambda_8edb651378e071f764f5bb6737b5a2e3> *_Func);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, ACClient::onMessageTCP::__l165::<lambda_d56d12ec4c2d04f70226b1d95868e0f3> *_Func);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, ACClient::onMessageTCP::__l117::<lambda_d9012094a323e946664e4993e5a2e310> *_Func);
std::_Tree_node<std::pair<std::wstring const ,TyreCompoundStrategy>,void *> **__thiscall std::_Tree_buy<std::pair<std::string const,float>>::_Buynode<std::pair<std::string const,float> &>(std::_Tree_buy<std::pair<std::string const ,float>> *this, std::pair<std::string const ,float> *<_Val_0>);
std::_Tree_node<std::pair<std::wstring const ,TyreCompoundStrategy>,void *> **__thiscall std::_Tree_buy<std::pair<std::string const,float>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::string const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::string const ,float>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::string const &> *<_Val_1>, std::tuple<> *<_Val_2>);
void __thiscall std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<std::string const,float>>,0>>::_Copy<std::integral_constant<bool,0>>(std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string >,std::allocator<std::pair<std::string const ,float> >,0> > *this, const std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string >,std::allocator<std::pair<std::string const ,float> >,0> > *_Right, std::integral_constant<bool,0> _Movefl);
std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *__cdecl std::_Copy_impl<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int>>>,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int>>>>(std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *result, std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > _First, std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > _Last, std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > _Dest);
std::_Tree_node<std::pair<std::string const ,float>,void *> *__thiscall std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<std::string const,float>>,0>>::_Copy_nodes<std::integral_constant<bool,0>>(std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string >,std::allocator<std::pair<std::string const ,float> >,0> > *this, std::_Tree_node<std::pair<std::string const ,float>,void *> *_Rootnode, std::_Tree_node<std::pair<std::string const ,float>,void *> *_Wherenode, std::integral_constant<bool,0> _Movefl);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<Lap>>>(Lap *_First, Lap *_Last);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<RemoteSession>>>(RemoteSession *_First, RemoteSession *_Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,float> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<std::string const,float>>,0>>::_Insert_at<std::pair<std::string const,float> &,std::_Tree_node<std::pair<std::string const,float>,void *> *>(std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string >,std::allocator<std::pair<std::string const ,float> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,float> > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::string const ,float>,void *> *_Wherenode, std::pair<std::string const ,float> *_Val, std::_Tree_node<std::pair<std::string const ,float>,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,float> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<std::string const,float>>,0>>::_Insert_hint<std::pair<std::string const,float> &,std::_Tree_node<std::pair<std::string const,float>,void *> *>(std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string >,std::allocator<std::pair<std::string const ,float> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,float> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,float> > > > _Where, std::pair<std::string const ,float> *_Val, std::_Tree_node<std::pair<std::string const ,float>,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,float> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<std::string const,float>>,0>>::_Insert_nohint<std::pair<std::string const,float> &,std::_Tree_node<std::pair<std::string const,float>,void *> *>(std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string >,std::allocator<std::pair<std::string const ,float> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,float> > > >,bool> *result, std::_Tree_node<std::pair<std::string const ,float>,void *> *_Leftish, std::pair<std::string const ,float> *_Val, std::_Tree_node<std::pair<std::string const ,float>,void *> *_Newnode);
void __thiscall std::_Func_class<void,>::_Reset<_lambda_e537553689fc017a9af3740e06575ef5_>(std::_Func_class<void> *this, ACClient::onMessageTCP::__l127::<lambda_e537553689fc017a9af3740e06575ef5> *_Val);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > > *__cdecl std::_Transform<wchar_t *,std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,int (__cdecl *)(int)>(std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > > *result, wchar_t *_First, wchar_t *_Last, std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > > _Dest, int (__cdecl *_Func)(int));
unsigned int *__thiscall std::vector<unsigned int>::_Ucopy<unsigned int *>(std::vector<unsigned int> *this, unsigned int *_First, unsigned int *_Last, unsigned int *_Ptr);
ClientRemoteCarDef *__cdecl std::_Uninit_move<ClientRemoteCarDef *,ClientRemoteCarDef *,std::allocator<ClientRemoteCarDef>,ClientRemoteCarDef>(ClientRemoteCarDef *_First, ClientRemoteCarDef *_Last, ClientRemoteCarDef *_Dest);
Lap *__cdecl std::_Uninit_copy<Lap *,Lap *,std::allocator<Lap>>(Lap *_First, Lap *_Last, Lap *_Dest);
RemoteSession *__cdecl std::_Uninit_move<RemoteSession *,RemoteSession *,std::allocator<RemoteSession>,RemoteSession>(RemoteSession *_First, RemoteSession *_Last, RemoteSession *_Dest);
void __thiscall std::allocator<Lap>::destroy<Lap>(std::allocator<Lap> *this, Lap *_Ptr);
void __thiscall std::_Wrap_alloc<std::allocator<RemoteSession>>::destroy<RemoteSession>(std::_Wrap_alloc<std::allocator<RemoteSession> > *this, RemoteSession *_Ptr);
StartingLights *__thiscall GameObject::getGameObject<StartingLights>(GameObject *this);
int __thiscall UDPPacket::read<short>(UDPPacket *this);
unsigned int __thiscall UDPPacket::read<unsigned int>(UDPPacket *this);
double __thiscall UDPPacket::read<float>(UDPPacket *this);
vec3f *__thiscall UDPPacket::read<vec3f>(UDPPacket *this, vec3f *result);
__int64 __thiscall UDPPacket::read<__int64>(UDPPacket *this);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > > *__cdecl std::transform<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,int (__cdecl *)(int)>(std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > > *result, std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > > _First, std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > > _Last, std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > > _Dest, int (__cdecl *_Func)(int));
void __thiscall lambda_88b327a3fa7ea4738e9f6936855fc9a2_::_lambda_88b327a3fa7ea4738e9f6936855fc9a2_(ACClient::onMessageTCP::__l119::<lambda_88b327a3fa7ea4738e9f6936855fc9a2> *this, const ACClient::onMessageTCP::__l119::<lambda_88b327a3fa7ea4738e9f6936855fc9a2> *__that);
void __thiscall lambda_88b327a3fa7ea4738e9f6936855fc9a2_::_lambda_88b327a3fa7ea4738e9f6936855fc9a2__0(ACClient::onMessageTCP::__l119::<lambda_88b327a3fa7ea4738e9f6936855fc9a2> *this, ACClient *_This, const unsigned __int8 *__sid, const std::wstring *__new_name, const std::wstring *__new_nation_code);
void __thiscall lambda_917dba4247aaddcdf1f957f212166217_::_lambda_917dba4247aaddcdf1f957f212166217_(ACClient::onNewSession::__l39::<lambda_917dba4247aaddcdf1f957f212166217> *this, const ACClient::onNewSession::__l39::<lambda_917dba4247aaddcdf1f957f212166217> *__that);
void __thiscall lambda_a05cde93ad1ae34cde6819468c04a3fa_::_lambda_a05cde93ad1ae34cde6819468c04a3fa_(ACClient::onRemoteLapCompleted::__l56::<lambda_a05cde93ad1ae34cde6819468c04a3fa> *this, const ACClient::onRemoteLapCompleted::__l56::<lambda_a05cde93ad1ae34cde6819468c04a3fa> *__that);
void __thiscall lambda_d56d12ec4c2d04f70226b1d95868e0f3_::_lambda_d56d12ec4c2d04f70226b1d95868e0f3_(ACClient::onMessageTCP::__l165::<lambda_d56d12ec4c2d04f70226b1d95868e0f3> *this, ACClient *_This, const std::wstring *__message, const std::wstring *__detail_msg);
void __thiscall std::_Callable_base<_lambda_d56d12ec4c2d04f70226b1d95868e0f3_,0>::_Callable_base<_lambda_d56d12ec4c2d04f70226b1d95868e0f3_,0>(std::_Callable_base<<lambda_d56d12ec4c2d04f70226b1d95868e0f3>,0> *this, const ACClient::onMessageTCP::__l165::<lambda_d56d12ec4c2d04f70226b1d95868e0f3> *_Val);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_034d48754ea12fd9a7c51584058b5d75_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Func_impl<std::_Callable_obj<_lambda_034d48754ea12fd9a7c51584058b5d75_,0>,std::allocator<std::_Func_class<void,>>,void,>(std::_Func_impl<std::_Callable_obj<<lambda_034d48754ea12fd9a7c51584058b5d75>,0>,std::allocator<std::_Func_class<void> >,void> *this, ACClient::onMessageTCP::__l105::<lambda_034d48754ea12fd9a7c51584058b5d75> *_Val, const std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_034d48754ea12fd9a7c51584058b5d75>,0>,std::allocator<std::_Func_class<void> >,void> > *_Ax);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_77fa972dbd724f64a8dd777ab67ae855_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Func_impl<std::_Callable_obj<_lambda_77fa972dbd724f64a8dd777ab67ae855_,0>,std::allocator<std::_Func_class<void,>>,void,>(std::_Func_impl<std::_Callable_obj<<lambda_77fa972dbd724f64a8dd777ab67ae855>,0>,std::allocator<std::_Func_class<void> >,void> *this, ACClient::onMessageTCP::__l103::<lambda_77fa972dbd724f64a8dd777ab67ae855> *_Val, const std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_77fa972dbd724f64a8dd777ab67ae855>,0>,std::allocator<std::_Func_class<void> >,void> > *_Ax);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ed240dda8b0abb382e2531a3d8b0b1c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Func_impl<std::_Callable_obj<_lambda_8ed240dda8b0abb382e2531a3d8b0b1c_,0>,std::allocator<std::_Func_class<void,>>,void,>(std::_Func_impl<std::_Callable_obj<<lambda_8ed240dda8b0abb382e2531a3d8b0b1c>,0>,std::allocator<std::_Func_class<void> >,void> *this, ACClient::onMessageTCP::__l18::<lambda_8ed240dda8b0abb382e2531a3d8b0b1c> *_Val, const std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8ed240dda8b0abb382e2531a3d8b0b1c>,0>,std::allocator<std::_Func_class<void> >,void> > *_Ax);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8edb651378e071f764f5bb6737b5a2e3_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Func_impl<std::_Callable_obj<_lambda_8edb651378e071f764f5bb6737b5a2e3_,0>,std::allocator<std::_Func_class<void,>>,void,>(std::_Func_impl<std::_Callable_obj<<lambda_8edb651378e071f764f5bb6737b5a2e3>,0>,std::allocator<std::_Func_class<void> >,void> *this, ACClient::onMessageTCP::__l99::<lambda_8edb651378e071f764f5bb6737b5a2e3> *_Val, const std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8edb651378e071f764f5bb6737b5a2e3>,0>,std::allocator<std::_Func_class<void> >,void> > *_Ax);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d9012094a323e946664e4993e5a2e310_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Func_impl<std::_Callable_obj<_lambda_d9012094a323e946664e4993e5a2e310_,0>,std::allocator<std::_Func_class<void,>>,void,>(std::_Func_impl<std::_Callable_obj<<lambda_d9012094a323e946664e4993e5a2e310>,0>,std::allocator<std::_Func_class<void> >,void> *this, ACClient::onMessageTCP::__l117::<lambda_d9012094a323e946664e4993e5a2e310> *_Val, const std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d9012094a323e946664e4993e5a2e310>,0>,std::allocator<std::_Func_class<void> >,void> > *_Ax);
void __thiscall std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<std::string const,float>>,0>>::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<std::string const,float>>,0>>(std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string >,std::allocator<std::pair<std::string const ,float> >,0> > *this, const std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string >,std::allocator<std::pair<std::string const ,float> >,0> > *_Right, const std::allocator<std::pair<std::string const ,float> > *_Al);
void __thiscall std::ofstream::ofstream(std::ofstream *this, const wchar_t *_Filename, int _Mode, int _Prot, int a5);
void __thiscall std::vector<unsigned char>::vector<unsigned char>(std::vector<unsigned char> *this, const std::vector<unsigned char> *_Right);
void __thiscall ACClient::ACClient(ACClient *this, Sim *isim);
void __thiscall ClientHandshakeResult::ClientHandshakeResult(ClientHandshakeResult *this, const ClientHandshakeResult *__that);
void __thiscall ClientRemoteCarDef::ClientRemoteCarDef(ClientRemoteCarDef *this, const ClientRemoteCarDef *__that);
void __thiscall ACClient::ClientSessionTransition::ClientSessionTransition(ACClient::ClientSessionTransition *this);
void __thiscall DriverInfo::DriverInfo(DriverInfo *this, const DriverInfo *__that);
void __thiscall SetupItemText::SetupItemText(DriverInfo *this);
void __thiscall Lap::Lap(Lap *this, const Lap *__that);
void __thiscall Lap::Lap(Lap *this, int aTime);
void __thiscall NetCarState::NetCarState(NetCarState *this);
void __thiscall ReceivedVoteDef::ReceivedVoteDef(ReceivedVoteDef *this);
void __thiscall RemoteSession::RemoteSession(RemoteSession *this, const RemoteSession *__that);
void __thiscall RemoteSession::RemoteSession(RemoteSession *this);
void __thiscall RemoteSessionResult::RemoteSessionResult(RemoteSessionResult *this, const RemoteSessionResult *__that);
void __thiscall RemoteSessionResult::RemoteSessionResult(RemoteSessionResult *this, int carsCount);
void __thiscall RemoteSessionResult::RemoteSessionResult(RemoteSessionResult *this);
void __thiscall std::pair<std::wstring,jsonwriter::Node &>::~pair<std::wstring,jsonwriter::Node &>(MD5Result *this);
void __thiscall OnTyreCompoundChanged::~OnTyreCompoundChanged(ACClient::onMessageTCP::__l119::<lambda_88b327a3fa7ea4738e9f6936855fc9a2> *this);
void __thiscall lambda_d56d12ec4c2d04f70226b1d95868e0f3_::__lambda_d56d12ec4c2d04f70226b1d95868e0f3_(ACClient::onMessageTCP::__l165::<lambda_d56d12ec4c2d04f70226b1d95868e0f3> *this);
void __thiscall lambda_e537553689fc017a9af3740e06575ef5_::__lambda_e537553689fc017a9af3740e06575ef5_(ACClient::onMessageTCP::__l127::<lambda_e537553689fc017a9af3740e06575ef5> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_88b327a3fa7ea4738e9f6936855fc9a2_,0>,std::allocator<std::_Func_class<void,>>,void,>::~_Func_impl<std::_Callable_obj<_lambda_88b327a3fa7ea4738e9f6936855fc9a2_,0>,std::allocator<std::_Func_class<void,>>,void,>(std::_Func_impl<std::_Callable_obj<<lambda_88b327a3fa7ea4738e9f6936855fc9a2>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d56d12ec4c2d04f70226b1d95868e0f3_,0>,std::allocator<std::_Func_class<void,>>,void,>::~_Func_impl<std::_Callable_obj<_lambda_d56d12ec4c2d04f70226b1d95868e0f3_,0>,std::allocator<std::_Func_class<void,>>,void,>(std::_Func_impl<std::_Callable_obj<<lambda_d56d12ec4c2d04f70226b1d95868e0f3>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::map<std::string,float>::~map<std::string,float>(std::map<std::string,float> *this);
void __thiscall std::vector<RemoteSession>::~vector<RemoteSession>(std::vector<RemoteSession> *this);
void __thiscall ACClient::~ACClient(ACClient *this);
void __thiscall ClientHandshakeResult::~ClientHandshakeResult(ClientHandshakeResult *this);
void __thiscall ClientRemoteCarDef::~ClientRemoteCarDef(ClientRemoteCarDef *this);
void __thiscall ACClient::ClientSessionTransition::~ClientSessionTransition(ACClient::ClientSessionTransition *this);
void __thiscall SetupItemText::~SetupItemText(DriverInfo *this);
void __thiscall OnLapCompletedEvent::~OnLapCompletedEvent(OnLapCompletedEvent *this);
void __thiscall RemoteSessionResult::~RemoteSessionResult(RemoteSessionResult *this);
std::vector<unsigned char> *__thiscall std::vector<unsigned char>::operator=(std::vector<unsigned char> *this, const std::vector<unsigned char> *_Right);
std::vector<unsigned int> *__thiscall std::vector<int>::operator=(std::vector<unsigned int> *this, const std::vector<unsigned int> *_Right);
void __thiscall lambda_034d48754ea12fd9a7c51584058b5d75_::operator()(ACClient::onMessageTCP::__l105::<lambda_034d48754ea12fd9a7c51584058b5d75> *this);
void __thiscall lambda_1170cdf3bd71e1ebc5b6fd803b9745f1_::operator()(ACClient::onMessageTCP::__l86::<lambda_1170cdf3bd71e1ebc5b6fd803b9745f1> *this);
void __thiscall lambda_2bb6e88e9207602c4080d31c284a1a45_::operator()(ACClient::onCollisionWithCar::__l12::<lambda_2bb6e88e9207602c4080d31c284a1a45> *this);
void __thiscall lambda_56ac8b8552a02ee0b57ccf93c5fbb10f_::operator()(ACClient::onMessageTCP::__l71::<lambda_56ac8b8552a02ee0b57ccf93c5fbb10f> *this);
void __thiscall lambda_62015fcb806c2b758d752e087f67d5bf_::operator()(ACClient::onMessageTCP::__l110::<lambda_62015fcb806c2b758d752e087f67d5bf> *this);
void __thiscall lambda_71deb67b0ca34dd63fec0c3a21e0c39f_::operator()(ACClient::onCollisionWithCar::__l11::<lambda_71deb67b0ca34dd63fec0c3a21e0c39f> *this);
void __thiscall lambda_756b393c455025f826bc8e9c32383614_::operator()(ACClient::beginUpdateMode::__l6::<lambda_756b393c455025f826bc8e9c32383614> *this, const std::pair<int,int> *pair);
void __thiscall lambda_88b327a3fa7ea4738e9f6936855fc9a2_::operator()(ACClient::onMessageTCP::__l119::<lambda_88b327a3fa7ea4738e9f6936855fc9a2> *this);
void __thiscall lambda_8ad06d8ae8716f36c50308fe2df7e47e_::operator()(ACClient::update::__l39::<lambda_8ad06d8ae8716f36c50308fe2df7e47e> *this, const float *meters);
void __thiscall lambda_8ed240dda8b0abb382e2531a3d8b0b1c_::operator()(ACClient::onMessageTCP::__l18::<lambda_8ed240dda8b0abb382e2531a3d8b0b1c> *this);
void __thiscall lambda_917dba4247aaddcdf1f957f212166217_::operator()(ACClient::onNewSession::__l39::<lambda_917dba4247aaddcdf1f957f212166217> *this);
void __thiscall lambda_d9012094a323e946664e4993e5a2e310_::operator()(ACClient::onMessageTCP::__l117::<lambda_d9012094a323e946664e4993e5a2e310> *this);
void __thiscall lambda_dd422d109689ec70c09d8082b616f3cd_::operator()(ACClient::{ctor}::__l25::<lambda_dd422d109689ec70c09d8082b616f3cd> *this, const OnNewCarLoadedEvent *ev);
void __thiscall lambda_de388cf18b7af9d57af7ae36b67c897e_::operator()(ACClient::beginUpdateMode::__l7::<lambda_de388cf18b7af9d57af7ae36b67c897e> *this, const bool ev);
// void __usercall lambda_e21ada54cf8d695cebd35b33b8a9ff28_::operator()(ACClient::onSetupReceived::__l9::<lambda_e21ada54cf8d695cebd35b33b8a9ff28> *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall lambda_e537553689fc017a9af3740e06575ef5_::operator()(ACClient::onMessageTCP::__l127::<lambda_e537553689fc017a9af3740e06575ef5> *this);
void __thiscall lambda_f5d5c0c4b8c5864531c2766d7b9b317a_::operator()(ACClient::update::__l52::<lambda_f5d5c0c4b8c5864531c2766d7b9b317a> *this, const bool *message);
bool __thiscall std::less<std::string>::operator()(std::less<std::string > *this, const std::string *_Left, const std::string *_Right);
std::_Func_impl<std::_Callable_obj<<lambda_034d48754ea12fd9a7c51584058b5d75>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_034d48754ea12fd9a7c51584058b5d75_,0>,std::allocator<std::_Func_class<void,>>,void,>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_034d48754ea12fd9a7c51584058b5d75>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_77fa972dbd724f64a8dd777ab67ae855>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_77fa972dbd724f64a8dd777ab67ae855_,0>,std::allocator<std::_Func_class<void,>>,void,>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_77fa972dbd724f64a8dd777ab67ae855>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_88b327a3fa7ea4738e9f6936855fc9a2>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_88b327a3fa7ea4738e9f6936855fc9a2_,0>,std::allocator<std::_Func_class<void,>>,void,>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_88b327a3fa7ea4738e9f6936855fc9a2>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_8ed240dda8b0abb382e2531a3d8b0b1c>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ed240dda8b0abb382e2531a3d8b0b1c_,0>,std::allocator<std::_Func_class<void,>>,void,>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_8ed240dda8b0abb382e2531a3d8b0b1c>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_8edb651378e071f764f5bb6737b5a2e3>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8edb651378e071f764f5bb6737b5a2e3_,0>,std::allocator<std::_Func_class<void,>>,void,>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_8edb651378e071f764f5bb6737b5a2e3>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_917dba4247aaddcdf1f957f212166217>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_917dba4247aaddcdf1f957f212166217_,0>,std::allocator<std::_Func_class<void,>>,void,>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_917dba4247aaddcdf1f957f212166217>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_a05cde93ad1ae34cde6819468c04a3fa>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a05cde93ad1ae34cde6819468c04a3fa_,0>,std::allocator<std::_Func_class<void,>>,void,>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_a05cde93ad1ae34cde6819468c04a3fa>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_a8437c01ad429eb8483fb0d50f1b0bec>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a8437c01ad429eb8483fb0d50f1b0bec_,0>,std::allocator<std::_Func_class<void,>>,void,>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_a8437c01ad429eb8483fb0d50f1b0bec>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_ae6852c6929ac58c83df49ac0fd41c69>,0>,std::allocator<std::_Func_class<void,UDPMessage const &> >,void,UDPMessage const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_72d6c208b2f588c7f596fbc6b848f281_,0>,std::allocator<std::_Func_class<void,UDPMessage const &>>,void,UDPMessage const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_ae6852c6929ac58c83df49ac0fd41c69>,0>,std::allocator<std::_Func_class<void,UDPMessage const &> >,void,UDPMessage const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_d56d12ec4c2d04f70226b1d95868e0f3>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d56d12ec4c2d04f70226b1d95868e0f3_,0>,std::allocator<std::_Func_class<void,>>,void,>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_d56d12ec4c2d04f70226b1d95868e0f3>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_d9012094a323e946664e4993e5a2e310>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d9012094a323e946664e4993e5a2e310_,0>,std::allocator<std::_Func_class<void,>>,void,>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_d9012094a323e946664e4993e5a2e310>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_e21ada54cf8d695cebd35b33b8a9ff28>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e21ada54cf8d695cebd35b33b8a9ff28_,0>,std::allocator<std::_Func_class<void,>>,void,>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_e21ada54cf8d695cebd35b33b8a9ff28>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_e537553689fc017a9af3740e06575ef5>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e537553689fc017a9af3740e06575ef5_,0>,std::allocator<std::_Func_class<void,>>,void,>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_e537553689fc017a9af3740e06575ef5>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
ACClient *__thiscall ACClient::`scalar deleting destructor'(ACClient *this, unsigned int a2);
void __thiscall std::vector<unsigned int>::_Construct_n(std::vector<unsigned int> *this, unsigned int _Count, const unsigned int *_Pval);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1170cdf3bd71e1ebc5b6fd803b9745f1_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1170cdf3bd71e1ebc5b6fd803b9745f1>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3a3898a54f948dfae0db6ce4a4cf85d5_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_3a3898a54f948dfae0db6ce4a4cf85d5>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4a57095d2df20e6a1ecac27c5acee47f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_4a57095d2df20e6a1ecac27c5acee47f>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_56ac8b8552a02ee0b57ccf93c5fbb10f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_56ac8b8552a02ee0b57ccf93c5fbb10f>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_62015fcb806c2b758d752e087f67d5bf_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_62015fcb806c2b758d752e087f67d5bf>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6756511d28bf33588df61ddc6e1dc322_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_6756511d28bf33588df61ddc6e1dc322>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_71deb67b0ca34dd63fec0c3a21e0c39f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_71deb67b0ca34dd63fec0c3a21e0c39f>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_741d07ea55c671ad6a5e98e2316ddd25_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_741d07ea55c671ad6a5e98e2316ddd25>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_752cb5aa47fa314c12729fa67d88fb41_,0>,std::allocator<std::_Func_class<void,OnCollisionEvent const &>>,void,OnCollisionEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_752cb5aa47fa314c12729fa67d88fb41>,0>,std::allocator<std::_Func_class<void,OnCollisionEvent const &> >,void,OnCollisionEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_756b393c455025f826bc8e9c32383614_,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &>>,void,std::pair<int,int> const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_756b393c455025f826bc8e9c32383614>,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &> >,void,std::pair<int,int> const &> *this, void *_Where);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_88b327a3fa7ea4738e9f6936855fc9a2_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_88b327a3fa7ea4738e9f6936855fc9a2>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_89215cb97f19fb82d16432a1c1a52916_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_89215cb97f19fb82d16432a1c1a52916>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ed240dda8b0abb382e2531a3d8b0b1c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_8ed240dda8b0abb382e2531a3d8b0b1c>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8edb651378e071f764f5bb6737b5a2e3_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_8edb651378e071f764f5bb6737b5a2e3>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_917dba4247aaddcdf1f957f212166217_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_917dba4247aaddcdf1f957f212166217>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a8437c01ad429eb8483fb0d50f1b0bec_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_a8437c01ad429eb8483fb0d50f1b0bec>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d56d12ec4c2d04f70226b1d95868e0f3_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d56d12ec4c2d04f70226b1d95868e0f3>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_dd422d109689ec70c09d8082b616f3cd_,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &>>,void,OnNewCarLoadedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_dd422d109689ec70c09d8082b616f3cd>,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &> >,void,OnNewCarLoadedEvent const &> *this, void *_Where);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e21ada54cf8d695cebd35b33b8a9ff28_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e21ada54cf8d695cebd35b33b8a9ff28>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f5d5c0c4b8c5864531c2766d7b9b317a_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f5d5c0c4b8c5864531c2766d7b9b317a>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (double const &)>>>::_Destroy(std::vector<Task> *this, Task *_First, Task *_Last);
void __thiscall std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<std::string const,float>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string >,std::allocator<std::pair<std::string const ,float> >,0> > *this, std::_Tree_node<std::pair<std::string const ,float>,void *> *_Newnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_034d48754ea12fd9a7c51584058b5d75_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_034d48754ea12fd9a7c51584058b5d75>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0b107ea97fe1b13b90339c7c22972ffe_,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &>>,void,OnMouseDownEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0b107ea97fe1b13b90339c7c22972ffe>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *this, const OnMouseDownEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1170cdf3bd71e1ebc5b6fd803b9745f1_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1170cdf3bd71e1ebc5b6fd803b9745f1>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_203470d6c340a0181a3cbe40f2613520_,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &>>,void,std::pair<int,int> const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_203470d6c340a0181a3cbe40f2613520>,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &> >,void,std::pair<int,int> const &> *this, const std::pair<int,int> *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2bb6e88e9207602c4080d31c284a1a45_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2bb6e88e9207602c4080d31c284a1a45>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3a3898a54f948dfae0db6ce4a4cf85d5_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3a3898a54f948dfae0db6ce4a4cf85d5>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4a57095d2df20e6a1ecac27c5acee47f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4a57095d2df20e6a1ecac27c5acee47f>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4e6b98f2a357c503939cf32a3459a579_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4e6b98f2a357c503939cf32a3459a579>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, const long double *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_56ac8b8552a02ee0b57ccf93c5fbb10f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_56ac8b8552a02ee0b57ccf93c5fbb10f>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_62015fcb806c2b758d752e087f67d5bf_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_62015fcb806c2b758d752e087f67d5bf>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6756511d28bf33588df61ddc6e1dc322_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6756511d28bf33588df61ddc6e1dc322>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_70d6ec5fb0c5de134d3f177c95b099bb_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_70d6ec5fb0c5de134d3f177c95b099bb>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_71deb67b0ca34dd63fec0c3a21e0c39f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_71deb67b0ca34dd63fec0c3a21e0c39f>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_72d6c208b2f588c7f596fbc6b848f281_,0>,std::allocator<std::_Func_class<void,UDPMessage const &>>,void,UDPMessage const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_72d6c208b2f588c7f596fbc6b848f281>,0>,std::allocator<std::_Func_class<void,UDPMessage const &> >,void,UDPMessage const &> *this, const UDPMessage *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_741d07ea55c671ad6a5e98e2316ddd25_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_741d07ea55c671ad6a5e98e2316ddd25>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, const long double *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7471ed95f74a5e68441cce0bf44db25a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_7471ed95f74a5e68441cce0bf44db25a>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_752cb5aa47fa314c12729fa67d88fb41_,0>,std::allocator<std::_Func_class<void,OnCollisionEvent const &>>,void,OnCollisionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_752cb5aa47fa314c12729fa67d88fb41>,0>,std::allocator<std::_Func_class<void,OnCollisionEvent const &> >,void,OnCollisionEvent const &> *this, const OnCollisionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_756b393c455025f826bc8e9c32383614_,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &>>,void,std::pair<int,int> const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_756b393c455025f826bc8e9c32383614>,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &> >,void,std::pair<int,int> const &> *this, const std::pair<int,int> *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_77fa972dbd724f64a8dd777ab67ae855_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_77fa972dbd724f64a8dd777ab67ae855>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_88b327a3fa7ea4738e9f6936855fc9a2_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_88b327a3fa7ea4738e9f6936855fc9a2>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_89215cb97f19fb82d16432a1c1a52916_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_89215cb97f19fb82d16432a1c1a52916>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ad06d8ae8716f36c50308fe2df7e47e_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8ad06d8ae8716f36c50308fe2df7e47e>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, const float *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ed240dda8b0abb382e2531a3d8b0b1c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8ed240dda8b0abb382e2531a3d8b0b1c>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8edb651378e071f764f5bb6737b5a2e3_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8edb651378e071f764f5bb6737b5a2e3>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_917dba4247aaddcdf1f957f212166217_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_917dba4247aaddcdf1f957f212166217>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9b63370cdf94d6893ef7e0df6d7fab33_,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &>>,void,OnSectorSplitEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9b63370cdf94d6893ef7e0df6d7fab33>,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &> >,void,OnSectorSplitEvent const &> *this, const OnSectorSplitEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a05cde93ad1ae34cde6819468c04a3fa_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a05cde93ad1ae34cde6819468c04a3fa>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a8437c01ad429eb8483fb0d50f1b0bec_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a8437c01ad429eb8483fb0d50f1b0bec>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a8c125a8ce066174ddc942f1d7f09e5a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a8c125a8ce066174ddc942f1d7f09e5a>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ae6852c6929ac58c83df49ac0fd41c69_,0>,std::allocator<std::_Func_class<void,UDPMessage const &>>,void,UDPMessage const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ae6852c6929ac58c83df49ac0fd41c69>,0>,std::allocator<std::_Func_class<void,UDPMessage const &> >,void,UDPMessage const &> *this, const UDPMessage *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d56d12ec4c2d04f70226b1d95868e0f3_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d56d12ec4c2d04f70226b1d95868e0f3>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d9012094a323e946664e4993e5a2e310_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d9012094a323e946664e4993e5a2e310>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_dd422d109689ec70c09d8082b616f3cd_,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &>>,void,OnNewCarLoadedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_dd422d109689ec70c09d8082b616f3cd>,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &> >,void,OnNewCarLoadedEvent const &> *this, const OnNewCarLoadedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_de388cf18b7af9d57af7ae36b67c897e_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_de388cf18b7af9d57af7ae36b67c897e>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
// void __usercall std::_Func_impl<std::_Callable_obj<_lambda_e21ada54cf8d695cebd35b33b8a9ff28_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e21ada54cf8d695cebd35b33b8a9ff28>,0>,std::allocator<std::_Func_class<void> >,void> *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e537553689fc017a9af3740e06575ef5_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e537553689fc017a9af3740e06575ef5>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f5d5c0c4b8c5864531c2766d7b9b317a_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f5d5c0c4b8c5864531c2766d7b9b317a>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<std::string const,float>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string >,std::allocator<std::pair<std::string const ,float> >,0> > *this, std::_Tree_node<std::pair<std::string const ,float>,void *> *_Rootnode);
std::_Tree_node<std::pair<std::string const ,float>,void *> *__thiscall std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<std::string const,float>>,0>>::_Lbound(std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string >,std::allocator<std::pair<std::string const ,float> >,0> > *this, const std::string *_Keyval);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_034d48754ea12fd9a7c51584058b5d75_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_034d48754ea12fd9a7c51584058b5d75>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0b107ea97fe1b13b90339c7c22972ffe_,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &>>,void,OnMouseDownEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_0b107ea97fe1b13b90339c7c22972ffe>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_203470d6c340a0181a3cbe40f2613520_,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &>>,void,std::pair<int,int> const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_203470d6c340a0181a3cbe40f2613520>,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &> >,void,std::pair<int,int> const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2bb6e88e9207602c4080d31c284a1a45_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_2bb6e88e9207602c4080d31c284a1a45>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4e6b98f2a357c503939cf32a3459a579_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_4e6b98f2a357c503939cf32a3459a579>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_70d6ec5fb0c5de134d3f177c95b099bb_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_70d6ec5fb0c5de134d3f177c95b099bb>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_72d6c208b2f588c7f596fbc6b848f281_,0>,std::allocator<std::_Func_class<void,UDPMessage const &>>,void,UDPMessage const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_72d6c208b2f588c7f596fbc6b848f281>,0>,std::allocator<std::_Func_class<void,UDPMessage const &> >,void,UDPMessage const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7471ed95f74a5e68441cce0bf44db25a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_7471ed95f74a5e68441cce0bf44db25a>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_77fa972dbd724f64a8dd777ab67ae855_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_77fa972dbd724f64a8dd777ab67ae855>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ad06d8ae8716f36c50308fe2df7e47e_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_8ad06d8ae8716f36c50308fe2df7e47e>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9b63370cdf94d6893ef7e0df6d7fab33_,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &>>,void,OnSectorSplitEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_9b63370cdf94d6893ef7e0df6d7fab33>,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &> >,void,OnSectorSplitEvent const &> *this, void *_Where);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a05cde93ad1ae34cde6819468c04a3fa_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_a05cde93ad1ae34cde6819468c04a3fa>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a8c125a8ce066174ddc942f1d7f09e5a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_a8c125a8ce066174ddc942f1d7f09e5a>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ae6852c6929ac58c83df49ac0fd41c69_,0>,std::allocator<std::_Func_class<void,UDPMessage const &>>,void,UDPMessage const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_ae6852c6929ac58c83df49ac0fd41c69>,0>,std::allocator<std::_Func_class<void,UDPMessage const &> >,void,UDPMessage const &> *this, void *_Where);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d9012094a323e946664e4993e5a2e310_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d9012094a323e946664e4993e5a2e310>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_de388cf18b7af9d57af7ae36b67c897e_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_de388cf18b7af9d57af7ae36b67c897e>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e537553689fc017a9af3740e06575ef5_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e537553689fc017a9af3740e06575ef5>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::vector<ClientCollisionEvent>::_Reallocate(std::vector<ClientCollisionEvent> *this, unsigned int _Count);
void __thiscall std::vector<ClientRemoteCarDef>::_Reallocate(std::vector<ClientRemoteCarDef> *this, unsigned int _Count);
void __thiscall std::vector<Lap>::_Reallocate(std::vector<Lap> *this, unsigned int _Count);
void __thiscall std::vector<RemoteSession>::_Reallocate(std::vector<RemoteSession> *this, unsigned int _Count);
void __thiscall std::vector<ClientCollisionEvent>::_Reserve(std::vector<ClientCollisionEvent> *this, unsigned int _Count);
void __thiscall std::vector<ClientRemoteCarDef>::_Reserve(std::vector<ClientRemoteCarDef> *this, unsigned int _Count);
void __thiscall std::vector<Lap>::_Reserve(std::vector<Lap> *this, unsigned int _Count);
void __thiscall std::vector<RemoteSession>::_Reserve(std::vector<RemoteSession> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_034d48754ea12fd9a7c51584058b5d75_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_034d48754ea12fd9a7c51584058b5d75>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0b107ea97fe1b13b90339c7c22972ffe_,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &>>,void,OnMouseDownEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0b107ea97fe1b13b90339c7c22972ffe>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1170cdf3bd71e1ebc5b6fd803b9745f1_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1170cdf3bd71e1ebc5b6fd803b9745f1>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_203470d6c340a0181a3cbe40f2613520_,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &>>,void,std::pair<int,int> const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_203470d6c340a0181a3cbe40f2613520>,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &> >,void,std::pair<int,int> const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2bb6e88e9207602c4080d31c284a1a45_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2bb6e88e9207602c4080d31c284a1a45>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3a3898a54f948dfae0db6ce4a4cf85d5_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3a3898a54f948dfae0db6ce4a4cf85d5>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4a57095d2df20e6a1ecac27c5acee47f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4a57095d2df20e6a1ecac27c5acee47f>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4e6b98f2a357c503939cf32a3459a579_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4e6b98f2a357c503939cf32a3459a579>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_56ac8b8552a02ee0b57ccf93c5fbb10f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_56ac8b8552a02ee0b57ccf93c5fbb10f>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_62015fcb806c2b758d752e087f67d5bf_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_62015fcb806c2b758d752e087f67d5bf>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6756511d28bf33588df61ddc6e1dc322_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6756511d28bf33588df61ddc6e1dc322>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_70d6ec5fb0c5de134d3f177c95b099bb_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_70d6ec5fb0c5de134d3f177c95b099bb>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_71deb67b0ca34dd63fec0c3a21e0c39f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_71deb67b0ca34dd63fec0c3a21e0c39f>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_72d6c208b2f588c7f596fbc6b848f281_,0>,std::allocator<std::_Func_class<void,UDPMessage const &>>,void,UDPMessage const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_72d6c208b2f588c7f596fbc6b848f281>,0>,std::allocator<std::_Func_class<void,UDPMessage const &> >,void,UDPMessage const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_741d07ea55c671ad6a5e98e2316ddd25_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_741d07ea55c671ad6a5e98e2316ddd25>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7471ed95f74a5e68441cce0bf44db25a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_7471ed95f74a5e68441cce0bf44db25a>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_752cb5aa47fa314c12729fa67d88fb41_,0>,std::allocator<std::_Func_class<void,OnCollisionEvent const &>>,void,OnCollisionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_752cb5aa47fa314c12729fa67d88fb41>,0>,std::allocator<std::_Func_class<void,OnCollisionEvent const &> >,void,OnCollisionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_756b393c455025f826bc8e9c32383614_,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &>>,void,std::pair<int,int> const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_756b393c455025f826bc8e9c32383614>,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &> >,void,std::pair<int,int> const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_77fa972dbd724f64a8dd777ab67ae855_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_77fa972dbd724f64a8dd777ab67ae855>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_88b327a3fa7ea4738e9f6936855fc9a2_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_88b327a3fa7ea4738e9f6936855fc9a2>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_89215cb97f19fb82d16432a1c1a52916_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_89215cb97f19fb82d16432a1c1a52916>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ad06d8ae8716f36c50308fe2df7e47e_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8ad06d8ae8716f36c50308fe2df7e47e>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ed240dda8b0abb382e2531a3d8b0b1c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8ed240dda8b0abb382e2531a3d8b0b1c>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8edb651378e071f764f5bb6737b5a2e3_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8edb651378e071f764f5bb6737b5a2e3>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_917dba4247aaddcdf1f957f212166217_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_917dba4247aaddcdf1f957f212166217>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9b63370cdf94d6893ef7e0df6d7fab33_,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &>>,void,OnSectorSplitEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9b63370cdf94d6893ef7e0df6d7fab33>,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &> >,void,OnSectorSplitEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a05cde93ad1ae34cde6819468c04a3fa_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a05cde93ad1ae34cde6819468c04a3fa>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a8437c01ad429eb8483fb0d50f1b0bec_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a8437c01ad429eb8483fb0d50f1b0bec>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a8c125a8ce066174ddc942f1d7f09e5a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a8c125a8ce066174ddc942f1d7f09e5a>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ae6852c6929ac58c83df49ac0fd41c69_,0>,std::allocator<std::_Func_class<void,UDPMessage const &>>,void,UDPMessage const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ae6852c6929ac58c83df49ac0fd41c69>,0>,std::allocator<std::_Func_class<void,UDPMessage const &> >,void,UDPMessage const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d56d12ec4c2d04f70226b1d95868e0f3_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d56d12ec4c2d04f70226b1d95868e0f3>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d9012094a323e946664e4993e5a2e310_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d9012094a323e946664e4993e5a2e310>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_dd422d109689ec70c09d8082b616f3cd_,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &>>,void,OnNewCarLoadedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_dd422d109689ec70c09d8082b616f3cd>,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &> >,void,OnNewCarLoadedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_de388cf18b7af9d57af7ae36b67c897e_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_de388cf18b7af9d57af7ae36b67c897e>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e21ada54cf8d695cebd35b33b8a9ff28_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e21ada54cf8d695cebd35b33b8a9ff28>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e537553689fc017a9af3740e06575ef5_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e537553689fc017a9af3740e06575ef5>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f5d5c0c4b8c5864531c2766d7b9b317a_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f5d5c0c4b8c5864531c2766d7b9b317a>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
void __thiscall std::vector<Lap>::~vector<Lap>(std::vector<Lap> *this);
void __thiscall std::vector<bool>::_Trim(std::vector<bool> *this, unsigned int _Size);
void __thiscall ACClient::addCollisionEvent(ACClient *this, NetCarStateProvider *netCar, float speed, const vec3f *worldPos, const vec3f *relPos);
void __thiscall ACClient::addNetCar(ACClient *this, NetCarStateProvider *nc);
void __thiscall ACClient::addSplitToBest(ACClient *this, std::vector<unsigned int> *splits, std::vector<unsigned int> *personalSplits, const unsigned int *sector, const unsigned int *time, const unsigned int *cuts);
void __thiscall ACClient::askForP2Pvalue(ACClient *this);
void __thiscall ACClient::associate(ACClient *this);
void __thiscall ACClient::beginUpdateMode(ACClient *this);
int __thiscall std::string::compare(std::string *this, unsigned int _Off, unsigned int _N0, const char *_Ptr, unsigned int _Count);
int __cdecl std::char_traits<char>::compare(const char *_First1, const char *_First2, unsigned int _Count);
void __thiscall Sim::displayLeaderboard(Sim *this, BOOL value);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,float> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<std::string const,float>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string >,std::allocator<std::pair<std::string const ,float> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,float> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,float> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,float> > > > _Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,float> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<std::string const,float>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::string,float,std::less<std::string >,std::allocator<std::pair<std::string const ,float> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,float> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::string const ,float> > > > _Where);
std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > > *__thiscall std::vector<unsigned int>::erase(std::vector<unsigned int> *this, std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > > *result, std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > > _First_arg, std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > > _Last_arg);
std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *__thiscall std::vector<bool>::erase(std::vector<bool> *this, std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > *result, std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > _First_arg, std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > _Last_arg);
unsigned int __thiscall ACClient::getBestLap(ACClient *this, CarAvatar *car);
unsigned int __thiscall ACClient::getBestSplit(ACClient *this, const int *sector, const bool *isGlobal, CarAvatar *car);
CarAvatar *__thiscall ACClient::getCarAvatarFromSessionID(ACClient *this, unsigned __int8 sesid);
// std::vector<unsigned char> *__userpurge ACClient::getCarMD5@<eax>(ACClient *this@<ecx>, unsigned int a2@<ebx>, std::vector<unsigned char> *result, const std::wstring *unix_name);
unsigned int __thiscall ACClient::getCarPosition(ACClient *this, CarAvatar *car);
Lap *__thiscall ACClient::getCurrentLap(ACClient *this, Lap *result, CarAvatar *car);
RemoteSession *__thiscall ACClient::getCurrentSession(ACClient *this, RemoteSession *result);
int __thiscall ACClient::getCurrentSessionIndex(ACClient *this);
RemoteSessionResult *__thiscall ACClient::getCurrentSessionResults(ACClient *this);
VoteType __thiscall ACClient::getCurrentVoteType(ACClient *this);
CarAvatar *__thiscall ACClient::getCurrentVotingTarget(ACClient *this);
unsigned int __thiscall ACClient::getInstanceBestLap(ACClient *this, CarAvatar *car);
int __thiscall ACClient::getLapCount(ACClient *this, CarAvatar *car);
void __thiscall ACClient::getLaps(ACClient *this, CarAvatar *car, std::vector<Lap> *laps);
Lap *__thiscall ACClient::getLastLap(ACClient *this, Lap *result, CarAvatar *car);
unsigned int __thiscall ACClient::getLastSplit(ACClient *this, CarAvatar *car, const int *sector);
NetCarStateProvider *__thiscall ACClient::getNetCarFromSessionID(ACClient *this, unsigned __int8 id);
long double __thiscall ACClient::getPhysicsTime(ACClient *this);
int __thiscall ACClient::getPing(ACClient *this, CarAvatar *anAvatar);
char __thiscall ACClient::getRemoteCarList(ACClient *this, std::vector<ClientRemoteCarDef> *remoteCars);
int __thiscall ACClient::getSessionCount(ACClient *this);
int __thiscall ACClient::getSessionIDFromCarAvatar(ACClient *this, CarAvatar *anAvatar);
unsigned __int8 __thiscall ACClient::getSessionIdFromCarAvatarID(ACClient *this, int carAvatarID);
RemoteSession *__thiscall ACClient::getSessionInfo(ACClient *this, RemoteSession *result, int index);
long double __thiscall ACClient::getSessionTimeLeft(ACClient *this);
unsigned int __thiscall ACClient::getSplit(ACClient *this, CarAvatar *car, const int *sector);
long double __thiscall ACClient::getTimetoWait(ACClient *this);
double __thiscall ACClient::getVotingMaxTime(ACClient *this);
double __thiscall ACClient::getVotingTimeLeft(ACClient *this);
char __thiscall ACClient::handleLocalAdminMessages(ACClient *this, std::wstring msg);
// ClientHandshakeResult *__userpurge ACClient::handshakeTCP@<eax>(ACClient *this@<ecx>, unsigned int a2@<ebx>, ClientHandshakeResult *result);
bool __thiscall ACClient::hasVoted(ACClient *this);
bool __thiscall ACClient::isAllowedToSendChatMessage(ACClient *this);
bool __thiscall ACClient::isBestSplit(ACClient *this, const int *sector, const int *t, const bool *isGlobal, CarAvatar *car);
void __thiscall ACClient::logMessage(ACClient *this, const std::wstring *message);
void __thiscall ACClient::onCollisionEvent(ACClient *this, const OnCollisionEvent *ev);
void __thiscall ACClient::onCollisionWithCar(ACClient *this);
void __thiscall ACClient::onDRSZoneReceived(ACClient *this, UDPPacket *pak);
void __thiscall ACClient::onLapCompleted(ACClient *this, const OnLapCompletedEvent *ev);
void __thiscall ACClient::onMessage(ACClient *this, const UDPMessage *msg);
void __thiscall ACClient::onMessageTCP(ACClient *this, const UDPMessage *msg);
void __thiscall ACClient::onNewSession(ACClient *this, UDPPacket *pak, bool isHandShake);
void __thiscall ACClient::onPhysicsStep(ACClient *this, long double pt);
void __thiscall ACClient::onRemoteLapCompleted(ACClient *this, UDPPacket *pak);
void __thiscall ACClient::onRemoteSectorSplit(ACClient *this, UDPPacket *pak);
void __thiscall ACClient::onRemoteSunAngleReceived(ACClient *this, float angle);
void __thiscall ACClient::onSectorSplit(ACClient *this, const OnSectorSplitEvent *ev);
void __thiscall ACClient::onSetupReceived(ACClient *this, UDPPacket *pak);
void __thiscall ACClient::onTyreCompoundChanged(ACClient *this, const std::wstring *shortName);
void __thiscall ACClient::onWelcomeMessageReceived(ACClient *this, UDPPacket *pak);
void __thiscall std::vector<ClientRemoteCarDef>::push_back(std::vector<ClientRemoteCarDef> *this, const ClientRemoteCarDef *_Val);
void __thiscall std::vector<RemoteSession>::push_back(std::vector<RemoteSession> *this, const RemoteSession *_Val);
void __thiscall ACClient::renderHUD(ACClient *this, float dt);
void __thiscall ACClient::resetCurrentLaps(ACClient *this);
void __thiscall std::vector<bool>::resize(std::vector<bool> *this, unsigned int _Newsize, bool _Val);
void __thiscall ACClient::sendCarPosition(ACClient *this);
void __thiscall ACClient::sendChat(ACClient *this, const std::wstring *message);
void __thiscall ACClient::sendVote(ACClient *this, VoteType aVote, bool aVoteValue, int targetAvatarGUID);
void __thiscall ACClient::shutdown(ACClient *this);
int __thiscall std::vector<Lap>::size(std::vector<Lap> *this);
void __thiscall ACClient::storeSplitToLap(ACClient *this, std::vector<unsigned int> *splits, std::vector<unsigned int> *personalSplits, std::vector<Lap> *laps, const unsigned int *laptime, const unsigned int *cuts);
std::wstring *__cdecl timeToSecsString(std::wstring *result, int t);
void __thiscall ACClient::update(ACClient *this, float deltaT);
void __thiscall ACClient::updateDamageReport(ACClient *this);
void __thiscall ACClient::updateQOS(ACClient *this, long double pt);
std::wstring *__thiscall std::_Callable_obj<_lambda_24cbc0b64d4fe93ea5626370da3f9258_,0>::_ApplyX<std::wstring,>(std::_Callable_obj<<lambda_24cbc0b64d4fe93ea5626370da3f9258>,0> *this, std::wstring *result);
std::wstring *__thiscall std::_Callable_obj<_lambda_eb39b18eba66b5c84fa469eaebd8b4b2_,0>::_ApplyX<std::wstring,>(std::_Callable_obj<<lambda_eb39b18eba66b5c84fa469eaebd8b4b2>,0> *this, std::wstring *result);
void __thiscall ACClientVotingManager::ACClientVotingManager(ACClientVotingManager *this, Sim *aSim, ACClient *aClient);
char __thiscall lambda_8d19dac72f07b22f55a6368dd5bc5841_::operator()(ACClientVotingManager::{ctor}::__l27::<lambda_8d19dac72f07b22f55a6368dd5bc5841> *this, std::wstring commandline);
void __thiscall lambda_96080666a02d8705771faf4a925a4ff0_::operator()(ACClientVotingManager::{ctor}::__l17::<lambda_96080666a02d8705771faf4a925a4ff0> *this, const bool message);
std::_Func_impl<std::_Callable_obj<<lambda_27ea4f82da8c4bad790896e1e9dfe62e>,0>,std::allocator<std::_Func_class<void,ReceivedVoteDef const &> >,void,ReceivedVoteDef const &> *__thiscall std::_Func_base<void,ReceivedVoteDef const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_27ea4f82da8c4bad790896e1e9dfe62e>,0>,std::allocator<std::_Func_class<void,ReceivedVoteDef const &> >,void,ReceivedVoteDef const &> *this, unsigned int a2);
ACClientVotingManager *__thiscall ACClientVotingManager::`scalar deleting destructor'(ACClientVotingManager *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_103f01dfb6db843aa824736d7104cc2c_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_103f01dfb6db843aa824736d7104cc2c>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_24cbc0b64d4fe93ea5626370da3f9258_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_24cbc0b64d4fe93ea5626370da3f9258>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_27ea4f82da8c4bad790896e1e9dfe62e_,0>,std::allocator<std::_Func_class<void,ReceivedVoteDef const &>>,void,ReceivedVoteDef const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_27ea4f82da8c4bad790896e1e9dfe62e>,0>,std::allocator<std::_Func_class<void,ReceivedVoteDef const &> >,void,ReceivedVoteDef const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_96080666a02d8705771faf4a925a4ff0_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_96080666a02d8705771faf4a925a4ff0>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c30245db0ab22c60bd421578e1fa631a_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_c30245db0ab22c60bd421578e1fa631a>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this, void *_Where);
std::wstring *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_24cbc0b64d4fe93ea5626370da3f9258_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_24cbc0b64d4fe93ea5626370da3f9258>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this, std::wstring *result);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_27ea4f82da8c4bad790896e1e9dfe62e_,0>,std::allocator<std::_Func_class<void,ReceivedVoteDef const &>>,void,ReceivedVoteDef const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_27ea4f82da8c4bad790896e1e9dfe62e>,0>,std::allocator<std::_Func_class<void,ReceivedVoteDef const &> >,void,ReceivedVoteDef const &> *this, const ReceivedVoteDef *<_Args_0>);
char __thiscall std::_Func_impl<std::_Callable_obj<_lambda_64a2e5a7b602561a4360b6ad55ab368b_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_64a2e5a7b602561a4360b6ad55ab368b>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this, std::wstring *<_Args_0>);
char __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8d19dac72f07b22f55a6368dd5bc5841_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8d19dac72f07b22f55a6368dd5bc5841>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this, std::wstring *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_96080666a02d8705771faf4a925a4ff0_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_96080666a02d8705771faf4a925a4ff0>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
char __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c30245db0ab22c60bd421578e1fa631a_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c30245db0ab22c60bd421578e1fa631a>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this, std::wstring *<_Args_0>);
std::wstring *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_eb39b18eba66b5c84fa469eaebd8b4b2_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_eb39b18eba66b5c84fa469eaebd8b4b2>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this, std::wstring *result);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_64a2e5a7b602561a4360b6ad55ab368b_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_64a2e5a7b602561a4360b6ad55ab368b>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8d19dac72f07b22f55a6368dd5bc5841_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_8d19dac72f07b22f55a6368dd5bc5841>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_eb39b18eba66b5c84fa469eaebd8b4b2_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_eb39b18eba66b5c84fa469eaebd8b4b2>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_103f01dfb6db843aa824736d7104cc2c_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_103f01dfb6db843aa824736d7104cc2c>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_24cbc0b64d4fe93ea5626370da3f9258_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_24cbc0b64d4fe93ea5626370da3f9258>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_27ea4f82da8c4bad790896e1e9dfe62e_,0>,std::allocator<std::_Func_class<void,ReceivedVoteDef const &>>,void,ReceivedVoteDef const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_27ea4f82da8c4bad790896e1e9dfe62e>,0>,std::allocator<std::_Func_class<void,ReceivedVoteDef const &> >,void,ReceivedVoteDef const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_64a2e5a7b602561a4360b6ad55ab368b_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_64a2e5a7b602561a4360b6ad55ab368b>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8d19dac72f07b22f55a6368dd5bc5841_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8d19dac72f07b22f55a6368dd5bc5841>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_96080666a02d8705771faf4a925a4ff0_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_96080666a02d8705771faf4a925a4ff0>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c30245db0ab22c60bd421578e1fa631a_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c30245db0ab22c60bd421578e1fa631a>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_eb39b18eba66b5c84fa469eaebd8b4b2_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_eb39b18eba66b5c84fa469eaebd8b4b2>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this);
void __thiscall ACClientVotingManager::update(ACClientVotingManager *this, float dt);
void __thiscall ACErrorHandler::ACErrorHandler(ACErrorHandler *this, Console *aconsole);
void __thiscall ACErrorHandler::~ACErrorHandler(ACErrorHandler *this);
ACErrorHandler *__thiscall ACErrorHandler::`scalar deleting destructor'(ACErrorHandler *this, unsigned int a2);
void __thiscall ACErrorHandler::writeLine(ACErrorHandler *this, std::wstring s);
void __thiscall ACErrorHandler::writeWarning(ACErrorHandler *this, std::wstring s);
TyreTestFrame *__thiscall std::vector<SplinePoint>::_Ucopy<SplinePoint *>(std::vector<SplinePoint> *this, SplinePoint *_First, SplinePoint *_Last, SplinePoint *_Ptr);
std::pair<float,float> *__cdecl std::_Uninit_move<std::pair<float,float> *,std::pair<float,float> *,std::allocator<std::pair<float,float>>,std::pair<float,float>>(std::pair<float,float> *_First, std::pair<float,float> *_Last, std::pair<float,float> *_Dest);
__m128i *__cdecl std::_Uninit_move<AnalogNeedle *,AnalogNeedle *,std::allocator<AnalogNeedle>,AnalogNeedle>(AnalogNeedle *_First, AnalogNeedle *_Last, AnalogNeedle *_Dest);
void __thiscall AnalogInstruments::AnalogInstruments(AnalogInstruments *this, CarAvatar *car);
void __thiscall AnalogInstruments::~AnalogInstruments(AnalogInstruments *this);
std::vector<unsigned int> *__thiscall std::vector<float>::operator=(std::vector<unsigned int> *this, const std::vector<unsigned int> *_Right);
std::vector<CubicSpline<float,float>::Element,std::allocator<CubicSpline<float,float>::Element> > *__thiscall std::vector<CTData>::operator=(std::vector<CubicSpline<float,float>::Element,std::allocator<CubicSpline<float,float>::Element> > *this, const std::vector<CubicSpline<float,float>::Element,std::allocator<CubicSpline<float,float>::Element> > *_Right);
Curve *__thiscall Curve::operator=(Curve *this, const Curve *__that);
AnalogInstruments *__thiscall AnalogInstruments::`scalar deleting destructor'(AnalogInstruments *this, unsigned int a2);
void __thiscall std::vector<std::pair<int,float>>::_Reallocate(std::vector<std::pair<float,float>> *this, unsigned int _Count);
void __thiscall std::vector<AnalogNeedle>::_Reallocate(std::vector<AnalogNeedle> *this, unsigned int _Count);
void __thiscall std::vector<AnalogNeedle>::_Reserve(std::vector<AnalogNeedle> *this, unsigned int _Count);
void __thiscall AnalogInstruments::initFuel(AnalogInstruments *this, INIReader *r);
void __thiscall AnalogInstruments::initPlaceHolders(AnalogInstruments *this, INIReader *ini);
void __thiscall AnalogInstruments::initRPM(AnalogInstruments *this, INIReader *r);
void __thiscall AnalogInstruments::initSpeed(AnalogInstruments *this, INIReader *r);
void __thiscall AnalogInstruments::initTurbo(AnalogInstruments *this, INIReader *r);
void __thiscall AnalogInstruments::initWater(AnalogInstruments *this, INIReader *ini);
void __thiscall std::vector<std::pair<float,float>>::push_back(std::vector<std::pair<float,float>> *this, const std::pair<float,float> *_Val);
void __thiscall std::vector<AnalogNeedle>::push_back(std::vector<AnalogNeedle> *this, const AnalogNeedle *_Val);
void __thiscall AnalogInstruments::readTurboSection(AnalogInstruments *this, INIReader *r, const std::wstring *section);
// void __userpurge AnalogInstruments::update(AnalogInstruments *this@<ecx>, int a2@<ebx>, float dt);
// void __userpurge AnalogInstruments::updateFuel(AnalogInstruments *this@<ecx>, int a2@<ebx>, int a3@<edi>, float dt);
void __thiscall AnalogInstruments::updatePlaceHolders(AnalogInstruments *this, float dt);
// void __userpurge AnalogInstruments::updateRPM(AnalogInstruments *this@<ecx>, int a2@<edi>, int a3@<esi>, float dt);
// void __userpurge AnalogInstruments::updateSpeed(AnalogInstruments *this@<ecx>, int a2@<edi>, float dt);
void __thiscall AnalogInstruments::updateTurbo(AnalogInstruments *this, float dt);
// void __userpurge AnalogInstruments::updateWater(AnalogInstruments *this@<ecx>, int a2@<ebx>, int a3@<edi>, float dt);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<AnimationSet>>>(AnimationSet *_First, AnimationSet *_Last);
AnimationSet *__cdecl std::_Uninit_move<AnimationSet *,AnimationSet *,std::allocator<AnimationSet>,AnimationSet>(AnimationSet *_First, AnimationSet *_Last, AnimationSet *_Dest);
AnimatedLightNode *__cdecl std::_Uninit_move<AnimatedLightNode *,AnimatedLightNode *,std::allocator<AnimatedLightNode>,AnimatedLightNode>(AnimatedLightNode *_First, AnimatedLightNode *_Last, AnimatedLightNode *_Dest);
void __thiscall std::vector<AnimationSet>::vector<AnimationSet>(std::vector<AnimationSet> *this, const std::vector<AnimationSet> *_Right);
void __thiscall std::vector<quatpos>::vector<quatpos>(std::vector<quatpos> *this, const std::vector<quatpos> *_Right);
// void __userpurge AnimatedLights::AnimatedLights(AnimatedLights *this@<ecx>, unsigned int a2@<ebx>, CarBrakeLights *lightsManager);
void __thiscall AnimatedLights::~AnimatedLights(AnimatedLights *this);
AnimatedLights *__thiscall AnimatedLights::`scalar deleting destructor'(AnimatedLights *this, unsigned int a2);
char __thiscall std::vector<quatpos>::_Buy(std::vector<quatpos> *this, unsigned int _Capacity);
void __thiscall std::vector<AnimatedLightNode>::_Reallocate(std::vector<AnimatedLightNode> *this, unsigned int _Count);
void __thiscall std::vector<AnimatedLightNode>::_Reserve(std::vector<AnimatedLightNode> *this, unsigned int _Count);
void __thiscall std::vector<AnimatedLightNode>::_Tidy(std::vector<AnimatedLightNode> *this);
void __thiscall std::vector<AnimationSet>::_Tidy(Animation *this);
void __thiscall std::vector<AnimatedLightNode>::push_back(std::vector<AnimatedLightNode> *this, const AnimatedLightNode *_Val);
void __thiscall AnimatedLights::update(AnimatedLights *this, float deltaT);
void __thiscall BenchmarkMode::BenchmarkMode(BenchmarkMode *this, Sim *sim);
BenchmarkMode *__thiscall BenchmarkMode::`scalar deleting destructor'(BenchmarkMode *this, unsigned int a2);
void __thiscall BenchmarkMode::generateResultString(BenchmarkMode *this);
void __thiscall BenchmarkMode::renderHUD(BenchmarkMode *this, float deltaT);
void __thiscall std::shared_ptr<Material>::_Resetp<Material>(std::shared_ptr<Material> *this, Material *_Px);
void __thiscall BrakeDiscGraphics::BrakeDiscGraphics(BrakeDiscGraphics *this, CarAvatar *car);
std::shared_ptr<Material> *__thiscall std::shared_ptr<Material>::operator=(std::shared_ptr<Material> *this, const std::shared_ptr<Material> *_Right);
BrakeDiscGraphics *__thiscall BrakeDiscGraphics::`scalar deleting destructor'(BrakeDiscGraphics *this, unsigned int a2);
void __thiscall std::_Ref_count<Material>::_Destroy(std::_Ref_count<Material> *this);
void __thiscall MaterialVar::set(MaterialVar *this);
void __thiscall MaterialVar::setFloat(MaterialVar *this, float v);
void __thiscall BrakeDiscGraphics::update(BrakeDiscGraphics *this, float dt);
void __cdecl std::_Adjust_heap<float *,int,float,std::less<void>>(float *_First, int _Hole, int _Bottom, float *_Val);
void __cdecl std::_Insertion_sort1<float *,std::less<void>,float>(float *_First, float *_Last);
void __cdecl std::_Make_heap<float *,int,float,std::less<void>>(float *_First, float *_Last);
void __cdecl std::_Median<float *,std::less<void>>(float *_First, float *_Mid, float *_Last);
void __cdecl std::_Sort<float *,int,std::less<void>>(float *_First, float *_Last, int _Ideal, std::less<void> _Pred);
void __cdecl std::_Sort_heap<float *,std::less<void>>(float *_First, float *_Last);
std::pair<float *,float *> *__cdecl std::_Unguarded_partition<float *,std::less<void>>(std::pair<float *,float *> *result, float *_First, float *_Last);
void __cdecl std::_Uninit_def_fill_n<Triangle *,unsigned int,std::allocator<Triangle>,Triangle>(Triangle *_First, unsigned int _Count);
void __thiscall std::vector<Triangle>::vector<Triangle>(std::vector<Triangle> *this, unsigned int _Count);
void __thiscall CameraFacing::CameraFacing(CameraFacing *this, TrackAvatar *track, Sim *sim);
void __thiscall Triangle::Triangle(Triangle *this);
Triangle *__thiscall Triangle::`vector deleting destructor'(Triangle *this, unsigned int a2);
char __thiscall std::vector<MaterialResource>::_Buy(std::vector<MaterialResource> *this, unsigned int _Capacity);
void __thiscall std::vector<Triangle>::_Tidy(std::vector<Triangle> *this);
void __thiscall CameraModeStart::CameraModeStart(CameraModeStart *this, Sim *sim, CameraTrack *cameraTrack, CameraForward *camera, const std::wstring *trackName, const std::wstring *trackConfig);
CameraModeStart *__thiscall CameraModeStart::`scalar deleting destructor'(CameraModeStart *this, unsigned int a2);
void __thiscall CameraModeStart::renderHUD(CameraModeStart *this, float deltaT);
void __thiscall CameraModeStart::update(CameraModeStart *this, float deltaT);
void __thiscall CameraModeStart::updateCar(CameraModeStart *this, float dt);
void __thiscall CarAnimation::CarAnimation(CarAnimation *this);
void __thiscall CarAnimations::CarAnimations(CarAnimations *this, CarAvatar *aCar);
void __thiscall WingAnimation::WingAnimation(WingAnimation *this);
void __thiscall std::unique_ptr<CarAnimation>::~unique_ptr<CarAnimation>(std::unique_ptr<CarAnimation> *this);
void __thiscall std::unique_ptr<AnimationPlayer>::~unique_ptr<AnimationPlayer>(std::unique_ptr<AnimationPlayer> *this);
void __thiscall CarAnimations::~CarAnimations(CarAnimations *this);
CarAnimations *__thiscall CarAnimations::`scalar deleting destructor'(CarAnimations *this, unsigned int a2);
void __thiscall std::unique_ptr<CarAnimation>::reset(std::unique_ptr<CarAnimation> *this, CarAnimation *_Ptr);
void __thiscall CarAnimations::setDoorOpen(CarAnimations *this, bool mode);
void __thiscall CarAnimations::update(CarAnimations *this, float dt);
void __thiscall std::function<void __cdecl (bool const &)>::function<void __cdecl (bool const &)>(std::function<void __cdecl(bool const &)> *this, CarAudioFMOD::{ctor}::__l64::<lambda_6817fd2273d1010f1094d841cc9dd6ff> *_Func);
void __thiscall std::function<void __cdecl (bool const &)>::function<void __cdecl (bool const &)>(std::function<void __cdecl(bool const &)> *this, CarAudioFMOD::{ctor}::__l71::<lambda_9978203bfa93d47158f91df2e13620d5> *_Func);
void __thiscall std::function<void __cdecl (OnValueChanged const &)>::function<void __cdecl (OnValueChanged const &)>(std::function<void __cdecl(OnValueChanged const &)> *this, CarAudioFMOD::{ctor}::__l51::<lambda_d8094ee7e2dbdd4a9a921b54d17e0eee> *_Func);
AudioEvent *__cdecl std::_Uninit_move<AudioEvent *,AudioEvent *,std::allocator<AudioEvent>,AudioEvent>(AudioEvent *_First, AudioEvent *_Last, AudioEvent *_Dest);
void __thiscall std::vector<AudioEvent>::emplace_back<AudioEngine * &,std::wstring>(std::vector<AudioEvent> *this, AudioEngine **<_Val_0>, std::wstring *<_Val_1>);
void __thiscall std::vector<AudioEvent>::emplace_back<AudioEngine * &,std::wstring,enum EventReverbResponse>(std::vector<AudioEvent> *this, AudioEngine **<_Val_0>, std::wstring *<_Val_1>, EventReverbResponse *<_Val_2>);
ACCameraManager *__thiscall GameObject::getGameObject<ACCameraManager>(GameObject *this);
bool __cdecl isfinite<float>(float _X);
void __thiscall std::unique_ptr<AudioEvent>::unique_ptr<AudioEvent>(Speed *this);
void __thiscall CarAudioFMOD::CarAudioFMOD(CarAudioFMOD *this, CarAvatar *car);
// void __userpurge MixVolumes::MixVolumes(MixVolumes *this@<ecx>, unsigned int a2@<ebx>, const std::wstring *carUnixName);
void __thiscall SkidParams::SkidParams(SkidParams *this, CarAvatar *car);
void __thiscall CarAudioFMOD::SurfaceList::SurfaceList(CarAudioFMOD::SurfaceList *this);
void __thiscall std::array<CarAudioFMOD::SurfaceList,4>::~array<CarAudioFMOD::SurfaceList,4>(std::array<CarAudioFMOD::SurfaceList,4> *this);
void __thiscall std::unique_ptr<AudioEvent>::~unique_ptr<AudioEvent>(std::unique_ptr<AudioEvent> *this);
void __thiscall AudioBankRef::~AudioBankRef(AudioBankRef *this);
void __thiscall CarAudioFMOD::~CarAudioFMOD(CarAudioFMOD *this);
AudioEvent *__thiscall std::vector<AudioEvent>::operator[](std::vector<AudioEvent> *this, unsigned int _Pos);
void __thiscall lambda_9978203bfa93d47158f91df2e13620d5_::operator()(CarAudioFMOD::{ctor}::__l71::<lambda_9978203bfa93d47158f91df2e13620d5> *this, bool value);
std::_Func_impl<std::_Callable_obj<<lambda_d8094ee7e2dbdd4a9a921b54d17e0eee>,0>,std::allocator<std::_Func_class<void,OnValueChanged const &> >,void,OnValueChanged const &> *__thiscall std::_Func_base<void,OnValueChanged const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_d8094ee7e2dbdd4a9a921b54d17e0eee>,0>,std::allocator<std::_Func_class<void,OnValueChanged const &> >,void,OnValueChanged const &> *this, unsigned int a2);
CarAudioFMOD *__thiscall CarAudioFMOD::`vector deleting destructor'(CarAudioFMOD *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9978203bfa93d47158f91df2e13620d5_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_9978203bfa93d47158f91df2e13620d5>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6817fd2273d1010f1094d841cc9dd6ff_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6817fd2273d1010f1094d841cc9dd6ff>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9978203bfa93d47158f91df2e13620d5_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9978203bfa93d47158f91df2e13620d5>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d8094ee7e2dbdd4a9a921b54d17e0eee_,0>,std::allocator<std::_Func_class<void,OnValueChanged const &>>,void,OnValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d8094ee7e2dbdd4a9a921b54d17e0eee>,0>,std::allocator<std::_Func_class<void,OnValueChanged const &> >,void,OnValueChanged const &> *this, const OnValueChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6817fd2273d1010f1094d841cc9dd6ff_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_6817fd2273d1010f1094d841cc9dd6ff>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d8094ee7e2dbdd4a9a921b54d17e0eee_,0>,std::allocator<std::_Func_class<void,OnValueChanged const &>>,void,OnValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_d8094ee7e2dbdd4a9a921b54d17e0eee>,0>,std::allocator<std::_Func_class<void,OnValueChanged const &> >,void,OnValueChanged const &> *this, void *_Where);
void __thiscall std::vector<AudioEvent>::_Reallocate(std::vector<AudioEvent> *this, unsigned int _Count);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (FlagTriggered const &)>>>::_Reserve(std::vector<std::pair<void *,std::function<void __cdecl(SessionInfo const &)> >> *this, unsigned int _Count);
void __thiscall std::vector<AudioEvent>::_Reserve(std::vector<AudioEvent> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6817fd2273d1010f1094d841cc9dd6ff_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6817fd2273d1010f1094d841cc9dd6ff>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9978203bfa93d47158f91df2e13620d5_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9978203bfa93d47158f91df2e13620d5>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d8094ee7e2dbdd4a9a921b54d17e0eee_,0>,std::allocator<std::_Func_class<void,OnValueChanged const &>>,void,OnValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d8094ee7e2dbdd4a9a921b54d17e0eee>,0>,std::allocator<std::_Func_class<void,OnValueChanged const &> >,void,OnValueChanged const &> *this);
void __thiscall std::vector<AudioEvent>::_Tidy(std::vector<AudioEvent> *this);
void __thiscall CarAudioFMOD::computeTransforms(CarAudioFMOD *this, mat44f *carTransform, mat44f *engineTransform, mat44f *backfiresTransform, mat44f *hoodTrasform);
double __cdecl filterToLerpDeltaK(float filter, float dt);
bool __thiscall Node::getActive(Node *this);
vec3f *__cdecl getVelocitySafe(vec3f *result, CarAvatar *car);
bool __thiscall CarAudioFMOD::isExternalCamera(CarAudioFMOD *this);
BOOL __thiscall CarAudioFMOD::isOpponentCar(CarAudioFMOD *this);
void __thiscall CarAudioFMOD::onCarHit(CarAudioFMOD *this, float normalForce, const vec3f *pos, const vec3f *normal, float impactAngle, float relativeSpeed, const unsigned int colliderCategory);
char __thiscall CarAudioFMOD::onGearChanged(CarAudioFMOD *this, GearChangeRequestDirection direction);
void __thiscall CarAudioFMOD::playSurface(CarAudioFMOD *this, int wheelID, std::wstring path, const vec3f *carVelocity);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (OnSectorSplitEvent const &)>>>::push_back(std::vector<std::pair<void *,std::function<void __cdecl(SessionInfo const &)> >> *this, const std::pair<void *,std::function<void __cdecl(SessionInfo const &)> > *_Val);
void __thiscall CarAudioFMOD::renderAudio(CarAudioFMOD *this, float deltaT);
void __thiscall std::vector<AudioEvent>::reserve(std::vector<AudioEvent> *this, unsigned int _Count);
void __thiscall std::unique_ptr<AudioEvent>::reset(std::unique_ptr<AudioEvent> *this, AudioEvent *_Ptr);
void __thiscall CarAudioFMOD::setEventVolumes(CarAudioFMOD *this);
bool __thiscall CarAudioFMOD::shouldUseInternalSounds(CarAudioFMOD *this);
void __thiscall CarAudioFMOD::startStopEvents(CarAudioFMOD *this);
void __thiscall CarAudioFMOD::updateSkids(CarAudioFMOD *this, const vec3f *carVelocity, const vec3f *listenerPosition, float dt);
void __thiscall CarAudioFMOD::updateSurfaces(CarAudioFMOD *this, const float deltaT, const vec3f *carVelocity);
void __thiscall CarAudioFMOD::updateTurbo(CarAudioFMOD *this, const float deltaT, const mat44f *engineTransform, const vec3f *carVelocity);
void __thiscall CarAudioFMOD::updateWheels(CarAudioFMOD *this, const vec3f *carVelocity);
void __thiscall CarHintLoader::CarHintLoader(CarHintLoader *this, const std::wstring *unixName, const std::wstring *config);
void __thiscall CarHintLoader::~CarHintLoader(CarHintLoader *this);
void __thiscall CarLabel::CarData::CarData(CarLabel::CarData *this);
void __thiscall CarLabel::CarLabel(CarLabel *this, int id, float maxDist, CarLabel::eLabelType type, Sim *aSim);
void __thiscall CarLabel::CarData::~CarData(CarLabel::CarData *this);
void __thiscall CarLabel::~CarLabel(CarLabel *this);
CarLabel *__thiscall CarLabel::`vector deleting destructor'(CarLabel *this, unsigned int a2);
void __thiscall CarLabel::resetRects(CarLabel *this, int width);
void __thiscall CarLabel::updatePilotData(CarLabel *this, const CarLabel::CarData *carData, float scale);
void __cdecl std::_Adjust_heap<Node * *,int,Node *,_lambda_34d661537c28432bb0babb0208ff3da7_>(Node **_First, int _Hole, int _Bottom, Node **_Val);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > > *__thiscall std::_Tree<std::_Tmap_traits<enum DWRITE_RENDERING_MODE,IDWriteRenderingParams *,std::less<enum DWRITE_RENDERING_MODE>,std::allocator<std::pair<enum DWRITE_RENDERING_MODE const,IDWriteRenderingParams *>>,0>>::_Insert_at<std::pair<enum DWRITE_RENDERING_MODE const,IDWriteRenderingParams *> &,std::_Tree_node<std::pair<enum DWRITE_RENDERING_MODE const,IDWriteRenderingParams *>,void *> *>(std::_Tree<std::_Tmap_traits<unsigned int,bool,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,bool> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > > *result, bool _Addleft, std::_Tree_node<std::pair<unsigned int const ,bool>,void *> *_Wherenode, std::pair<unsigned int const ,bool> *_Val, std::_Tree_node<std::pair<unsigned int const ,bool>,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > > *__thiscall std::_Tree<std::_Tmap_traits<unsigned int,bool,std::less<unsigned int>,std::allocator<std::pair<unsigned int const,bool>>,0>>::_Insert_hint<std::pair<unsigned int const,bool> &,std::_Tree_node<std::pair<unsigned int const,bool>,void *> *>(std::_Tree<std::_Tmap_traits<unsigned int,bool,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,bool> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > > _Where, std::pair<unsigned int const ,bool> *_Val, std::_Tree_node<std::pair<unsigned int const ,bool>,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<unsigned int,bool,std::less<unsigned int>,std::allocator<std::pair<unsigned int const,bool>>,0>>::_Insert_nohint<std::pair<unsigned int const,bool> &,std::_Tree_node<std::pair<unsigned int const,bool>,void *> *>(std::_Tree<std::_Tmap_traits<unsigned int,bool,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,bool> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > > _Leftish, std::pair<unsigned int const ,bool> *_Val, std::_Tree_node<std::pair<unsigned int const ,bool>,void *> *_Newnode);
void __cdecl std::_Insertion_sort1<Node * *,_lambda_34d661537c28432bb0babb0208ff3da7_,Node *>(Node **_First, Node **_Last);
void __cdecl std::_Make_heap<Node * *,int,Node *,_lambda_34d661537c28432bb0babb0208ff3da7_>(Node **_First, Node **_Last);
void __cdecl std::_Median<Node * *,_lambda_34d661537c28432bb0babb0208ff3da7_>(Node **_First, Node **_Mid, Node **_Last);
void __cdecl std::_Push_heap<Node * *,int,Node *,_lambda_34d661537c28432bb0babb0208ff3da7_>(Node **_First, int _Hole, int _Top, Node **_Val);
void __cdecl std::_Sort<Node * *,int,_lambda_34d661537c28432bb0babb0208ff3da7_>(Node **_First, Node **_Last, int _Ideal, CarNodeSorter::sort::__l12::<lambda_34d661537c28432bb0babb0208ff3da7> _Pred);
void __cdecl std::_Sort_heap<Node * *,_lambda_34d661537c28432bb0babb0208ff3da7_>(Node **_First, Node **_Last);
std::pair<Node * *,Node * *> *__cdecl std::_Unguarded_partition<Node * *,_lambda_34d661537c28432bb0babb0208ff3da7_>(std::pair<Node * *,Node * *> *result, Node **_First, Node **_Last);
void __thiscall CarNodeSorter::CarNodeSorter(CarNodeSorter *this, const std::wstring *name, Sim *sim);
Node *const *__thiscall std::map<Node *,CarAvatar *>::operator[](std::map<Node *,CarAvatar *> *this, Node *const *_Keyval);
CarNodeSorter *__thiscall CarNodeSorter::`vector deleting destructor'(CarNodeSorter *this, unsigned int a2);
void __thiscall std::_Tree<std::_Tmap_traits<std::pair<unsigned int,std::pair<unsigned int,float>>,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *,std::less<std::pair<unsigned int,std::pair<unsigned int,float>>>,std::allocator<std::pair<std::pair<unsigned int,std::pair<unsigned int,float>> const,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<unsigned int,bool,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,bool> >,0> > *this, std::_Tree_node<std::pair<unsigned int const ,bool>,void *> *_Rootnode);
void __thiscall CarNodeSorter::addCar(CarNodeSorter *this, Node *node, CarAvatar *avatar);
void __thiscall std::_Tree<std::_Tmap_traits<Node *,CarAvatar *,std::less<Node *>,std::allocator<std::pair<Node * const,CarAvatar *>>,0>>::clear(std::_Tree<std::_Tmap_traits<unsigned int,bool,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,bool> >,0> > *this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > > *__thiscall std::_Tree<std::_Tmap_traits<unsigned int,bool,std::less<unsigned int>,std::allocator<std::pair<unsigned int const,bool>>,0>>::erase(std::_Tree<std::_Tmap_traits<unsigned int,bool,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,bool> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > > _Last);
void __thiscall CarNodeSorter::sort(CarNodeSorter *this);
// void __userpurge CinematicFreeCamera::CinematicFreeCamera(CinematicFreeCamera *this@<ecx>, unsigned int a2@<ebx>, std::wstring name, Camera *aCamera, Game *aGame);
void __thiscall CinematicFreeCamera::~CinematicFreeCamera(CinematicFreeCamera *this);
CinematicFreeCamera *__thiscall CinematicFreeCamera::`vector deleting destructor'(CinematicFreeCamera *this, unsigned int a2);
void __thiscall CinematicFreeCamera::getKeyboardMovement(CinematicFreeCamera *this, mat44f *matrix, float dt, float msp);
void __thiscall CinematicFreeCamera::getMouseLook(CinematicFreeCamera *this, mat44f *matrix, float dt, float speed);
// void __usercall CinematicFreeCamera::loadSettingsFromINI(CinematicFreeCamera *this@<ecx>, unsigned int a2@<ebx>);
// void __usercall rotateOnAxis(int a1@<esi>, mat44f *matrix, vec3f axis, float rads);
// void __usercall rotatePitch(int a1@<esi>, mat44f *matrix, float d);
// void __usercall rotateRoll(int a1@<esi>, mat44f *matrix, float d);
void __thiscall CinematicFreeCamera::setAudioDistanceScale(CinematicFreeCamera *this);
void __thiscall CinematicFreeCamera::setCameraParameterFromUserInput(CinematicFreeCamera *this, float *aFov, float *aDofFactor, float deltaT);
void __thiscall CinematicFreeCamera::setMatrixMovementFromUserInput(CinematicFreeCamera *this, mat44f *inputMatrix, float dt);
// void __userpurge CinematicFreeCamera::standardMouseLook(CinematicFreeCamera *this@<ecx>, int a2@<esi>, float dt, float speed);
// void __userpurge CinematicFreeCamera::update(CinematicFreeCamera *this@<ecx>, unsigned int a2@<ebx>, float deltaT);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<CTDriver>>>(CTDriver *_First, CTDriver *_Last);
void __thiscall std::vector<CTData>::vector<CTData>(std::vector<CTData> *this, const std::vector<CTData> *_Right);
// void __userpurge ComparativeTelemetry::ComparativeTelemetry(ComparativeTelemetry *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
void __thiscall std::vector<CTDriver>::~vector<CTDriver>(std::vector<CTDriver> *this);
void __thiscall ComparativeTelemetry::~ComparativeTelemetry(ComparativeTelemetry *this);
// void __userpurge lambda_2b7065a4bbd033e503c86552e643968e_::operator()(ComparativeTelemetry::initOpponentSelectionForm::__l10::<lambda_2b7065a4bbd033e503c86552e643968e> *this@<ecx>, unsigned int a2@<ebx>, const ksgui::OnListBoxItemClickedEvent *message);
void __thiscall lambda_bf284045a6ef436797ad753c4166a82c_::operator()(ComparativeTelemetry::initOpponentSelectionForm::__l11::<lambda_bf284045a6ef436797ad753c4166a82c> *this, const ksgui::OnListBoxItemClickedEvent *message);
std::_Func_impl<std::_Callable_obj<<lambda_48fa2377d72a9e519bfea48caaa99668>,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &> >,void,ksgui::OnCheckBoxChanged const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_262c53f26e1cda69c2ac1ba1a0abd7fa_,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &>>,void,ksgui::OnCheckBoxChanged const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_48fa2377d72a9e519bfea48caaa99668>,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &> >,void,ksgui::OnCheckBoxChanged const &> *this, unsigned int a2);
ComparativeTelemetry *__thiscall ComparativeTelemetry::`vector deleting destructor'(ComparativeTelemetry *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_262c53f26e1cda69c2ac1ba1a0abd7fa_,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &>>,void,ksgui::OnCheckBoxChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_262c53f26e1cda69c2ac1ba1a0abd7fa>,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &> >,void,ksgui::OnCheckBoxChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bf284045a6ef436797ad753c4166a82c_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_bf284045a6ef436797ad753c4166a82c>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_15c4da1adb98043da5888ad9a0ea76bf_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_15c4da1adb98043da5888ad9a0ea76bf>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_262c53f26e1cda69c2ac1ba1a0abd7fa_,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &>>,void,ksgui::OnCheckBoxChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_262c53f26e1cda69c2ac1ba1a0abd7fa>,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &> >,void,ksgui::OnCheckBoxChanged const &> *this, const ksgui::OnCheckBoxChanged *<_Args_0>);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_2b7065a4bbd033e503c86552e643968e_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2b7065a4bbd033e503c86552e643968e>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this@<ecx>, unsigned int a2@<ebx>, const ksgui::OnListBoxItemClickedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_48fa2377d72a9e519bfea48caaa99668_,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &>>,void,ksgui::OnCheckBoxChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_48fa2377d72a9e519bfea48caaa99668>,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &> >,void,ksgui::OnCheckBoxChanged const &> *this, const ksgui::OnCheckBoxChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bf284045a6ef436797ad753c4166a82c_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_bf284045a6ef436797ad753c4166a82c>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this, const ksgui::OnListBoxItemClickedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_15c4da1adb98043da5888ad9a0ea76bf_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_15c4da1adb98043da5888ad9a0ea76bf>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2b7065a4bbd033e503c86552e643968e_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_2b7065a4bbd033e503c86552e643968e>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_48fa2377d72a9e519bfea48caaa99668_,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &>>,void,ksgui::OnCheckBoxChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_48fa2377d72a9e519bfea48caaa99668>,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &> >,void,ksgui::OnCheckBoxChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_15c4da1adb98043da5888ad9a0ea76bf_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_15c4da1adb98043da5888ad9a0ea76bf>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_262c53f26e1cda69c2ac1ba1a0abd7fa_,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &>>,void,ksgui::OnCheckBoxChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_262c53f26e1cda69c2ac1ba1a0abd7fa>,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &> >,void,ksgui::OnCheckBoxChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2b7065a4bbd033e503c86552e643968e_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2b7065a4bbd033e503c86552e643968e>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_48fa2377d72a9e519bfea48caaa99668_,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &>>,void,ksgui::OnCheckBoxChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_48fa2377d72a9e519bfea48caaa99668>,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &> >,void,ksgui::OnCheckBoxChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_bf284045a6ef436797ad753c4166a82c_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_bf284045a6ef436797ad753c4166a82c>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this);
void __thiscall ksgui::ListBoxRowData::addData(ksgui::ListBoxRowData *this, std::wstring text, vec4f foreColor, vec4f backColor);
// void __usercall ComparativeTelemetry::initOpponentSelectionForm(ComparativeTelemetry *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall ComparativeTelemetry::onMouseMove(ComparativeTelemetry *this, const OnMouseMoveEvent *message);
void __thiscall ComparativeTelemetry::onVisibleChanged(ComparativeTelemetry *this, bool newValue);
void __thiscall ComparativeTelemetry::render(ComparativeTelemetry *this, float dt);
void __thiscall ComparativeTelemetry::renderPlayerStats(ComparativeTelemetry *this);
void __thiscall ComparativeTelemetry::updateBestPlayerData(ComparativeTelemetry *this, bool force);
void __thiscall ComparativeTelemetry::updateLastPlayerData(ComparativeTelemetry *this, bool force);
void __cdecl std::_Uninit_def_fill_n<CTData *,unsigned int,std::allocator<CTData>,CTData>(CTData *_First, unsigned int _Count);
CTDriver *__cdecl std::_Uninit_move<CTDriver *,CTDriver *,std::allocator<CTDriver>,CTDriver>(CTDriver *_First, CTDriver *_Last, CTDriver *_Dest);
void __thiscall CTDriver::CTDriver(CTDriver *this, const CTDriver *__that);
void __thiscall ComparativeTelemetryRecorder::ComparativeTelemetryRecorder(ComparativeTelemetryRecorder *this, CarAvatar *aCar);
void __thiscall Concurrency::concurrent_queue<CTData,std::allocator<CTData>>::~concurrent_queue<CTData,std::allocator<CTData>>(Concurrency::concurrent_queue<CTData,std::allocator<CTData> > *this);
void __thiscall ComparativeTelemetryRecorder::~ComparativeTelemetryRecorder(ComparativeTelemetryRecorder *this);
void __thiscall lambda_0721caed60733fb79f38e221bf1be9eb_::operator()(ComparativeTelemetryRecorder::{ctor}::__l3::<lambda_0721caed60733fb79f38e221bf1be9eb> *this, const OnStepCompleteEvent *message);
void __thiscall lambda_4fec62f02147ab69502667dacac15b27_::operator()(ComparativeTelemetryRecorder::{ctor}::__l12::<lambda_4fec62f02147ab69502667dacac15b27> *this, const OnLapCompletedEvent *message);
std::_Func_impl<std::_Callable_obj<<lambda_0721caed60733fb79f38e221bf1be9eb>,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &> >,void,OnStepCompleteEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cf5d4e7fcd47e539c5aa1d25e4769e2f_,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &>>,void,OnStepCompleteEvent const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_0721caed60733fb79f38e221bf1be9eb>,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &> >,void,OnStepCompleteEvent const &> *this, unsigned int a2);
Concurrency::concurrent_queue<CTData,std::allocator<CTData> > *__thiscall Concurrency::concurrent_queue<CTData,std::allocator<CTData>>::`scalar deleting destructor'(Concurrency::concurrent_queue<CTData,std::allocator<CTData> > *this, unsigned int a2);
ComparativeTelemetryRecorder *__thiscall ComparativeTelemetryRecorder::`vector deleting destructor'(ComparativeTelemetryRecorder *this, unsigned int a2);
void __thiscall Concurrency::concurrent_queue<CTData,std::allocator<CTData>>::_Assign_and_destroy_item(Concurrency::concurrent_queue<CTData,std::allocator<CTData> > *this, void *_Dst, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Src, unsigned int _Index);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0721caed60733fb79f38e221bf1be9eb_,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &>>,void,OnStepCompleteEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0721caed60733fb79f38e221bf1be9eb>,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &> >,void,OnStepCompleteEvent const &> *this, const OnStepCompleteEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4fec62f02147ab69502667dacac15b27_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4fec62f02147ab69502667dacac15b27>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
unsigned int __thiscall std::vector<char>::_Grow_to(std::vector<char> *this, unsigned int _Count);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0721caed60733fb79f38e221bf1be9eb_,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &>>,void,OnStepCompleteEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_0721caed60733fb79f38e221bf1be9eb>,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &> >,void,OnStepCompleteEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4fec62f02147ab69502667dacac15b27_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_4fec62f02147ab69502667dacac15b27>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall Concurrency::concurrent_queue<CTData,std::allocator<CTData>>::_Move_item(Concurrency::concurrent_queue<CTData,std::allocator<CTData> > *this, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Dst, unsigned int _Index, void *_Src);
void __thiscall std::vector<char>::_Reallocate(std::vector<char> *this, unsigned int _Count);
void __thiscall std::vector<CTDriver>::_Reallocate(std::vector<CTDriver> *this, unsigned int _Count);
void __thiscall std::vector<char>::_Reserve(std::vector<char> *this, unsigned int _Count);
void __thiscall std::vector<CTDriver>::_Reserve(std::vector<CTDriver> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0721caed60733fb79f38e221bf1be9eb_,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &>>,void,OnStepCompleteEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0721caed60733fb79f38e221bf1be9eb>,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &> >,void,OnStepCompleteEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4fec62f02147ab69502667dacac15b27_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4fec62f02147ab69502667dacac15b27>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
unsigned int __thiscall ComparativeTelemetryRecorder::getBestTime(ComparativeTelemetryRecorder *this);
std::vector<CTData> *__thiscall ComparativeTelemetryRecorder::getBestTimeData(ComparativeTelemetryRecorder *this);
void __thiscall ComparativeTelemetryRecorder::getCTOpponents(ComparativeTelemetryRecorder *this, std::vector<CTDriver> *opponents);
unsigned int __thiscall ComparativeTelemetryRecorder::getLastTime(ComparativeTelemetryRecorder *this);
std::vector<CTData> *__thiscall ComparativeTelemetryRecorder::getLastTimeData(ComparativeTelemetryRecorder *this);
std::wstring *__cdecl ksLoadString(std::wstring *result, std::ifstream *in);
void __cdecl ksSaveString(std::ofstream *out, const std::wstring *s);
// void __usercall ComparativeTelemetryRecorder::loadBest(ComparativeTelemetryRecorder *this@<ecx>, unsigned int a2@<ebx>);
// std::vector<CTData> *__userpurge ComparativeTelemetryRecorder::loadCTOpponent@<eax>(ComparativeTelemetryRecorder *this@<ecx>, unsigned int a2@<ebx>, std::vector<CTData> *result, std::wstring fileName);
void __thiscall std::vector<CTDriver>::push_back(std::vector<CTDriver> *this, const CTDriver *_Val);
void __thiscall std::vector<char>::resize(std::vector<char> *this, unsigned int _Newsize);
void __thiscall std::vector<CTData>::resize(std::vector<CTData> *this, unsigned int _Newsize);
void __thiscall ComparativeTelemetryRecorder::saveBest(ComparativeTelemetryRecorder *this);
void __thiscall ComparativeTelemetryRecorder::shutdown(ComparativeTelemetryRecorder *this);
void __thiscall ComparativeTelemetryRecorder::update(ComparativeTelemetryRecorder *this, float dt);
void __thiscall ConsoleCommandLambda::ConsoleCommandLambda(ConsoleCommandLambda *this, Console *console, const std::wstring *name, std::function<bool __cdecl(std::wstring)> executeFun, std::function<std::wstring __cdecl(void)> helpFun);
std::wstring *__thiscall std::_Func_class<std::wstring,>::operator()(std::_Func_class<std::wstring > *this, std::wstring *result);
bool __thiscall ConsoleCommandLambda::execute(ConsoleCommandLambda *this, std::wstring commandline);
std::wstring *__thiscall ConsoleCommandLambda::getHelp(ConsoleCommandLambda *this, std::wstring *result);
ConstrainedObjectDef *__cdecl std::_Uninit_move<ConstrainedObjectDef *,ConstrainedObjectDef *,std::allocator<ConstrainedObjectDef>,ConstrainedObjectDef>(ConstrainedObjectDef *_First, ConstrainedObjectDef *_Last, ConstrainedObjectDef *_Dest);
void __thiscall ConstrainedObjectsManager::ConstrainedObjectsManager(ConstrainedObjectsManager *this, CarAvatar *car);
ConstrainedObjectsManager *__thiscall ConstrainedObjectsManager::`vector deleting destructor'(ConstrainedObjectsManager *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f72a3f96ea94bf48a593368c3bf259b3_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_f72a3f96ea94bf48a593368c3bf259b3>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f72a3f96ea94bf48a593368c3bf259b3_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f72a3f96ea94bf48a593368c3bf259b3>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, const float *<_Args_0>);
void __thiscall std::vector<ConstrainedObjectDef>::_Reallocate(std::vector<ConstrainedObjectDef> *this, unsigned int _Count);
void __thiscall std::vector<ConstrainedObjectDef>::_Reserve(std::vector<ConstrainedObjectDef> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f72a3f96ea94bf48a593368c3bf259b3_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f72a3f96ea94bf48a593368c3bf259b3>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this);
void __thiscall ConstrainedObjectsManager::addModel(ConstrainedObjectsManager *this, Node *root);
void __thiscall ConstrainedObjectsManager::addNodes(ConstrainedObjectsManager *this, Node *root, Node *node);
void __thiscall std::vector<ConstrainedObjectDef>::push_back(std::vector<ConstrainedObjectDef> *this, const ConstrainedObjectDef *_Val);
void __thiscall ConstrainedObjectsManager::updateConstraints(ConstrainedObjectsManager *this, float deltaT);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<DamageDisplayer::DamageItem>>>(DamageDisplayer::DamageItem *_First, DamageDisplayer::DamageItem *_Last);
DamageDisplayer::DamageItem *__cdecl std::_Uninit_move<DamageDisplayer::DamageItem *,DamageDisplayer::DamageItem *,std::allocator<DamageDisplayer::DamageItem>,DamageDisplayer::DamageItem>(DamageDisplayer::DamageItem *_First, DamageDisplayer::DamageItem *_Last, DamageDisplayer::DamageItem *_Dest);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_1ca8cfb881c0023f537e770f14165781_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l15::<lambda_1ca8cfb881c0023f537e770f14165781> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_30a1869c666cb33e5541a92d257d58d8_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l12::<lambda_30a1869c666cb33e5541a92d257d58d8> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_364ca66356ebdb2f67bff6a58eb49cf1_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l18::<lambda_364ca66356ebdb2f67bff6a58eb49cf1> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_3831a4234c8b4f984cc416c0c2e8c0f1_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l21::<lambda_3831a4234c8b4f984cc416c0c2e8c0f1> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_4515a8dad98462c5b375a8904c2200c6_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l22::<lambda_4515a8dad98462c5b375a8904c2200c6> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_4e62b6f27ff38ab122926485f437fe23_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l13::<lambda_4e62b6f27ff38ab122926485f437fe23> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_523e7597a8dac871e371bf604a802b40_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l23::<lambda_523e7597a8dac871e371bf604a802b40> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_577c23446fa9a047296e01313cec4df6_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l26::<lambda_577c23446fa9a047296e01313cec4df6> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_7be6e65ebd593868a58d06268892c077_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l17::<lambda_7be6e65ebd593868a58d06268892c077> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_893b1f3df355325909d41329b65269df_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l24::<lambda_893b1f3df355325909d41329b65269df> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_bd8907cf0c4bc79371c4c7ff25425663_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l14::<lambda_bd8907cf0c4bc79371c4c7ff25425663> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_bf33cd3346b378aa7124754cb84cd787_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l20::<lambda_bf33cd3346b378aa7124754cb84cd787> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_c5729e8bde39f0814e73b7c23b067a1b_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l27::<lambda_c5729e8bde39f0814e73b7c23b067a1b> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_cae6ad10d45ca8522f6c261413b078d6_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l16::<lambda_cae6ad10d45ca8522f6c261413b078d6> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_cafcf4fed9d61a619e644c666b02d61a_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l25::<lambda_cafcf4fed9d61a619e644c666b02d61a> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_e9ec5f6fe842578807784ad4676f2b45_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l29::<lambda_e9ec5f6fe842578807784ad4676f2b45> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_eb4eb79c5a2ae639bb085cd5a46fce76_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l19::<lambda_eb4eb79c5a2ae639bb085cd5a46fce76> *<_Args_1>);
void __thiscall std::allocator<DamageDisplayer::DamageItem>::construct<DamageDisplayer::DamageItem,Texture,_lambda_f685c20988d4a25ca568bdb0cb6dbcb4_>(std::allocator<DamageDisplayer::DamageItem> *this, DamageDisplayer::DamageItem *_Ptr, Texture *<_Args_0>, DamageDisplayer::{ctor}::__l28::<lambda_f685c20988d4a25ca568bdb0cb6dbcb4> *<_Args_1>);
void __thiscall std::_Wrap_alloc<std::allocator<DamageDisplayer::DamageItem>>::destroy<DamageDisplayer::DamageItem>(std::_Wrap_alloc<std::allocator<DamageDisplayer::DamageItem> > *this, DamageDisplayer::DamageItem *_Ptr);
// void __userpurge DamageDisplayer::DamageDisplayer(DamageDisplayer *this@<ecx>, Font *a2@<ebx>, Sim *aSim);
void __thiscall DamageDisplayer::DamageItem::DamageItem(DamageDisplayer::DamageItem *this, const DamageDisplayer::DamageItem *__that);
void __thiscall DamageDisplayer::DamageItem::DamageItem(DamageDisplayer::DamageItem *this, Texture texture, std::function<float __cdecl(void)> fetch);
void __thiscall std::vector<DamageDisplayer::DamageItem>::~vector<DamageDisplayer::DamageItem>(std::vector<DamageDisplayer::DamageItem> *this);
void __thiscall DamageDisplayer::~DamageDisplayer(DamageDisplayer *this);
double __thiscall lambda_1ca8cfb881c0023f537e770f14165781_::operator()(DamageDisplayer::{ctor}::__l15::<lambda_1ca8cfb881c0023f537e770f14165781> *this);
double __thiscall lambda_7be6e65ebd593868a58d06268892c077_::operator()(DamageDisplayer::{ctor}::__l17::<lambda_7be6e65ebd593868a58d06268892c077> *this);
double __thiscall lambda_bd8907cf0c4bc79371c4c7ff25425663_::operator()(DamageDisplayer::{ctor}::__l14::<lambda_bd8907cf0c4bc79371c4c7ff25425663> *this);
double __thiscall lambda_cae6ad10d45ca8522f6c261413b078d6_::operator()(DamageDisplayer::{ctor}::__l16::<lambda_cae6ad10d45ca8522f6c261413b078d6> *this);
std::_Func_impl<std::_Callable_obj<<lambda_f685c20988d4a25ca568bdb0cb6dbcb4>,0>,std::allocator<std::_Func_class<float> >,float> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e9ec5f6fe842578807784ad4676f2b45_,0>,std::allocator<std::_Func_class<float,>>,float,>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_f685c20988d4a25ca568bdb0cb6dbcb4>,0>,std::allocator<std::_Func_class<float> >,float> *this, unsigned int a2);
DamageDisplayer *__thiscall DamageDisplayer::`vector deleting destructor'(DamageDisplayer *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_08befdb401e28dbfbc434e667627dbb3_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_08befdb401e28dbfbc434e667627dbb3>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1ca8cfb881c0023f537e770f14165781_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1ca8cfb881c0023f537e770f14165781>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_30a1869c666cb33e5541a92d257d58d8_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_30a1869c666cb33e5541a92d257d58d8>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4e62b6f27ff38ab122926485f437fe23_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_4e62b6f27ff38ab122926485f437fe23>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_523e7597a8dac871e371bf604a802b40_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_523e7597a8dac871e371bf604a802b40>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_577c23446fa9a047296e01313cec4df6_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_577c23446fa9a047296e01313cec4df6>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7be6e65ebd593868a58d06268892c077_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_7be6e65ebd593868a58d06268892c077>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_893b1f3df355325909d41329b65269df_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_893b1f3df355325909d41329b65269df>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bd8907cf0c4bc79371c4c7ff25425663_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_bd8907cf0c4bc79371c4c7ff25425663>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bf33cd3346b378aa7124754cb84cd787_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_bf33cd3346b378aa7124754cb84cd787>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cae6ad10d45ca8522f6c261413b078d6_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_cae6ad10d45ca8522f6c261413b078d6>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e9ec5f6fe842578807784ad4676f2b45_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e9ec5f6fe842578807784ad4676f2b45>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_eb4eb79c5a2ae639bb085cd5a46fce76_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_eb4eb79c5a2ae639bb085cd5a46fce76>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9aaec0a55a35c1b6a7a6ec5f0ab24beb_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Delete_this(std::_Func_impl<std::_Callable_obj<<lambda_77ca9348bb85863f3ac03214213671f3>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this, bool _Deallocate);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_08befdb401e28dbfbc434e667627dbb3_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_08befdb401e28dbfbc434e667627dbb3>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1ca8cfb881c0023f537e770f14165781_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1ca8cfb881c0023f537e770f14165781>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_30a1869c666cb33e5541a92d257d58d8_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_30a1869c666cb33e5541a92d257d58d8>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_364ca66356ebdb2f67bff6a58eb49cf1_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_364ca66356ebdb2f67bff6a58eb49cf1>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3831a4234c8b4f984cc416c0c2e8c0f1_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3831a4234c8b4f984cc416c0c2e8c0f1>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4515a8dad98462c5b375a8904c2200c6_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4515a8dad98462c5b375a8904c2200c6>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4e62b6f27ff38ab122926485f437fe23_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4e62b6f27ff38ab122926485f437fe23>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_523e7597a8dac871e371bf604a802b40_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_523e7597a8dac871e371bf604a802b40>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_577c23446fa9a047296e01313cec4df6_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_577c23446fa9a047296e01313cec4df6>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7be6e65ebd593868a58d06268892c077_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_7be6e65ebd593868a58d06268892c077>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_893b1f3df355325909d41329b65269df_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_893b1f3df355325909d41329b65269df>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bd8907cf0c4bc79371c4c7ff25425663_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_bd8907cf0c4bc79371c4c7ff25425663>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bf33cd3346b378aa7124754cb84cd787_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_bf33cd3346b378aa7124754cb84cd787>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c5729e8bde39f0814e73b7c23b067a1b_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c5729e8bde39f0814e73b7c23b067a1b>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cae6ad10d45ca8522f6c261413b078d6_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_cae6ad10d45ca8522f6c261413b078d6>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cafcf4fed9d61a619e644c666b02d61a_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_cafcf4fed9d61a619e644c666b02d61a>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e9ec5f6fe842578807784ad4676f2b45_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e9ec5f6fe842578807784ad4676f2b45>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_eb4eb79c5a2ae639bb085cd5a46fce76_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_eb4eb79c5a2ae639bb085cd5a46fce76>,0>,std::allocator<std::_Func_class<float> >,float> *this);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f685c20988d4a25ca568bdb0cb6dbcb4_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f685c20988d4a25ca568bdb0cb6dbcb4>,0>,std::allocator<std::_Func_class<float> >,float> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_364ca66356ebdb2f67bff6a58eb49cf1_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_364ca66356ebdb2f67bff6a58eb49cf1>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3831a4234c8b4f984cc416c0c2e8c0f1_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_3831a4234c8b4f984cc416c0c2e8c0f1>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4515a8dad98462c5b375a8904c2200c6_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_4515a8dad98462c5b375a8904c2200c6>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c5729e8bde39f0814e73b7c23b067a1b_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_c5729e8bde39f0814e73b7c23b067a1b>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cafcf4fed9d61a619e644c666b02d61a_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_cafcf4fed9d61a619e644c666b02d61a>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f685c20988d4a25ca568bdb0cb6dbcb4_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f685c20988d4a25ca568bdb0cb6dbcb4>,0>,std::allocator<std::_Func_class<float> >,float> *this, void *_Where);
void __thiscall std::vector<DamageDisplayer::DamageItem>::_Reallocate(std::vector<DamageDisplayer::DamageItem> *this, unsigned int _Count);
void __thiscall std::vector<DamageDisplayer::DamageItem>::_Reserve(std::vector<DamageDisplayer::DamageItem> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_08befdb401e28dbfbc434e667627dbb3_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_08befdb401e28dbfbc434e667627dbb3>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1ca8cfb881c0023f537e770f14165781_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1ca8cfb881c0023f537e770f14165781>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_30a1869c666cb33e5541a92d257d58d8_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_30a1869c666cb33e5541a92d257d58d8>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_364ca66356ebdb2f67bff6a58eb49cf1_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_364ca66356ebdb2f67bff6a58eb49cf1>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3831a4234c8b4f984cc416c0c2e8c0f1_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3831a4234c8b4f984cc416c0c2e8c0f1>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4515a8dad98462c5b375a8904c2200c6_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4515a8dad98462c5b375a8904c2200c6>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4e62b6f27ff38ab122926485f437fe23_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4e62b6f27ff38ab122926485f437fe23>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_523e7597a8dac871e371bf604a802b40_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_523e7597a8dac871e371bf604a802b40>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_577c23446fa9a047296e01313cec4df6_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_577c23446fa9a047296e01313cec4df6>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7be6e65ebd593868a58d06268892c077_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_7be6e65ebd593868a58d06268892c077>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_893b1f3df355325909d41329b65269df_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_893b1f3df355325909d41329b65269df>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_bd8907cf0c4bc79371c4c7ff25425663_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_bd8907cf0c4bc79371c4c7ff25425663>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_bf33cd3346b378aa7124754cb84cd787_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_bf33cd3346b378aa7124754cb84cd787>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c5729e8bde39f0814e73b7c23b067a1b_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c5729e8bde39f0814e73b7c23b067a1b>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cae6ad10d45ca8522f6c261413b078d6_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_cae6ad10d45ca8522f6c261413b078d6>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cafcf4fed9d61a619e644c666b02d61a_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_cafcf4fed9d61a619e644c666b02d61a>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e9ec5f6fe842578807784ad4676f2b45_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e9ec5f6fe842578807784ad4676f2b45>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_eb4eb79c5a2ae639bb085cd5a46fce76_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_eb4eb79c5a2ae639bb085cd5a46fce76>,0>,std::allocator<std::_Func_class<float> >,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f685c20988d4a25ca568bdb0cb6dbcb4_,0>,std::allocator<std::_Func_class<float,>>,float,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f685c20988d4a25ca568bdb0cb6dbcb4>,0>,std::allocator<std::_Func_class<float> >,float> *this);
bool __thiscall Sim::isDisplayingResults(Sim *this);
// void __userpurge DamageDisplayer::renderHUD(DamageDisplayer *this@<ecx>, float a2@<xmm3>, float dt);
void __thiscall DamageDisplayer::show(DamageDisplayer *this);
void __thiscall DamageDisplayer::shutdown(DamageDisplayer *this);
std::_Tree_node<std::pair<int const ,DebugString>,void *> *__thiscall std::_Tree_buy<std::pair<int const,DebugString>>::_Buynode<std::piecewise_construct_t const &,std::tuple<int const &>,std::tuple<>>(std::_Tree_buy<std::pair<int const ,DebugString>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<int const &> *<_Val_1>, std::tuple<> *<_Val_2>);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<DebugString>>>(DebugString *_First, DebugString *_Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,DebugString> > > > *__thiscall std::_Tree<std::_Tmap_traits<int,DebugString,std::less<int>,std::allocator<std::pair<int const,DebugString>>,0>>::_Insert_at<std::pair<int const,DebugString> &,std::_Tree_node<std::pair<int const,DebugString>,void *> *>(std::_Tree<std::_Tmap_traits<int,DebugString,std::less<int>,std::allocator<std::pair<int const ,DebugString> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,DebugString> > > > *result, bool _Addleft, std::_Tree_node<std::pair<int const ,DebugString>,void *> *_Wherenode, std::pair<int const ,DebugString> *_Val, std::_Tree_node<std::pair<int const ,DebugString>,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,DebugString> > > > *__thiscall std::_Tree<std::_Tmap_traits<int,DebugString,std::less<int>,std::allocator<std::pair<int const,DebugString>>,0>>::_Insert_hint<std::pair<int const,DebugString> &,std::_Tree_node<std::pair<int const,DebugString>,void *> *>(std::_Tree<std::_Tmap_traits<int,DebugString,std::less<int>,std::allocator<std::pair<int const ,DebugString> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,DebugString> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,DebugString> > > > _Where, std::pair<int const ,DebugString> *_Val, std::_Tree_node<std::pair<int const ,DebugString>,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,DebugString> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<int,DebugString,std::less<int>,std::allocator<std::pair<int const,DebugString>>,0>>::_Insert_nohint<std::pair<int const,DebugString> &,std::_Tree_node<std::pair<int const,DebugString>,void *> *>(std::_Tree<std::_Tmap_traits<int,DebugString,std::less<int>,std::allocator<std::pair<int const ,DebugString> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,DebugString> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,DebugString> > > > _Leftish, std::pair<int const ,DebugString> *_Val, std::_Tree_node<std::pair<int const ,DebugString>,void *> *_Newnode);
DebugLine *__cdecl std::_Uninit_move<DebugLine *,DebugLine *,std::allocator<DebugLine>,DebugLine>(DebugLine *_First, DebugLine *_Last, DebugLine *_Dest);
void __thiscall DebugLine::DebugLine(DebugLine *this);
void __thiscall DebugString::DebugString(DebugString *this, const DebugString *__that);
void __thiscall DebugVisualizer::DebugVisualizer(DebugVisualizer *this, Sim *aSim);
void __thiscall Concurrency::concurrent_queue<DebugLine,std::allocator<DebugLine>>::~concurrent_queue<DebugLine,std::allocator<DebugLine>>(Concurrency::concurrent_queue<DebugLine,std::allocator<DebugLine> > *this);
void __thiscall Concurrency::concurrent_queue<DebugString,std::allocator<DebugString>>::~concurrent_queue<DebugString,std::allocator<DebugString>>(Concurrency::concurrent_queue<DebugString,std::allocator<DebugString> > *this);
void __thiscall std::map<int,DebugString>::~map<int,DebugString>(std::map<int,DebugString> *this);
void __thiscall std::vector<DebugString>::~vector<DebugString>(std::vector<DebugString> *this);
void __thiscall DebugString::~DebugString(DebugString *this);
void __thiscall DebugVisualizer::~DebugVisualizer(DebugVisualizer *this);
void __thiscall IDebugVisualizer::~IDebugVisualizer(IDebugVisualizer *this);
void __thiscall Concurrency::concurrent_queue<DebugString,std::allocator<DebugString>>::_Destroyer::~_Destroyer(Concurrency::concurrent_queue<DebugString,std::allocator<DebugString> >::_Destroyer *this);
DebugString *__thiscall std::map<int,DebugString>::operator[](std::map<int,DebugString> *this, const int *_Keyval);
DebugVisualizer *__thiscall DebugVisualizer::`vector deleting destructor'(char *this, unsigned int a2);
Concurrency::concurrent_queue<DebugLine,std::allocator<DebugLine> > *__thiscall Concurrency::concurrent_queue<DebugLine,std::allocator<DebugLine>>::`scalar deleting destructor'(Concurrency::concurrent_queue<DebugLine,std::allocator<DebugLine> > *this, unsigned int a2);
Concurrency::concurrent_queue<DebugString,std::allocator<DebugString> > *__thiscall Concurrency::concurrent_queue<DebugString,std::allocator<DebugString>>::`scalar deleting destructor'(Concurrency::concurrent_queue<DebugString,std::allocator<DebugString> > *this, unsigned int a2);
DebugVisualizer *__thiscall DebugVisualizer::`vector deleting destructor'(DebugVisualizer *this, unsigned int a2);
IDebugVisualizer *__thiscall IDebugVisualizer::`scalar deleting destructor'(IDebugVisualizer *this, unsigned int a2);
void __thiscall Concurrency::concurrent_queue<DebugLine,std::allocator<DebugLine>>::_Assign_and_destroy_item(Concurrency::concurrent_queue<DebugLine,std::allocator<DebugLine> > *this, void *_Dst, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Src, unsigned int _Index);
void __thiscall Concurrency::concurrent_queue<DebugString,std::allocator<DebugString>>::_Assign_and_destroy_item(Concurrency::concurrent_queue<DebugString,std::allocator<DebugString> > *this, void *_Dst, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Src, unsigned int _Index);
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<int const,DebugString>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<int const ,DebugString>> > *this);
std::_Tree_node<std::pair<int const ,DebugString>,void *> **__thiscall std::_Tree_buy<std::pair<int const,DebugString>>::_Buynode0(std::_Tree_buy<std::pair<int const ,DebugString>> *this);
void __thiscall std::_Tree<std::_Tmap_traits<int,DebugString,std::less<int>,std::allocator<std::pair<int const,DebugString>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<int,DebugString,std::less<int>,std::allocator<std::pair<int const ,DebugString> >,0> > *this, std::_Tree_node<std::pair<int const ,DebugString>,void *> *_Newnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1ef22c60bcb012d06e71d8f6b23781ef_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1ef22c60bcb012d06e71d8f6b23781ef>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, const OnNodeRenderEvent *<_Args_0>);
void __thiscall std::_Tree<std::_Tmap_traits<int,DebugString,std::less<int>,std::allocator<std::pair<int const,DebugString>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<int,DebugString,std::less<int>,std::allocator<std::pair<int const ,DebugString> >,0> > *this, std::_Tree_node<std::pair<int const ,DebugString>,void *> *_Rootnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1ef22c60bcb012d06e71d8f6b23781ef_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1ef22c60bcb012d06e71d8f6b23781ef>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, void *_Where);
void __thiscall Concurrency::concurrent_queue<DebugLine,std::allocator<DebugLine>>::_Move_item(Concurrency::concurrent_queue<DebugLine,std::allocator<DebugLine> > *this, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Dst, unsigned int _Index, void *_Src);
void __thiscall Concurrency::concurrent_queue<DebugString,std::allocator<DebugString>>::_Copy_item(Concurrency::concurrent_queue<DebugString,std::allocator<DebugString> > *this, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Dst, unsigned int _Index, void *_Src);
void __thiscall std::vector<DebugLine>::_Reallocate(std::vector<DebugLine> *this, unsigned int _Count);
void __thiscall std::vector<DebugLine>::_Reserve(std::vector<DebugLine> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1ef22c60bcb012d06e71d8f6b23781ef_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1ef22c60bcb012d06e71d8f6b23781ef>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this);
void __thiscall DebugVisualizer::addLine(DebugVisualizer *this, const DebugLine *line, int layer);
void __thiscall DebugVisualizer::addString(DebugVisualizer *this, DebugString *aString, int layer);

void __thiscall DebugVisualizer::renderDebugInfo(DebugVisualizer *this, const OnNodeRenderEvent *message);
// void __usercall DICarControl::DICarControl(DICarControl *this@<ecx>, char a2@<bl>);
void __thiscall DIShifter::DIShifter(DIShifter *this);
void __thiscall DICarControl::~DICarControl(DICarControl *this);
void __thiscall ICarControlsProvider::~ICarControlsProvider(ICarControlsProvider *this);
DICarControl *__thiscall DICarControl::`scalar deleting destructor'(DICarControl *this, unsigned int a2);
ICarControlsProvider *__thiscall ICarControlsProvider::`vector deleting destructor'(ICarControlsProvider *this, unsigned int a2);
// void __userpurge DICarControl::acquireControls(DICarControl *this@<ecx>, int a2@<edi>, CarControls *controls, float dt, CarControlsInput *input);
bool __thiscall DICarControl::getAction(DICarControl *this, DriverActions anAction);
double __thiscall DICarControl::getFFGlobalGain(DICarControl *this);
const char *__thiscall DICarControl::getName(DICarControl *this);
std::wstring *__thiscall InputDevice::getName(InputDevice *this, std::wstring *result);
void __thiscall DICarControl::initShifter(DICarControl *this, INIReader *ini);
bool __thiscall AIDriverDrag::isDeviceConnected(AIDriver *this);
void __thiscall DICarControl::onAutoShifterChanged(DICarControl *this, bool newmode);
void __thiscall DICarControl::sendFF(DICarControl *this, float ff, float damper, float userGain);
void __thiscall DICarControl::setEngineRPM(DICarControl *this, float rpm, float minRpm, float maxRpm);
void __thiscall DICarControl::setVibrations(DICarControl *this, const VibrationDef *vibrations);
void __thiscall DICarControl::validate(DICarControl *this);
void __thiscall DICommandManager::DICommandManager(DICommandManager *this, Game *game);
void __thiscall std::vector<DICommand>::_Reallocate(std::vector<DICommand> *this, unsigned int _Count);
void __thiscall std::vector<DICommand>::_Reserve(std::vector<DICommand> *this, unsigned int _Count);
void __thiscall std::vector<DICommand>::push_back(std::vector<DICommand> *this, DICommand *_Val);
void __thiscall DICommandManager::step(DICommandManager *this);
void __thiscall DIControlAxis::DIControlAxis(DIControlAxis *this, std::wstring iname, DirectInput *di);
void __thiscall DIControlAxis::~DIControlAxis(DIControlAxis *this);
DIControlAxis *__thiscall DIControlAxis::`scalar deleting destructor'(DIControlAxis *this, unsigned int a2);
double __thiscall DIControlAxis::getValue(DIControlAxis *this, bool useRange);
void __thiscall DIControlAxis::load(DIControlAxis *this, INIReader *reader, bool loadRange);
void __thiscall DIControlButton::DIControlButton(DIControlButton *this, std::wstring iname, DirectInput *di);
void __thiscall DIControlButton::~DIControlButton(DIControlButton *this);
DIControlButton *__thiscall DIControlButton::`scalar deleting destructor'(DIControlButton *this, unsigned int a2);
double __thiscall DIControlButton::getKeyboardValue(DIControlButton *this, bool isKeyboardEnabled);
double __thiscall DIControlButton::getValue(DIControlButton *this, bool useRange);
void __thiscall DIControlButton::load(DIControlButton *this, INIReader *reader, bool loadRange);
void __thiscall DIControlInput::DIControlInput(DIControlInput *this, std::wstring iname, DirectInput *di);
void __thiscall DIControlInput::~DIControlInput(DIControlInput *this);
DIControlInput *__thiscall DIControlInput::`vector deleting destructor'(DIControlInput *this, unsigned int a2);
void __cdecl std::_For_each<DigitalLed * *,_lambda_a246c9d126492f70adaa09c76fae6a41_>(DigitalLed **_First, DigitalLed **_Last);
void __cdecl std::_For_each<DigitalPanelItem *,_lambda_0c55fedeafba8993e34832c3aa51cef7_>(DigitalPanelItem *_First, DigitalPanelItem *_Last);
void __thiscall DigitalPanels::DigitalPanels(DigitalPanels *this, CarAvatar *a_car);
void __thiscall DigitalPanels::~DigitalPanels(DigitalPanels *this);
DigitalLed *__thiscall DigitalLed::`scalar deleting destructor'(DigitalLed *this, unsigned int a2);
DigitalPanels *__thiscall DigitalPanels::`vector deleting destructor'(DigitalPanels *this, unsigned int a2);
bool __thiscall DigitalLed::hasTargetMesh(DigitalLed *this);
void __thiscall DigitalPanels::initPanels(DigitalPanels *this);
void __thiscall DigitalPanels::update(DigitalPanels *this, float deltaT);
std::_Tree_node<std::pair<CarAvatar * const,std::vector<Lap> >,void *> *__thiscall std::_Tree_buy<std::pair<CarAvatar * const,std::vector<ReplayLap>>>::_Buynode<std::piecewise_construct_t const &,std::tuple<CarAvatar * const &>,std::tuple<>>(std::_Tree_buy<std::pair<CarAvatar * const,std::vector<Lap> >> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<CarAvatar * &&> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > > *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<Lap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<Lap>>>,0>>::_Insert_at<std::pair<CarAvatar * const,std::vector<Lap>> &,std::_Tree_node<std::pair<CarAvatar * const,std::vector<Lap>>,void *> *>(std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<Lap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<Lap> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > > *result, bool _Addleft, std::_Tree_node<std::pair<CarAvatar * const,std::vector<Lap> >,void *> *_Wherenode, std::pair<CarAvatar * const,std::vector<Lap> > *_Val, std::_Tree_node<std::pair<CarAvatar * const,std::vector<Lap> >,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > > *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<Lap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<Lap>>>,0>>::_Insert_hint<std::pair<CarAvatar * const,std::vector<Lap>> &,std::_Tree_node<std::pair<CarAvatar * const,std::vector<Lap>>,void *> *>(std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<Lap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<Lap> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > > _Where, std::pair<CarAvatar * const,std::vector<Lap> > *_Val, std::_Tree_node<std::pair<CarAvatar * const,std::vector<Lap> >,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<Lap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<Lap>>>,0>>::_Insert_nohint<std::pair<CarAvatar * const,std::vector<Lap>> &,std::_Tree_node<std::pair<CarAvatar * const,std::vector<Lap>>,void *> *>(std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<Lap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<Lap> > >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > > _Leftish, std::pair<CarAvatar * const,std::vector<Lap> > *_Val, std::_Tree_node<std::pair<CarAvatar * const,std::vector<Lap> >,void *> *_Newnode);
DragMode::DragStatus *__cdecl std::_Uninit_move<DragMode::DragStatus *,DragMode::DragStatus *,std::allocator<DragMode::DragStatus>,DragMode::DragStatus>(DragMode::DragStatus *_First, DragMode::DragStatus *_Last, DragMode::DragStatus *_Dest);
StartingTrackSemaphore *__thiscall GameObject::getGameObject<StartingTrackSemaphore>(GameObject *this);
void __thiscall DragMode::DragMode(DragMode *this, Sim *aSim);
void __thiscall DragMode::DragStatus::DragStatus(DragMode::DragStatus *this, CarAvatar *anAvatar, vec3f aSpawnPoint, float aSplineSide);
void __thiscall std::map<CarAvatar *,std::vector<Lap>>::~map<CarAvatar *,std::vector<Lap>>(std::map<CarAvatar *,std::vector<Lap>> *this);
void __thiscall DragMode::~DragMode(DragMode *this);
CarAvatar **__thiscall std::map<CarAvatar *,std::vector<Lap>>::operator[](std::map<CarAvatar *,std::vector<Lap>> *this, CarAvatar **_Keyval);
std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DragMode::DragStatus> > > *__thiscall std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DragMode::DragStatus>>>::operator++(std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DragMode::DragStatus> > > *this);
void __thiscall lambda_fe2febafcb0d0c7b4a2860cec11fef99_::operator()(DragMode::{ctor}::__l18::<lambda_fe2febafcb0d0c7b4a2860cec11fef99> *this, const OnNewSessionEvent *message);
void __thiscall lambda_fe3e2d2911d89ff42537cca7524c0bb0_::operator()(DragMode::{ctor}::__l10::<lambda_fe3e2d2911d89ff42537cca7524c0bb0> *this);
DragMode *__thiscall DragMode::`scalar deleting destructor'(DragMode *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_935505485ff394ee7ad7c4e49c35124d_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_935505485ff394ee7ad7c4e49c35124d>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_948c74b361cec92a1e3318daa7f0ad7e_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_948c74b361cec92a1e3318daa7f0ad7e>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<Lap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<Lap>>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<Lap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<Lap> > >,0> > *this, std::_Tree_node<std::pair<CarAvatar * const,std::vector<Lap> >,void *> *_Newnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2a80c05f81b661595b49780cab788282_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2a80c05f81b661595b49780cab788282>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3d84fecd0731a23756b3efb891057847_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3d84fecd0731a23756b3efb891057847>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_935505485ff394ee7ad7c4e49c35124d_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_935505485ff394ee7ad7c4e49c35124d>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_948c74b361cec92a1e3318daa7f0ad7e_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_948c74b361cec92a1e3318daa7f0ad7e>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe2febafcb0d0c7b4a2860cec11fef99_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fe2febafcb0d0c7b4a2860cec11fef99>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe3e2d2911d89ff42537cca7524c0bb0_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fe3e2d2911d89ff42537cca7524c0bb0>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<Lap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<Lap>>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<Lap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<Lap> > >,0> > *this, std::_Tree_node<std::pair<CarAvatar * const,std::vector<Lap> >,void *> *_Rootnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2a80c05f81b661595b49780cab788282_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_2a80c05f81b661595b49780cab788282>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3d84fecd0731a23756b3efb891057847_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_3d84fecd0731a23756b3efb891057847>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe2febafcb0d0c7b4a2860cec11fef99_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_fe2febafcb0d0c7b4a2860cec11fef99>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe3e2d2911d89ff42537cca7524c0bb0_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_fe3e2d2911d89ff42537cca7524c0bb0>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::vector<mat44f>::_Reallocate(std::vector<DragMode::DragStatus> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2a80c05f81b661595b49780cab788282_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2a80c05f81b661595b49780cab788282>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3d84fecd0731a23756b3efb891057847_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3d84fecd0731a23756b3efb891057847>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_935505485ff394ee7ad7c4e49c35124d_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_935505485ff394ee7ad7c4e49c35124d>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_948c74b361cec92a1e3318daa7f0ad7e_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_948c74b361cec92a1e3318daa7f0ad7e>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe2febafcb0d0c7b4a2860cec11fef99_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fe2febafcb0d0c7b4a2860cec11fef99>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe3e2d2911d89ff42537cca7524c0bb0_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fe3e2d2911d89ff42537cca7524c0bb0>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall DragMode::computeCarTimes(DragMode *this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > > *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<Lap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<Lap>>>,0>>::erase(std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<Lap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<Lap> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > > _Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > > *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<Lap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<Lap>>>,0>>::erase(std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<Lap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<Lap> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<Lap> > > > > _Where);
long double __thiscall DragMode::generateStartTime(DragMode *this);
bool __thiscall DragMode::isGameOver(DragMode *this);
void __thiscall DragMode::newMatch(DragMode *this, float secondsFade);
void __thiscall DragMode::onFinishLanePassed(DragMode *this, const unsigned int *carIndex);
void __thiscall DragMode::renderDragGUI(DragMode *this, float dt);
void __thiscall DragMode::renderDragPenalty(DragMode *this, float dt);
void __thiscall DragMode::renderHUD(DragMode *this, float dt);
void __thiscall DragMode::DragStatus::reset(DragMode::DragStatus *this, float startTime);
void __thiscall DragMode::resetMatch(DragMode *this);
std::wstring *__cdecl timeToDragTime(std::wstring *result, float time);
std::wstring *__cdecl timeToReactionTime(std::wstring *result, float time);
void __thiscall DragMode::update(DragMode *this, float dt);
void __thiscall DragMode::updateDragRace(DragMode *this, float dt);
void __thiscall DragMode::verifyConditions(DragMode *this);
void __thiscall DriftMode::DriftMode(DriftMode *this, CarAvatar *car);
void __thiscall DriftMode::~DriftMode(DriftMode *this);
DriftMode *__thiscall DriftMode::`scalar deleting destructor'(DriftMode *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3aaa896e5da70f3d531f10bf2d0a9d46_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_3aaa896e5da70f3d531f10bf2d0a9d46>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ec3fa2fb99b2535ddeeab2096f7a03f9_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_ec3fa2fb99b2535ddeeab2096f7a03f9>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3aaa896e5da70f3d531f10bf2d0a9d46_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3aaa896e5da70f3d531f10bf2d0a9d46>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ec3fa2fb99b2535ddeeab2096f7a03f9_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ec3fa2fb99b2535ddeeab2096f7a03f9>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3aaa896e5da70f3d531f10bf2d0a9d46_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3aaa896e5da70f3d531f10bf2d0a9d46>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ec3fa2fb99b2535ddeeab2096f7a03f9_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ec3fa2fb99b2535ddeeab2096f7a03f9>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
void __thiscall DriftMode::animateBonuses(DriftMode *this, float dt);
void __thiscall DriftMode::modeDrifting(DriftMode *this, float dt);
void __thiscall DriftMode::modeGameOver(DriftMode *this, float dt);
void __thiscall DriftMode::renderHUD(DriftMode *this, float dt);
void __thiscall DriftMode::updateLevelUp(DriftMode *this, float dt);
void __thiscall DriftMode::verifyConditions(DriftMode *this);
void __cdecl std::_Adjust_heap<DriverNameDisplayer::CarDistandeOrder *,int,DriverNameDisplayer::CarDistandeOrder,_lambda_f0867d60f64da2cb3f33bccaed49f9ac_>(DriverNameDisplayer::CarDistandeOrder *_First, int _Hole, int _Bottom, DriverNameDisplayer::CarDistandeOrder *_Val);
void __cdecl std::_Insertion_sort1<DriverNameDisplayer::CarDistandeOrder *,_lambda_f0867d60f64da2cb3f33bccaed49f9ac_,DriverNameDisplayer::CarDistandeOrder>(DriverNameDisplayer::CarDistandeOrder *_First, DriverNameDisplayer::CarDistandeOrder *_Last);
void __cdecl std::_Make_heap<DriverNameDisplayer::CarDistandeOrder *,int,DriverNameDisplayer::CarDistandeOrder,_lambda_f0867d60f64da2cb3f33bccaed49f9ac_>(DriverNameDisplayer::CarDistandeOrder *_First, DriverNameDisplayer::CarDistandeOrder *_Last);
void __cdecl std::_Median<DriverNameDisplayer::CarDistandeOrder *,_lambda_f0867d60f64da2cb3f33bccaed49f9ac_>(DriverNameDisplayer::CarDistandeOrder *_First, DriverNameDisplayer::CarDistandeOrder *_Mid, DriverNameDisplayer::CarDistandeOrder *_Last);
void __cdecl std::_Sort<DriverNameDisplayer::CarDistandeOrder *,int,_lambda_f0867d60f64da2cb3f33bccaed49f9ac_>(DriverNameDisplayer::CarDistandeOrder *_First, DriverNameDisplayer::CarDistandeOrder *_Last, int _Ideal, DriverNameDisplayer::renderHUD::__l21::<lambda_f0867d60f64da2cb3f33bccaed49f9ac> _Pred);
void __cdecl std::_Sort_heap<DriverNameDisplayer::CarDistandeOrder *,_lambda_f0867d60f64da2cb3f33bccaed49f9ac_>(DriverNameDisplayer::CarDistandeOrder *_First, DriverNameDisplayer::CarDistandeOrder *_Last);
std::pair<DriverNameDisplayer::CarDistandeOrder *,DriverNameDisplayer::CarDistandeOrder *> *__cdecl std::_Unguarded_partition<DriverNameDisplayer::CarDistandeOrder *,_lambda_f0867d60f64da2cb3f33bccaed49f9ac_>(std::pair<DriverNameDisplayer::CarDistandeOrder *,DriverNameDisplayer::CarDistandeOrder *> *result, DriverNameDisplayer::CarDistandeOrder *_First, DriverNameDisplayer::CarDistandeOrder *_Last);
void __thiscall CarLabel::CarData::CarData(CarLabel::CarData *this, std::wstring driverName, std::wstring code);
// void __userpurge DriverNameDisplayer::DriverNameDisplayer(DriverNameDisplayer *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
void __thiscall DriverNameDisplayer::~DriverNameDisplayer(DriverNameDisplayer *this);
DriverNameDisplayer *__thiscall DriverNameDisplayer::`scalar deleting destructor'(DriverNameDisplayer *this, unsigned int a2);
vec2f *__thiscall DriverNameDisplayer::projectPoint(DriverNameDisplayer *this, vec2f *result, vec3f worldSpacePoint, vec3f *outDirection);
void __thiscall DriverNameDisplayer::renderHUD(DriverNameDisplayer *this, float deltaT);
void __thiscall std::vector<DriverNameDisplayer::CarDistandeOrder>::resize(std::vector<DriverNameDisplayer::CarDistandeOrder> *this, unsigned int _Newsize);
void __thiscall DriverNameDisplayer::setActive(DriverNameDisplayer *this, bool active);
void __thiscall DriverNameDisplayer::shutdown(DriverNameDisplayer *this);
void __thiscall DriverNameDisplayer::update(DriverNameDisplayer *this, float deltaT);
void __cdecl std::_Uninit_def_fill_n<Texture *,unsigned int,std::allocator<Texture>,Texture>(Texture *_First, unsigned int _Count);
Texture *__cdecl std::_Uninit_copy<Texture *,Texture *,std::allocator<Texture>>(Texture *_First, Texture *_Last, Texture *_Dest);
void __thiscall DriverStatusSystemMessage::DriverStatusSystemMessage(DriverStatusSystemMessage *this, Sim *aSim);
void __thiscall DriverStatusSystemMessage::~DriverStatusSystemMessage(DriverStatusSystemMessage *this);
DriverStatusSystemMessage *__thiscall DriverStatusSystemMessage::`vector deleting destructor'(DriverStatusSystemMessage *this, unsigned int a2);
void __thiscall std::vector<Texture>::_Destroy(std::vector<Texture> *this, Texture *_First, Texture *_Last);
void __thiscall std::vector<Texture>::_Reallocate(std::vector<Texture> *this, unsigned int _Count);
void __thiscall std::vector<Texture>::_Reserve(std::vector<Texture> *this, unsigned int _Count);
void __thiscall std::vector<Texture>::_Tidy(std::vector<Texture> *this);
std::wstring *__thiscall CameraTrack::getCameraSetName(CameraTrack *this, std::wstring *result, unsigned int i);
void __thiscall DriverStatusSystemMessage::loadDriversInfo(DriverStatusSystemMessage *this);
void __thiscall DriverStatusSystemMessage::render(DriverStatusSystemMessage *this, float dt);
void __thiscall std::vector<Texture>::resize(std::vector<Texture> *this, unsigned int _Newsize);
void __thiscall DriveThroughPenaltyAvatar::DriveThroughPenaltyAvatar(DriveThroughPenaltyAvatar *this, Sim *sim);
DriveThroughPenaltyAvatar *__thiscall DriveThroughPenaltyAvatar::`vector deleting destructor'(DriveThroughPenaltyAvatar *this, unsigned int a2);
void __thiscall DriveThroughPenaltyAvatar::renderHUD(DriveThroughPenaltyAvatar *this, float deltaT);
void __thiscall DynamicCarEffects::DynamicCarEffects(DynamicCarEffects *this, CarAvatar *aCar);
char __thiscall lambda_704f63be4f85e5217b2381f4831e0757_::operator()(DynamicCarEffects::initDirtVars::__l6::<lambda_704f63be4f85e5217b2381f4831e0757> *this, Node *n);
void __thiscall lambda_c4460d128e2ab44f73fcde83f43a7b24_::operator()(DynamicCarEffects::{ctor}::__l13::<lambda_c4460d128e2ab44f73fcde83f43a7b24> *this, const OnReplayStatusChanged *message);
std::_Func_impl<std::_Callable_obj<<lambda_d9b93fd7105a45e42093d57c28a75eb1>,0>,std::allocator<std::_Func_class<bool,Node *> >,bool,Node *> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d9b93fd7105a45e42093d57c28a75eb1_,0>,std::allocator<std::_Func_class<bool,Node *>>,bool,Node *>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_d9b93fd7105a45e42093d57c28a75eb1>,0>,std::allocator<std::_Func_class<bool,Node *> >,bool,Node *> *this, unsigned int a2);
DynamicCarEffects *__thiscall DynamicCarEffects::`vector deleting destructor'(DynamicCarEffects *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_704f63be4f85e5217b2381f4831e0757_,0>,std::allocator<std::_Func_class<bool,Node *>>,bool,Node *>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_704f63be4f85e5217b2381f4831e0757>,0>,std::allocator<std::_Func_class<bool,Node *> >,bool,Node *> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_946fcd06e20ad4ff585c573ef4cf23ad_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_946fcd06e20ad4ff585c573ef4cf23ad>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c4460d128e2ab44f73fcde83f43a7b24_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_c4460d128e2ab44f73fcde83f43a7b24>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2dd51a103a8160239d1fa2922da136d6_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2dd51a103a8160239d1fa2922da136d6>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
char __thiscall std::_Func_impl<std::_Callable_obj<_lambda_704f63be4f85e5217b2381f4831e0757_,0>,std::allocator<std::_Func_class<bool,Node *>>,bool,Node *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_704f63be4f85e5217b2381f4831e0757>,0>,std::allocator<std::_Func_class<bool,Node *> >,bool,Node *> *this, Node **<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_946fcd06e20ad4ff585c573ef4cf23ad_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_946fcd06e20ad4ff585c573ef4cf23ad>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c4460d128e2ab44f73fcde83f43a7b24_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c4460d128e2ab44f73fcde83f43a7b24>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2dd51a103a8160239d1fa2922da136d6_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_2dd51a103a8160239d1fa2922da136d6>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2dd51a103a8160239d1fa2922da136d6_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2dd51a103a8160239d1fa2922da136d6>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_704f63be4f85e5217b2381f4831e0757_,0>,std::allocator<std::_Func_class<bool,Node *>>,bool,Node *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_704f63be4f85e5217b2381f4831e0757>,0>,std::allocator<std::_Func_class<bool,Node *> >,bool,Node *> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_946fcd06e20ad4ff585c573ef4cf23ad_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_946fcd06e20ad4ff585c573ef4cf23ad>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c4460d128e2ab44f73fcde83f43a7b24_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c4460d128e2ab44f73fcde83f43a7b24>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
void __thiscall DynamicCarEffects::resetDirt(DynamicCarEffects *this);
void __thiscall DynamicCarEffects::setDirtLevel(DynamicCarEffects *this, float v);
void __thiscall DynamicCarEffects::update(DynamicCarEffects *this, float dt);
void __thiscall DynamicCarEffects::updateReplayMode(DynamicCarEffects *this, float dt);
// void __userpurge EndSessionCommonGui::EndSessionCommonGui(EndSessionCommonGui *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
EndSessionCommonGui *__thiscall EndSessionCommonGui::`vector deleting destructor'(EndSessionCommonGui *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9216b871f6ebe026d154ffac66e6a9b6_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_9216b871f6ebe026d154ffac66e6a9b6>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9fa069ca4c935e03ed90bd0e5106169c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_9fa069ca4c935e03ed90bd0e5106169c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_00832c31ead37c65a63507055cb66a4c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_00832c31ead37c65a63507055cb66a4c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, int a2@<ebp>, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9216b871f6ebe026d154ffac66e6a9b6_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9216b871f6ebe026d154ffac66e6a9b6>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9fa069ca4c935e03ed90bd0e5106169c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9fa069ca4c935e03ed90bd0e5106169c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_00832c31ead37c65a63507055cb66a4c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_00832c31ead37c65a63507055cb66a4c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_00832c31ead37c65a63507055cb66a4c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_00832c31ead37c65a63507055cb66a4c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9216b871f6ebe026d154ffac66e6a9b6_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9216b871f6ebe026d154ffac66e6a9b6>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9fa069ca4c935e03ed90bd0e5106169c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9fa069ca4c935e03ed90bd0e5106169c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall EndSessionCommonGui::render(EndSessionCommonGui *this, float dt);
void __thiscall EngineSmoke::EngineSmoke(EngineSmoke *this, CarAvatar *a_car);
EngineSmoke *__thiscall EngineSmoke::`vector deleting destructor'(EngineSmoke *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_968a01676f34487887e6c6aaf03b1c42_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_968a01676f34487887e6c6aaf03b1c42>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_479d35c1751e51c08c83b0914617b355_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_479d35c1751e51c08c83b0914617b355>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_968a01676f34487887e6c6aaf03b1c42_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_968a01676f34487887e6c6aaf03b1c42>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_479d35c1751e51c08c83b0914617b355_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_479d35c1751e51c08c83b0914617b355>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d38bf75ea0405e2c42703fbedbda8fcb_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d38bf75ea0405e2c42703fbedbda8fcb>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_479d35c1751e51c08c83b0914617b355_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_479d35c1751e51c08c83b0914617b355>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_968a01676f34487887e6c6aaf03b1c42_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_968a01676f34487887e6c6aaf03b1c42>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d38bf75ea0405e2c42703fbedbda8fcb_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d38bf75ea0405e2c42703fbedbda8fcb>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
void __thiscall EngineSmoke::update(EngineSmoke *this, float dt);
std::vector<Lap> *__cdecl std::_Copy_impl<std::vector<Lap> *,std::vector<Lap> *>(std::vector<Lap> *_First, std::vector<Lap> *_Last, std::vector<Lap> *_Dest);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::vector<Lap>>>>(std::vector<Lap> *_First, std::vector<Lap> *_Last);
Lap *__thiscall std::vector<Lap>::_Ucopy<Lap *>(std::vector<Lap> *this, Lap *_First, Lap *_Last, Lap *_Ptr);
std::vector<Lap> *__thiscall std::vector<std::vector<Lap>>::_Ucopy<std::vector<Lap> *>(std::vector<std::vector<Lap>> *this, std::vector<Lap> *_First, std::vector<Lap> *_Last, std::vector<Lap> *_Ptr);
void __thiscall std::_Wrap_alloc<std::allocator<std::vector<Lap>>>::destroy<std::vector<Lap>>(std::_Wrap_alloc<std::allocator<std::vector<Lap> > > *this, std::vector<Lap> *_Ptr);
void __thiscall std::vector<Lap>::vector<Lap>(std::vector<Lap> *this, const std::vector<Lap> *_Right);
// void __userpurge EscMenuTimeTable::EscMenuTimeTable(EscMenuTimeTable *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
void __thiscall Session::Session(Session *this);
void __thiscall SessionResult::SessionResult(SessionResult *this);
void __thiscall std::vector<std::vector<Lap>>::~vector<std::vector<Lap>>(std::vector<std::vector<Lap>> *this);
void __thiscall EscMenuTimeTable::~EscMenuTimeTable(EscMenuTimeTable *this);
void __thiscall OnSessionEndEvent::~OnSessionEndEvent(OnSessionEndEvent *this);
void __thiscall SessionResult::~SessionResult(SessionResult *this);
std::vector<Lap> *__thiscall std::vector<Lap>::operator=(std::vector<Lap> *this, std::vector<Lap> *_Right);
std::vector<Lap> *__thiscall std::vector<Lap>::operator=(std::vector<Lap> *this, const std::vector<Lap> *_Right);
std::vector<std::vector<Lap>> *__thiscall std::vector<std::vector<Lap>>::operator=(std::vector<std::vector<Lap>> *this, const std::vector<std::vector<Lap>> *_Right);
Session *__thiscall Session::operator=(Session *this, const Session *__that);
void __thiscall lambda_bbad77a336e0ab7291c2722a8541661d_::operator()(EscMenuTimeTable::{ctor}::__l21::<lambda_bbad77a336e0ab7291c2722a8541661d> *this, const ksgui::OnControlClicked *message);
std::_Func_impl<std::_Callable_obj<<lambda_41a459656b9f09f7668adf8c74d4228e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_02b27eb1b8b27a7348662550d52c5c9b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_41a459656b9f09f7668adf8c74d4228e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, unsigned int a2);
EscMenuTimeTable *__thiscall EscMenuTimeTable::`vector deleting destructor'(EscMenuTimeTable *this, unsigned int a2);
char __thiscall std::vector<QueryData>::_Buy(std::vector<QueryData> *this, unsigned int _Capacity);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bbad77a336e0ab7291c2722a8541661d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_bbad77a336e0ab7291c2722a8541661d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_84d4eadc980523b609fb3812aa477557_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_84d4eadc980523b609fb3812aa477557>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bbad77a336e0ab7291c2722a8541661d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_bbad77a336e0ab7291c2722a8541661d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d6a705da459ed759ea4061ffbdd2e6b1_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d6a705da459ed759ea4061ffbdd2e6b1>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_84d4eadc980523b609fb3812aa477557_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_84d4eadc980523b609fb3812aa477557>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d6a705da459ed759ea4061ffbdd2e6b1_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_d6a705da459ed759ea4061ffbdd2e6b1>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_84d4eadc980523b609fb3812aa477557_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_84d4eadc980523b609fb3812aa477557>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_bbad77a336e0ab7291c2722a8541661d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_bbad77a336e0ab7291c2722a8541661d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d6a705da459ed759ea4061ffbdd2e6b1_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d6a705da459ed759ea4061ffbdd2e6b1>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall EscMenuTimeTable::onVisibleChanged(EscMenuTimeTable *this, BOOL newValue);
void __thiscall EscMenuTimeTable::refreshPlayer(EscMenuTimeTable *this);
void __thiscall EscMenuTimeTable::refreshSession(EscMenuTimeTable *this);
void __thiscall EscMenuTimeTable::render(EscMenuTimeTable *this, float dt);
void __thiscall FanatecUpdater::FanatecUpdater(FanatecUpdater *this, CarAvatar *carAvatar);
void __thiscall FanatecUpdater::~FanatecUpdater(FanatecUpdater *this);
FanatecUpdater *__thiscall FanatecUpdater::`vector deleting destructor'(FanatecUpdater *this, unsigned int a2);
void __thiscall FanatecUpdater::update(FanatecUpdater *this, float dt);
void __thiscall FlagManager::FlagManager(FlagManager *this, Sim *aSim);
void __thiscall FlagManager::~FlagManager(FlagManager *this);
void __thiscall lambda_7facda78dd6f961defee5e81b24a5156_::operator()(FlagManager::{ctor}::__l21::<lambda_7facda78dd6f961defee5e81b24a5156> *this, const OnFlagEvent *ev);
std::_Func_impl<std::_Callable_obj<<lambda_7facda78dd6f961defee5e81b24a5156>,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &> >,void,OnFlagEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7facda78dd6f961defee5e81b24a5156_,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &>>,void,OnFlagEvent const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_7facda78dd6f961defee5e81b24a5156>,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &> >,void,OnFlagEvent const &> *this, unsigned int a2);
FlagManager *__thiscall FlagManager::`scalar deleting destructor'(FlagManager *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7facda78dd6f961defee5e81b24a5156_,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &>>,void,OnFlagEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_7facda78dd6f961defee5e81b24a5156>,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &> >,void,OnFlagEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_78e9c1906d4139f63604d90100919266_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_78e9c1906d4139f63604d90100919266>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7facda78dd6f961defee5e81b24a5156_,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &>>,void,OnFlagEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_7facda78dd6f961defee5e81b24a5156>,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &> >,void,OnFlagEvent const &> *this, const OnFlagEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_78e9c1906d4139f63604d90100919266_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_78e9c1906d4139f63604d90100919266>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_78e9c1906d4139f63604d90100919266_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_78e9c1906d4139f63604d90100919266>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7facda78dd6f961defee5e81b24a5156_,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &>>,void,OnFlagEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_7facda78dd6f961defee5e81b24a5156>,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &> >,void,OnFlagEvent const &> *this);
void __thiscall FlagManager::addFlagControl(FlagManager *this, ksgui::Control *flag, std::wstring flagname);
void __thiscall FlagManager::checkForBlue(FlagManager *this);
void __thiscall FlagManager::checkForYellow(FlagManager *this);
void __thiscall FlagManager::checkforPenalty(FlagManager *this);
void __thiscall FlagManager::clearFlag(FlagManager *this);
FlagType __thiscall FlagManager::getCurrentFlag(FlagManager *this);
void __thiscall FlagManager::setBlueFlag(FlagManager *this, int carIndex);
void __thiscall FlagManager::setFlag(FlagManager *this, FlagType flag);
void __thiscall FlagManager::update(FlagManager *this, float deltaT);
std::shared_ptr<Material> *__cdecl std::_Uninit_move<std::shared_ptr<Material> *,std::shared_ptr<Material> *,std::allocator<std::shared_ptr<Material>>,std::shared_ptr<Material>>(std::shared_ptr<Material> *_First, std::shared_ptr<Material> *_Last, std::shared_ptr<Material> *_Dest);
void __thiscall std::_Wrap_alloc<std::allocator<std::shared_ptr<Material>>>::destroy<std::shared_ptr<Material>>(std::_Wrap_alloc<std::allocator<std::shared_ptr<Material> > > *this, std::shared_ptr<Material> *_Ptr);
std::_Func_impl<std::_Callable_obj<<lambda_79aed8583d974a0b4e89939487f0dfeb>,0>,std::allocator<std::_Func_class<void,Node *> >,void,Node *> *__thiscall std::_Func_base<void,Node *>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_79aed8583d974a0b4e89939487f0dfeb>,0>,std::allocator<std::_Func_class<void,Node *> >,void,Node *> *this, unsigned int a2);
void __thiscall std::vector<std::shared_ptr<Material>>::_Reallocate(std::vector<std::shared_ptr<Material>> *this, unsigned int _Count);
void __thiscall std::vector<std::shared_ptr<Material>>::_Reserve(std::vector<std::shared_ptr<Material>> *this, unsigned int _Count);
void __thiscall std::vector<std::shared_ptr<Material>>::~vector<std::shared_ptr<Material>>(std::vector<std::shared_ptr<Material>> *this);
void __thiscall std::vector<std::shared_ptr<Material>>::push_back(std::vector<std::shared_ptr<Material>> *this, const std::shared_ptr<Material> *_Val);
void __thiscall LockControlsTimeAvatar::LockControlsTimeAvatar(LockControlsTimeAvatar *this, Sim *sim);
LockControlsTimeAvatar *__thiscall LockControlsTimeAvatar::`vector deleting destructor'(LockControlsTimeAvatar *this, unsigned int a2);
void __thiscall LockControlsTimeAvatar::renderHUD(LockControlsTimeAvatar *this, float deltaT);
std::_Tree_node<std::pair<int const ,CarPerformance>,void *> **__thiscall std::_Tree_buy<std::pair<int const,CarPerformance>>::_Buynode<std::pair<int,CarPerformance>>(std::_Tree_buy<std::pair<int const ,CarPerformance>> *this, std::pair<int,CarPerformance> *<_Val_0>);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,CarPerformance> > > > *__thiscall std::_Tree<std::_Tmap_traits<int,CarPerformance,std::less<int>,std::allocator<std::pair<int const,CarPerformance>>,0>>::_Insert_at<std::pair<int const,CarPerformance> &,std::_Tree_node<std::pair<int const,CarPerformance>,void *> *>(std::_Tree<std::_Tmap_traits<int,CarPerformance,std::less<int>,std::allocator<std::pair<int const ,CarPerformance> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,CarPerformance> > > > *result, bool _Addleft, std::_Tree_node<std::pair<int const ,CarPerformance>,void *> *_Wherenode, std::pair<int const ,CarPerformance> *_Val, std::_Tree_node<std::pair<int const ,CarPerformance>,void *> *_Node);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,CarPerformance> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<int,CarPerformance,std::less<int>,std::allocator<std::pair<int const,CarPerformance>>,0>>::_Insert_nohint<std::pair<int const,CarPerformance> &,std::_Tree_node<std::pair<int const,CarPerformance>,void *> *>(std::_Tree<std::_Tmap_traits<int,CarPerformance,std::less<int>,std::allocator<std::pair<int const ,CarPerformance> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,CarPerformance> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,CarPerformance> > > > _Leftish, std::pair<int const ,CarPerformance> *_Val, std::_Tree_node<std::pair<int const ,CarPerformance>,void *> *_Newnode);
void __cdecl std::_Uninit_def_fill_n<BestSector *,unsigned int,std::allocator<BestSector>,BestSector>(BestSector *_First, unsigned int _Count);
void __cdecl std::_Uninit_def_fill_n<SectorData *,unsigned int,std::allocator<SectorData>,SectorData>(SectorData *_First, unsigned int _Count);
// void __userpurge MicroSectors::MicroSectors(MicroSectors *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
void __thiscall std::map<int,CarPerformance>::~map<int,CarPerformance>(std::map<int,CarPerformance> *this);
void __thiscall CarPerformance::~CarPerformance(CarPerformance *this);
void __thiscall MicroSectors::~MicroSectors(MicroSectors *this);
std::vector<SectorData> *__thiscall std::vector<SectorData>::operator=(std::vector<SectorData> *this, const std::vector<SectorData> *_Right);
MicroSectors *__thiscall MicroSectors::`vector deleting destructor'(MicroSectors *this, unsigned int a2);
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<int const,CarPerformance>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<int const ,CarPerformance>> > *this);
std::_Tree_node<std::pair<int const ,CarPerformance>,void *> **__thiscall std::_Tree_buy<std::pair<int const,CarPerformance>>::_Buynode0(std::_Tree_buy<std::pair<int const ,CarPerformance>> *this);
void __thiscall std::_Tree<std::_Tmap_traits<int,CarPerformance,std::less<int>,std::allocator<std::pair<int const,CarPerformance>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<int,CarPerformance,std::less<int>,std::allocator<std::pair<int const ,CarPerformance> >,0> > *this, std::_Tree_node<std::pair<int const ,CarPerformance>,void *> *_Newnode);
void __thiscall std::_Tree<std::_Tmap_traits<int,CarPerformance,std::less<int>,std::allocator<std::pair<int const,CarPerformance>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<int,CarPerformance,std::less<int>,std::allocator<std::pair<int const ,CarPerformance> >,0> > *this, std::_Tree_node<std::pair<int const ,CarPerformance>,void *> *_Rootnode);
void __thiscall MicroSectors::drawSectors(MicroSectors *this, GLRenderer *gl, int guid, float x, float y, float cellWidth, float cellHeight, vec4f backColor);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,CarPerformance> > > > *__thiscall std::_Tree<std::_Tmap_traits<int,CarPerformance,std::less<int>,std::allocator<std::pair<int const,CarPerformance>>,0>>::erase(std::_Tree<std::_Tmap_traits<int,CarPerformance,std::less<int>,std::allocator<std::pair<int const ,CarPerformance> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,CarPerformance> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,CarPerformance> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,CarPerformance> > > > _Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,CarPerformance> > > > *__thiscall std::_Tree<std::_Tmap_traits<int,CarPerformance,std::less<int>,std::allocator<std::pair<int const,CarPerformance>>,0>>::erase(std::_Tree<std::_Tmap_traits<int,CarPerformance,std::less<int>,std::allocator<std::pair<int const ,CarPerformance> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,CarPerformance> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,CarPerformance> > > > _Where);
std::vector<SectorData> *__thiscall MicroSectors::getSectorsPerformance(MicroSectors *this, std::vector<SectorData> *result, int carId);
void __thiscall MicroSectors::initialize(MicroSectors *this);
void __thiscall std::vector<BestSector>::resize(std::vector<BestSector> *this, unsigned int _Newsize);
void __thiscall std::vector<SectorData>::resize(std::vector<SectorData> *this, unsigned int _Newsize);
void __thiscall MicroSectors::update(MicroSectors *this, float deltaT);
// void __userpurge OculusManager::OculusManager(OculusManager *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim, StereoCameraForward *aStereoCamera);
OculusManager *__thiscall OculusManager::`vector deleting destructor'(OculusManager *this, unsigned int a2);
void __thiscall OculusManager::update(OculusManager *this, float dt);
void __thiscall std::function<void __cdecl (OnReplayStatusChanged const &)>::function<void __cdecl (OnReplayStatusChanged const &)>(std::function<void __cdecl(OnReplayStatusChanged const &)> *this, PitCrew::{ctor}::__l40::<lambda_40085dc40819131e0092da0abfab2a9e> *_Func);
void __thiscall std::function<void __cdecl (bool const &)>::function<void __cdecl (bool const &)>(std::function<void __cdecl(bool const &)> *this, PitCrew::pitCrewUpdate::__l13::<lambda_02055456cd06d39816b125e75a09a4d9>::()::__l19::<lambda_612bc29d05fa149000b58c7c73a8e61d> *_Func);
void __thiscall std::function<bool __cdecl (Node *)>::function<bool __cdecl (Node *)>(std::function<bool __cdecl(Node *)> *this, PitCrew::{ctor}::__l29::<lambda_f6071ca18ff07b3dfb3ad84b4c9c54aa> *_Func);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<PitCrew::CrewMember>>>(PitCrew::CrewMember *_First, PitCrew::CrewMember *_Last);
void __thiscall std::_Func_class<void,Node *>::_Do_alloc<std::_Func_impl<std::_Callable_obj<_lambda_a281ae7dde51db8b02ffd1ae29fb0902_,0>,std::allocator<std::_Func_class<void,Node *>>,void,Node *>,_lambda_a281ae7dde51db8b02ffd1ae29fb0902_,std::allocator<std::_Func_class<void,Node *>>>(std::_Func_class<void,Node *> *this, PitCrew::{ctor}::__l30::<lambda_a281ae7dde51db8b02ffd1ae29fb0902> *_Val, std::allocator<std::_Func_class<void,Node *> > _Ax);
PitCrew::CrewMember *__cdecl std::_Uninit_move<PitCrew::CrewMember *,PitCrew::CrewMember *,std::allocator<PitCrew::CrewMember>,PitCrew::CrewMember>(PitCrew::CrewMember *_First, PitCrew::CrewMember *_Last, PitCrew::CrewMember *_Dest);
PitStop *__thiscall GameObject::getGameObject<PitStop>(GameObject *this);
void __thiscall std::vector<mat44f>::vector<mat44f>(std::vector<mat44f> *this, const std::vector<mat44f> *_Right);
void __thiscall PitCrew::CrewMember::CrewMember(PitCrew::CrewMember *this, const PitCrew::CrewMember *__that);
void __thiscall PitCrew::CrewMember::CrewMember(PitCrew::CrewMember *this, float aTimeToPosDefault, float aTimeToChangeDefault, float aTimeToFinishDefault);
void __thiscall PitCrew::PitCrew(PitCrew *this, CarAvatar *aCar, std::wstring skin);
void __thiscall std::vector<PitCrew::CrewMember>::~vector<PitCrew::CrewMember>(std::vector<PitCrew::CrewMember> *this);
void __thiscall PitCrew::CrewMember::~CrewMember(PitCrew::CrewMember *this);
void __thiscall PitCrew::~PitCrew(PitCrew *this);
void __thiscall lambda_02055456cd06d39816b125e75a09a4d9_::operator()(PitCrew::pitCrewUpdate::__l13::<lambda_02055456cd06d39816b125e75a09a4d9> *this, const PitStopStart *message);
void __thiscall lambda_40085dc40819131e0092da0abfab2a9e_::operator()(PitCrew::{ctor}::__l40::<lambda_40085dc40819131e0092da0abfab2a9e> *this, const OnReplayStatusChanged *message);
char __thiscall lambda_f6071ca18ff07b3dfb3ad84b4c9c54aa_::operator()(PitCrew::{ctor}::__l29::<lambda_f6071ca18ff07b3dfb3ad84b4c9c54aa> *this, Node *aNode);
std::_Func_impl<std::_Callable_obj<<lambda_02055456cd06d39816b125e75a09a4d9>,0>,std::allocator<std::_Func_class<void,PitStopStart const &> >,void,PitStopStart const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_02055456cd06d39816b125e75a09a4d9_,0>,std::allocator<std::_Func_class<void,PitStopStart const &>>,void,PitStopStart const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_02055456cd06d39816b125e75a09a4d9>,0>,std::allocator<std::_Func_class<void,PitStopStart const &> >,void,PitStopStart const &> *this, unsigned int a2);
PitCrew *__thiscall PitCrew::`vector deleting destructor'(PitCrew *this, unsigned int a2);
char __thiscall std::vector<mat44f>::_Buy(std::vector<mat44f> *this, unsigned int _Capacity);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_02055456cd06d39816b125e75a09a4d9_,0>,std::allocator<std::_Func_class<void,PitStopStart const &>>,void,PitStopStart const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_02055456cd06d39816b125e75a09a4d9>,0>,std::allocator<std::_Func_class<void,PitStopStart const &> >,void,PitStopStart const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f6071ca18ff07b3dfb3ad84b4c9c54aa_,0>,std::allocator<std::_Func_class<bool,Node *>>,bool,Node *>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f6071ca18ff07b3dfb3ad84b4c9c54aa>,0>,std::allocator<std::_Func_class<bool,Node *> >,bool,Node *> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_02055456cd06d39816b125e75a09a4d9_,0>,std::allocator<std::_Func_class<void,PitStopStart const &>>,void,PitStopStart const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_02055456cd06d39816b125e75a09a4d9>,0>,std::allocator<std::_Func_class<void,PitStopStart const &> >,void,PitStopStart const &> *this, const PitStopStart *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_40085dc40819131e0092da0abfab2a9e_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_40085dc40819131e0092da0abfab2a9e>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5128a3a68e2cfaadecd5aaef50b8a656_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5128a3a68e2cfaadecd5aaef50b8a656>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_612bc29d05fa149000b58c7c73a8e61d_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_612bc29d05fa149000b58c7c73a8e61d>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
char __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f6071ca18ff07b3dfb3ad84b4c9c54aa_,0>,std::allocator<std::_Func_class<bool,Node *>>,bool,Node *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f6071ca18ff07b3dfb3ad84b4c9c54aa>,0>,std::allocator<std::_Func_class<bool,Node *> >,bool,Node *> *this, Node **<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_40085dc40819131e0092da0abfab2a9e_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_40085dc40819131e0092da0abfab2a9e>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5128a3a68e2cfaadecd5aaef50b8a656_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_5128a3a68e2cfaadecd5aaef50b8a656>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_612bc29d05fa149000b58c7c73a8e61d_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_612bc29d05fa149000b58c7c73a8e61d>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a281ae7dde51db8b02ffd1ae29fb0902_,0>,std::allocator<std::_Func_class<void,Node *>>,void,Node *>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_a281ae7dde51db8b02ffd1ae29fb0902>,0>,std::allocator<std::_Func_class<void,Node *> >,void,Node *> *this, void *_Where);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (OnSectorSplitEvent const &)>>>::_Reallocate(std::vector<std::pair<void *,std::function<void __cdecl(SessionInfo const &)> >> *this, unsigned int _Count);
void __thiscall std::vector<PitCrew::CrewMember>::_Reallocate(std::vector<PitCrew::CrewMember> *this, unsigned int _Count);
void __thiscall std::vector<PitCrew::CrewMember>::_Reserve(std::vector<PitCrew::CrewMember> *this, unsigned int _Count);
void __thiscall std::vector<DragMode::DragStatus>::_Reserve(std::vector<DragMode::DragStatus> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_02055456cd06d39816b125e75a09a4d9_,0>,std::allocator<std::_Func_class<void,PitStopStart const &>>,void,PitStopStart const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_02055456cd06d39816b125e75a09a4d9>,0>,std::allocator<std::_Func_class<void,PitStopStart const &> >,void,PitStopStart const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_40085dc40819131e0092da0abfab2a9e_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_40085dc40819131e0092da0abfab2a9e>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5128a3a68e2cfaadecd5aaef50b8a656_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5128a3a68e2cfaadecd5aaef50b8a656>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_612bc29d05fa149000b58c7c73a8e61d_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_612bc29d05fa149000b58c7c73a8e61d>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a281ae7dde51db8b02ffd1ae29fb0902_,0>,std::allocator<std::_Func_class<void,Node *>>,void,Node *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a281ae7dde51db8b02ffd1ae29fb0902>,0>,std::allocator<std::_Func_class<void,Node *> >,void,Node *> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f6071ca18ff07b3dfb3ad84b4c9c54aa_,0>,std::allocator<std::_Func_class<bool,Node *>>,bool,Node *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f6071ca18ff07b3dfb3ad84b4c9c54aa>,0>,std::allocator<std::_Func_class<bool,Node *> >,bool,Node *> *this);
double __thiscall PitStop::getPitStopTyrePercentage(PitStop *this);
void __thiscall PitCrew::loadCrewSkin(PitCrew *this, KN5IO *kn, INIReader *iniS, const std::wstring *section, const std::wstring *key);
void __thiscall PitCrew::onPitStopBegin(PitCrew *this, const PitStopStart *message);
void __thiscall PitCrew::onPitStopFinished(PitCrew *this);
void __thiscall PitCrew::onPitStopIdle(PitCrew *this);
void __thiscall PitCrew::pitCrewUpdate(PitCrew *this, float dt);
void __thiscall std::vector<PitCrew::CrewMember>::push_back(std::vector<PitCrew::CrewMember> *this, const PitCrew::CrewMember *_Val);
void __thiscall std::vector<mat44f>::push_back(std::vector<mat44f> *this, const mat44f *_Val);
void __thiscall PitCrew::reset(PitCrew *this);
void __thiscall Node::setActive(Node *this, bool a);
void __thiscall PitCrew::updateCurrentPosition(PitCrew *this, float dt);
void __thiscall std::function<void __cdecl (OnMouseMoveEvent const &)>::function<void __cdecl (OnMouseMoveEvent const &)>(std::function<void __cdecl(OnMouseMoveEvent const &)> *this, PitStop::{ctor}::__l59::<lambda_1290f339c00a0b2d2425f2377cebc6d8> *_Func);
void __thiscall std::function<void __cdecl (OnNewSessionEvent const &)>::function<void __cdecl (OnNewSessionEvent const &)>(std::function<void __cdecl(OnNewSessionEvent const &)> *this, PitStop::{ctor}::__l63::<lambda_178fecdc963779ab0a7b9ba17e429953> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, PitStop::{ctor}::__l20::<lambda_22ce6e0707c6a0d99aefde3918cef02e> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, PitStop::{ctor}::__l47::<lambda_53f637ed5ae27b6058387f0697b093c3> *_Func);
void __thiscall std::function<void __cdecl (OnMouseDownEvent const &)>::function<void __cdecl (OnMouseDownEvent const &)>(std::function<void __cdecl(OnMouseDownEvent const &)> *this, PitStop::{ctor}::__l51::<lambda_97f858d078361660960f46ec1dfa1142> *_Func);
void __thiscall std::function<void __cdecl (float const &)>::function<void __cdecl (float const &)>(std::function<void __cdecl(float const &)> *this, PitStop::{ctor}::__l65::<lambda_9c16e304e7e2c085ae3f98eceac1031e> *_Func);
void __thiscall std::function<void __cdecl (OnMouseUpEvent const &)>::function<void __cdecl (OnMouseUpEvent const &)>(std::function<void __cdecl(OnMouseUpEvent const &)> *this, PitStop::{ctor}::__l55::<lambda_fcf8135cce28782398f609f867708197> *_Func);
PitCrew *__thiscall GameObject::addGameObject<ProximityIndicator>(GameObject *this, PitCrew *object);
QuickMenuPitstop *__thiscall GameObject::getGameObject<QuickMenuPitstop>(GameObject *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_22ce6e0707c6a0d99aefde3918cef02e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Func_impl<std::_Callable_obj<_lambda_22ce6e0707c6a0d99aefde3918cef02e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>(std::_Func_impl<std::_Callable_obj<<lambda_22ce6e0707c6a0d99aefde3918cef02e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, PitStop::{ctor}::__l20::<lambda_22ce6e0707c6a0d99aefde3918cef02e> *_Val, const std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_22ce6e0707c6a0d99aefde3918cef02e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> > *_Ax);
void __thiscall PitStop::PitStop(PitStop *this, Sim *aSim);
void __thiscall PitStopFuel::PitStopFuel(PitStopFuel *this, std::wstring name, ksgui::GUI *aGUI);
void __thiscall PitStopStrategy::PitStopStrategy(PitStopStrategy *this);
void __thiscall OnSetupAppCreated::~OnSetupAppCreated(Texture *this);
void __thiscall PitStop::~PitStop(PitStop *this);

void __thiscall PitStop::commitChanges(PitStop *this);
void __thiscall PitStop::commitQuickMenuChanges(PitStop *this);
double __thiscall PitStop::getEstimatedTime(PitStop *this);
double __thiscall PitStop::getPitStopFuelingPercentage(PitStop *this);
double __thiscall PitStop::getPitStopRepairingPercentage(PitStop *this);
double __thiscall PitStop::getRealMaxFuel(PitStop *this);
bool __thiscall PitStop::isCarInPitLane(PitStop *this);
char __thiscall PitStop::isCarOutOfPitArea(PitStop *this);
BOOL __thiscall PitStop::isChangingTyres(PitStop *this);
bool __thiscall PitStop::isInPitPosition(PitStop *this);
BOOL __thiscall PitStop::isPitStopDone(PitStop *this, float dt);
bool __thiscall PitStopFuel::onMouseDown(PitStopFuel *this, const OnMouseDownEvent *message);
void __thiscall std::vector<std::pair<int,float>>::push_back(std::vector<std::pair<int,float>> *this, std::pair<int,float> *_Val);
// void __userpurge PitStopFuel::render(PitStopFuel *this@<ecx>, __int64 a2@<esi:edi>, float dt);
// void __userpurge PitStop::renderHUD(PitStop *this@<ecx>, float dt, int a3);
void __thiscall PitStop::update(PitStop *this, float dt);
void __thiscall PostProcessEffectsUpdater::PostProcessEffectsUpdater(PostProcessEffectsUpdater *this, Sim *aSim, CameraForwardYebis *aCamera);
PostProcessEffectsUpdater *__thiscall PostProcessEffectsUpdater::`vector deleting destructor'(PostProcessEffectsUpdater *this, unsigned int a2);
void __thiscall PostProcessEffectsUpdater::loadConfigurationFile(PostProcessEffectsUpdater *this, std::wstring filePath);
void __thiscall PostProcessEffectsUpdater::update(PostProcessEffectsUpdater *this, float dt);
void __thiscall PushToPassManager::PushToPassManager(PushToPassManager *this, Sim *isim);
void __thiscall Session::Session(Session *this, const Session *__that);
void __thiscall lambda_337d89af823d3631c4dcafdd24119694_::operator()(PushToPassManager::{ctor}::__l7::<lambda_337d89af823d3631c4dcafdd24119694> *this, OnNewSessionEvent ev);
PushToPassManager *__thiscall PushToPassManager::`scalar deleting destructor'(PushToPassManager *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_337d89af823d3631c4dcafdd24119694_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_337d89af823d3631c4dcafdd24119694>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d69b6a10c7bcfcb170b06dbfa1297b08_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d69b6a10c7bcfcb170b06dbfa1297b08>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_337d89af823d3631c4dcafdd24119694_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_337d89af823d3631c4dcafdd24119694>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d69b6a10c7bcfcb170b06dbfa1297b08_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d69b6a10c7bcfcb170b06dbfa1297b08>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_337d89af823d3631c4dcafdd24119694_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_337d89af823d3631c4dcafdd24119694>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d69b6a10c7bcfcb170b06dbfa1297b08_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d69b6a10c7bcfcb170b06dbfa1297b08>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall PushToPassManager::assignActivations(PushToPassManager *this, const Session *ses);
void __thiscall QOSOverlay::QOSOverlay(QOSOverlay *this, ACClient *client);

void __thiscall QOSOverlay::renderHUD(QOSOverlay *this, float dt);


void __thiscall QuickMenuPitstop::QuickMenuPitstop(QuickMenuPitstop *this, Sim *isim);
void __thiscall QuickMenuPitstopItem::QuickMenuPitstopItem(QuickMenuPitstopItem *this, const QuickMenuPitstopItem *__that);
void __thiscall QuickMenuPitstopItem::QuickMenuPitstopItem(QuickMenuPitstopItem *this);
void __thiscall std::vector<QuickMenuPitstopItem>::~vector<QuickMenuPitstopItem>(std::vector<QuickMenuPitstopItem> *this);
void __thiscall QuickMenuPitstop::~QuickMenuPitstop(QuickMenuPitstop *this);
void __thiscall QuickMenuPitstopItem::~QuickMenuPitstopItem(QuickMenuPitstopItem *this);
QuickMenuPitstopItem *__thiscall std::vector<QuickMenuPitstopItem>::operator[](std::vector<QuickMenuPitstopItem> *this, unsigned int _Pos);
std::_Vector_iterator<std::_Vector_val<std::_Simple_types<QuickMenuPitstopItem> > > *__thiscall std::_Vector_iterator<std::_Vector_val<std::_Simple_types<QuickMenuPitstopItem>>>::operator-(std::_Vector_iterator<std::_Vector_val<std::_Simple_types<QuickMenuPitstopItem> > > *this, std::_Vector_iterator<std::_Vector_val<std::_Simple_types<QuickMenuPitstopItem> > > *result, int _Off);

void __thiscall QuickMenuPitstop::addHeader(QuickMenuPitstop *this, ksgui::Label *lbl, const std::wstring *title);
QuickMenuPitstopItem *__thiscall std::vector<QuickMenuPitstopItem>::back(std::vector<QuickMenuPitstopItem> *this);
void __thiscall QuickMenuPitstop::buildControls(QuickMenuPitstop *this, INIReader *carsetup);
void __thiscall QuickMenuPitstop::buildItem(QuickMenuPitstop *this, INIReader *ini, QuickMenuPitstopItem *item, const std::wstring *sect, bool readIni);
void __thiscall QuickMenuPitstop::getItemValues(QuickMenuPitstop *this, EQuickMenuPitstopType type, int componentIndex, QuickMenuPitstopItem *item);
double __thiscall QuickMenuPitstop::getMaxFuel(QuickMenuPitstop *this);
double __thiscall QuickMenuPitstop::getValue(QuickMenuPitstop *this, const QuickMenuPitstopItem *item);
double __thiscall QuickMenuPitstop::getWingPitstopTime(QuickMenuPitstop *this, int componentIndex);
void __thiscall QuickMenuPitstop::itemCompound(QuickMenuPitstop *this, const int direction, const int itemIndex);
void __thiscall QuickMenuPitstop::itemFuel(QuickMenuPitstop *this, const int direction, const int itemIndex);
void __thiscall QuickMenuPitstop::itemPressure(QuickMenuPitstop *this, const int direction, const int itemIndex);
void __thiscall QuickMenuPitstop::itemWing(QuickMenuPitstop *this, const int direction, const int itemIndex);
void __thiscall QuickMenuPitstop::loadFixedSetup(QuickMenuPitstop *this, const std::wstring *path);
void __thiscall std::vector<QuickMenuPitstopItem>::push_back(std::vector<QuickMenuPitstopItem> *this, QuickMenuPitstopItem *_Val);
void __thiscall std::vector<std::vector<float>>::push_back(std::vector<std::vector<float>> *this, const std::vector<float> *_Val);
void __thiscall QuickMenuPitstop::renderHUD(QuickMenuPitstop *this, float dt);
void __thiscall QuickMenuPitstop::resetControls(QuickMenuPitstop *this, const int itemIndex, float value);
void __thiscall QuickMenuPitstop::sendInput(QuickMenuPitstop *this, unsigned int key);
void __thiscall QuickMenuPitstop::setLabels(QuickMenuPitstop *this, const int itemIndex);
void __thiscall QuickMenuPitstopItem::setTop(QuickMenuPitstopItem *this, const float top);
int __thiscall std::vector<QuickMenuPitstopItem>::size(std::vector<QuickMenuPitstopItem> *this);
void __thiscall QuickMenuPitstop::updateUI(QuickMenuPitstop *this);
void __thiscall RaceControlScreen::RaceControlScreen(RaceControlScreen *this, Sim *aSim);
RaceControlScreen *__thiscall RaceControlScreen::`scalar deleting destructor'(RaceControlScreen *this, unsigned int a2);
int __thiscall RaceControlScreen::getShownSessionID(RaceControlScreen *this);
// void __userpurge RaceControlScreen::render(RaceControlScreen *this@<ecx>, int a2@<esi>, float dt);
void __thiscall RaceControlSessionInfo::RaceControlSessionInfo(RaceControlSessionInfo *this, Sim *aSim);
void __thiscall RaceControlSessionInfo::~RaceControlSessionInfo(RaceControlSessionInfo *this);
RaceControlSessionInfo *__thiscall RaceControlSessionInfo::`scalar deleting destructor'(RaceControlSessionInfo *this, unsigned int a2);
// void __userpurge RaceControlSessionInfo::render(RaceControlSessionInfo *this@<ecx>, int a2@<edi>, int a3@<esi>, float dt);
void __thiscall RaceControlSessionServer::RaceControlSessionServer(RaceControlSessionServer *this, Sim *aSim);
void __thiscall RaceControlSessionServer::~RaceControlSessionServer(RaceControlSessionServer *this);
RaceControlSessionServer *__thiscall RaceControlSessionServer::`scalar deleting destructor'(RaceControlSessionServer *this, unsigned int a2);
// void __userpurge RaceControlSessionServer::render(RaceControlSessionServer *this@<ecx>, int a2@<esi>, float dt);
void __thiscall RaceControlSessionServer::setBackground(RaceControlSessionServer *this, ksgui::ksRect *wrect, bool *isDark, GLRenderer *gl);
void __thiscall RaceControlSPSession::RaceControlSPSession(RaceControlSPSession *this, Sim *aSim);
RaceControlSPSession *__thiscall RaceControlSPSession::`vector deleting destructor'(RaceControlSPSession *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5db828d598263dcd7ad40b376cc6c615_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_5db828d598263dcd7ad40b376cc6c615>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2dd610ddbe668e210caf3ebb461e4f31_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2dd610ddbe668e210caf3ebb461e4f31>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5db828d598263dcd7ad40b376cc6c615_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5db828d598263dcd7ad40b376cc6c615>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bb64a4f5a6593c2e373304c99feec67e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_bb64a4f5a6593c2e373304c99feec67e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2dd610ddbe668e210caf3ebb461e4f31_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_2dd610ddbe668e210caf3ebb461e4f31>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bb64a4f5a6593c2e373304c99feec67e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_bb64a4f5a6593c2e373304c99feec67e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2dd610ddbe668e210caf3ebb461e4f31_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2dd610ddbe668e210caf3ebb461e4f31>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5db828d598263dcd7ad40b376cc6c615_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5db828d598263dcd7ad40b376cc6c615>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_bb64a4f5a6593c2e373304c99feec67e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_bb64a4f5a6593c2e373304c99feec67e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
// void __userpurge RaceControlSPSession::render(RaceControlSPSession *this@<ecx>, int a2@<esi>, float dt);
void __thiscall RaceControlVoting::RaceControlVoting(RaceControlVoting *this, Sim *aSim);
RaceControlVoting *__thiscall RaceControlVoting::`scalar deleting destructor'(RaceControlVoting *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3ad8f7ad81e2d6392327fb1efbf08b42_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_3ad8f7ad81e2d6392327fb1efbf08b42>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b18e1197a292d2440579ac87d6f8afb1_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_b18e1197a292d2440579ac87d6f8afb1>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c69f380736deb837b60bdbd51b0c49e3_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_c69f380736deb837b60bdbd51b0c49e3>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3ad8f7ad81e2d6392327fb1efbf08b42_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3ad8f7ad81e2d6392327fb1efbf08b42>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b18e1197a292d2440579ac87d6f8afb1_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b18e1197a292d2440579ac87d6f8afb1>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c32c24a05543357f470375f158ec58d6_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c32c24a05543357f470375f158ec58d6>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c69f380736deb837b60bdbd51b0c49e3_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c69f380736deb837b60bdbd51b0c49e3>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f68f5318e090cd77d25b97858f77cfca_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f68f5318e090cd77d25b97858f77cfca>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c32c24a05543357f470375f158ec58d6_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_c32c24a05543357f470375f158ec58d6>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f68f5318e090cd77d25b97858f77cfca_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_f68f5318e090cd77d25b97858f77cfca>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3ad8f7ad81e2d6392327fb1efbf08b42_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3ad8f7ad81e2d6392327fb1efbf08b42>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b18e1197a292d2440579ac87d6f8afb1_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b18e1197a292d2440579ac87d6f8afb1>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c32c24a05543357f470375f158ec58d6_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c32c24a05543357f470375f158ec58d6>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c69f380736deb837b60bdbd51b0c49e3_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c69f380736deb837b60bdbd51b0c49e3>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f68f5318e090cd77d25b97858f77cfca_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f68f5318e090cd77d25b97858f77cfca>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
// void __userpurge RaceControlVoting::render(RaceControlVoting *this@<ecx>, int a2@<esi>, float dt);
bool __thiscall RaceControlVoting::voteSpamCheck(RaceControlVoting *this);
void __thiscall RotatingObjects::RotatingObjects(RotatingObjects *this, CarAvatar *a_car);
RotatingObjects *__thiscall RotatingObjects::`vector deleting destructor'(RotatingObjects *this, unsigned int a2);
// void __userpurge RotatingObjects::update(RotatingObjects *this@<ecx>, int a2@<edi>, int a3@<esi>, float dt);
void __thiscall SessionLeaderboard::SessionLeaderboard(SessionLeaderboard *this, Sim *aSim);
std::_Func_impl<std::_Callable_obj<<lambda_0b107ea97fe1b13b90339c7c22972ffe>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0b107ea97fe1b13b90339c7c22972ffe_,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &>>,void,OnMouseDownEvent const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_0b107ea97fe1b13b90339c7c22972ffe>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *this, unsigned int a2);
SessionLeaderboard *__thiscall SessionLeaderboard::`scalar deleting destructor'(SessionLeaderboard *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a5cb235b6f1de62b1d977ec75d7dd7e7_,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &>>,void,OnMouseMoveEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_a5cb235b6f1de62b1d977ec75d7dd7e7>,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &> >,void,OnMouseMoveEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e5daf2dd37a3422ce554481036ba3d08_,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &>>,void,OnMouseUpEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_e5daf2dd37a3422ce554481036ba3d08>,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &> >,void,OnMouseUpEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_24367c9bb314e4401f0a883470dec8f8_,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &>>,void,OnMouseDownEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_24367c9bb314e4401f0a883470dec8f8>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *this, const OnMouseDownEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a5cb235b6f1de62b1d977ec75d7dd7e7_,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &>>,void,OnMouseMoveEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a5cb235b6f1de62b1d977ec75d7dd7e7>,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &> >,void,OnMouseMoveEvent const &> *this, const OnMouseMoveEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e5daf2dd37a3422ce554481036ba3d08_,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &>>,void,OnMouseUpEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e5daf2dd37a3422ce554481036ba3d08>,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &> >,void,OnMouseUpEvent const &> *this, const OnMouseUpEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_24367c9bb314e4401f0a883470dec8f8_,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &>>,void,OnMouseDownEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_24367c9bb314e4401f0a883470dec8f8>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_24367c9bb314e4401f0a883470dec8f8_,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &>>,void,OnMouseDownEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_24367c9bb314e4401f0a883470dec8f8>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a5cb235b6f1de62b1d977ec75d7dd7e7_,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &>>,void,OnMouseMoveEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a5cb235b6f1de62b1d977ec75d7dd7e7>,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &> >,void,OnMouseMoveEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e5daf2dd37a3422ce554481036ba3d08_,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &>>,void,OnMouseUpEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e5daf2dd37a3422ce554481036ba3d08>,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &> >,void,OnMouseUpEvent const &> *this);
void __thiscall SessionLeaderboard::renderHUD(SessionLeaderboard *this, float dt);
void __thiscall SessionLeaderboard::setVisible(SessionLeaderboard *this, BOOL value);
FlagManager *__thiscall GameObject::getGameObject<FlagManager>(GameObject *this);
void __thiscall FuelLight::FuelLight(FuelLight *this, Sim *aSim);
void __thiscall FuelLight::~FuelLight(FuelLight *this);
std::_Func_impl<std::_Callable_obj<<lambda_312aceeaa8eb0ff2f6f798ebad983322>,0>,std::allocator<std::_Func_class<void,FlagTriggered const &> >,void,FlagTriggered const &> *__thiscall std::_Func_base<void,FlagTriggered const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_312aceeaa8eb0ff2f6f798ebad983322>,0>,std::allocator<std::_Func_class<void,FlagTriggered const &> >,void,FlagTriggered const &> *this, unsigned int a2);
FuelLight *__thiscall FuelLight::`scalar deleting destructor'(FuelLight *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_312aceeaa8eb0ff2f6f798ebad983322_,0>,std::allocator<std::_Func_class<void,FlagTriggered const &>>,void,FlagTriggered const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_312aceeaa8eb0ff2f6f798ebad983322>,0>,std::allocator<std::_Func_class<void,FlagTriggered const &> >,void,FlagTriggered const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3997bb45dffea64fb02ff2feca9c1a05_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_3997bb45dffea64fb02ff2feca9c1a05>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_312aceeaa8eb0ff2f6f798ebad983322_,0>,std::allocator<std::_Func_class<void,FlagTriggered const &>>,void,FlagTriggered const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_312aceeaa8eb0ff2f6f798ebad983322>,0>,std::allocator<std::_Func_class<void,FlagTriggered const &> >,void,FlagTriggered const &> *this, const FlagTriggered *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3997bb45dffea64fb02ff2feca9c1a05_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3997bb45dffea64fb02ff2feca9c1a05>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_312aceeaa8eb0ff2f6f798ebad983322_,0>,std::allocator<std::_Func_class<void,FlagTriggered const &>>,void,FlagTriggered const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_312aceeaa8eb0ff2f6f798ebad983322>,0>,std::allocator<std::_Func_class<void,FlagTriggered const &> >,void,FlagTriggered const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3997bb45dffea64fb02ff2feca9c1a05_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3997bb45dffea64fb02ff2feca9c1a05>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
void __thiscall Event<float>::addHandler(Event<SessionInfo> *this, std::function<void __cdecl(SessionInfo const &)> h, void *owner);
void __thiscall FuelLight::renderHUD(FuelLight *this, float dt);
std::_Tree_node<std::pair<std::wstring const ,std::map<std::wstring,INISection> >,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,INISection>>::_Buynode<std::pair<std::wstring const,INISection> &>(std::_Tree_buy<std::pair<std::wstring const ,INISection>> *this, std::pair<std::wstring const ,INISection> *<_Val_0>);
std::_Tree_node<std::pair<std::wstring const ,std::wstring >,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,std::wstring>>::_Buynode<std::pair<std::wstring const,std::wstring> &>(std::_Tree_buy<std::pair<std::wstring const ,std::wstring >> *this, std::pair<std::wstring const ,std::wstring > *<_Val_0>);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,INISection>>,0>>::_Copy<std::integral_constant<bool,0>>(std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,INISection> >,0> > *this, const std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,INISection> >,0> > *_Right, std::integral_constant<bool,0> _Movefl);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::wstring>>,0>>::_Copy<std::integral_constant<bool,0>>(std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::wstring > >,0> > *this, const std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::wstring > >,0> > *_Right, std::integral_constant<bool,0> _Movefl);
std::_Tree_node<std::pair<std::wstring const ,INISection>,void *> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,INISection>>,0>>::_Copy_nodes<std::integral_constant<bool,0>>(std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,INISection> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,INISection>,void *> *_Rootnode, std::_Tree_node<std::pair<std::wstring const ,INISection>,void *> *_Wherenode, std::integral_constant<bool,0> _Movefl);
std::_Tree_node<std::pair<std::wstring const ,std::wstring >,void *> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::wstring>>,0>>::_Copy_nodes<std::integral_constant<bool,0>>(std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::wstring > >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,std::wstring >,void *> *_Rootnode, std::_Tree_node<std::pair<std::wstring const ,std::wstring >,void *> *_Wherenode, std::integral_constant<bool,0> _Movefl);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<GameMode::ConditionDef>>>(GameMode::ConditionDef *_First, GameMode::ConditionDef *_Last);
GameMode::ConditionDef *__cdecl std::_Uninit_move<GameMode::ConditionDef *,GameMode::ConditionDef *,std::allocator<GameMode::ConditionDef>,GameMode::ConditionDef>(GameMode::ConditionDef *_First, GameMode::ConditionDef *_Last, GameMode::ConditionDef *_Dest);
void __thiscall std::allocator<std::_Tree_node<std::pair<std::wstring const,std::wstring>,void *>>::construct<std::pair<std::wstring const,std::wstring>,std::pair<std::wstring const,std::wstring> &>(std::allocator<std::_Tree_node<std::pair<std::wstring const ,std::wstring >,void *> > *this, std::pair<std::wstring const ,std::wstring > *_Ptr, std::pair<std::wstring const ,std::wstring > *<_Args_0>);
void __thiscall std::_Wrap_alloc<std::allocator<ChatElement>>::destroy<ChatElement>(std::_Wrap_alloc<std::allocator<ChatElement> > *this, ChatElement *_Ptr);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,INISection>>,0>>::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,INISection>>,0>>(std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,INISection> >,0> > *this, const std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,INISection> >,0> > *_Right, const std::allocator<std::pair<std::wstring const ,INISection> > *_Al);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::wstring>>,0>>::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::wstring>>,0>>(std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::wstring > >,0> > *this, const std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::wstring > >,0> > *_Right, const std::allocator<std::pair<std::wstring const ,std::wstring > > *_Al);
void __thiscall GameMode::ConditionDef::ConditionDef(GameMode::ConditionDef *this, const GameMode::ConditionDef *__that);
void __thiscall GameMode::GameMode(GameMode *this, std::wstring name, Game *aGame);
void __thiscall INIReader::INIReader(INIReader *this, const INIReader *__that);
void __thiscall std::_Tree_comp<0,std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,INISection>>,0>>::~_Tree_comp<0,std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,INISection>>,0>>(std::_Tree_comp<0,std::_Tmap_traits<std::wstring,enum DynamicControllerInput,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,enum DynamicControllerInput> >,0> > *this);
void __thiscall std::map<std::wstring,INISection>::~map<std::wstring,INISection>(std::map<std::wstring,INISection> *this);
void __thiscall std::pair<std::wstring const,INISection>::~pair<std::wstring const,INISection>(std::pair<std::wstring const ,INISection> *this);
void __thiscall TrackData::~TrackData(ChatElement *this);
void __thiscall std::vector<GameMode::ConditionDef>::~vector<GameMode::ConditionDef>(std::vector<GameMode::ConditionDef> *this);
void __thiscall GameMode::~GameMode(GameMode *this);
std::map<std::wstring,INISection> *__thiscall std::map<std::wstring,INISection>::operator=(std::map<std::wstring,INISection> *this, const std::map<std::wstring,INISection> *_Right);
INIReader *__thiscall INIReader::operator=(INIReader *this, const INIReader *__that);
GameMode *__thiscall GameMode::`scalar deleting destructor'(GameMode *this, unsigned int a2);
INIReader *__thiscall INIReader::`scalar deleting destructor'(INIReader *this, unsigned int a2);
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const,std::wstring>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const ,std::wstring >> > *this);
std::_Tree_node<std::pair<std::wstring const ,std::wstring >,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,std::wstring>>::_Buynode0(std::_Tree_buy<std::pair<std::wstring const ,std::wstring >> *this);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,INISection>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,INISection> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,INISection>,void *> *_Rootnode);
void __thiscall std::vector<GameMode::ConditionDef>::_Reallocate(std::vector<GameMode::ConditionDef> *this, unsigned int _Count);
void __thiscall std::vector<GameMode::ConditionDef>::_Reserve(std::vector<GameMode::ConditionDef> *this, unsigned int _Count);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,INISection>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,INISection> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > > _Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,INISection>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,INISection> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > > _Where);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,TagDocumentText,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TagDocumentText>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,TagDocumentText,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TagDocumentText> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > > _Where);
void __thiscall GameMode::forceConditionAchieved(GameMode *this, int conditionIndex, bool achieved);
void __thiscall std::vector<GameMode::ConditionDef>::push_back(std::vector<GameMode::ConditionDef> *this, const GameMode::ConditionDef *_Val);
void __thiscall GameMode::setTier(GameMode *this, int aTier);
void __thiscall HotlapMode::HotlapMode(HotlapMode *this, Sim *aSim);
void __thiscall lambda_667fe4fd1d29f79adbc68a2309d7b2a7_::operator()(HotlapMode::{ctor}::__l11::<lambda_667fe4fd1d29f79adbc68a2309d7b2a7> *this, const OnLapCompletedEvent *message);
HotlapMode *__thiscall HotlapMode::`vector deleting destructor'(HotlapMode *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_667fe4fd1d29f79adbc68a2309d7b2a7_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_667fe4fd1d29f79adbc68a2309d7b2a7>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_667fe4fd1d29f79adbc68a2309d7b2a7_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_667fe4fd1d29f79adbc68a2309d7b2a7>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_667fe4fd1d29f79adbc68a2309d7b2a7_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_667fe4fd1d29f79adbc68a2309d7b2a7>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
void __thiscall CarPhysicsState::CarPhysicsState(CarPhysicsState *this);
void __thiscall SurfaceDef::SurfaceDef(SurfaceDef *this);
void __thiscall CarPhysicsState::~CarPhysicsState(CarPhysicsState *this);
void __thiscall ICarPhysicsStateProvider::~ICarPhysicsStateProvider(ICarPhysicsStateProvider *this);
void __thiscall ThreadLocker::~ThreadLocker(ThreadLocker *this);
void __thiscall ThreadMutex::~ThreadMutex(ThreadMutex *this);
ICarPhysicsStateProvider *__thiscall PhysicsCarStateProvider::`scalar deleting destructor'(ICarPhysicsStateProvider *this, unsigned int a2);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, ACPlugin::setSystemMessage::__l9::<lambda_0638175e8dfc45e8ab90c6bccc126276> *_Func);
CarAvatar *__thiscall GameObject::getGameObject<CarAvatar>(GameObject *this);
void __thiscall ACPlugin::ACPlugin(ACPlugin *this, Sim *aSim, HINSTANCE__ *module);
void __thiscall ACPlugin::~ACPlugin(ACPlugin *this);
ACPlugin *__thiscall ACPlugin::`vector deleting destructor'(ACPlugin *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9f5d139ac3da50f79c44adf8fbf8cdd4_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_9f5d139ac3da50f79c44adf8fbf8cdd4>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0638175e8dfc45e8ab90c6bccc126276_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0638175e8dfc45e8ab90c6bccc126276>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9f5d139ac3da50f79c44adf8fbf8cdd4_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9f5d139ac3da50f79c44adf8fbf8cdd4>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0638175e8dfc45e8ab90c6bccc126276_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_0638175e8dfc45e8ab90c6bccc126276>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0638175e8dfc45e8ab90c6bccc126276_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0638175e8dfc45e8ab90c6bccc126276>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9f5d139ac3da50f79c44adf8fbf8cdd4_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9f5d139ac3da50f79c44adf8fbf8cdd4>,0>,std::allocator<std::_Func_class<void> >,void> *this);
HINSTANCE __thiscall ACPlugin::getHInstance(ACPlugin *this);
HWND__ *__thiscall ACPlugin::getHwnd(ACPlugin *this);
void __thiscall ACPlugin::onGui(ACPlugin *this, ACPluginContext *cc);
void __thiscall ACPlugin::setABS(ACPlugin *this, float value);
void __thiscall ACPlugin::setAutoShift(ACPlugin *this, bool value);
void __thiscall ACPlugin::setBrakeBias(ACPlugin *this, float value);
void __thiscall ACPlugin::setIdealLine(ACPlugin *this, bool value, bool isFromPhysicsThread);
void __thiscall ACPlugin::setStabilityControl(ACPlugin *this, float value);
void __thiscall ACPlugin::setSystemMessage(ACPlugin *this, const wchar_t *message, const wchar_t *description, bool isFromPhysicsThread);
void __thiscall ACPlugin::setTC(ACPlugin *this, float value);
void __thiscall ACPlugin::update(ACPlugin *this, ACCarState *state, float dt);
std::wistream *__cdecl std::getline<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>(std::wistream *_Istr, std::wstring *_Str, const wchar_t _Delim);
std::wistream *__cdecl std::getline<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>(std::wistream *_Istr, std::wstring *_Str);
void __thiscall std::wifstream::wifstream(std::wifstream *this, const char *_Filename, int _Mode, int _Prot, int a5);
void __thiscall VideoSettings::VideoSettings(VideoSettings *this);
void __thiscall std::wifstream::~wifstream<wchar_t,std::char_traits<wchar_t>>(std::wifstream *this);
void __thiscall std::wifstream::`vbase destructor(std::wifstream *this);
char *__thiscall std::wifstream::`vector deleting destructor'(_DWORD *this, unsigned int a2);
char *__thiscall std::wifstream::`scalar deleting destructor'(std::wifstream *this, unsigned int a2);
bool __cdecl checkIfCarExists(const std::wstring *carName, std::wstring *message);
// bool __usercall checkRaceINI@<al>(char a1@<bl>, std::wstring *outputMessage);
void checkRedirect();
// void __usercall initLocalization(TyreTester *a1@<ecx>, unsigned int a2@<ebx>);
// VideoSettings *__usercall loadVideoSettings@<eax>(unsigned int a1@<ebx>, VideoSettings *result);
std::wfilebuf *__thiscall std::wfilebuf::open(std::wfilebuf *this, const char *_Filename, int _Mode, int _Prot);
void printRequestCode();
std::vector<std::wstring> *printVideoModes();
// int __userpurge wWinMain@<eax>(int a1@<ebx>, __m128 a2@<xmm1>, HINSTANCE__ *hInstance, HINSTANCE__ *hPrevInstance, wchar_t *lpCmdLine, int nCmdShow);
void __thiscall BlurredObjects::BlurredObjects(BlurredObjects *this, CarAvatar *acar);
BlurredObjects *__thiscall BlurredObjects::`scalar deleting destructor'(BlurredObjects *this, unsigned int a2);
void __thiscall std::vector<VisualDamageManager::ScratchablePart>::_Reserve(std::vector<DRSWingConnection> *this, unsigned int _Count);
void __thiscall BlurredObjects::update(BlurredObjects *this, float deltaT);
void __thiscall CameraCarManager::CameraCarManager(CameraCarManager *this, Sim *a_sim, CameraForward *a_camera);
CameraCarManager *__thiscall CameraCarManager::`scalar deleting destructor'(CameraCarManager *this, unsigned int a2);
// __m128 __usercall DirectX::XMQuaternionRotationMatrix@<xmm0>(__m128 a1@<xmm0>, __m128 a2@<xmm1>, __m128 a3@<xmm2>);
int __thiscall CameraCarManager::getCameraCount(CameraCarManager *this);
void __thiscall CameraCarManager::nextCamera(CameraCarManager *this);
void __thiscall CameraCarManager::setCurrentCamera(CameraCarManager *this, unsigned int cameraIndex);
void __thiscall CameraCarManager::update(CameraCarManager *this, float dt);
std::wstring *__cdecl std::_Find<std::wstring *,wchar_t const [20]>(std::wstring *_First, std::wstring *_Last, const wchar_t (*_Val)[20]);
AxleJoint *__cdecl std::_Uninit_move<AxleJoint *,AxleJoint *,std::allocator<AxleJoint>,AxleJoint>(AxleJoint *_First, AxleJoint *_Last, AxleJoint *_Dest);
// void __userpurge CameraDrivableManager::CameraDrivableManager(CameraDrivableManager *this@<ecx>, unsigned int a2@<ebx>, Sim *sim, CameraForward *camera);
void __thiscall CameraDrivableManager::~CameraDrivableManager(CameraDrivableManager *this);
CameraDrivableManager *__thiscall CameraDrivableManager::`vector deleting destructor'(CameraDrivableManager *this, unsigned int a2);
void __thiscall std::vector<DrivableCameraDef>::_Reallocate(std::vector<AxleJoint> *this, unsigned int _Count);
void __thiscall std::vector<DrivableCameraDef>::_Reserve(std::vector<AxleJoint> *this, unsigned int _Count);
void __thiscall CameraDrivableManager::initChaseCamFromINI(CameraDrivableManager *this);
void __thiscall CameraDrivableManager::lookBack(CameraDrivableManager *this);
char __thiscall CameraDrivableManager::nextMode(CameraDrivableManager *this);
void __thiscall std::vector<AxleJoint>::push_back(std::vector<AxleJoint> *this, AxleJoint *_Val);
void __thiscall CameraDrivableManager::setCurrentCamera(CameraDrivableManager *this, int cameraIndex);
void __thiscall CameraDrivableManager::setDrivableCameraDefAt(CameraDrivableManager *this, int index, DrivableCameraDef def);
bool __thiscall CameraDrivableManager::shouldUseInternalSounds(CameraDrivableManager *this);
void __thiscall CameraDrivableManager::update(CameraDrivableManager *this, float deltaT);
void __thiscall CameraDrivableManager::updateBonnet(CameraDrivableManager *this, float dt);
void __thiscall CameraDrivableManager::updateBumper(CameraDrivableManager *this, float dt);
// void __userpurge CameraDrivableManager::updateChase(CameraDrivableManager *this@<ecx>, int a2@<esi>, float dt);
void __thiscall CameraDrivableManager::updateDash(CameraDrivableManager *this, float dt);
void __thiscall CameraDrivableManager::updateLook(CameraDrivableManager *this, float deltaT);
void __thiscall CameraHelicopter::CameraHelicopter(CameraHelicopter *this, Sim *a_sim, CameraForward *a_camera);
CameraHelicopter *__thiscall CameraHelicopter::`vector deleting destructor'(CameraHelicopter *this, unsigned int a2);
void __thiscall CameraHelicopter::update(CameraHelicopter *this, float deltaT);
// void __usercall SignalGenerator3D<SinSignalGenerator>::SignalGenerator3D<SinSignalGenerator>(SignalGenerator3D<SinSignalGenerator> *this@<ecx>, __m128 a2@<xmm0>);
// void __userpurge CameraOnBoard::CameraOnBoard(CameraOnBoard *this@<ecx>, char a2@<bl>, __m128 a3@<xmm0>, Game *igame, CameraForward *cam, Sim *aSim);
void __thiscall SignalGenerator3D<SinSignalGenerator>::~SignalGenerator3D<SinSignalGenerator>(SignalGenerator3D<SinSignalGenerator> *this);
void __thiscall CameraOnBoard::~CameraOnBoard(CameraOnBoard *this);
SignalGenerator3D<SinSignalGenerator> *__thiscall SignalGenerator3D<SinSignalGenerator>::`vector deleting destructor'(SignalGenerator3D<SinSignalGenerator> *this, unsigned int a2);
CameraOnBoard *__thiscall CameraOnBoard::`vector deleting destructor'(CameraOnBoard *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_574220c074d6cb5b1f0e3bb8d3111ead_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_574220c074d6cb5b1f0e3bb8d3111ead>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_574220c074d6cb5b1f0e3bb8d3111ead_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_574220c074d6cb5b1f0e3bb8d3111ead>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c71de86c4bb0f8d72ecae5d8ef806e87_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c71de86c4bb0f8d72ecae5d8ef806e87>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c71de86c4bb0f8d72ecae5d8ef806e87_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_c71de86c4bb0f8d72ecae5d8ef806e87>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_574220c074d6cb5b1f0e3bb8d3111ead_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_574220c074d6cb5b1f0e3bb8d3111ead>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c71de86c4bb0f8d72ecae5d8ef806e87_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c71de86c4bb0f8d72ecae5d8ef806e87>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
vec3f *__thiscall SignalGenerator3D<SinSignalGenerator>::getValue(SignalGenerator3D<SinSignalGenerator> *this, vec3f *result);
void __thiscall CameraOnBoard::lookBack(CameraOnBoard *this);
void __thiscall CameraOnBoard::lookLeftRight(CameraOnBoard *this, float dt);
void __thiscall SignalGenerator3D<SinSignalGenerator>::step(SignalGenerator3D<SinSignalGenerator> *this, float dt);
void __thiscall CameraOnBoard::update(CameraOnBoard *this, float deltaT);
void __thiscall CameraTrack::CameraTrack(CameraTrack *this, Sim *isim, CameraForward *icamera);
void __thiscall CameraTrack::~CameraTrack(CameraTrack *this);
CameraTrack *__thiscall CameraTrack::`vector deleting destructor'(CameraTrack *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a4ac36ffb1d76d1c41fc8543199f53d8_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_a4ac36ffb1d76d1c41fc8543199f53d8>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bd42f1a77e06a403de8b711a437b815b_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_bd42f1a77e06a403de8b711a437b815b>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a4ac36ffb1d76d1c41fc8543199f53d8_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a4ac36ffb1d76d1c41fc8543199f53d8>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bd42f1a77e06a403de8b711a437b815b_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_bd42f1a77e06a403de8b711a437b815b>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a4ac36ffb1d76d1c41fc8543199f53d8_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a4ac36ffb1d76d1c41fc8543199f53d8>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_bd42f1a77e06a403de8b711a437b815b_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_bd42f1a77e06a403de8b711a437b815b>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
int __thiscall CameraTrack::getCameraTrackCount(CameraTrack *this);
CameraManager *__thiscall CameraTrack::loadSet(CameraTrack *this, int index);
std::wstring *__thiscall CameraTrack::nextSet(CameraTrack *this, std::wstring *result);
void __thiscall CameraTrack::setAudioDistanceScale(CameraTrack *this);
void __thiscall CameraTrack::setCurrentCameraSet(CameraTrack *this, unsigned int cameraIndex);
// void __userpurge CameraTrack::update(CameraTrack *this@<ecx>, int a2@<esi>, float dt);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, CarAvatar::setP2PStartingActivations::__l6::<lambda_1083ce7b5f8a49dc0b490fdb5c9697c2> *_Func);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, CarAvatar::forcePosition::__l12::<lambda_4bd78b0f57e50f6ac501c7aa7346d468> *_Func);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, CarAvatar::lockControlsUntilTime::__l13::<lambda_d1ac94c667261f9685880a1644e28d33> *_Func);
std::wstring *__thiscall std::_Callable_obj<_lambda_9f8ec50c785701d61ef10e4025ebf7de_,0>::_ApplyX<std::wstring,>(std::_Callable_obj<<lambda_9f8ec50c785701d61ef10e4025ebf7de>,0> *this, std::wstring *result);
std::wstring *__cdecl std::_Copy_impl<std::wstring *,std::wstring *>(std::wstring *_First, std::wstring *_Last, std::wstring *_Dest);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<WingData>>>(WingData *_First, WingData *_Last);
void __thiscall std::_Func_class<void,>::_Reset<_lambda_3561ae953e098720cd88ad11dd6e6bb6_>(std::_Func_class<void> *this, CarAvatar::setDriverInfo::__l6::<lambda_3561ae953e098720cd88ad11dd6e6bb6> *_Val);
std::wstring *__thiscall std::vector<std::wstring>::_Ucopy<std::wstring *>(std::vector<std::wstring> *this, std::wstring *_First, std::wstring *_Last, std::wstring *_Ptr);
std::wstring *__cdecl std::_Uninit_copy<std::wstring *,std::wstring *,std::allocator<std::wstring>>(std::wstring *_First, std::wstring *_Last, std::wstring *_Dest);
TyreTestFrame *__cdecl std::_Uninit_move<TyreTestFrame *,TyreTestFrame *,std::allocator<TyreTestFrame>,TyreTestFrame>(TyreTestFrame *_First, TyreTestFrame *_Last, TyreTestFrame *_Dest);
GhostCar *__thiscall GameObject::getGameObject<GhostCar>(GameObject *this);
void __thiscall AIState::AIState(AIState *this);
void __thiscall AbsNotifier::AbsNotifier(AbsNotifier *this, CarAvatar *avatar);
void __thiscall BackfireParams::BackfireParams(BackfireParams *this, CarAvatar *a_car);
void __thiscall BrakeBiasNotifier::BrakeBiasNotifier(BrakeBiasNotifier *this, CarAvatar *avatar);
// void __userpurge CarAvatar::CarAvatar(CarAvatar *this@<ecx>, __m128 a2@<xmm3>, __m128 a3@<xmm4>, Sim *isim, const std::wstring *unixName, const std::wstring *config, const std::wstring *skin);
void __thiscall CarAvatar::CarAvatar(CarAvatar *this, Sim *isim, const std::wstring *unixName, const std::wstring *config, const std::wstring *skin, ICarPhysicsStateProvider *physicsStateProvider);
void __thiscall CarPhysicsInfo::CarPhysicsInfo(CarPhysicsInfo *this);
void __thiscall Curve::Curve(Curve *this, const Curve *__that);
void __thiscall EngineBrakeNotifier::EngineBrakeNotifier(EngineBrakeNotifier *this, CarAvatar *avatar);
void __thiscall MGUHModeNotifier::MGUHModeNotifier(MGUHModeNotifier *this, CarAvatar *avatar);
void __thiscall MGUKDeliveryNotifier::MGUKDeliveryNotifier(MGUKDeliveryNotifier *this, CarAvatar *avatar);
void __thiscall MGUKRecoveryNotifier::MGUKRecoveryNotifier(MGUKRecoveryNotifier *this, CarAvatar *avatar);
void __thiscall TractionControlNotifier::TractionControlNotifier(TractionControlNotifier *this, CarAvatar *avatar);
void __thiscall TurboBoostNotifier::TurboBoostNotifier(TurboBoostNotifier *this, CarAvatar *avatar);
void __thiscall WingData::WingData(WingData *this, const WingData *__that);
void __thiscall lambda_3561ae953e098720cd88ad11dd6e6bb6_::__lambda_3561ae953e098720cd88ad11dd6e6bb6_(CarAvatar::setDriverInfo::__l6::<lambda_3561ae953e098720cd88ad11dd6e6bb6> *this);
void __thiscall CubicSpline<float,float>::~CubicSpline<float,float>(CubicSpline<float,float> *this);
void __thiscall EventTriggerOnChange<int>::~EventTriggerOnChange<int>(EventTriggerOnChange<int> *this);
void __thiscall Concurrency::concurrent_queue<std::pair<int,int>,std::allocator<std::pair<int,int>>>::~concurrent_queue<std::pair<int,int>,std::allocator<std::pair<int,int>>>(Concurrency::concurrent_queue<std::pair<int,int>,std::allocator<std::pair<int,int> > > *this);
void __thiscall Concurrency::concurrent_queue<OnLapCompletedEvent,std::allocator<OnLapCompletedEvent>>::~concurrent_queue<OnLapCompletedEvent,std::allocator<OnLapCompletedEvent>>(Concurrency::concurrent_queue<OnLapCompletedEvent,std::allocator<OnLapCompletedEvent> > *this);
void __thiscall Concurrency::concurrent_queue<OnSectorSplitEvent,std::allocator<OnSectorSplitEvent>>::~concurrent_queue<OnSectorSplitEvent,std::allocator<OnSectorSplitEvent>>(Concurrency::concurrent_queue<OnSectorSplitEvent,std::allocator<OnSectorSplitEvent> > *this);
void __thiscall CarAvatar::~CarAvatar(CarAvatar *this);
void __thiscall CarPhysicsInfo::~CarPhysicsInfo(CarPhysicsInfo *this);
void __thiscall WingData::~WingData(WingData *this);
void __thiscall Concurrency::concurrent_queue<OnLapCompletedEvent,std::allocator<OnLapCompletedEvent>>::_Destroyer::~_Destroyer(Concurrency::concurrent_queue<OnLapCompletedEvent,std::allocator<OnLapCompletedEvent> >::_Destroyer *this);
std::vector<std::wstring> *__thiscall std::vector<std::wstring>::operator=(std::vector<std::wstring> *this, const std::vector<std::wstring> *_Right);
void __thiscall lambda_1083ce7b5f8a49dc0b490fdb5c9697c2_::operator()(CarAvatar::setP2PStartingActivations::__l6::<lambda_1083ce7b5f8a49dc0b490fdb5c9697c2> *this);
void __thiscall lambda_565518731701ea86f9e2b7418fd05c55_::operator()(CarAvatar::{ctor}::__l6::<lambda_565518731701ea86f9e2b7418fd05c55> *this, SVar *v, float value);
void __thiscall lambda_79557b5bfee253d8012ab46f0eb0375d_::operator()(CarAvatar::initPhysics::__l37::<lambda_21d2bc46b57398bfae7fef3b7ac4d66f>::()::__l40::<lambda_79557b5bfee253d8012ab46f0eb0375d> *this);
char __thiscall lambda_7d5b8bdd81bacc0d5b732cf601aab567_::operator()(CarAvatar::initPhysics::__l51::<lambda_7d5b8bdd81bacc0d5b732cf601aab567> *this, std::wstring command);
void __thiscall lambda_d1ac94c667261f9685880a1644e28d33_::operator()(CarAvatar::lockControlsUntilTime::__l13::<lambda_d1ac94c667261f9685880a1644e28d33> *this);
CubicSpline<float,float> *__thiscall CubicSpline<float,float>::`vector deleting destructor'(CubicSpline<float,float> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_3561ae953e098720cd88ad11dd6e6bb6>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3561ae953e098720cd88ad11dd6e6bb6_,0>,std::allocator<std::_Func_class<void,>>,void,>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_3561ae953e098720cd88ad11dd6e6bb6>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_756b393c455025f826bc8e9c32383614>,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &> >,void,std::pair<int,int> const &> *__thiscall std::_Func_base<void,std::pair<int,int> const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_756b393c455025f826bc8e9c32383614>,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &> >,void,std::pair<int,int> const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_9b63370cdf94d6893ef7e0df6d7fab33>,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &> >,void,OnSectorSplitEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ddf010f992ae9fee9851716917f561ff_,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &>>,void,OnSectorSplitEvent const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_9b63370cdf94d6893ef7e0df6d7fab33>,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &> >,void,OnSectorSplitEvent const &> *this, unsigned int a2);
Concurrency::concurrent_queue<std::pair<int,int>,std::allocator<std::pair<int,int> > > *__thiscall Concurrency::concurrent_queue<std::pair<int,int>,std::allocator<std::pair<int,int>>>::`scalar deleting destructor'(Concurrency::concurrent_queue<std::pair<int,int>,std::allocator<std::pair<int,int> > > *this, unsigned int a2);
Concurrency::concurrent_queue<OnLapCompletedEvent,std::allocator<OnLapCompletedEvent> > *__thiscall Concurrency::concurrent_queue<OnLapCompletedEvent,std::allocator<OnLapCompletedEvent>>::`scalar deleting destructor'(Concurrency::concurrent_queue<OnLapCompletedEvent,std::allocator<OnLapCompletedEvent> > *this, unsigned int a2);
Concurrency::concurrent_queue<OnSectorSplitEvent,std::allocator<OnSectorSplitEvent> > *__thiscall Concurrency::concurrent_queue<OnSectorSplitEvent,std::allocator<OnSectorSplitEvent>>::`vector deleting destructor'(Concurrency::concurrent_queue<OnSectorSplitEvent,std::allocator<OnSectorSplitEvent> > *this, unsigned int a2);
CarAvatar *__thiscall CarAvatar::`scalar deleting destructor'(CarAvatar *this, unsigned int a2);
Curve *__thiscall Curve::`scalar deleting destructor'(Curve *this, unsigned int a2);
GameObject *__thiscall EngineBrakeNotifier::`scalar deleting destructor'(GameObject *this, unsigned int a2);
void __thiscall Concurrency::concurrent_queue<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_Assign_and_destroy_item(Concurrency::concurrent_queue<std::pair<int,int>,std::allocator<std::pair<int,int> > > *this, void *_Dst, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Src, unsigned int _Index);
void __thiscall Concurrency::concurrent_queue<OnLapCompletedEvent,std::allocator<OnLapCompletedEvent>>::_Assign_and_destroy_item(Concurrency::concurrent_queue<OnLapCompletedEvent,std::allocator<OnLapCompletedEvent> > *this, void *_Dst, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Src, unsigned int _Index);
void __thiscall Concurrency::concurrent_queue<OnSectorSplitEvent,std::allocator<OnSectorSplitEvent>>::_Assign_and_destroy_item(Concurrency::concurrent_queue<OnSectorSplitEvent,std::allocator<OnSectorSplitEvent> > *this, void *_Dst, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Src, unsigned int _Index);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_13d47212e0a565f7432eed5d6e032636_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_13d47212e0a565f7432eed5d6e032636>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_21d2bc46b57398bfae7fef3b7ac4d66f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_21d2bc46b57398bfae7fef3b7ac4d66f>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_33c5f6518538af62fe8724a8493e6b8e_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_33c5f6518538af62fe8724a8493e6b8e>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_62b6e2b8032ba7c6f0fdf3e52f500a08_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_62b6e2b8032ba7c6f0fdf3e52f500a08>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_669d89450dd93c78a74bec5352a6580c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_669d89450dd93c78a74bec5352a6580c>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6e1b510aee438ddd7ada08f7ff0b30e0_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_6e1b510aee438ddd7ada08f7ff0b30e0>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_79557b5bfee253d8012ab46f0eb0375d_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_79557b5bfee253d8012ab46f0eb0375d>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7eaf1073bac1e48eea38acd85c1f65ee_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_7eaf1073bac1e48eea38acd85c1f65ee>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8da18ebd38ce3b17e93a086d8b386755_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_8da18ebd38ce3b17e93a086d8b386755>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8e02e02662553d85cf5d2285711298ae_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_8e02e02662553d85cf5d2285711298ae>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_974d9a86c9871fad6d80b6bca17690e4_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_974d9a86c9871fad6d80b6bca17690e4>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9d2a8902c54476f1d9eaae39e5d5e3dc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_9d2a8902c54476f1d9eaae39e5d5e3dc>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9f8ec50c785701d61ef10e4025ebf7de_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_9f8ec50c785701d61ef10e4025ebf7de>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a28d178ead218845b69cab3e78423b9b_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_a28d178ead218845b69cab3e78423b9b>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b3c262880562070e3f6ef35d33030cab_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_b3c262880562070e3f6ef35d33030cab>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_daa80ed1d4a2de0d5f8abda97d44e615_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_daa80ed1d4a2de0d5f8abda97d44e615>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_db015e9c94bad3e0f44628fbe783c09e_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_db015e9c94bad3e0f44628fbe783c09e>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ddf010f992ae9fee9851716917f561ff_,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &>>,void,OnSectorSplitEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_ddf010f992ae9fee9851716917f561ff>,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &> >,void,OnSectorSplitEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fb2aaab739b92ef2e2add669e2952c3a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_fb2aaab739b92ef2e2add669e2952c3a>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall Concurrency::concurrent_queue<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_Copy_item(Concurrency::concurrent_queue<std::pair<int,int>,std::allocator<std::pair<int,int> > > *this, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Dst, unsigned int _Index, void *_Src);
void __thiscall Concurrency::concurrent_queue<OnLapCompletedEvent,std::allocator<OnLapCompletedEvent>>::_Move_item(Concurrency::concurrent_queue<OnLapCompletedEvent,std::allocator<OnLapCompletedEvent> > *this, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Dst, unsigned int _Index, void *_Src);
void __thiscall Concurrency::concurrent_queue<std::function<void __cdecl (void)>,std::allocator<std::function<void __cdecl (void)>>>::_Deallocate_page(Concurrency::concurrent_queue<ACPhysicsEvent,std::allocator<ACPhysicsEvent> > *this, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Pg);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_00b212ba64b49c859d631241c9189281_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_00b212ba64b49c859d631241c9189281>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_056f802c574fdbb7f83b7b9158a49803_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_056f802c574fdbb7f83b7b9158a49803>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1083ce7b5f8a49dc0b490fdb5c9697c2_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1083ce7b5f8a49dc0b490fdb5c9697c2>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_13d47212e0a565f7432eed5d6e032636_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_13d47212e0a565f7432eed5d6e032636>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_172641183db25f7a95167a564fb472cc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_172641183db25f7a95167a564fb472cc>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_21d2bc46b57398bfae7fef3b7ac4d66f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_21d2bc46b57398bfae7fef3b7ac4d66f>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2b0204bce18fed09f12b202c88c6dd7c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2b0204bce18fed09f12b202c88c6dd7c>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_33c5f6518538af62fe8724a8493e6b8e_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_33c5f6518538af62fe8724a8493e6b8e>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3561ae953e098720cd88ad11dd6e6bb6_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3561ae953e098720cd88ad11dd6e6bb6>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3f31443afbdaf5b80a4187021ab89a3b_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3f31443afbdaf5b80a4187021ab89a3b>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4901d67fd949aea2695f20fd3ff4f918_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4901d67fd949aea2695f20fd3ff4f918>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4bd78b0f57e50f6ac501c7aa7346d468_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4bd78b0f57e50f6ac501c7aa7346d468>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_565518731701ea86f9e2b7418fd05c55_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_565518731701ea86f9e2b7418fd05c55>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_62b6e2b8032ba7c6f0fdf3e52f500a08_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_62b6e2b8032ba7c6f0fdf3e52f500a08>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_669d89450dd93c78a74bec5352a6580c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_669d89450dd93c78a74bec5352a6580c>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6828820115e812f9ce74b3229486162d_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6828820115e812f9ce74b3229486162d>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6e1b510aee438ddd7ada08f7ff0b30e0_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6e1b510aee438ddd7ada08f7ff0b30e0>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_79557b5bfee253d8012ab46f0eb0375d_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_79557b5bfee253d8012ab46f0eb0375d>,0>,std::allocator<std::_Func_class<void> >,void> *this);
char __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7d5b8bdd81bacc0d5b732cf601aab567_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_7d5b8bdd81bacc0d5b732cf601aab567>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this, std::wstring *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7eaf1073bac1e48eea38acd85c1f65ee_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_7eaf1073bac1e48eea38acd85c1f65ee>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_87512cd7822b1b0942f6a06efe0f503e_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_87512cd7822b1b0942f6a06efe0f503e>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8d39a5515bd95886034bf2993aab479a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8d39a5515bd95886034bf2993aab479a>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8da18ebd38ce3b17e93a086d8b386755_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8da18ebd38ce3b17e93a086d8b386755>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8e02e02662553d85cf5d2285711298ae_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8e02e02662553d85cf5d2285711298ae>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9178bbef4882a0348f3bb36b5f6a03f4_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9178bbef4882a0348f3bb36b5f6a03f4>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9745b16dcbba23b6956612d27d7f384e_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9745b16dcbba23b6956612d27d7f384e>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_974d9a86c9871fad6d80b6bca17690e4_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_974d9a86c9871fad6d80b6bca17690e4>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9d2a8902c54476f1d9eaae39e5d5e3dc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9d2a8902c54476f1d9eaae39e5d5e3dc>,0>,std::allocator<std::_Func_class<void> >,void> *this);
std::wstring *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9f8ec50c785701d61ef10e4025ebf7de_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9f8ec50c785701d61ef10e4025ebf7de>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this, std::wstring *result);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a28d178ead218845b69cab3e78423b9b_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a28d178ead218845b69cab3e78423b9b>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b2a641b87b72d2a0d3338d9f168de1ea_,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &>>,void,std::pair<int,int> const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b2a641b87b72d2a0d3338d9f168de1ea>,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &> >,void,std::pair<int,int> const &> *this, const std::pair<int,int> *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b3c262880562070e3f6ef35d33030cab_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b3c262880562070e3f6ef35d33030cab>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b6b080bf082dbf8c438fa78df5fb4ceb_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b6b080bf082dbf8c438fa78df5fb4ceb>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b6dea921543dec5aeabe68da18dd931c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b6dea921543dec5aeabe68da18dd931c>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b76d4e82898b94b9125c3d59067df2bc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b76d4e82898b94b9125c3d59067df2bc>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bd429c1645364981527be4f3a5f25577_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_bd429c1645364981527be4f3a5f25577>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_be99df9070aa0c099bca5887c9856fd4_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_be99df9070aa0c099bca5887c9856fd4>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this, const int *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c661273354399506f15d61a79db73e0f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c661273354399506f15d61a79db73e0f>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d1ac94c667261f9685880a1644e28d33_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d1ac94c667261f9685880a1644e28d33>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d99b5d3b5c4cdd889728c1c781509766_,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &>>,void,OnSectorSplitEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ddf010f992ae9fee9851716917f561ff>,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &> >,void,OnSectorSplitEvent const &> *this, const OnSectorSplitEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_daa80ed1d4a2de0d5f8abda97d44e615_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_daa80ed1d4a2de0d5f8abda97d44e615>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_db015e9c94bad3e0f44628fbe783c09e_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_db015e9c94bad3e0f44628fbe783c09e>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e86ea91c3a840f1879fb69a62ded7d96_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e86ea91c3a840f1879fb69a62ded7d96>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ed9b0c7d4a2ab4496f48907287b21811_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ed9b0c7d4a2ab4496f48907287b21811>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f728251f2d5ca677207215f6bc43a2e5_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f728251f2d5ca677207215f6bc43a2e5>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fb2aaab739b92ef2e2add669e2952c3a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fb2aaab739b92ef2e2add669e2952c3a>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_00b212ba64b49c859d631241c9189281_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_00b212ba64b49c859d631241c9189281>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_056f802c574fdbb7f83b7b9158a49803_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_056f802c574fdbb7f83b7b9158a49803>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1083ce7b5f8a49dc0b490fdb5c9697c2_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1083ce7b5f8a49dc0b490fdb5c9697c2>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_172641183db25f7a95167a564fb472cc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_172641183db25f7a95167a564fb472cc>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2b0204bce18fed09f12b202c88c6dd7c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_2b0204bce18fed09f12b202c88c6dd7c>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3561ae953e098720cd88ad11dd6e6bb6_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_3561ae953e098720cd88ad11dd6e6bb6>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3f31443afbdaf5b80a4187021ab89a3b_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_3f31443afbdaf5b80a4187021ab89a3b>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4901d67fd949aea2695f20fd3ff4f918_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_4901d67fd949aea2695f20fd3ff4f918>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4bd78b0f57e50f6ac501c7aa7346d468_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_4bd78b0f57e50f6ac501c7aa7346d468>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_565518731701ea86f9e2b7418fd05c55_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_565518731701ea86f9e2b7418fd05c55>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6828820115e812f9ce74b3229486162d_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_6828820115e812f9ce74b3229486162d>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7d5b8bdd81bacc0d5b732cf601aab567_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_7d5b8bdd81bacc0d5b732cf601aab567>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_87512cd7822b1b0942f6a06efe0f503e_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_87512cd7822b1b0942f6a06efe0f503e>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8d39a5515bd95886034bf2993aab479a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_8d39a5515bd95886034bf2993aab479a>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9178bbef4882a0348f3bb36b5f6a03f4_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_9178bbef4882a0348f3bb36b5f6a03f4>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9745b16dcbba23b6956612d27d7f384e_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_9745b16dcbba23b6956612d27d7f384e>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ab41e3cd4750575bedb0a39208fbd35a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_ab41e3cd4750575bedb0a39208fbd35a>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b2a641b87b72d2a0d3338d9f168de1ea_,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &>>,void,std::pair<int,int> const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_b2a641b87b72d2a0d3338d9f168de1ea>,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &> >,void,std::pair<int,int> const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b6b080bf082dbf8c438fa78df5fb4ceb_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_b6b080bf082dbf8c438fa78df5fb4ceb>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b6dea921543dec5aeabe68da18dd931c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_b6dea921543dec5aeabe68da18dd931c>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b76d4e82898b94b9125c3d59067df2bc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_b76d4e82898b94b9125c3d59067df2bc>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bd429c1645364981527be4f3a5f25577_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_bd429c1645364981527be4f3a5f25577>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_be99df9070aa0c099bca5887c9856fd4_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_be99df9070aa0c099bca5887c9856fd4>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c661273354399506f15d61a79db73e0f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_c661273354399506f15d61a79db73e0f>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d1ac94c667261f9685880a1644e28d33_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d1ac94c667261f9685880a1644e28d33>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d99b5d3b5c4cdd889728c1c781509766_,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &>>,void,OnSectorSplitEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_d99b5d3b5c4cdd889728c1c781509766>,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &> >,void,OnSectorSplitEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e86ea91c3a840f1879fb69a62ded7d96_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_e86ea91c3a840f1879fb69a62ded7d96>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ed9b0c7d4a2ab4496f48907287b21811_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_ed9b0c7d4a2ab4496f48907287b21811>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f728251f2d5ca677207215f6bc43a2e5_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_f728251f2d5ca677207215f6bc43a2e5>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall Concurrency::concurrent_queue<OnSectorSplitEvent,std::allocator<OnSectorSplitEvent>>::_Move_item(Concurrency::concurrent_queue<OnSectorSplitEvent,std::allocator<OnSectorSplitEvent> > *this, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Dst, unsigned int _Index, void *_Src);
void __thiscall std::vector<WingData>::_Reallocate(std::vector<WingData> *this, unsigned int _Count);
void __thiscall std::vector<WingData>::_Reserve(std::vector<WingData> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_00b212ba64b49c859d631241c9189281_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_00b212ba64b49c859d631241c9189281>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_056f802c574fdbb7f83b7b9158a49803_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_056f802c574fdbb7f83b7b9158a49803>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1083ce7b5f8a49dc0b490fdb5c9697c2_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1083ce7b5f8a49dc0b490fdb5c9697c2>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_13d47212e0a565f7432eed5d6e032636_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_13d47212e0a565f7432eed5d6e032636>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_172641183db25f7a95167a564fb472cc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_172641183db25f7a95167a564fb472cc>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_21d2bc46b57398bfae7fef3b7ac4d66f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_21d2bc46b57398bfae7fef3b7ac4d66f>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2b0204bce18fed09f12b202c88c6dd7c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2b0204bce18fed09f12b202c88c6dd7c>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_33c5f6518538af62fe8724a8493e6b8e_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_33c5f6518538af62fe8724a8493e6b8e>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3561ae953e098720cd88ad11dd6e6bb6_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3561ae953e098720cd88ad11dd6e6bb6>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3f31443afbdaf5b80a4187021ab89a3b_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3f31443afbdaf5b80a4187021ab89a3b>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4901d67fd949aea2695f20fd3ff4f918_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4901d67fd949aea2695f20fd3ff4f918>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4bd78b0f57e50f6ac501c7aa7346d468_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4bd78b0f57e50f6ac501c7aa7346d468>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_565518731701ea86f9e2b7418fd05c55_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_565518731701ea86f9e2b7418fd05c55>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_62b6e2b8032ba7c6f0fdf3e52f500a08_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_62b6e2b8032ba7c6f0fdf3e52f500a08>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_669d89450dd93c78a74bec5352a6580c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_669d89450dd93c78a74bec5352a6580c>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6828820115e812f9ce74b3229486162d_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6828820115e812f9ce74b3229486162d>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6e1b510aee438ddd7ada08f7ff0b30e0_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6e1b510aee438ddd7ada08f7ff0b30e0>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_79557b5bfee253d8012ab46f0eb0375d_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_79557b5bfee253d8012ab46f0eb0375d>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7d5b8bdd81bacc0d5b732cf601aab567_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_7d5b8bdd81bacc0d5b732cf601aab567>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7eaf1073bac1e48eea38acd85c1f65ee_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_7eaf1073bac1e48eea38acd85c1f65ee>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_87512cd7822b1b0942f6a06efe0f503e_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_87512cd7822b1b0942f6a06efe0f503e>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8d39a5515bd95886034bf2993aab479a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8d39a5515bd95886034bf2993aab479a>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8da18ebd38ce3b17e93a086d8b386755_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8da18ebd38ce3b17e93a086d8b386755>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8e02e02662553d85cf5d2285711298ae_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8e02e02662553d85cf5d2285711298ae>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9178bbef4882a0348f3bb36b5f6a03f4_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9178bbef4882a0348f3bb36b5f6a03f4>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9745b16dcbba23b6956612d27d7f384e_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9745b16dcbba23b6956612d27d7f384e>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_974d9a86c9871fad6d80b6bca17690e4_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_974d9a86c9871fad6d80b6bca17690e4>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9d2a8902c54476f1d9eaae39e5d5e3dc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9d2a8902c54476f1d9eaae39e5d5e3dc>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9f8ec50c785701d61ef10e4025ebf7de_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9f8ec50c785701d61ef10e4025ebf7de>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a28d178ead218845b69cab3e78423b9b_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a28d178ead218845b69cab3e78423b9b>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ab41e3cd4750575bedb0a39208fbd35a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ab41e3cd4750575bedb0a39208fbd35a>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b2a641b87b72d2a0d3338d9f168de1ea_,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &>>,void,std::pair<int,int> const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b2a641b87b72d2a0d3338d9f168de1ea>,0>,std::allocator<std::_Func_class<void,std::pair<int,int> const &> >,void,std::pair<int,int> const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b3c262880562070e3f6ef35d33030cab_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b3c262880562070e3f6ef35d33030cab>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b6b080bf082dbf8c438fa78df5fb4ceb_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b6b080bf082dbf8c438fa78df5fb4ceb>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b6dea921543dec5aeabe68da18dd931c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b6dea921543dec5aeabe68da18dd931c>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b76d4e82898b94b9125c3d59067df2bc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b76d4e82898b94b9125c3d59067df2bc>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_bd429c1645364981527be4f3a5f25577_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_bd429c1645364981527be4f3a5f25577>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_be99df9070aa0c099bca5887c9856fd4_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_be99df9070aa0c099bca5887c9856fd4>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c661273354399506f15d61a79db73e0f_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c661273354399506f15d61a79db73e0f>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d1ac94c667261f9685880a1644e28d33_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d1ac94c667261f9685880a1644e28d33>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d99b5d3b5c4cdd889728c1c781509766_,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &>>,void,OnSectorSplitEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d99b5d3b5c4cdd889728c1c781509766>,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &> >,void,OnSectorSplitEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_daa80ed1d4a2de0d5f8abda97d44e615_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_daa80ed1d4a2de0d5f8abda97d44e615>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_db015e9c94bad3e0f44628fbe783c09e_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_db015e9c94bad3e0f44628fbe783c09e>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ddf010f992ae9fee9851716917f561ff_,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &>>,void,OnSectorSplitEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ddf010f992ae9fee9851716917f561ff>,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &> >,void,OnSectorSplitEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e86ea91c3a840f1879fb69a62ded7d96_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e86ea91c3a840f1879fb69a62ded7d96>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ed9b0c7d4a2ab4496f48907287b21811_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ed9b0c7d4a2ab4496f48907287b21811>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f728251f2d5ca677207215f6bc43a2e5_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f728251f2d5ca677207215f6bc43a2e5>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fb2aaab739b92ef2e2add669e2952c3a_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fb2aaab739b92ef2e2add669e2952c3a>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::vector<WingData>::_Tidy(std::vector<WingData> *this);
void __thiscall AbsNotifier::action(AbsNotifier *this, bool condition, int value, std::wstring message);
void __thiscall EngineBrakeNotifier::action(EngineBrakeNotifier *this, bool condition, int value, std::wstring message);
void __thiscall MGUKDeliveryNotifier::action(MGUKDeliveryNotifier *this, bool condition, int value, std::wstring message);
void __thiscall MGUKRecoveryNotifier::action(MGUKRecoveryNotifier *this, bool condition, int value, std::wstring message);
void __thiscall TractionControlNotifier::action(TractionControlNotifier *this, bool condition, int value, std::wstring message);
void __thiscall CarAvatar::armFirstLap(CarAvatar *this);
void __cdecl assignColliderMaterials(std::shared_ptr<Material> *mat, Node *node);
void __thiscall CarAvatar::checkACD(CarAvatar *this);
char __thiscall BackfireParams::checkBackfire(BackfireParams *this, float dt);
void __thiscall CarAvatar::cycleAbsMode(CarAvatar *this, int value);
bool __thiscall CarAvatar::cycleERSHeatCharging(CarAvatar *this);
std::pair<int,std::wstring > *__thiscall CarAvatar::cycleERSPower(CarAvatar *this, std::pair<int,std::wstring > *result, int value);
int __thiscall CarAvatar::cycleERSRecovery(CarAvatar *this, int value);
int __thiscall CarAvatar::cycleEngineBrake(CarAvatar *this, int value);
void __thiscall CarAvatar::cycleTcMode(CarAvatar *this, int value);
void __thiscall CarAvatar::forcePosition(CarAvatar *this, const mat44f *matrix);
std::pair<unsigned int,unsigned int> *__thiscall CarAvatar::getABSMode(CarAvatar *this, std::pair<unsigned int,unsigned int> *result);
int __thiscall CarAvatar::getAILapsToComplete(CarAvatar *this);
DriverModel *__thiscall CarAvatar::getActiveDriverModel(CarAvatar *this);
bool __thiscall CarAvatar::getAutoBlip(CarAvatar *this);
bool __thiscall CarAvatar::getAutoShifter(CarAvatar *this);
double __thiscall CarAvatar::getBallastKG(CarAvatar *this);
CarColliderManager *__thiscall CarAvatar::getColliderManager(CarAvatar *this);
ICarControlsProvider *__thiscall CarAvatar::getControlsProvider(CarAvatar *this);
int __thiscall CarAvatar::getCurrentCompoundIdealPressure(CarAvatar *this, unsigned __int16 tyreIndex);
std::wstring *__thiscall CarAvatar::getCurrentCompoundShortName(CarAvatar *this, std::wstring *result);
int __thiscall CarAvatar::getCurrentCompoundStaticPressure(CarAvatar *this, unsigned __int16 tyreIndex);
void __thiscall CarAvatar::getDistancesOnSpline(CarAvatar *this, CarAvatar *car, float *frontDistance, float *backDistance);
std::pair<int,std::wstring > *__thiscall CarAvatar::getERSPower(CarAvatar *this, std::pair<int,std::wstring > *result);
double __thiscall CarAvatar::getEdlOutLevel(CarAvatar *this);
double __thiscall CarAvatar::getFFMult(CarAvatar *this);
double __thiscall CarAvatar::getGraphicSteerDeg(CarAvatar *this);
vec3f *__thiscall CarAvatar::getGraphicsOffset(CarAvatar *this, vec3f *result);
int __thiscall CarAvatar::getGuid(CarAvatar *this);
double __thiscall CarAvatar::getKmPerLiter(CarAvatar *this);
double __thiscall CarAvatar::getPackerRange(CarAvatar *this, int index);
PitStopTime *__thiscall CarAvatar::getPitstopTime(CarAvatar *this, PitStopTime *result, float fuel_requested, bool changeTyres, bool repairBody, bool repairEngine, bool repairSus, bool useRandomizer);
double __thiscall CarAvatar::getRestrictor(CarAvatar *this);
vec3f *__thiscall CarAvatar::getRoadDirection(CarAvatar *this, vec3f *result);
std::wstring *__thiscall CarAvatar::getScreenName(CarAvatar *this, std::wstring *result);
SetupManager *__thiscall CarAvatar::getSetupManager(CarAvatar *this);
unsigned int __thiscall CarAvatar::getSpawnPositionIndex(CarAvatar *this, std::wstring setName);
double __thiscall CarAvatar::getStabilityControl(CarAvatar *this);
std::vector<DebugLine> *__thiscall CarAvatar::getSuspensionDebugLines(CarAvatar *this, std::vector<DebugLine> *result, int index);
std::pair<unsigned int,unsigned int> *__thiscall CarAvatar::getTCMode(CarAvatar *this, std::pair<unsigned int,unsigned int> *result);
double __thiscall CarAvatar::getTimeDifferenceOnSpline(CarAvatar *this, CarAvatar *car);
TimeTransponder *__thiscall CarAvatar::getTimeTransponder(CarAvatar *this);
std::wstring *__thiscall CarAvatar::getTyreCompound(CarAvatar *this, std::wstring *result, unsigned int index, bool fullname);
int __thiscall CarAvatar::getTyreCompoundIndex(CarAvatar *this, unsigned int tyre_index);
double __thiscall CarAvatar::getUserFFGain(CarAvatar *this);
double __thiscall CarAvatar::getWingAngle(CarAvatar *this, int wingIndex);
void __thiscall CarAvatar::goToSpawnPosition(CarAvatar *this, const std::wstring *setName);
long double __thiscall CarAvatar::hasPenalty(CarAvatar *this);
void __thiscall CarAvatar::init3D(CarAvatar *this, std::wstring skin);
// void __usercall CarAvatar::initCameraCar(CarAvatar *this@<ecx>, __m128 a2@<xmm0>);
void __thiscall CarAvatar::initCommon(CarAvatar *this);
void __thiscall CarAvatar::initCommonPostPhysics(CarAvatar *this);
// void __usercall CarAvatar::initControls(CarAvatar *this@<ecx>, char a2@<bl>);
// void __usercall CarAvatar::initDriver(CarAvatar *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall CarAvatar::initGhostCar(CarAvatar *this, bool isRecording, BOOL isPlaying);
void __thiscall CarAvatar::initMirrorMaterials(CarAvatar *this);
// void __usercall CarAvatar::initPhysics(CarAvatar *this@<ecx>, char a2@<bl>, __m128 a3@<xmm3>, __m128 a4@<xmm4>);
bool __thiscall CarAvatar::isAbsAvailable(CarAvatar *this);
bool __thiscall CarAvatar::isAbsEnabled(CarAvatar *this);
bool __thiscall CarAvatar::isAbsInAction(CarAvatar *this);
bool __thiscall CarAvatar::isConnected(CarAvatar *this);
bool __thiscall CarAvatar::isCurrentLapValid(CarAvatar *this);
bool __thiscall CarAvatar::isEdlEnabled(CarAvatar *this);
BOOL __thiscall CarAvatar::isInPit(CarAvatar *this);
bool __thiscall CarAvatar::isInPitlane(CarAvatar *this);
BOOL __thiscall CarAvatar::isInSpawnPosition(CarAvatar *this, const std::wstring *setName);
bool __thiscall CarAvatar::isMinSpeedPenaltyClearDisabled(CarAvatar *this);
bool __thiscall Kers::isPresent(Kers *this);
bool __thiscall CarAvatar::isRequestingPitStop(CarAvatar *this);
bool __thiscall CarAvatar::isTcAvailable(CarAvatar *this);
bool __thiscall CarAvatar::isTcEnabled(CarAvatar *this);
bool __thiscall CarAvatar::isTcInAction(CarAvatar *this);
bool __thiscall CarAvatar::isVisible(CarAvatar *this);
bool __thiscall Sim::isVrRoom(Sim *this);
void __thiscall CarAvatar::lockControlsUntilTime(CarAvatar *this, long double time, long double start, bool forceToPits);
// void __userpurge CarAvatar::makeBodyMatrix(CarAvatar *this@<ecx>, int a2@<edi>, int a3@<esi>, const mat44f *bm, mat44f *res);
void __cdecl makeTyresDoubleFacedShadows(Node *node);
double __thiscall CarAvatar::modifyUserFFGain(CarAvatar *this, float offset);
void __thiscall CarAvatar::onNewSession(CarAvatar *this);
// void __usercall CarAvatar::onPostLoad(CarAvatar *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall CarAvatar::onStartReplay(CarAvatar *this, const bool *mode);
void __thiscall CarAvatar::onStopReplay(CarAvatar *this, const bool *mode);
INIReader *__thiscall CarAvatar::openINI(CarAvatar *this, INIReader *result, const std::wstring *filename);
void __thiscall std::vector<WingData>::push_back(std::vector<WingData> *this, const WingData *_Val);
void __thiscall CarAvatar::resetFlames(CarAvatar *this);
void __thiscall CarAvatar::resetMultVolume(CarAvatar *this);
void __thiscall CarAvatar::resetPenalty(CarAvatar *this, bool isTotalReset);
void __thiscall CarAvatar::resetTimeTransponder(CarAvatar *this);
void __thiscall CarAvatar::setAbsEnabled(CarAvatar *this, bool mode, bool force);
void __thiscall CarAvatar::setAutoBlip(CarAvatar *this, bool mode);
void __thiscall CarAvatar::setAutoClutchEnabled(CarAvatar *this, bool mode);
void __thiscall CarAvatar::setAutoShifter(CarAvatar *this, bool mode);
void __thiscall CarAvatar::setBallastKG(CarAvatar *this, float ballast);
void __thiscall CarAvatar::setBlackFlag(CarAvatar *this, PenaltyDescription descr);
void __thiscall CarAvatar::setControlsLock(CarAvatar *this, bool value);
void __thiscall CarAvatar::setControlsProvider(CarAvatar *this, ICarControlsProvider *controls);
void __thiscall CarAvatar::setDamageLevel(CarAvatar *this, float lvl);
void __thiscall CarAvatar::setDriverInfo(CarAvatar *this, const DriverInfo *info);
void __thiscall CarAvatar::setFFMult(CarAvatar *this, float mult);
void __thiscall CarAvatar::setGentleStop(CarAvatar *this, bool mode);
void __thiscall CarAvatar::setGraphicsOffset(CarAvatar *this, vec3f np);
void __thiscall CarAvatar::setGraphicsPitchRotation(CarAvatar *this, float v);
void __thiscall CarAvatar::setHeadlights(CarAvatar *this, bool value);
void __thiscall CarAvatar::setMultVolume(CarAvatar *this, int value, bool active);
void __thiscall CarAvatar::setNewPhysicsState(CarAvatar *this, CarPhysicsState *ps, float dt);
void __thiscall CarAvatar::setP2PActivations(CarAvatar *this, int activations);
void __thiscall CarAvatar::setP2PStartingActivations(CarAvatar *this, int pos);
void __thiscall CarAvatar::setRestrictor(CarAvatar *this, float v);
void __thiscall CarAvatar::setSlipStreamEffects(CarAvatar *this, float receive, float generationSpeedFactor);
void __thiscall CarAvatar::setSpawnPositionIndex(CarAvatar *this, const std::wstring *setName, int index);
void __thiscall CarAvatar::setStabilityControl(CarAvatar *this, float gain);
void __thiscall CarAvatar::setTcEnabled(CarAvatar *this, bool mode, bool force);
void __thiscall CarAvatar::setTurboBoost(CarAvatar *this, float value);
void __thiscall CarAvatar::setTyreCompound(CarAvatar *this, unsigned int index, const std::wstring *name);
void __thiscall CarAvatar::setUserFFGain(CarAvatar *this, float gain);
void __thiscall CarAvatar::setVisible(CarAvatar *this, bool vis);
int __thiscall std::vector<ERSPowerController>::size(std::vector<ERSPowerController> *this);
int __thiscall std::vector<TyreCompoundDef>::size(std::vector<TyreCompoundDef> *this);
int __thiscall std::vector<Turbo>::size(std::vector<Turbo> *this);
void __thiscall EventTriggerOnChange<int>::update(EventTriggerOnChange<int> *this, float dt);
void __thiscall AbsNotifier::update(AbsNotifier *this, float dt);
void __thiscall BrakeBiasNotifier::update(BrakeBiasNotifier *this, float dt);
// void __userpurge CarAvatar::update(CarAvatar *this@<ecx>, int a2@<edi>, int a3@<esi>, float deltaT);
void __thiscall EngineBrakeNotifier::update(EngineBrakeNotifier *this, float dt);
void __thiscall MGUHModeNotifier::update(MGUHModeNotifier *this, float dt);
void __thiscall MGUKDeliveryNotifier::update(MGUKDeliveryNotifier *this, float dt);
void __thiscall MGUKRecoveryNotifier::update(MGUKRecoveryNotifier *this, float dt);
void __thiscall TractionControlNotifier::update(TractionControlNotifier *this, float dt);
void __thiscall TurboBoostNotifier::update(TurboBoostNotifier *this, float dt);
void __thiscall CarAvatar::updateERSCharge(CarAvatar *this);
void __thiscall CarAvatar::updateFromChannels(CarAvatar *this, float dt);
void __thiscall CarAvatar::updateInPitlaneState(CarAvatar *this, float dt);
void __thiscall CarAvatar::updateSkidMarks(CarAvatar *this, float dt);
CarLightsVars *__cdecl std::_Uninit_move<CarLightsVars *,CarLightsVars *,std::allocator<CarLightsVars>,CarLightsVars>(CarLightsVars *_First, CarLightsVars *_Last, CarLightsVars *_Dest);
void __thiscall CarBrakeLights::CarBrakeLights(CarBrakeLights *this, CarAvatar *acar);
void __thiscall CarLightsVars::CarLightsVars(CarLightsVars *this);
void __thiscall CarBrakeLights::~CarBrakeLights(CarBrakeLights *this);
CarBrakeLights *__thiscall CarBrakeLights::`vector deleting destructor'(CarBrakeLights *this, unsigned int a2);
void __thiscall std::vector<CarLightsVars>::_Reallocate(std::vector<CarLightsVars> *this, unsigned int _Count);
void __thiscall std::vector<CarLightsVars>::_Reserve(std::vector<CarLightsVars> *this, unsigned int _Count);
bool __thiscall CarBrakeLights::getFrontLightOn(CarBrakeLights *this);
int __thiscall CarBrakeLights::getVars(CarBrakeLights *this, const Mesh *m);
void __thiscall CarBrakeLights::loadLights(CarBrakeLights *this);
void __thiscall std::vector<CarLightsVars>::push_back(std::vector<CarLightsVars> *this, const CarLightsVars *_Val);
void __thiscall MaterialVar::setFloat3(MaterialVar *this, const vec3f *v);
void __thiscall CarBrakeLights::update(CarBrakeLights *this, float deltaT);
void __thiscall CarColliderRenderer::CarColliderRenderer(CarColliderRenderer *this, CarAvatar *acar);
CarColliderRenderer *__thiscall CarColliderRenderer::`scalar deleting destructor'(CarColliderRenderer *this, unsigned int a2);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_442a64015e55ca5338aa063647e1d4e3_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_442a64015e55ca5338aa063647e1d4e3>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this@<ecx>, __m128 a2@<xmm0>, const OnNodeRenderEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_442a64015e55ca5338aa063647e1d4e3_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_442a64015e55ca5338aa063647e1d4e3>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_442a64015e55ca5338aa063647e1d4e3_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_442a64015e55ca5338aa063647e1d4e3>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this);
// void __userpurge CarColliderRenderer::renderWireframe(CarColliderRenderer *this@<ecx>, __m128 a2@<xmm0>, RenderContext *rc);
// void __userpurge CarFakeShadow::CarFakeShadow(CarFakeShadow *this@<ecx>, unsigned int a2@<ebx>, CarAvatar *acar);
// void __userpurge FakeMaterialFilter::FakeMaterialFilter(FakeMaterialFilter *this@<ecx>, unsigned int a2@<ebx>, GraphicsManager *graphics);
CarFakeShadow *__thiscall CarFakeShadow::`vector deleting destructor'(CarFakeShadow *this, unsigned int a2);
FakeMaterialFilter *__thiscall FakeMaterialFilter::`scalar deleting destructor'(FakeMaterialFilter *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8976a459e797af2afd5a5fba90ea734d_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8976a459e797af2afd5a5fba90ea734d>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, const OnNodeRenderEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8976a459e797af2afd5a5fba90ea734d_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_8976a459e797af2afd5a5fba90ea734d>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8976a459e797af2afd5a5fba90ea734d_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8976a459e797af2afd5a5fba90ea734d>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this);
// void __usercall CarFakeShadow::generateFakeShadow(CarFakeShadow *this@<ecx>, unsigned int a2@<ebx>);
vec3f *__thiscall plane4f::getRayIntersection(plane4f *this, vec3f *result, const vec3f *org, const vec3f *dir);
void __thiscall CarFakeShadow::loadShadows(CarFakeShadow *this);
void __thiscall CarFakeShadow::onNodeRenderEvent(CarFakeShadow *this, const OnNodeRenderEvent *e);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<CarLodDef>>>(CarLodDef *_First, CarLodDef *_Last);
CarLodDef *__cdecl std::_Uninit_move<CarLodDef *,CarLodDef *,std::allocator<CarLodDef>,CarLodDef>(CarLodDef *_First, CarLodDef *_Last, CarLodDef *_Dest);
void __thiscall CarLodDef::CarLodDef(CarLodDef *this, const CarLodDef *__that);
void __thiscall CarLodManager::CarLodManager(CarLodManager *this, CarAvatar *car);
void __thiscall std::vector<CarLodDef>::~vector<CarLodDef>(std::vector<CarLodDef> *this);
void __thiscall CarLodDef::~CarLodDef(CarLodDef *this);
void __thiscall CarLodManager::~CarLodManager(CarLodManager *this);
CarLodManager *__thiscall CarLodManager::`vector deleting destructor'(CarLodManager *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ac02608daa2391f10995d2b317287be5_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_ac02608daa2391f10995d2b317287be5>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ac02608daa2391f10995d2b317287be5_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ac02608daa2391f10995d2b317287be5>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, const float *<_Args_0>);
void __thiscall std::vector<CarLodDef>::_Reallocate(std::vector<CarLodDef> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ac02608daa2391f10995d2b317287be5_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ac02608daa2391f10995d2b317287be5>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this);
void __thiscall CarLodManager::initNoBodyNodes(CarLodManager *this);
void __thiscall CarLodManager::loadLod(CarLodManager *this, CarLodDef *lod);
void __cdecl loadNode(INIReader *ini, std::vector<Node *> *list, Node *node, int indent);
void __thiscall std::vector<SpinnerData *>::push_back(std::vector<ICollisionObject *> *this, ICollisionObject *const *_Val);
void __thiscall CarLodManager::renderHUD(CarLodManager *this, float deltaT);
void __thiscall CarLodManager::update(CarLodManager *this, float dt);
void __thiscall CarLodManager::updateLodVisibility(CarLodManager *this);
void __cdecl writeNode(std::wofstream *out, std::vector<Node *> *list, Node *node, int indent);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<MirrorObject>>>(MirrorObject *_First, MirrorObject *_Last);
MirrorObject *__cdecl std::_Uninit_move<MirrorObject *,MirrorObject *,std::allocator<MirrorObject>,MirrorObject>(MirrorObject *_First, MirrorObject *_Last, MirrorObject *_Dest);
void __thiscall std::_Wrap_alloc<std::allocator<MirrorObject>>::construct<MirrorObject,MirrorObject &>(std::_Wrap_alloc<std::allocator<MirrorObject> > *this, MirrorObject *_Ptr, MirrorObject *<_Args_0>);
Mesh *__thiscall Node::getNodeChild<Mesh>(Node *this, std::wstring name, bool recursive);
void __thiscall CarMirrorManager::CarMirrorManager(CarMirrorManager *this, CarAvatar *icar, const Texture *mirrorTexture);
void __thiscall std::vector<MirrorObject>::~vector<MirrorObject>(std::vector<MirrorObject> *this);
void __thiscall CarMirrorManager::~CarMirrorManager(CarMirrorManager *this);
void __thiscall MirrorObject::~MirrorObject(MirrorObject *this);
std::shared_ptr<Material> *__thiscall std::shared_ptr<Material>::operator=(std::shared_ptr<Material> *this, std::shared_ptr<Material> *_Right);
CarMirrorManager *__thiscall CarMirrorManager::`scalar deleting destructor'(CarMirrorManager *this, unsigned int a2);
void __thiscall std::vector<MirrorObject>::_Reallocate(std::vector<MirrorObject> *this, unsigned int _Count);
void __thiscall std::vector<MirrorObject>::_Reserve(std::vector<MirrorObject> *this, unsigned int _Count);
void __thiscall std::vector<MirrorObject>::push_back(std::vector<MirrorObject> *this, const MirrorObject *_Val);
void __thiscall CarMirrorManager::update(CarMirrorManager *this, float dt);
RaceManager *__thiscall GameObject::getGameObject<RaceManager>(GameObject *this);
void __thiscall std::map<std::wstring,int>::map<std::wstring,int>(std::map<std::wstring,int> *this);
void __thiscall CarRaceInfo::CarRaceInfo(CarRaceInfo *this);
void __thiscall CarRaceInfo::~CarRaceInfo(CarRaceInfo *this);
BOOL __thiscall std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const,int>>>>::operator==(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,int> > > > *this, const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,int> > > > *_Right);
unsigned int *__thiscall std::map<std::wstring,int>::operator[](std::map<std::wstring,int> *this, std::wstring *_Keyval);
unsigned int *__thiscall std::map<std::wstring,int>::operator[](std::map<std::wstring,int> *this, const std::wstring *_Keyval);
void __thiscall lambda_d6cdba19fa34fd58a768285fc49557c4_::operator()(CarRaceInfo::init::__l11::<lambda_d6cdba19fa34fd58a768285fc49557c4> *this, const OnSessionEndEvent *message);
CarRaceInfo *__thiscall CarRaceInfo::`scalar deleting destructor'(CarRaceInfo *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d6cdba19fa34fd58a768285fc49557c4_,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &>>,void,OnSessionEndEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d6cdba19fa34fd58a768285fc49557c4>,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &> >,void,OnSessionEndEvent const &> *this, const OnSessionEndEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d6cdba19fa34fd58a768285fc49557c4_,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &>>,void,OnSessionEndEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d6cdba19fa34fd58a768285fc49557c4>,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &> >,void,OnSessionEndEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d6cdba19fa34fd58a768285fc49557c4_,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &>>,void,OnSessionEndEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d6cdba19fa34fd58a768285fc49557c4>,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &> >,void,OnSessionEndEvent const &> *this);
unsigned int __thiscall CarRaceInfo::getSpawnPositionIndex(CarRaceInfo *this, const std::wstring *setName);
void __thiscall CarRaceInfo::init(CarRaceInfo *this, CarAvatar *acar);
void __thiscall CarRaceInfo::setSpawnPositionIndex(CarRaceInfo *this, const std::wstring *setName, int gp);
std::_Tree_node<std::pair<std::wstring const ,CommandItem>,void *> *__thiscall std::_Tree_buy<std::pair<std::wstring const,CommandItem>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring &&>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,CommandItem>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring &&> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_node<std::pair<std::wstring const ,TyreCompoundStrategy>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,CommandItem>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,CommandItem>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring const &> *<_Val_1>, std::tuple<> *<_Val_2>);
// void __usercall CommandManager::CommandManager(CommandManager *this@<ecx>, unsigned int a2@<ebx>);
CommandItem *__thiscall std::map<std::wstring,CommandItem>::operator[](std::map<std::wstring,CommandItem> *this, std::wstring *_Keyval);
CommandItem *__thiscall std::map<std::wstring,CommandItem>::operator[](std::map<std::wstring,CommandItem> *this, const std::wstring *_Keyval);
int __thiscall CommandManager::getCommand(CommandManager *this, const std::wstring *commandName);
void __thiscall ConsoleRefreshInstruments::ConsoleRefreshInstruments(ConsoleRefreshInstruments *this, Console *con);
char __thiscall ConsoleRefreshInstruments::execute(ConsoleRefreshInstruments *this, std::wstring commandLine);
std::wstring *__thiscall ConsoleRefreshInstruments::getHelp(ConsoleRefreshInstruments *this, std::wstring *result);
void __cdecl std::_For_each<DigitalItem * *,_lambda_3b876c65a175e7caf594000a85a6b604_>(DigitalItem **_First, DigitalItem **_Last);
void __thiscall DigitalInstruments::DigitalInstruments(DigitalInstruments *this, CarAvatar *a_car);
void __thiscall vec4f::vec4f(vec4f *this, const vec3f *v3, float vw);
void __thiscall DigitalInstruments::~DigitalInstruments(DigitalInstruments *this);
DigitalInstruments *__thiscall DigitalInstruments::`vector deleting destructor'(DigitalInstruments *this, unsigned int a2);
DigitalLed **__thiscall std::vector<DigitalLed *>::back(std::vector<DigitalLed *> *this);
void __thiscall DigitalInstruments::initInstruments(DigitalInstruments *this);
void __thiscall DigitalInstruments::update(DigitalInstruments *this, float deltaT);
double __cdecl ceil<int>(int _Left);
void __thiscall DigitalItem::DigitalItem(DigitalItem *this, CarAvatar *a_car, INIReader *ini, const std::wstring *section, std::vector<DigitalItem *> *items);
void __thiscall DigitalItem::~DigitalItem(DigitalItem *this);
void __thiscall DigitalItem::cleanup(DigitalItem *this);
double __thiscall StringBlitter3D::getFontSize(StringBlitter3D *this);
void __thiscall DigitalItem::update(DigitalItem *this, float dt);
void __thiscall DigitalLed::DigitalLed(DigitalLed *this, CarAvatar *car);
void __thiscall DigitalLed::DigitalLed(DigitalLed *this, CarAvatar *a_car, INIReader *ini, std::wstring section, DigitalLedType itype, Node *node);
void __thiscall DigitalLed::DigitalLed(DigitalLed *this, CarAvatar *a_car, std::wstring objectName, float valueSwitch, float bSwitch, float bFrequency);
void __thiscall DigitalLed::~DigitalLed(DigitalLed *this);
bool __cdecl operator==(const vec3f *v1, const vec3f *v2);
char __thiscall DigitalLed::isWithinShowLimits(DigitalLed *this, float value);
void __thiscall DigitalLed::setShowLimits(DigitalLed *this, float mi, float mx, bool excluded);
void __thiscall DigitalLed::update(DigitalLed *this, float dt);
void __thiscall DisplayNode::DisplayNode(DisplayNode *this, std::wstring a_name);
void __thiscall DisplayNode::DisplayNode(DisplayNode *this, std::wstring a_name, DigitalItemType a_type);
DisplayNode *__thiscall DisplayNode::`vector deleting destructor'(DisplayNode *this, unsigned int a2);
void __thiscall DisplayNode::drawBase(DisplayNode *this, RenderContext *rc, GLRenderer *gl);
void __thiscall DisplayNode::drawBaseInverted(DisplayNode *this, RenderContext *rc, GLRenderer *gl);
void __thiscall DisplayNode::drawTop(DisplayNode *this, RenderContext *rc, GLRenderer *gl);
void __thiscall DisplayNode::drawTopInverted(DisplayNode *this, RenderContext *rc, GLRenderer *gl);
void __thiscall DisplayNode::render(DisplayNode *this, RenderContext *rc);
void __thiscall std::function<void __cdecl (SVar *,float)>::function<void __cdecl (SVar *,float)>(std::function<void __cdecl(SVar *,float)> *this, DriverModel::{ctor}::__l138::<lambda_2780e4c819495c962915f982c35600b3> *_Func);
void __thiscall std::vector<char>::vector<char>(std::vector<char> *this, unsigned int _Count);
void __thiscall DriverModel::DriverModel(DriverModel *this, CarAvatar *car, GraphicsManager *graphics, bool a_isHR);
void __thiscall DriverModel::~DriverModel(DriverModel *this);
DriverModel *__thiscall DriverModel::`scalar deleting destructor'(DriverModel *this, unsigned int a2);
char __thiscall std::vector<char>::_Buy(std::vector<char> *this, unsigned int _Capacity);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2780e4c819495c962915f982c35600b3_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_2780e4c819495c962915f982c35600b3>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2780e4c819495c962915f982c35600b3_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2780e4c819495c962915f982c35600b3>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_99b8e5248e5499b81401c3852418c453_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_99b8e5248e5499b81401c3852418c453>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_99b8e5248e5499b81401c3852418c453_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_99b8e5248e5499b81401c3852418c453>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2780e4c819495c962915f982c35600b3_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2780e4c819495c962915f982c35600b3>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_99b8e5248e5499b81401c3852418c453_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_99b8e5248e5499b81401c3852418c453>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
void __thiscall DriverModel::addNodeHierarchyToHeadHide(DriverModel *this, Node *n);
void __thiscall DriverModel::animateHShifter(DriverModel *this, float dt);
void __thiscall DriverModel::animatePaddles(DriverModel *this, float dt);
vec3f *__thiscall DriverModel::getEyesPosition(DriverModel *this, vec3f *result);
double __thiscall DriverModel::getShiftDownPlayerCurrentPosition(DriverModel *this);
void __cdecl loadDriverBasePos(std::ifstream *in, Node *node, bool isHR);
void __thiscall DriverModel::loadDriverSkin(DriverModel *this, KN5IO *kn, INIReader *iniS, const std::wstring *section, const std::wstring *key);
void __thiscall DriverModel::setLockedPosition(DriverModel *this);
void __thiscall DriverModel::setVisible(DriverModel *this, bool v);
void __thiscall DriverModel::update(DriverModel *this, float dt);
// void __userpurge DriverModel::updateHeadMovement(DriverModel *this@<ecx>, int a2@<edi>, int a3@<esi>, float *dt, float *dynDeltaT, vec3f *accG, int a7, __int128 a8, __int128 a9, mat44f a10, DirectX::XMMATRIX M2, DirectX::XMMATRIX a12, __m128 a13);
void __thiscall DrivingAssistManager::DrivingAssistManager(DrivingAssistManager *this, Sim *sim);
DrivingAssistManager *__thiscall DrivingAssistManager::`vector deleting destructor'(DrivingAssistManager *this, unsigned int a2);
double __thiscall DrivingAssistManager::getStabilityControl(DrivingAssistManager *this);
void __thiscall DrivingAssistManager::setIdealLine(DrivingAssistManager *this, bool mode);
void __thiscall DrivingAssistManager::update(DrivingAssistManager *this, float dt);
// void __userpurge ESCMenu::ESCMenu(ESCMenu *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim, ksgui::GUI *gui);
void __thiscall ESCMenu::~ESCMenu(ESCMenu *this);
void __thiscall lambda_1bb0d5a339313a80c90480293f47e7cb_::operator()(ESCMenu::{ctor}::__l15::<lambda_1bb0d5a339313a80c90480293f47e7cb> *this, const ksgui::OnControlClicked *ev);
ESCMenu *__thiscall ESCMenu::`vector deleting destructor'(ESCMenu *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a157c12c8d11684cae7c683843cbc668_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_a157c12c8d11684cae7c683843cbc668>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_099bb1e1c93c1bff0282678f1bf2df13_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_099bb1e1c93c1bff0282678f1bf2df13>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1bb0d5a339313a80c90480293f47e7cb_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1bb0d5a339313a80c90480293f47e7cb>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2e12a074487b3f1db6b34b05b6ffcbb0_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2e12a074487b3f1db6b34b05b6ffcbb0>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4e71073b6ad773819bc9a3fecf4180b5_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4e71073b6ad773819bc9a3fecf4180b5>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9d776f265dfc97ec18d2be4f167d568b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9d776f265dfc97ec18d2be4f167d568b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a157c12c8d11684cae7c683843cbc668_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a157c12c8d11684cae7c683843cbc668>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f6a9abc42bf3e3c0401ca1a5492ba9ab_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f6a9abc42bf3e3c0401ca1a5492ba9ab>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_099bb1e1c93c1bff0282678f1bf2df13_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_099bb1e1c93c1bff0282678f1bf2df13>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1bb0d5a339313a80c90480293f47e7cb_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1bb0d5a339313a80c90480293f47e7cb>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2e12a074487b3f1db6b34b05b6ffcbb0_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_2e12a074487b3f1db6b34b05b6ffcbb0>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4e71073b6ad773819bc9a3fecf4180b5_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_4e71073b6ad773819bc9a3fecf4180b5>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9d776f265dfc97ec18d2be4f167d568b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_9d776f265dfc97ec18d2be4f167d568b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f6a9abc42bf3e3c0401ca1a5492ba9ab_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_f6a9abc42bf3e3c0401ca1a5492ba9ab>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_099bb1e1c93c1bff0282678f1bf2df13_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_099bb1e1c93c1bff0282678f1bf2df13>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1bb0d5a339313a80c90480293f47e7cb_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1bb0d5a339313a80c90480293f47e7cb>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2e12a074487b3f1db6b34b05b6ffcbb0_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2e12a074487b3f1db6b34b05b6ffcbb0>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4e71073b6ad773819bc9a3fecf4180b5_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4e71073b6ad773819bc9a3fecf4180b5>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9d776f265dfc97ec18d2be4f167d568b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9d776f265dfc97ec18d2be4f167d568b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a157c12c8d11684cae7c683843cbc668_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a157c12c8d11684cae7c683843cbc668>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f6a9abc42bf3e3c0401ca1a5492ba9ab_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f6a9abc42bf3e3c0401ca1a5492ba9ab>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
// ksgui::ActiveButton *__userpurge ESCMenu::addButton@<eax>(ESCMenu *this@<ecx>, unsigned int a2@<ebx>, std::wstring id, float y);
void __thiscall ESCMenu::onShutdown(ESCMenu *this);
void __thiscall ESCMenu::onVisibleChanged(ESCMenu *this, BOOL newValue);
void __thiscall ESCMenu::render(ESCMenu *this, float dt);
void __thiscall ESCMenu::selectButton(ESCMenu *this, ksgui::ActiveButton *ab);
void __thiscall ESCMenu::setDriveButtonEnabled(ESCMenu *this, bool value);
void __thiscall ESCMenu::setRaceControlScreen(ESCMenu *this);
FlameTexture *__cdecl std::_Copy_impl<FlameTexture *,FlameTexture *>(FlameTexture *_First, FlameTexture *_Last, FlameTexture *_Dest);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<FlameGroup>>>(FlameGroup *_First, FlameGroup *_Last);
FlameTexture *__thiscall std::vector<FlameTexture>::_Ucopy<FlameTexture *>(std::vector<FlameTexture> *this, FlameTexture *_First, FlameTexture *_Last, FlameTexture *_Ptr);
FlameInstanceV2 *__cdecl std::_Uninit_copy<FlameInstanceV2 const *,FlameInstanceV2 *,std::allocator<FlameInstanceV2>>(FlameInstanceV2 *_First, FlameInstanceV2 *_Last, FlameInstanceV2 *_Dest);
FlameTexture *__cdecl std::_Uninit_copy<FlameTexture *,FlameTexture *,std::allocator<FlameTexture>>(FlameTexture *_First, FlameTexture *_Last, FlameTexture *_Dest);
FlameGroup *__cdecl std::_Uninit_move<FlameGroup *,FlameGroup *,std::allocator<FlameGroup>,FlameGroup>(FlameGroup *_First, FlameGroup *_Last, FlameGroup *_Dest);
__m128i *__cdecl std::_Uninit_move<FlameInstance *,FlameInstance *,std::allocator<FlameInstance>,FlameInstance>(FlameInstance *_First, FlameInstance *_Last, FlameInstance *_Dest);
void __thiscall std::_Wrap_alloc<std::allocator<FlameInstance>>::construct<FlameInstance,FlameInstance &>(std::_Wrap_alloc<std::allocator<FlameInstance> > *this, FlameInstance *_Ptr, const FlameInstance *<_Args_0>);
void __thiscall std::vector<FlameInstanceV2>::vector<FlameInstanceV2>(std::vector<FlameInstanceV2> *this, const std::vector<FlameInstanceV2> *_Right);
void __thiscall std::vector<FlameTexture>::vector<FlameTexture>(std::vector<FlameTexture> *this, const std::vector<FlameTexture> *_Right);
void __thiscall FlameInstanceV2::FlameInstanceV2(FlameInstanceV2 *this, const FlameInstanceV2 *__that);
void __thiscall FlameInstanceV2::FlameInstanceV2(FlameInstanceV2 *this);
void __thiscall Flames::Flames(Flames *this, CarAvatar *a_car);
void __thiscall std::vector<FlameGroup>::~vector<FlameGroup>(std::vector<FlameGroup> *this);
void __thiscall FlameGroup::~FlameGroup(FlameGroup *this);
void __thiscall FlameInstanceV2::~FlameInstanceV2(FlameInstanceV2 *this);
void __thiscall Flames::~Flames(Flames *this);
std::vector<FlameTexture> *__thiscall std::vector<FlameTexture>::operator=(std::vector<FlameTexture> *this, const std::vector<FlameTexture> *_Right);
void __thiscall lambda_e4c5f6407e9e08463f99f2dd7db30c08_::operator()(Flames::{ctor}::__l28::<lambda_e4c5f6407e9e08463f99f2dd7db30c08> *this, bool value);
Flames *__thiscall Flames::`vector deleting destructor'(Flames *this, unsigned int a2);
char __thiscall std::vector<FlameInstanceV2>::_Buy(std::vector<FlameInstanceV2> *this, unsigned int _Capacity);
char __thiscall std::vector<FlameTexture>::_Buy(std::vector<DynamicControllerStage> *this, unsigned int _Capacity);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_742fdea74c23d6fba2d43591d216c592_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_742fdea74c23d6fba2d43591d216c592>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, void *_Where);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_742fdea74c23d6fba2d43591d216c592_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_742fdea74c23d6fba2d43591d216c592>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this@<ecx>, float a2@<xmm0>, const OnNodeRenderEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e4c5f6407e9e08463f99f2dd7db30c08_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e4c5f6407e9e08463f99f2dd7db30c08>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e4c5f6407e9e08463f99f2dd7db30c08_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e4c5f6407e9e08463f99f2dd7db30c08>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::vector<FlameGroup>::_Reallocate(std::vector<FlameGroup> *this, unsigned int _Count);
void __thiscall std::vector<FlameInstance>::_Reallocate(std::vector<FlameInstance> *this, unsigned int _Count);
void __thiscall std::vector<FlameInstanceV2>::_Reallocate(std::vector<FlameInstanceV2> *this, unsigned int _Count);
void __thiscall std::vector<FlameTexture>::_Reallocate(std::vector<FlameTexture> *this, unsigned int _Count);
void __thiscall std::vector<FlameGroup>::_Reserve(std::vector<FlameGroup> *this, unsigned int _Count);
void __thiscall std::vector<FlameInstance>::_Reserve(std::vector<FlameInstance> *this, unsigned int _Count);
void __thiscall std::vector<FlameInstanceV2>::_Reserve(std::vector<FlameInstanceV2> *this, unsigned int _Count);
void __thiscall std::vector<FlameTexture>::_Reserve(std::vector<FlameTexture> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_742fdea74c23d6fba2d43591d216c592_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_742fdea74c23d6fba2d43591d216c592>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e4c5f6407e9e08463f99f2dd7db30c08_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e4c5f6407e9e08463f99f2dd7db30c08>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
void __thiscall std::vector<FlameInstanceV2>::_Tidy(std::vector<FlameInstanceV2> *this);
void __thiscall Flames::checkTextures(Flames *this, const std::wstring name, const std::vector<FlameTexture> *orig);
void __thiscall Flames::copyFlameVector(Flames *this, const std::vector<FlameTexture> *orig, std::vector<FlameTexture> *dest, FlameInstanceV2 *f);
void __thiscall Flames::cycleTexture(Flames *this, FlameTexture *ft, unsigned __int16 cycle);
// void __userpurge Flames::drawBackfireState(Flames *this@<ecx>, float a2@<xmm0>, GLRenderer *gl, RenderContext *rc, FlameGroup *f);
void __thiscall Flames::drawFlame(Flames *this, GLRenderer *gl, FlameInstance *flame, RenderContext *rc);
// void __userpurge Flames::drawFlame(Flames *this@<ecx>, float a2@<xmm0>, GLRenderer *gl, RenderContext *rc, BackfireState st, FlameGroup *g);
void __thiscall Flames::loadFlames(Flames *this);
void __thiscall Flames::loadTextures(Flames *this, std::wstring folder);
// void __userpurge Flames::onNodeRenderEvent(Flames *this@<ecx>, float a2@<xmm0>, const OnNodeRenderEvent *e);
void __thiscall std::vector<FlameGroup>::push_back(std::vector<FlameGroup> *this, const FlameGroup *_Val);
void __thiscall std::vector<FlameInstance>::push_back(std::vector<FlameInstance> *this, const FlameInstance *_Val);
void __thiscall std::vector<FlameInstanceV2>::push_back(std::vector<FlameInstanceV2> *this, const FlameInstanceV2 *_Val);
void __thiscall std::vector<Texture>::push_back(std::vector<Texture> *this, Texture *_Val);
void __thiscall Flames::readFlamePresets(Flames *this, const std::wstring *str, FlameInstanceV2 *f);
void __thiscall Flames::reset(Flames *this);
void __thiscall Flames::update(Flames *this, float dt);
// void __userpurge GearShiftShake::GearShiftShake(GearShiftShake *this@<ecx>, __m128 a2@<xmm0>, CarAvatar *icar);
void __thiscall GearShiftShake::~GearShiftShake(GearShiftShake *this);
GearShiftShake *__thiscall GearShiftShake::`vector deleting destructor'(GearShiftShake *this, unsigned int a2);
void __thiscall GearShiftShake::update(GearShiftShake *this, float deltaT);
void __thiscall GhostCar::GhostCar(GhostCar *this, CarAvatar *a_car, GhostCarRecorder *gcr);
GhostCar *__thiscall GhostCar::`scalar deleting destructor'(GhostCar *this, unsigned int a2);
void __thiscall GhostCar::assignGhostMaterial(GhostCar *this, Node *node);
void __thiscall GhostCar::init3D(GhostCar *this);
void __thiscall GhostCar::loadGhostCarParameters(GhostCar *this);
// void __userpurge GhostCar::update(GhostCar *this@<ecx>, int a2@<edi>, float dt);
GhostCarFrame *__cdecl std::_Copy_impl<GhostCarFrame *,GhostCarFrame *>(GhostCarFrame *_First, GhostCarFrame *_Last, GhostCarFrame *_Dest);
GhostCarFrame *__thiscall std::vector<GhostCarFrame>::_Ucopy<GhostCarFrame *>(std::vector<GhostCarFrame> *this, GhostCarFrame *_First, GhostCarFrame *_Last, GhostCarFrame *_Ptr);
GhostCarFrame *__cdecl std::_Uninit_copy<GhostCarFrame *,GhostCarFrame *,std::allocator<GhostCarFrame>>(GhostCarFrame *_First, GhostCarFrame *_Last, GhostCarFrame *_Dest);
void __cdecl std::_Uninit_def_fill_n<GhostCarFrame *,unsigned int,std::allocator<GhostCarFrame>,GhostCarFrame>(GhostCarFrame *_First, unsigned int _Count);
void __thiscall GhostCarFrame::GhostCarFrame(GhostCarFrame *this, const GhostCarFrame *__that);
void __thiscall GhostCarFrame::GhostCarFrame(GhostCarFrame *this);
void __thiscall GhostCarRecorder::GhostCarRecorder(GhostCarRecorder *this, CarAvatar *iavatar, Car *icar, bool isRecording, bool isPlaying);
void __thiscall GhostCarRecorder::~GhostCarRecorder(GhostCarRecorder *this);
std::vector<GhostCarFrame> *__thiscall std::vector<GhostCarFrame>::operator=(std::vector<GhostCarFrame> *this, const std::vector<GhostCarFrame> *_Right);
void __thiscall lambda_f2f448810aa79f7c0de2871735813746_::operator()(GhostCarRecorder::onLapCompleted::__l6::<lambda_f2f448810aa79f7c0de2871735813746> *this);
GhostCarRecorder *__thiscall GhostCarRecorder::`scalar deleting destructor'(GhostCarRecorder *this, unsigned int a2);
// __m128 __usercall DirectX::XMMatrixRotationQuaternion@<xmm0>(const __m128 Quaternion@<xmm0>);
// __m128 __usercall DirectX::XMQuaternionNormalize@<xmm0>(const __m128 Q@<xmm0>);
// __m128 __usercall DirectX::XMQuaternionSlerpV@<xmm0>(const __m128 Q0@<xmm0>, const __m128 Q1@<xmm1>, const __m128 T@<xmm2>);
// __m128 __usercall DirectX::XMVectorATan2@<xmm0>(const __m128 Y@<xmm0>, const __m128 X@<xmm1>);
// __m128 __usercall DirectX::XMVectorATan@<xmm0>(const __m128 V@<xmm0>);
// __m128 __usercall DirectX::XMVectorSin@<xmm0>(const __m128 V@<xmm0>);
char __thiscall std::vector<GhostCarFrame>::_Buy(std::vector<GhostCarFrame> *this, unsigned int _Capacity);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_17408a0c1a7b7bb0b9359d4a03ef83a9_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_17408a0c1a7b7bb0b9359d4a03ef83a9>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cf5d4e7fcd47e539c5aa1d25e4769e2f_,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &>>,void,OnStepCompleteEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_cf5d4e7fcd47e539c5aa1d25e4769e2f>,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &> >,void,OnStepCompleteEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_17408a0c1a7b7bb0b9359d4a03ef83a9_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_17408a0c1a7b7bb0b9359d4a03ef83a9>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cf5d4e7fcd47e539c5aa1d25e4769e2f_,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &>>,void,OnStepCompleteEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_cf5d4e7fcd47e539c5aa1d25e4769e2f>,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &> >,void,OnStepCompleteEvent const &> *this, const OnStepCompleteEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e753e19317a64fba2fd930fdd0794f0f_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e753e19317a64fba2fd930fdd0794f0f>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f2f448810aa79f7c0de2871735813746_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f2f448810aa79f7c0de2871735813746>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e753e19317a64fba2fd930fdd0794f0f_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e753e19317a64fba2fd930fdd0794f0f>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f2f448810aa79f7c0de2871735813746_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f2f448810aa79f7c0de2871735813746>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::vector<GhostCarFrame>::_Reallocate(std::vector<GhostCarFrame> *this, unsigned int _Count);
void __thiscall std::vector<GhostCarFrame>::_Reserve(std::vector<GhostCarFrame> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_17408a0c1a7b7bb0b9359d4a03ef83a9_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_17408a0c1a7b7bb0b9359d4a03ef83a9>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cf5d4e7fcd47e539c5aa1d25e4769e2f_,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &>>,void,OnStepCompleteEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_cf5d4e7fcd47e539c5aa1d25e4769e2f>,0>,std::allocator<std::_Func_class<void,OnStepCompleteEvent const &> >,void,OnStepCompleteEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e753e19317a64fba2fd930fdd0794f0f_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e753e19317a64fba2fd930fdd0794f0f>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f2f448810aa79f7c0de2871735813746_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f2f448810aa79f7c0de2871735813746>,0>,std::allocator<std::_Func_class<void> >,void> *this);
mat44f *__thiscall GhostCarRecorder::getBodyMatrix(GhostCarRecorder *this, mat44f *result);
std::wstring *__thiscall GhostCarRecorder::getGhostCarFileName(GhostCarRecorder *this, std::wstring *result, bool onConstructor);
mat44f *__thiscall GhostCarRecorder::getSuspensionMatrix(GhostCarRecorder *this, mat44f *result, int index);
mat44f *__thiscall GhostCarRecorder::getTyreMatrix(GhostCarRecorder *this, mat44f *result, int index);
mat44f *__cdecl lerp(mat44f *result, mat44f *m1, mat44f *m2, float blend);
// void __usercall GhostCarRecorder::loadGhostCarRecorderCustomParameters(GhostCarRecorder *this@<ecx>, unsigned int a2@<ebx>);
char __thiscall GhostCarRecorder::loadGhostCarRecording(GhostCarRecorder *this, std::wstring filename);
void __thiscall GhostCarRecorder::onLapCompleted(GhostCarRecorder *this, const OnLapCompletedEvent *message);
void __thiscall GhostCarRecorder::onStepComplete(GhostCarRecorder *this, const OnStepCompleteEvent *ev);
void __thiscall std::vector<GhostCarFrame>::push_back(std::vector<GhostCarFrame> *this, const GhostCarFrame *_Val);
void __thiscall std::vector<GhostCarFrame>::resize(std::vector<GhostCarFrame> *this, unsigned int _Newsize);
char __thiscall GhostCarRecorder::saveGhostCarRecording(GhostCarRecorder *this);
void __thiscall GhostCarRecorder::setCurrentFrame(GhostCarRecorder *this, unsigned int frame);
bool __thiscall GhostCarRecorder::shouldDisplayGhostCar(GhostCarRecorder *this);
void __thiscall IdealLine::IdealLine(IdealLine *this, AISpline *spline, GraphicsManager *graphics, IRayTrackCollisionProvider *collisionProvider);
IdealLine *__thiscall IdealLine::`vector deleting destructor'(IdealLine *this, unsigned int a2);
DragMode *__thiscall GameObject::getGameObject<DragMode>(GameObject *this);
DriftMode *__thiscall GameObject::getGameObject<DriftMode>(GameObject *this);
TimeAttack *__thiscall GameObject::getGameObject<TimeAttack>(GameObject *this);
// void __userpurge EndSessionDisplayer::EndSessionDisplayer(EndSessionDisplayer *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
void __thiscall EndSessionDisplayer::~EndSessionDisplayer(EndSessionDisplayer *this);
EndSessionDisplayer *__thiscall EndSessionDisplayer::`scalar deleting destructor'(EndSessionDisplayer *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_49966eceae654fae86f3adc27087016b_,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &>>,void,OnMouseMoveEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_49966eceae654fae86f3adc27087016b>,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &> >,void,OnMouseMoveEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7a1348330e14661c3c6081daeac93b3c_,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &>>,void,OnMouseUpEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_7a1348330e14661c3c6081daeac93b3c>,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &> >,void,OnMouseUpEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8f050bd46cec01de98404ba30ab7adbc_,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &>>,void,OnMouseDownEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_8f050bd46cec01de98404ba30ab7adbc>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_49966eceae654fae86f3adc27087016b_,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &>>,void,OnMouseMoveEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_49966eceae654fae86f3adc27087016b>,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &> >,void,OnMouseMoveEvent const &> *this, const OnMouseMoveEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7a1348330e14661c3c6081daeac93b3c_,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &>>,void,OnMouseUpEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_7a1348330e14661c3c6081daeac93b3c>,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &> >,void,OnMouseUpEvent const &> *this, const OnMouseUpEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8f050bd46cec01de98404ba30ab7adbc_,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &>>,void,OnMouseDownEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8f050bd46cec01de98404ba30ab7adbc>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *this, const OnMouseDownEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e503a2ba0ad768d124dfbed39b28eb8e_,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &>>,void,OnMouseWheelMovedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e503a2ba0ad768d124dfbed39b28eb8e>,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &> >,void,OnMouseWheelMovedEvent const &> *this, const OnMouseWheelMovedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e503a2ba0ad768d124dfbed39b28eb8e_,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &>>,void,OnMouseWheelMovedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e503a2ba0ad768d124dfbed39b28eb8e>,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &> >,void,OnMouseWheelMovedEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_49966eceae654fae86f3adc27087016b_,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &>>,void,OnMouseMoveEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_49966eceae654fae86f3adc27087016b>,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &> >,void,OnMouseMoveEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7a1348330e14661c3c6081daeac93b3c_,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &>>,void,OnMouseUpEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_7a1348330e14661c3c6081daeac93b3c>,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &> >,void,OnMouseUpEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8f050bd46cec01de98404ba30ab7adbc_,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &>>,void,OnMouseDownEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8f050bd46cec01de98404ba30ab7adbc>,0>,std::allocator<std::_Func_class<void,OnMouseDownEvent const &> >,void,OnMouseDownEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e503a2ba0ad768d124dfbed39b28eb8e_,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &>>,void,OnMouseWheelMovedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e503a2ba0ad768d124dfbed39b28eb8e>,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &> >,void,OnMouseWheelMovedEvent const &> *this);
void __thiscall EndSessionDisplayer::displayResults(EndSessionDisplayer *this);
unsigned int __thiscall DragMode::getNumberOfPlayerWins(DragMode *this);
unsigned int __thiscall DragMode::getNumberOfRuns(DragMode *this);
void __thiscall EndSessionDisplayer::hide(EndSessionDisplayer *this);
void __thiscall EndSessionDisplayer::renderHUD(EndSessionDisplayer *this, float dt);
void __thiscall EndSessionDisplayer::update(EndSessionDisplayer *this, float dt);
void __cdecl std::_Uninit_def_fill_n<JSONLap *,unsigned int,std::allocator<JSONLap>,JSONLap>(JSONLap *_First, unsigned int _Count);
void __thiscall JsonOutputFile::JsonOutputFile(JsonOutputFile *this, Sim *aSim);
void __thiscall JsonOutputFile::~JsonOutputFile(JsonOutputFile *this);
std::_Func_impl<std::_Callable_obj<<lambda_d6cdba19fa34fd58a768285fc49557c4>,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &> >,void,OnSessionEndEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d6cdba19fa34fd58a768285fc49557c4_,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &>>,void,OnSessionEndEvent const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_d6cdba19fa34fd58a768285fc49557c4>,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &> >,void,OnSessionEndEvent const &> *this, unsigned int a2);
JsonOutputFile *__thiscall JsonOutputFile::`vector deleting destructor'(JsonOutputFile *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_97c571bad91b726f976ee61884ac1b43_,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &>>,void,OnSessionEndEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_97c571bad91b726f976ee61884ac1b43>,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &> >,void,OnSessionEndEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_97c571bad91b726f976ee61884ac1b43_,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &>>,void,OnSessionEndEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_97c571bad91b726f976ee61884ac1b43>,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &> >,void,OnSessionEndEvent const &> *this, const OnSessionEndEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_97c571bad91b726f976ee61884ac1b43_,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &>>,void,OnSessionEndEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_97c571bad91b726f976ee61884ac1b43>,0>,std::allocator<std::_Func_class<void,OnSessionEndEvent const &> >,void,OnSessionEndEvent const &> *this);
void __thiscall JsonOutputFile::addExtraSessionInfo(JsonOutputFile *this);
void __thiscall JsonOutputFile::endSession(JsonOutputFile *this, const OnSessionEndEvent *message);
std::wstring *__thiscall GameMode::getGUID(GameMode *this, std::wstring *result);
void __thiscall JsonOutputFile::offlineEndSession(JsonOutputFile *this, jsonwriter::Object *currentSession, const OnSessionEndEvent *message);
void __thiscall JsonOutputFile::onlineEndSession(JsonOutputFile *this, jsonwriter::Object *currentSession, const OnSessionEndEvent *message);
void __thiscall std::vector<JSONLap>::resize(std::vector<JSONLap> *this, unsigned int _Newsize);
void __thiscall JsonOutputFile::writeOutputFile(JsonOutputFile *this);
void __thiscall JsonOutputFile::writePlayers(JsonOutputFile *this);
// void __userpurge KeyboardCarControl::KeyboardCarControl(KeyboardCarControl *this@<ecx>, unsigned int a2@<ebx>, Car *carPointer);
KeyboardCarControl *__thiscall KeyboardCarControl::`scalar deleting destructor'(KeyboardCarControl *this, unsigned int a2);
void __thiscall KeyboardCarControl::acquireControls(KeyboardCarControl *this, CarControls *controls, float dt, CarControlsInput *input);
double __thiscall KeyboardCarControl::computeGasCoefficient(KeyboardCarControl *this, CarControlsInput *input, float dt);
bool __thiscall KeyboardCarControl::getAction(KeyboardCarControl *this, DriverActions anAction);
vec3f *__thiscall KeyboardCarControl::getCarPositionOnSpline(KeyboardCarControl *this, vec3f *result);
double __thiscall KeyboardCarControl::getKeyboardSteering(KeyboardCarControl *this, float dt, CarControlsInput *input);
double __thiscall KeyboardCarControl::getMouseSteering(KeyboardCarControl *this, float dt, CarControlsInput *input);
const char *__thiscall KeyboardCarControl::getName(KeyboardCarControl *this);
vec3f *__thiscall KeyboardCarControl::getPointAtDistance(KeyboardCarControl *this, vec3f *result, float distance, int *pointIndex);
// void __usercall KeyboardCarControl::readFromIni(KeyboardCarControl *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall KeyboardCarControl::setMouseSteering(KeyboardCarControl *this, bool value);
double __thiscall KeyboardCarControl::steeringMovement(KeyboardCarControl *this, const float targetSteer, float dt, CarControlsInput *input);
double __thiscall KeyboardCarControl::stepSteer(KeyboardCarControl *this, float dt);
void __thiscall LapInvalidatorAvatar::LapInvalidatorAvatar(LapInvalidatorAvatar *this, Sim *sim);
LapInvalidatorAvatar *__thiscall LapInvalidatorAvatar::`scalar deleting destructor'(LapInvalidatorAvatar *this, unsigned int a2);
void __thiscall LapInvalidatorAvatar::renderHUD(LapInvalidatorAvatar *this, float deltaT);
// void __userpurge LollipopCrew::LollipopCrew(LollipopCrew *this@<ecx>, int a2@<ebp>, int a3@<edi>, int a4@<esi>, CarAvatar *aCar, mat44f matrix, float side, std::wstring skin);
LollipopCrew *__thiscall LollipopCrew::`scalar deleting destructor'(LollipopCrew *this, unsigned int a2);
void __thiscall LollipopCrew::loadCrewSkin(LollipopCrew *this, KN5IO *kn, INIReader *iniS, const std::wstring *section, const std::wstring *key);
void __cdecl setMeshProperties(Node *n);
void __thiscall LollipopCrew::update(LollipopCrew *this, float dt);
void __thiscall LollipopCrew::updateCurrentPosition(LollipopCrew *this, float dt);
// void __userpurge MirrorTextureRenderer::MirrorTextureRenderer(MirrorTextureRenderer *this@<ecx>, unsigned int a2@<ebx>, Sim *sim);
void __thiscall MirrorTextureRenderer::~MirrorTextureRenderer(MirrorTextureRenderer *this);
void __thiscall MirrorTextureRenderer::render(MirrorTextureRenderer *this, float deltaT);
void __thiscall MouseHider::MouseHider(MouseHider *this, Sim *aSim);
void __thiscall lambda_e6ab34ddb76a0a09a876fd341536965f_::operator()(MouseHider::{ctor}::__l12::<lambda_e6ab34ddb76a0a09a876fd341536965f> *this, const OnMouseMoveEvent *message);
MouseHider *__thiscall MouseHider::`scalar deleting destructor'(MouseHider *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_08c59d4de76f2cbfd8ff9029432d7cae_,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &>>,void,OnMouseUpEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_08c59d4de76f2cbfd8ff9029432d7cae>,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &> >,void,OnMouseUpEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e6ab34ddb76a0a09a876fd341536965f_,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &>>,void,OnMouseMoveEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e6ab34ddb76a0a09a876fd341536965f>,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &> >,void,OnMouseMoveEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_08c59d4de76f2cbfd8ff9029432d7cae_,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &>>,void,OnMouseUpEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_08c59d4de76f2cbfd8ff9029432d7cae>,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &> >,void,OnMouseUpEvent const &> *this, const OnMouseUpEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e6ab34ddb76a0a09a876fd341536965f_,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &>>,void,OnMouseMoveEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e6ab34ddb76a0a09a876fd341536965f>,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &> >,void,OnMouseMoveEvent const &> *this, const OnMouseMoveEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_08c59d4de76f2cbfd8ff9029432d7cae_,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &>>,void,OnMouseUpEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_08c59d4de76f2cbfd8ff9029432d7cae>,0>,std::allocator<std::_Func_class<void,OnMouseUpEvent const &> >,void,OnMouseUpEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e6ab34ddb76a0a09a876fd341536965f_,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &>>,void,OnMouseMoveEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e6ab34ddb76a0a09a876fd341536965f>,0>,std::allocator<std::_Func_class<void,OnMouseMoveEvent const &> >,void,OnMouseMoveEvent const &> *this);
bool __thiscall MouseHider::isCursorInsideWindow(MouseHider *this, const tagPOINT *point);
void __thiscall MouseHider::showCursor(MouseHider *this, bool value);
void __thiscall MouseHider::update(MouseHider *this, float deltaT);
// void __userpurge CameraOnBoardFree::CameraOnBoardFree(CameraOnBoardFree *this@<ecx>, unsigned int a2@<ebx>, std::wstring name, Camera *a_camera, Sim *a_sim);
std::_Func_impl<std::_Callable_obj<<lambda_e503a2ba0ad768d124dfbed39b28eb8e>,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &> >,void,OnMouseWheelMovedEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f7e0e81750c0508656cd6169ba82ecd5_,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &>>,void,OnMouseWheelMovedEvent const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_e503a2ba0ad768d124dfbed39b28eb8e>,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &> >,void,OnMouseWheelMovedEvent const &> *this, unsigned int a2);
CameraOnBoardFree *__thiscall CameraOnBoardFree::`vector deleting destructor'(CameraOnBoardFree *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cdb34aae9163c371db9cc79de400855f_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_cdb34aae9163c371db9cc79de400855f>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f7e0e81750c0508656cd6169ba82ecd5_,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &>>,void,OnMouseWheelMovedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f7e0e81750c0508656cd6169ba82ecd5>,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &> >,void,OnMouseWheelMovedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cdb34aae9163c371db9cc79de400855f_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_cdb34aae9163c371db9cc79de400855f>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f7e0e81750c0508656cd6169ba82ecd5_,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &>>,void,OnMouseWheelMovedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f7e0e81750c0508656cd6169ba82ecd5>,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &> >,void,OnMouseWheelMovedEvent const &> *this, const OnMouseWheelMovedEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cdb34aae9163c371db9cc79de400855f_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_cdb34aae9163c371db9cc79de400855f>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f7e0e81750c0508656cd6169ba82ecd5_,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &>>,void,OnMouseWheelMovedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f7e0e81750c0508656cd6169ba82ecd5>,0>,std::allocator<std::_Func_class<void,OnMouseWheelMovedEvent const &> >,void,OnMouseWheelMovedEvent const &> *this);
void __thiscall CameraOnBoardFree::forceThetaPhi(CameraOnBoardFree *this, float aTheta, float aPhi, float aRadius);
void __thiscall CameraOnBoardFree::setIntroMode(CameraOnBoardFree *this, bool value);
long double __cdecl signedAngleBetweenVersors(vec3f vec1, vec3f vec2);
void __thiscall CameraOnBoardFree::update(CameraOnBoardFree *this, float dt);
// void __usercall updateOrbit(int a1@<edi>, int a2@<esi>, mat44f *originalMatrix);
// void __usercall updateOrbitStatic(int a1@<esi>, mat44f *originalMatrix);
vec3f *__thiscall CameraOnBoardFree::updateSphericalCoord(CameraOnBoardFree *this, vec3f *result, float deltaT);
WingState *__cdecl std::_Copy_impl<WingState *,WingState *>(WingState *_First, WingState *_Last, WingState *_Dest);
WingState *__thiscall std::vector<WingState>::_Ucopy<WingState *>(std::vector<WingState> *this, WingState *_First, WingState *_Last, WingState *_Ptr);
std::unique_ptr<DynamicWingController> *__cdecl std::_Uninit_move<std::unique_ptr<DynamicWingController> *,std::unique_ptr<DynamicWingController> *,std::allocator<std::unique_ptr<DynamicWingController>>,std::unique_ptr<DynamicWingController>>(std::unique_ptr<DynamicWingController> *_First, std::unique_ptr<DynamicWingController> *_Last, std::unique_ptr<DynamicWingController> *_Dest);
std::vector<std::unique_ptr<DynamicWingController>> *__cdecl std::_Uninit_move<std::vector<std::unique_ptr<DynamicWingController>> *,std::vector<std::unique_ptr<DynamicWingController>> *,std::allocator<std::vector<std::unique_ptr<DynamicWingController>>>,std::vector<std::unique_ptr<DynamicWingController>>>(std::vector<std::unique_ptr<DynamicWingController>> *_First, std::vector<std::unique_ptr<DynamicWingController>> *_Last, std::vector<std::unique_ptr<DynamicWingController>> *_Dest);
void __thiscall std::vector<vec3f>::vector<vec3f>(std::vector<vec3f> *this, unsigned int _Count);
void __thiscall NetCarStateProvider::NetCarStateProvider(NetCarStateProvider *this, const NetCarStateProviderDef *def);
void __thiscall WingState::WingState(WingState *this);
void __thiscall Concurrency::concurrent_queue<NetCarState,std::allocator<NetCarState>>::~concurrent_queue<NetCarState,std::allocator<NetCarState>>(Concurrency::concurrent_queue<NetCarState,std::allocator<NetCarState> > *this);
void __thiscall DynamicWingController::~DynamicWingController(DynamicWingController *this);
void __thiscall NetCarStateProvider::~NetCarStateProvider(NetCarStateProvider *this);
std::vector<WingState> *__thiscall std::vector<WingState>::operator=(std::vector<WingState> *this, const std::vector<WingState> *_Right);
NetCarStateProvider *__thiscall NetCarStateProvider::`vector deleting destructor'(char *this, unsigned int a2);
Concurrency::concurrent_queue<NetCarState,std::allocator<NetCarState> > *__thiscall Concurrency::concurrent_queue<NetCarState,std::allocator<NetCarState>>::`scalar deleting destructor'(Concurrency::concurrent_queue<NetCarState,std::allocator<NetCarState> > *this, unsigned int a2);
NetCarStateProvider *__thiscall NetCarStateProvider::`vector deleting destructor'(NetCarStateProvider *this, unsigned int a2);
Concurrency::details::_Concurrent_queue_base_v4::_Page *__thiscall Concurrency::concurrent_queue<NetCarState,std::allocator<NetCarState>>::_Allocate_page(Concurrency::concurrent_queue<ACPhysicsEvent,std::allocator<ACPhysicsEvent> > *this);
void __thiscall Concurrency::concurrent_queue<NetCarState,std::allocator<NetCarState>>::_Assign_and_destroy_item(Concurrency::concurrent_queue<NetCarState,std::allocator<NetCarState> > *this, void *_Dst, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Src, unsigned int _Index);
char __thiscall std::vector<WingState>::_Buy(std::vector<WingState> *this, unsigned int _Capacity);
char __thiscall std::vector<DRSZone>::_Buy(std::vector<std::vector<GridElement>> *this, unsigned int _Capacity);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_62ce881c8e81cb63ae863b7bae1f48cb_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_62ce881c8e81cb63ae863b7bae1f48cb>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, void *_Where);
void __thiscall std::vector<CarPhysicsState>::_Destroy(std::vector<CarPhysicsState> *this, CarPhysicsState *_First, CarPhysicsState *_Last);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_62ce881c8e81cb63ae863b7bae1f48cb_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_62ce881c8e81cb63ae863b7bae1f48cb>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, const long double *<_Args_0>);
void __thiscall Concurrency::concurrent_queue<NetCarState,std::allocator<NetCarState>>::_Move_item(Concurrency::concurrent_queue<NetCarState,std::allocator<NetCarState> > *this, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Dst, unsigned int _Index, void *_Src);
void __thiscall std::vector<WingState>::_Reallocate(std::vector<WingState> *this, unsigned int _Count);
void __thiscall std::vector<std::unique_ptr<DynamicWingController>>::_Reallocate(std::vector<std::unique_ptr<DynamicWingController>> *this, unsigned int _Count);
void __thiscall std::vector<std::vector<std::unique_ptr<DynamicWingController>>>::_Reallocate(std::vector<std::vector<std::unique_ptr<DynamicWingController>>> *this, unsigned int _Count);
void __thiscall std::vector<WingState>::_Reserve(std::vector<WingState> *this, unsigned int _Count);
void __thiscall std::vector<std::vector<std::unique_ptr<DynamicWingController>>>::_Reserve(std::vector<std::vector<std::unique_ptr<DynamicWingController>>> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_62ce881c8e81cb63ae863b7bae1f48cb_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_62ce881c8e81cb63ae863b7bae1f48cb>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this);
void __thiscall std::vector<CarPhysicsState>::_Tidy(std::vector<CarPhysicsState> *this);
void __thiscall std::vector<std::unique_ptr<DynamicWingController>>::_Tidy(std::vector<std::unique_ptr<DynamicWingController>> *this);
void __thiscall std::vector<std::vector<std::unique_ptr<DynamicWingController>>>::_Tidy(std::vector<std::vector<std::unique_ptr<DynamicWingController>>> *this);
void __thiscall NetCarStateProvider::activateP2P(NetCarStateProvider *this);
void __thiscall NetCarStateProvider::debugLag(NetCarStateProvider *this, bool isLagging, long double physics_time);
void __thiscall NetCarStateProvider::getPhysicsState(NetCarStateProvider *this, CarPhysicsState *physicsState);
mat44f *__thiscall NetCarStateProvider::getSmoothBodyMatrix(NetCarStateProvider *this, mat44f *result, long double physics_time, CarPhysicsState *state);
mat44f *__thiscall NetCarStateProvider::getTyreMatrix(NetCarStateProvider *this, mat44f *result, int index);
void __thiscall NetCarStateProvider::getWingState(NetCarStateProvider *this, std::vector<WingState> *ws);
void __thiscall NetCarStateProvider::initDRS(NetCarStateProvider *this);
void __thiscall NetCarStateProvider::initP2P(NetCarStateProvider *this);
void __thiscall NetCarStateProvider::initPhysicsValues(NetCarStateProvider *this);
void __thiscall NetCarStateProvider::initWings(NetCarStateProvider *this);
void __thiscall NetCarStateProvider::onRemoteStateReceived(NetCarStateProvider *this, NetCarState *s);
vec3f *__thiscall NetCarStateProvider::projectNetStatePos(NetCarStateProvider *this, vec3f *result, int ti, long double t);
void __thiscall std::vector<DRSWingSetting>::push_back(std::vector<PerformancePair> *this, PerformancePair *_Val);
void __thiscall std::vector<WingState>::push_back(std::vector<WingState> *this, const WingState *_Val);
void __thiscall NetCarStateProvider::resetDamage(NetCarStateProvider *this);
void __thiscall std::vector<std::vector<std::unique_ptr<DynamicWingController>>>::resize(std::vector<std::vector<std::unique_ptr<DynamicWingController>>> *this, unsigned int _Newsize);
void __thiscall NetCarStateProvider::setCarAvatar(NetCarStateProvider *this, CarAvatar *av);
void __thiscall NetCarStateProvider::setDamageZoneLevel(NetCarStateProvider *this, float *zones);
void __thiscall NetCarStateProvider::step(NetCarStateProvider *this, long double physics_time);
void __thiscall NetCarStateProvider::stepLagging(NetCarStateProvider *this, long double physics_time);
void __thiscall NetCarStateProvider::stepWings(NetCarStateProvider *this);
void __thiscall NetCarStateProvider::update(NetCarStateProvider *this, float dt);
void __thiscall PauseMenu::PauseMenu(PauseMenu *this, Sim *isim, ksgui::GUI *gui);
void __thiscall PauseMenu::~PauseMenu(PauseMenu *this);
void __thiscall lambda_48727aab0716447e29a81130a76093da_::operator()(PauseMenu::{ctor}::__l34::<lambda_48727aab0716447e29a81130a76093da> *this, const ksgui::OnControlClicked *ev);
void __thiscall lambda_6ae1d60a7d9f21e65a828edce0fd6489_::operator()(PauseMenu::{ctor}::__l49::<lambda_6ae1d60a7d9f21e65a828edce0fd6489> *this, const ksgui::OnControlClicked *ev);
void __thiscall lambda_b11faf5d0607572a20e6fb0f5cdb1513_::operator()(PauseMenu::{ctor}::__l22::<lambda_b11faf5d0607572a20e6fb0f5cdb1513> *this, const ksgui::OnControlClicked *ev);
void __thiscall lambda_d7112cd0a0f2ef852bd7d96ebc79d508_::operator()(PauseMenu::{ctor}::__l22::<lambda_b11faf5d0607572a20e6fb0f5cdb1513>::()::__l36::<lambda_d7112cd0a0f2ef852bd7d96ebc79d508> *this, const bool *__formal);
PauseMenu *__thiscall PauseMenu::`vector deleting destructor'(PauseMenu *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_09032053a37acb039941ba2555f4c984_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_09032053a37acb039941ba2555f4c984>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_48727aab0716447e29a81130a76093da_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_48727aab0716447e29a81130a76093da>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_511ee02b74ce79c4088195d898f4f668_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_511ee02b74ce79c4088195d898f4f668>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6ae1d60a7d9f21e65a828edce0fd6489_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_6ae1d60a7d9f21e65a828edce0fd6489>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b11faf5d0607572a20e6fb0f5cdb1513_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_b11faf5d0607572a20e6fb0f5cdb1513>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d7112cd0a0f2ef852bd7d96ebc79d508_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_d7112cd0a0f2ef852bd7d96ebc79d508>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_09032053a37acb039941ba2555f4c984_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_09032053a37acb039941ba2555f4c984>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_23c589a7d12837a2c1806c519bd33a57_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_23c589a7d12837a2c1806c519bd33a57>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this@<ecx>, int a2@<ebp>, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_48727aab0716447e29a81130a76093da_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_48727aab0716447e29a81130a76093da>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_511ee02b74ce79c4088195d898f4f668_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_511ee02b74ce79c4088195d898f4f668>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6693c32658a69fae21ad9f626de8784b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6693c32658a69fae21ad9f626de8784b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6ae1d60a7d9f21e65a828edce0fd6489_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6ae1d60a7d9f21e65a828edce0fd6489>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b11faf5d0607572a20e6fb0f5cdb1513_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b11faf5d0607572a20e6fb0f5cdb1513>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d7112cd0a0f2ef852bd7d96ebc79d508_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d7112cd0a0f2ef852bd7d96ebc79d508>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_23c589a7d12837a2c1806c519bd33a57_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_23c589a7d12837a2c1806c519bd33a57>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6693c32658a69fae21ad9f626de8784b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_6693c32658a69fae21ad9f626de8784b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_09032053a37acb039941ba2555f4c984_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_09032053a37acb039941ba2555f4c984>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_23c589a7d12837a2c1806c519bd33a57_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_23c589a7d12837a2c1806c519bd33a57>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_48727aab0716447e29a81130a76093da_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_48727aab0716447e29a81130a76093da>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_511ee02b74ce79c4088195d898f4f668_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_511ee02b74ce79c4088195d898f4f668>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6693c32658a69fae21ad9f626de8784b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6693c32658a69fae21ad9f626de8784b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6ae1d60a7d9f21e65a828edce0fd6489_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6ae1d60a7d9f21e65a828edce0fd6489>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b11faf5d0607572a20e6fb0f5cdb1513_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b11faf5d0607572a20e6fb0f5cdb1513>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d7112cd0a0f2ef852bd7d96ebc79d508_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d7112cd0a0f2ef852bd7d96ebc79d508>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
void __thiscall PauseMenu::blankButton(PauseMenu *this, ePauseMenuButtons button, bool value);
ksgui::ActiveButton *__thiscall PauseMenu::getButtonByName(PauseMenu *this, const std::wstring *name);
void __thiscall PauseMenu::onVisibleChanged(PauseMenu *this, bool newValue);
// void __userpurge PauseMenu::render(PauseMenu *this@<ecx>, float a2@<ebp>, int a3@<edi>, int a4@<esi>, float dt);
CarPhysicsState *__cdecl std::_Copy_impl<CarPhysicsState *,CarPhysicsState *>(CarPhysicsState *_First, CarPhysicsState *_Last, CarPhysicsState *_Dest);
std::vector<WingState> *__cdecl std::_Copy_impl<std::vector<WingState> *,std::vector<WingState> *>(std::vector<WingState> *_First, std::vector<WingState> *_Last, std::vector<WingState> *_Dest);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::vector<ReplayFrameWingStatus>>>>(std::vector<unsigned char> *_First, std::vector<unsigned char> *_Last);
void __thiscall std::_Func_class<void,>::_Do_alloc<std::_Func_impl<std::_Callable_obj<_lambda_af977d7892022dd0d345c4857a65d9cc_,0>,std::allocator<std::_Func_class<void,>>,void,>,_lambda_af977d7892022dd0d345c4857a65d9cc_,std::allocator<std::_Func_class<void,>>>(std::_Func_class<void> *this, PhysicsAvatar::{ctor}::__l8::<lambda_6908e2633eea881755673b1f9e885fcb>::()::__l11::<lambda_af977d7892022dd0d345c4857a65d9cc> *_Val, std::allocator<std::_Func_class<void> > _Ax);
CarPhysicsState *__thiscall std::vector<CarPhysicsState>::_Ucopy<CarPhysicsState *>(std::vector<CarPhysicsState> *this, CarPhysicsState *_First, CarPhysicsState *_Last, CarPhysicsState *_Ptr);
std::vector<WingState> *__thiscall std::vector<std::vector<WingState>>::_Ucopy<std::vector<WingState> *>(std::vector<std::vector<WingState>> *this, std::vector<WingState> *_First, std::vector<WingState> *_Last, std::vector<WingState> *_Ptr);
std::vector<WingState> *__cdecl std::_Uninit_copy<std::vector<WingState> *,std::vector<WingState> *,std::allocator<std::vector<WingState>>>(std::vector<WingState> *_First, std::vector<WingState> *_Last, std::vector<WingState> *_Dest);
WingState *__cdecl std::_Uninit_move<WingState *,WingState *,std::allocator<WingState>,WingState>(WingState *_First, WingState *_Last, WingState *_Dest);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, std::function<void __cdecl(void)> *_Right);
void __thiscall std::vector<WingState>::vector<WingState>(std::vector<WingState> *this, const std::vector<WingState> *_Right);
void __thiscall CarPhysicsState::CarPhysicsState(CarPhysicsState *this, const CarPhysicsState *__that);
void __thiscall PhysicsAvatar::PhysicsAvatar(PhysicsAvatar *this, Sim *isim);
void __thiscall SurfaceDef::SurfaceDef(SurfaceDef *this, const SurfaceDef *sd);
void __thiscall OnNewSessionEvent::~OnNewSessionEvent(OnNewSessionEvent *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_af977d7892022dd0d345c4857a65d9cc_,0>,std::allocator<std::_Func_class<void,>>,void,>::~_Func_impl<std::_Callable_obj<_lambda_af977d7892022dd0d345c4857a65d9cc_,0>,std::allocator<std::_Func_class<void,>>,void,>(std::_Func_impl<std::_Callable_obj<<lambda_af977d7892022dd0d345c4857a65d9cc>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall Concurrency::concurrent_queue<std::function<void __cdecl (void)>,std::allocator<std::function<void __cdecl (void)>>>::~concurrent_queue<std::function<void __cdecl (void)>,std::allocator<std::function<void __cdecl (void)>>>(Concurrency::concurrent_queue<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > *this);
void __thiscall PhysicsAvatar::~PhysicsAvatar(PhysicsAvatar *this);
void __thiscall Concurrency::concurrent_queue<std::function<void __cdecl (void)>,std::allocator<std::function<void __cdecl (void)>>>::_Destroyer::~_Destroyer(Concurrency::concurrent_queue<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Destroyer *this);
std::function<void __cdecl(void)> *__thiscall std::function<void __cdecl (void)>::operator=(std::function<void __cdecl(void)> *this, std::function<void __cdecl(void)> *_Right);
std::vector<CarPhysicsState> *__thiscall std::vector<CarPhysicsState>::operator=(std::vector<CarPhysicsState> *this, const std::vector<CarPhysicsState> *_Right);
std::vector<std::vector<WingState>> *__thiscall std::vector<std::vector<WingState>>::operator=(std::vector<std::vector<WingState>> *this, const std::vector<std::vector<WingState>> *_Right);
void __thiscall lambda_6908e2633eea881755673b1f9e885fcb_::operator()(PhysicsAvatar::{ctor}::__l8::<lambda_6908e2633eea881755673b1f9e885fcb> *this, const OnNewSessionEvent *ev);
void __thiscall lambda_8165eff2958b95c6aad4cfdf700ba972_::operator()(PhysicsAvatar::onPhysicsStepCompleted::__l6::<lambda_8165eff2958b95c6aad4cfdf700ba972> *this);
void __thiscall lambda_af977d7892022dd0d345c4857a65d9cc_::operator()(PhysicsAvatar::{ctor}::__l8::<lambda_6908e2633eea881755673b1f9e885fcb>::()::__l11::<lambda_af977d7892022dd0d345c4857a65d9cc> *this);
void __thiscall lambda_ee7410b782c2824aac0ab2a2496d5d25_::operator()(PhysicsAvatar::{ctor}::__l6::<lambda_ee7410b782c2824aac0ab2a2496d5d25> *this, const OnFlagEvent *ev);
void __thiscall lambda_f37ef2e946bffe0888bd3d7f90b51d2c_::operator()(PhysicsAvatar::{ctor}::__l6::<lambda_ee7410b782c2824aac0ab2a2496d5d25>::()::__l9::<lambda_f37ef2e946bffe0888bd3d7f90b51d2c> *this);
std::_Func_impl<std::_Callable_obj<<lambda_044fc942b21b790926a874e6db5381f1>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c661273354399506f15d61a79db73e0f_,0>,std::allocator<std::_Func_class<void,>>,void,>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_044fc942b21b790926a874e6db5381f1>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_af977d7892022dd0d345c4857a65d9cc>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_af977d7892022dd0d345c4857a65d9cc_,0>,std::allocator<std::_Func_class<void,>>,void,>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_af977d7892022dd0d345c4857a65d9cc>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
Concurrency::concurrent_queue<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > *__thiscall Concurrency::concurrent_queue<std::function<void __cdecl (void)>,std::allocator<std::function<void __cdecl (void)>>>::`scalar deleting destructor'(Concurrency::concurrent_queue<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > *this, unsigned int a2);
PhysicsAvatar *__thiscall PhysicsAvatar::`vector deleting destructor'(PhysicsAvatar *this, unsigned int a2);
void __thiscall Concurrency::concurrent_queue<std::function<void __cdecl (void)>,std::allocator<std::function<void __cdecl (void)>>>::_Assign_and_destroy_item(Concurrency::concurrent_queue<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > *this, void *_Dst, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Src, unsigned int _Index);
char __thiscall std::vector<CarPhysicsState>::_Buy(std::vector<CarPhysicsState> *this, unsigned int _Capacity);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_650280e6ffaef14c009f2a60cf07fae3_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_650280e6ffaef14c009f2a60cf07fae3>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6908e2633eea881755673b1f9e885fcb_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_6908e2633eea881755673b1f9e885fcb>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8165eff2958b95c6aad4cfdf700ba972_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_8165eff2958b95c6aad4cfdf700ba972>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ee7410b782c2824aac0ab2a2496d5d25_,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &>>,void,OnFlagEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_ee7410b782c2824aac0ab2a2496d5d25>,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &> >,void,OnFlagEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f37ef2e946bffe0888bd3d7f90b51d2c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f37ef2e946bffe0888bd3d7f90b51d2c>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall Concurrency::concurrent_queue<std::function<void __cdecl (void)>,std::allocator<std::function<void __cdecl (void)>>>::_Copy_item(Concurrency::concurrent_queue<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > *this, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Dst, unsigned int _Index, const void *_Src);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_650280e6ffaef14c009f2a60cf07fae3_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_650280e6ffaef14c009f2a60cf07fae3>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, const long double *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6908e2633eea881755673b1f9e885fcb_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6908e2633eea881755673b1f9e885fcb>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_756de79827380d033d8c1c498213bb57_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_756de79827380d033d8c1c498213bb57>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, const long double *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8165eff2958b95c6aad4cfdf700ba972_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8165eff2958b95c6aad4cfdf700ba972>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_86402815093bc779658fb3eae701d822_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_86402815093bc779658fb3eae701d822>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_af977d7892022dd0d345c4857a65d9cc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_af977d7892022dd0d345c4857a65d9cc>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ee7410b782c2824aac0ab2a2496d5d25_,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &>>,void,OnFlagEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ee7410b782c2824aac0ab2a2496d5d25>,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &> >,void,OnFlagEvent const &> *this, const OnFlagEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f37ef2e946bffe0888bd3d7f90b51d2c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f37ef2e946bffe0888bd3d7f90b51d2c>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe26347f8f598f7d6c2b815ce9b7c4dc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fe26347f8f598f7d6c2b815ce9b7c4dc>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_756de79827380d033d8c1c498213bb57_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_756de79827380d033d8c1c498213bb57>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_86402815093bc779658fb3eae701d822_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_86402815093bc779658fb3eae701d822>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_af977d7892022dd0d345c4857a65d9cc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_af977d7892022dd0d345c4857a65d9cc>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe26347f8f598f7d6c2b815ce9b7c4dc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_fe26347f8f598f7d6c2b815ce9b7c4dc>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall Concurrency::concurrent_queue<std::function<void __cdecl (void)>,std::allocator<std::function<void __cdecl (void)>>>::_Move_item(Concurrency::concurrent_queue<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > *this, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Dst, unsigned int _Index, void *_Src);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_650280e6ffaef14c009f2a60cf07fae3_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_650280e6ffaef14c009f2a60cf07fae3>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6908e2633eea881755673b1f9e885fcb_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6908e2633eea881755673b1f9e885fcb>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_756de79827380d033d8c1c498213bb57_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_756de79827380d033d8c1c498213bb57>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8165eff2958b95c6aad4cfdf700ba972_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8165eff2958b95c6aad4cfdf700ba972>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_86402815093bc779658fb3eae701d822_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_86402815093bc779658fb3eae701d822>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_af977d7892022dd0d345c4857a65d9cc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_af977d7892022dd0d345c4857a65d9cc>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ee7410b782c2824aac0ab2a2496d5d25_,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &>>,void,OnFlagEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ee7410b782c2824aac0ab2a2496d5d25>,0>,std::allocator<std::_Func_class<void,OnFlagEvent const &> >,void,OnFlagEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f37ef2e946bffe0888bd3d7f90b51d2c_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f37ef2e946bffe0888bd3d7f90b51d2c>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe26347f8f598f7d6c2b815ce9b7c4dc_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fe26347f8f598f7d6c2b815ce9b7c4dc>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::vector<CarPhysicsState>::clear(std::vector<CarPhysicsState> *this);
void __thiscall PhysicsAvatar::executeOnPhysicsThread(PhysicsAvatar *this, std::function<void __cdecl(void)> f);
DynamicTrackStatus *__thiscall PhysicsAvatar::getDynamicTrackStatus(PhysicsAvatar *this, DynamicTrackStatus *result);
TemperatureInfo *__thiscall PhysicsAvatar::getTemperatureInfo(PhysicsAvatar *this, TemperatureInfo *result);
// mat44f *__usercall getTimeCorrectedMatrix@<eax>(int a1@<edi>, int a2@<esi>, mat44f *result, const mat44f *src, const vec3f *vel, const vec3f *avel, float dt);
void __thiscall PhysicsAvatar::onPhysicsStepCompleted(PhysicsAvatar *this, long double pt);
void __thiscall PhysicsAvatar::pausePhysics(PhysicsAvatar *this, bool mode);
void __thiscall PhysicsAvatar::render(PhysicsAvatar *this, float dt);
void __thiscall PhysicsAvatar::setAllowedTyresOut(PhysicsAvatar *this, int v);
void __thiscall PhysicsAvatar::shutdown(PhysicsAvatar *this);
void __thiscall PhysicsAvatar::startPhysics(PhysicsAvatar *this);
void __thiscall PhysicsAvatar::stepCommandQueue(PhysicsAvatar *this);
void __thiscall PhysicsAvatar::update(PhysicsAvatar *this, float deltat);
void __thiscall PhysicsAvatar::updateCrossThreadValues(PhysicsAvatar *this);
void __thiscall PhysicsCarStateProvider::PhysicsCarStateProvider(PhysicsCarStateProvider *this, Car *car);
void __thiscall PhysicsCarStateProvider::getPhysicsState(PhysicsCarStateProvider *this, CarPhysicsState *physicsState);
void __thiscall PhysicsCarStateProvider::getWingState(PhysicsCarStateProvider *this, std::vector<WingState> *wingStatus);
void __thiscall PhysicsDriveThread::PhysicsDriveThread(PhysicsDriveThread *this, PhysicsEngine *aphysicsEngine, Game *agame);
void __thiscall PhysicsDriveThread::~PhysicsDriveThread(PhysicsDriveThread *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_29c2637f94c4da9ecd28a46d4bd8728b_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_29c2637f94c4da9ecd28a46d4bd8728b>,0>,std::allocator<std::_Func_class<void> >,void> *this);
unsigned int __thiscall std::_LaunchPad<std::_Bind<0,void,_lambda_50e63f57fef20886d046ed60550835f6_,>>::_Go(std::_LaunchPad<std::_Bind<0,void,<lambda_50e63f57fef20886d046ed60550835f6> > > *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_29c2637f94c4da9ecd28a46d4bd8728b_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_29c2637f94c4da9ecd28a46d4bd8728b>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_29c2637f94c4da9ecd28a46d4bd8728b_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_29c2637f94c4da9ecd28a46d4bd8728b>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall PhysicsDriveThread::pause(PhysicsDriveThread *this);
void __thiscall PhysicsDriveThread::run(PhysicsDriveThread *this);
void __thiscall PhysicsDriveThread::start(PhysicsDriveThread *this);
void __thiscall PhysicsDriveThread::step(PhysicsDriveThread *this);
void __thiscall PhysicsDriveThread::stop(PhysicsDriveThread *this);
void __thiscall ProximityIndicator::ProximityIndicator(ProximityIndicator *this, Sim *sim);
ProximityIndicator *__thiscall ProximityIndicator::`vector deleting destructor'(ProximityIndicator *this, unsigned int a2);
void __thiscall ProximityIndicator::renderHUD(ProximityIndicator *this, float deltaT);
void __thiscall PyPlugin::PyPlugin(PyPlugin *this, const std::shared_ptr<PyModule> *module, Sim *sim);
void __thiscall PyPlugin::~PyPlugin(PyPlugin *this);
PyPlugin *__thiscall PyPlugin::`scalar deleting destructor'(PyPlugin *this, unsigned int a2);
std::wstring *__thiscall INIReader::getFileName(INIReader *this, std::wstring *result);
void __thiscall PyPlugin::initFunc(PyPlugin *this, _object **f, const std::wstring *name);
void __thiscall PyPlugin::shutdown(PyPlugin *this);
void __thiscall PyPlugin::update(PyPlugin *this, float dt);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, PythonInterface::addPythonOnAppDismissedListener::__l9::<lambda_51fb2bdb3a92d1d62a0bbd8b197acfe4> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, PythonInterface::addPythonOnAppActivatedListener::__l9::<lambda_c9ea1a271e816ef3b99dbad5e0c17716> *_Func);
void __thiscall std::shared_ptr<PyModule>::_Resetp<PyModule>(std::shared_ptr<PyModule> *this, PyModule *_Px);
void __thiscall std::shared_ptr<Font>::reset<Font>(std::shared_ptr<Font> *this, Font *_Px);
// void __userpurge PythonForm::PythonForm(PythonForm *this@<ecx>, unsigned int a2@<ebx>, std::wstring name, ksgui::GUI *gui, int aCategory);
void __thiscall PythonInterface::PythonInterface(PythonInterface *this, Sim *sim);
void __thiscall std::unique_ptr<PyInterpreter>::~unique_ptr<PyInterpreter>(std::unique_ptr<PyInterpreter> *this);
void __thiscall PythonInterface::~PythonInterface(PythonInterface *this);
void __thiscall lambda_6532acc743d418472b2894fb03637669_::operator()(PythonInterface::addPythonOnValidatedListener::__l6::<lambda_6532acc743d418472b2894fb03637669> *this, const std::wstring *text);
void __thiscall lambda_e049920d857c7b68e3782a6d9b9d14d1_::operator()(PythonInterface::addPythonOnChatMessageListener::__l14::<lambda_e049920d857c7b68e3782a6d9b9d14d1> *this, const OnChatMessageEvent *ev);
std::_Func_impl<std::_Callable_obj<<lambda_76236101e3eaa907b75e3afcab748728>,0>,std::allocator<std::_Func_class<void,std::wstring const &> >,void,std::wstring const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b2cfcc70492f792e61fd520a8d98558b_,0>,std::allocator<std::_Func_class<void,std::wstring const &>>,void,std::wstring const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_76236101e3eaa907b75e3afcab748728>,0>,std::allocator<std::_Func_class<void,std::wstring const &> >,void,std::wstring const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_da4d08dd4ba38c2fb57b85b2222553ad>,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &> >,void,OnChatMessageEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_da4d08dd4ba38c2fb57b85b2222553ad_,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &>>,void,OnChatMessageEvent const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_da4d08dd4ba38c2fb57b85b2222553ad>,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &> >,void,OnChatMessageEvent const &> *this, unsigned int a2);
INIReaderDocuments *__thiscall INIReaderDocuments::`vector deleting destructor'(INIReaderDocuments *this, unsigned int a2);
PythonForm *__thiscall PythonForm::`vector deleting destructor'(PythonForm *this, unsigned int a2);
PythonInterface *__thiscall PythonInterface::`scalar deleting destructor'(PythonInterface *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2e66fc190c6ffff5422e44aa2062ac48_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_2e66fc190c6ffff5422e44aa2062ac48>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_51fb2bdb3a92d1d62a0bbd8b197acfe4_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_51fb2bdb3a92d1d62a0bbd8b197acfe4>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b6af65a366bc45ff390e092ba6c9c936_,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &>>,void,ksgui::OnCheckBoxChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_b6af65a366bc45ff390e092ba6c9c936>,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &> >,void,ksgui::OnCheckBoxChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c9ea1a271e816ef3b99dbad5e0c17716_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_c9ea1a271e816ef3b99dbad5e0c17716>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d59c1b0b8505012419449fc7aa472c96_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_d59c1b0b8505012419449fc7aa472c96>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this, void *_Where);
void __thiscall std::_Ref_count<PyModule>::_Destroy(std::_Ref_count<PyModule> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_44b5ac47c068dd6558d7c817ed79d7b9_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_44b5ac47c068dd6558d7c817ed79d7b9>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_51fb2bdb3a92d1d62a0bbd8b197acfe4_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c9ea1a271e816ef3b99dbad5e0c17716>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6532acc743d418472b2894fb03637669_,0>,std::allocator<std::_Func_class<void,std::wstring const &>>,void,std::wstring const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6532acc743d418472b2894fb03637669>,0>,std::allocator<std::_Func_class<void,std::wstring const &> >,void,std::wstring const &> *this, const std::wstring *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_92e6a6a1c5acd91b0a061260eca2c5b7_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_92e6a6a1c5acd91b0a061260eca2c5b7>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b6af65a366bc45ff390e092ba6c9c936_,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &>>,void,ksgui::OnCheckBoxChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b6af65a366bc45ff390e092ba6c9c936>,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &> >,void,ksgui::OnCheckBoxChanged const &> *this, const ksgui::OnCheckBoxChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e049920d857c7b68e3782a6d9b9d14d1_,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &>>,void,OnChatMessageEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e049920d857c7b68e3782a6d9b9d14d1>,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &> >,void,OnChatMessageEvent const &> *this, const OnChatMessageEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_44b5ac47c068dd6558d7c817ed79d7b9_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_44b5ac47c068dd6558d7c817ed79d7b9>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6532acc743d418472b2894fb03637669_,0>,std::allocator<std::_Func_class<void,std::wstring const &>>,void,std::wstring const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_6532acc743d418472b2894fb03637669>,0>,std::allocator<std::_Func_class<void,std::wstring const &> >,void,std::wstring const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_92e6a6a1c5acd91b0a061260eca2c5b7_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_92e6a6a1c5acd91b0a061260eca2c5b7>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e049920d857c7b68e3782a6d9b9d14d1_,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &>>,void,OnChatMessageEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e049920d857c7b68e3782a6d9b9d14d1>,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &> >,void,OnChatMessageEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2e66fc190c6ffff5422e44aa2062ac48_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2e66fc190c6ffff5422e44aa2062ac48>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_44b5ac47c068dd6558d7c817ed79d7b9_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_44b5ac47c068dd6558d7c817ed79d7b9>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_51fb2bdb3a92d1d62a0bbd8b197acfe4_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_51fb2bdb3a92d1d62a0bbd8b197acfe4>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6532acc743d418472b2894fb03637669_,0>,std::allocator<std::_Func_class<void,std::wstring const &>>,void,std::wstring const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6532acc743d418472b2894fb03637669>,0>,std::allocator<std::_Func_class<void,std::wstring const &> >,void,std::wstring const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_92e6a6a1c5acd91b0a061260eca2c5b7_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_92e6a6a1c5acd91b0a061260eca2c5b7>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b6af65a366bc45ff390e092ba6c9c936_,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &>>,void,ksgui::OnCheckBoxChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b6af65a366bc45ff390e092ba6c9c936>,0>,std::allocator<std::_Func_class<void,ksgui::OnCheckBoxChanged const &> >,void,ksgui::OnCheckBoxChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c9ea1a271e816ef3b99dbad5e0c17716_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c9ea1a271e816ef3b99dbad5e0c17716>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d59c1b0b8505012419449fc7aa472c96_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d59c1b0b8505012419449fc7aa472c96>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e049920d857c7b68e3782a6d9b9d14d1_,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &>>,void,OnChatMessageEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e049920d857c7b68e3782a6d9b9d14d1>,0>,std::allocator<std::_Func_class<void,OnChatMessageEvent const &> >,void,OnChatMessageEvent const &> *this);
_object *__cdecl ac_addButton(_object *self, _object *args);
_object *__cdecl ac_addCheckBox(_object *self, _object *args);
_object *__cdecl ac_addGraph(_object *self, _object *args);
_object *__cdecl ac_addItem(_object *self, _object *args);
_object *__cdecl ac_addLabel(_object *self, _object *args);
_object *__cdecl ac_addListBox(_object *self, _object *args);
_object *__cdecl ac_addOnAppActivatedListener(_object *self, _object *args);
_object *__cdecl ac_addOnAppDismissedListener(_object *self, _object *args);
_object *__cdecl ac_addOnChatMessageListener(_object *self, _object *args);
_object *__cdecl ac_addOnCheckBoxChanged(_object *self, _object *args);
_object *__cdecl ac_addOnClickedListener(_object *self, _object *args);
_object *__cdecl ac_addOnListBoxDeselectionListener(_object *self, _object *args);
_object *__cdecl ac_addOnListBoxSelectionListener(_object *self, _object *args);
_object *__cdecl ac_addOnValidateListener(_object *self, _object *args);
_object *__cdecl ac_addOnValueChangeListener(_object *self, _object *args);
_object *__cdecl ac_addProgressBar(_object *self, _object *args);
_object *__cdecl ac_addRenderCallback(_object *self, _object *args);
_object *__cdecl ac_addSerieToGraph(_object *self, _object *args);
_object *__cdecl ac_addSpinner(_object *self, _object *args);
_object *__cdecl ac_addTextBox(_object *self, _object *args);
_object *__cdecl ac_addTextInput(_object *self, _object *args);
_object *__cdecl ac_addValueToGraph(_object *self, _object *args);
_object *__cdecl ac_console(_object *self, _object *args);
_object *__cdecl ac_drawBackground(_object *self, _object *args);
_object *__cdecl ac_drawBorder(_object *self, _object *args);
_object *__cdecl ac_focusCar(_object *self, _object *args);
_object *__cdecl ac_freeCameraMoveForward(_object *self, _object *args);
_object *__cdecl ac_freeCameraMoveRight(_object *self, _object *args);
_object *__cdecl ac_freeCameraMoveUpWorld(_object *self, _object *args);
// _object *__usercall ac_freeCameraRotateHeading@<eax>(int a1@<esi>, _object *self, _object *args);
// _object *__usercall ac_freeCameraRotatePitch@<eax>(int a1@<esi>, _object *self, _object *args);
// _object *__usercall ac_freeCameraRotateRoll@<eax>(int a1@<esi>, _object *self, _object *args);
_object *__cdecl ac_freeCameraSetClearColor(_object *self, _object *args);
_object *__cdecl ac_getCameraCarCount(_object *self, _object *args);
_object *__cdecl ac_getCameraMode();
_object *__cdecl ac_getCarBallast(_object *self, _object *args);
_object *__cdecl ac_getCarEngineBrakeCount(_object *self, _object *args);
_object *__cdecl ac_getCarFFB();
_object *__cdecl ac_getCarLeaderboardPosition(_object *self, _object *args);
_object *__cdecl ac_getCarMinHeight(_object *self, _object *args);
_object *__cdecl ac_getCarName(_object *self, _object *args);
_object *__cdecl ac_getCarPowerControllerCount(_object *self, _object *args);
_object *__cdecl ac_getCarRealTimeLeaderboardPosition(_object *self, _object *args);
_object *__cdecl ac_getCarRestrictor(_object *self, _object *args);
_object *__cdecl ac_getCarSkin(_object *self, _object *args);
_object *__cdecl ac_getCarState(_object *self, _object *args);
_object *__cdecl ac_getCarTyreCompound(_object *self, _object *args);
_object *__cdecl ac_getCarsCount();
_object *__cdecl ac_getCurrentSplits(_object *self, _object *args);
_object *__cdecl ac_getDriverName(_object *self, _object *args);
_object *__cdecl ac_getDriverNationCode(_object *self, _object *args);
_object *__cdecl ac_getFocusedCar();
_object *__cdecl ac_getLastSplits(_object *self, _object *args);
_object *__cdecl ac_getPosition(_object *self, _object *args);
_object *__cdecl ac_getItemCount(_object *self, _object *args);
_object *__cdecl ac_getServerHttpPort();
_object *__cdecl ac_getServerIP();
_object *__cdecl ac_getServerName();
_object *__cdecl ac_getServerSlotsCount();
_object *__cdecl ac_getSize(_object *self, _object *args);
_object *__cdecl ac_getText(_object *self, _object *args);
_object *__cdecl ac_getTrackConfiguration(_object *self, _object *args);
_object *__cdecl ac_getTrackLength();
_object *__cdecl ac_getTrackName(_object *self, _object *args);
_object *__cdecl ac_getValue(_object *self, _object *args);
_object *__cdecl ac_getWindDirection();
_object *__cdecl ac_getWindSpeed();
_object *__cdecl ac_glBegin(_object *self, _object *args);
_object *__cdecl ac_glColor3f(_object *self, _object *args);
_object *__cdecl ac_glColor4f(_object *self, _object *args);
_object *__cdecl ac_glEnd();
_object *__cdecl ac_glQuad(_object *self, _object *args);
_object *__cdecl ac_glQuadTextured(_object *self, _object *args);
_object *__cdecl ac_glVertex2f(_object *self, _object *args);
_object *__cdecl ac_initFont(_object *self, _object *args);
_object *__cdecl ac_isAIControlled(_object *self, _object *args);
_object *__cdecl ac_isAcLive();
_object *__cdecl ac_isCameraOnBoard(_object *self, _object *args);
_object *__cdecl ac_isCarInPit(_object *self, _object *args);
_object *__cdecl ac_isCarInPitlane(_object *self, _object *args);
_object *__cdecl ac_isConnected(_object *self, _object *args);
_object *__cdecl ac_log(_object *self, _object *args);
// _object *__usercall ac_newApp@<eax>(unsigned int a1@<ebx>, _object *self, _object *args);
// _object *__usercall ac_newTexture@<eax>(unsigned int a1@<ebx>, _object *self, _object *args);
_object *__cdecl ac_restart();
_object *__cdecl ac_sendChatMessage(_object *self, _object *args);
_object *__cdecl ac_setAllowDeselectionOnListBox(_object *self, _object *args);
_object *__cdecl ac_higlightListBoxElement(_object *self, _object *args);
_object *__cdecl ac_setAppTitle(_object *self, _object *args);
_object *__cdecl ac_setBackgroundColor(_object *self, _object *args);
_object *__cdecl ac_setBackgroundOpacity(_object *self, _object *args);
// _object *__usercall ac_setBackgroundTexture@<eax>(unsigned int a1@<ebx>, _object *self, _object *args);
_object *__cdecl ac_setCameraCar(_object *self, _object *args);
_object *__cdecl ac_setCameraMode(_object *self, _object *args);
_object *__cdecl ac_setCarFFB(_object *self, _object *args);
_object *__cdecl ac_setCustomFont(_object *self, _object *args);
_object *__cdecl ac_setFocus(_object *self, _object *args);
_object *__cdecl ac_setFont();
_object *__cdecl ac_setFontAlignment(_object *self, _object *args);
_object *__cdecl ac_setFontColor(_object *self, _object *args);
_object *__cdecl ac_setFontSize(_object *self, _object *args);
_object *__cdecl ac_setIconPosition(_object *self, _object *args);
_object *__cdecl ac_setPosition(_object *self, _object *args);
_object *__cdecl ac_setRange(_object *self, _object *args);
_object *__cdecl ac_setSize(_object *self, _object *args);
_object *__cdecl ac_setStep(_object *self, _object *args);
_object *__cdecl ac_setText(_object *self, _object *args);
_object *__cdecl ac_setTitlePosition(_object *self, _object *args);
_object *__cdecl ac_setValue(_object *self, _object *args);
_object *__cdecl ac_setVisible(_object *self, _object *args);
_object *__cdecl ac_shutdown();
int __thiscall PythonInterface::addFormToTaskBar(PythonInterface *this, ksgui::Control *c);
int __thiscall PythonInterface::addPythonListBoxDeselectionElementListener(PythonInterface *this, int index, _object *ob);
int __thiscall PythonInterface::addPythonListBoxElementListener(PythonInterface *this, int index, _object *ob);
int __thiscall PythonInterface::addPythonOnAppActivatedListener(PythonInterface *this, int index, _object *ob);
int __thiscall PythonInterface::addPythonOnAppDismissedListener(PythonInterface *this, int index, _object *ob);
int __thiscall PythonInterface::addPythonOnCheckBoxChanged(PythonInterface *this, int index, _object *ob);
int __thiscall PythonInterface::addPythonOnClickedListener(PythonInterface *this, int index, _object *ob);
int __thiscall PythonInterface::addPythonOnValidatedListener(PythonInterface *this, int index, _object *ob);
int __thiscall PythonInterface::addPythonOnValueChangedListener(PythonInterface *this, int index, _object *ob);
void __cdecl clearPythonCache(std::wstring appPath);
ksgui::Control *__thiscall PythonInterface::getControl(PythonInterface *this, unsigned int index);
// int __userpurge PythonInterface::getTexture@<eax>(PythonInterface *this@<ecx>, unsigned int a2@<ebx>, std::wstring t);
Texture *__thiscall PythonInterface::getTextureByIndex(PythonInterface *this, Texture *result, unsigned int index);
_object *PythonInterface::printErr();
void __thiscall PythonForm::render(PythonForm *this, float dt);
// void __userpurge RaceEvent::RaceEvent(RaceEvent *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
RaceEvent *__thiscall RaceEvent::`scalar deleting destructor'(RaceEvent *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_76ca4c382ab4389b129882793988837a_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_76ca4c382ab4389b129882793988837a>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_76ca4c382ab4389b129882793988837a_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_76ca4c382ab4389b129882793988837a>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_76ca4c382ab4389b129882793988837a_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_76ca4c382ab4389b129882793988837a>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
void __thiscall RaceEvent::update(RaceEvent *this, float dt);
void __thiscall RaceEvent::verifyConditions(RaceEvent *this);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, RaceManager::initOffline::__l127::<lambda_5c8e18c6096c34f7d85a3c1b4614f402> *_Func);
bool __cdecl std::operator==<unsigned char,std::allocator<unsigned char>>(const std::vector<unsigned char> *_Left, const std::vector<unsigned char> *_Right);
void __cdecl std::_Adjust_heap<RealTimeCarDesc *,int,RealTimeCarDesc,_lambda_43f065e4bf3ce08fa9c962bd292d54b7_>(RealTimeCarDesc *_First, int _Hole, int _Bottom, RealTimeCarDesc *_Val);
void __cdecl std::_Adjust_heap<RealTimeCarDesc *,int,RealTimeCarDesc,_lambda_59c3976748667e1e7edd4d54891c675d_>(RealTimeCarDesc *_First, int _Hole, int _Bottom, RealTimeCarDesc *_Val, RaceManager::updateCarsRealTimePositions::__l34::<lambda_59c3976748667e1e7edd4d54891c675d> _Pred);
LeaderboardEntry *__cdecl std::_Copy_impl<LeaderboardEntry *,LeaderboardEntry *>(LeaderboardEntry *_First, LeaderboardEntry *_Last, LeaderboardEntry *_Dest);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<OnSessionEndEvent>>>(OnSessionEndEvent *_First, OnSessionEndEvent *_Last);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<Session>>>(Session *_First, Session *_Last);
void __cdecl std::_Insertion_sort1<RealTimeCarDesc *,_lambda_43f065e4bf3ce08fa9c962bd292d54b7_,RealTimeCarDesc>(RealTimeCarDesc *_First, RealTimeCarDesc *_Last);
void __cdecl std::_Insertion_sort1<RealTimeCarDesc *,_lambda_59c3976748667e1e7edd4d54891c675d_,RealTimeCarDesc>(RealTimeCarDesc *_First, RealTimeCarDesc *_Last, RaceManager::updateCarsRealTimePositions::__l34::<lambda_59c3976748667e1e7edd4d54891c675d> _Pred);
void __cdecl std::_Make_heap<RealTimeCarDesc *,int,RealTimeCarDesc,_lambda_43f065e4bf3ce08fa9c962bd292d54b7_>(RealTimeCarDesc *_First, RealTimeCarDesc *_Last);
void __cdecl std::_Make_heap<RealTimeCarDesc *,int,RealTimeCarDesc,_lambda_59c3976748667e1e7edd4d54891c675d_>(RealTimeCarDesc *_First, RealTimeCarDesc *_Last, RaceManager::updateCarsRealTimePositions::__l34::<lambda_59c3976748667e1e7edd4d54891c675d> _Pred);
void __cdecl std::_Med3<RealTimeCarDesc *,_lambda_43f065e4bf3ce08fa9c962bd292d54b7_>(RealTimeCarDesc *_First, RealTimeCarDesc *_Mid, RealTimeCarDesc *_Last);
void __cdecl std::_Med3<RealTimeCarDesc *,_lambda_59c3976748667e1e7edd4d54891c675d_>(RealTimeCarDesc *_First, RealTimeCarDesc *_Mid, RealTimeCarDesc *_Last, RaceManager::updateCarsRealTimePositions::__l34::<lambda_59c3976748667e1e7edd4d54891c675d> _Pred);
void __cdecl std::_Median<RealTimeCarDesc *,_lambda_43f065e4bf3ce08fa9c962bd292d54b7_>(RealTimeCarDesc *_First, RealTimeCarDesc *_Mid, RealTimeCarDesc *_Last);
void __cdecl std::_Median<RealTimeCarDesc *,_lambda_59c3976748667e1e7edd4d54891c675d_>(RealTimeCarDesc *_First, RealTimeCarDesc *_Mid, RealTimeCarDesc *_Last, RaceManager::updateCarsRealTimePositions::__l34::<lambda_59c3976748667e1e7edd4d54891c675d> _Pred);
void __cdecl std::_Push_heap<RealTimeCarDesc *,int,RealTimeCarDesc,_lambda_59c3976748667e1e7edd4d54891c675d_>(RealTimeCarDesc *_First, int _Hole, int _Top, RealTimeCarDesc *_Val, RaceManager::updateCarsRealTimePositions::__l34::<lambda_59c3976748667e1e7edd4d54891c675d> _Pred);
void __cdecl std::_Sort<RealTimeCarDesc *,int,_lambda_43f065e4bf3ce08fa9c962bd292d54b7_>(RealTimeCarDesc *_First, RealTimeCarDesc *_Last, int _Ideal, RaceManager::updateCarsRealTimePositions::__l40::<lambda_43f065e4bf3ce08fa9c962bd292d54b7> _Pred);
void __cdecl std::_Sort<RealTimeCarDesc *,int,_lambda_59c3976748667e1e7edd4d54891c675d_>(RealTimeCarDesc *_First, RealTimeCarDesc *_Last, int _Ideal, RaceManager::updateCarsRealTimePositions::__l34::<lambda_59c3976748667e1e7edd4d54891c675d> _Pred);
void __cdecl std::_Sort_heap<RealTimeCarDesc *,_lambda_43f065e4bf3ce08fa9c962bd292d54b7_>(RealTimeCarDesc *_First, RealTimeCarDesc *_Last);
void __cdecl std::_Sort_heap<RealTimeCarDesc *,_lambda_59c3976748667e1e7edd4d54891c675d_>(RealTimeCarDesc *_First, RealTimeCarDesc *_Last, RaceManager::updateCarsRealTimePositions::__l34::<lambda_59c3976748667e1e7edd4d54891c675d> _Pred);
ClientCollisionEvent *__thiscall std::vector<LeaderboardEntry>::_Ucopy<LeaderboardEntry *>(std::vector<LeaderboardEntry> *this, LeaderboardEntry *_First, LeaderboardEntry *_Last, LeaderboardEntry *_Ptr);
std::pair<RealTimeCarDesc *,RealTimeCarDesc *> *__cdecl std::_Unguarded_partition<RealTimeCarDesc *,_lambda_43f065e4bf3ce08fa9c962bd292d54b7_>(std::pair<RealTimeCarDesc *,RealTimeCarDesc *> *result, RealTimeCarDesc *_First, RealTimeCarDesc *_Last);
std::pair<RealTimeCarDesc *,RealTimeCarDesc *> *__cdecl std::_Unguarded_partition<RealTimeCarDesc *,_lambda_59c3976748667e1e7edd4d54891c675d_>(std::pair<RealTimeCarDesc *,RealTimeCarDesc *> *result, RealTimeCarDesc *_First, RealTimeCarDesc *_Last, RaceManager::updateCarsRealTimePositions::__l34::<lambda_59c3976748667e1e7edd4d54891c675d> _Pred);
ClientCollisionEvent *__cdecl std::_Uninit_move<LeaderboardEntry *,LeaderboardEntry *,std::allocator<LeaderboardEntry>,LeaderboardEntry>(ClientCollisionEvent *_First, ClientCollisionEvent *_Last, ClientCollisionEvent *_Dest);
std::vector<Lap> *__cdecl std::_Uninit_copy<std::vector<Lap> *,std::vector<Lap> *,std::allocator<std::vector<Lap>>>(std::vector<Lap> *_First, std::vector<Lap> *_Last, std::vector<Lap> *_Dest);
void __cdecl std::_Uninit_def_fill_n<Lap *,unsigned int,std::allocator<Lap>,Lap>(Lap *_First, unsigned int _Count);
void __cdecl std::_Uninit_def_fill_n<OnSessionEndEvent *,unsigned int,std::allocator<OnSessionEndEvent>,OnSessionEndEvent>(OnSessionEndEvent *_First, unsigned int _Count);
OnSessionEndEvent *__cdecl std::_Uninit_move<OnSessionEndEvent *,OnSessionEndEvent *,std::allocator<OnSessionEndEvent>,OnSessionEndEvent>(OnSessionEndEvent *_First, OnSessionEndEvent *_Last, OnSessionEndEvent *_Dest);
std::vector<Lap> *__cdecl std::_Uninit_move<std::vector<Lap> *,std::vector<Lap> *,std::allocator<std::vector<Lap>>,std::vector<Lap>>(std::vector<Lap> *_First, std::vector<Lap> *_Last, std::vector<Lap> *_Dest);
Session *__cdecl std::_Uninit_move<Session *,Session *,std::allocator<Session>,Session>(Session *_First, Session *_Last, Session *_Dest);
void __thiscall std::allocator<OnSessionEndEvent>::destroy<OnSessionEndEvent>(std::allocator<OnSessionEndEvent> *this, OnSessionEndEvent *_Ptr);
void __thiscall std::_Wrap_alloc<std::allocator<Session>>::destroy<Session>(std::_Wrap_alloc<std::allocator<Session> > *this, Session *_Ptr);
SplashScreen *__thiscall GameObject::getGameObject<SplashScreen>(GameObject *this);
void __thiscall lambda_5c8e18c6096c34f7d85a3c1b4614f402_::_lambda_5c8e18c6096c34f7d85a3c1b4614f402_(RaceManager::initOffline::__l127::<lambda_5c8e18c6096c34f7d85a3c1b4614f402> *this, const float *__ai_level, const float *__global_ai_level, CarAvatar *const *__car, const float *__ai_aggression);
void __thiscall std::vector<LeaderboardEntry>::vector<LeaderboardEntry>(std::vector<LeaderboardEntry> *this, const std::vector<LeaderboardEntry> *_Right);
void __thiscall std::vector<std::vector<Lap>>::vector<std::vector<Lap>>(std::vector<std::vector<Lap>> *this, const std::vector<std::vector<Lap>> *_Right);
void __thiscall DynamicTempData::DynamicTempData(DynamicTempData *this);
void __thiscall OnSessionEndEvent::OnSessionEndEvent(OnSessionEndEvent *this, const OnSessionEndEvent *__that);
void __thiscall RaceManager::RaceManager(RaceManager *this, Sim *isim);
void __thiscall std::logic_error::logic_error(std::logic_error *this, const std::logic_error *__that);
void __thiscall std::vector<std::vector<ReplayFrameWingStatus>>::~vector<std::vector<ReplayFrameWingStatus>>(std::vector<std::vector<unsigned char>> *this);
void __thiscall std::vector<Session>::~vector<Session>(std::vector<Session> *this);
void __thiscall ClutchSequence::~ClutchSequence(ClutchSequence *this);
void __thiscall MultiplayerStatus::~MultiplayerStatus(MultiplayerStatus *this);
void __thiscall RaceManager::~RaceManager(RaceManager *this);
std::vector<LeaderboardEntry> *__thiscall std::vector<LeaderboardEntry>::operator=(std::vector<LeaderboardEntry> *this, const std::vector<LeaderboardEntry> *_Right);
float *__thiscall std::map<std::wstring,float>::operator[](std::map<std::wstring,float> *this, std::wstring *_Keyval);
std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Session> > > *__thiscall std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Session>>>::operator++(std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Session> > > *this);
void __thiscall lambda_03d4a4e38214184ac663a9958eafa959_::operator()(RaceManager::updateCarsEndRace::__l31::<lambda_03d4a4e38214184ac663a9958eafa959> *this, const bool *message);
void __thiscall lambda_14bcb8e7bd7af2afe68e06f5a26767e9_::operator()(RaceManager::updateCarsEndRace::__l16::<lambda_14bcb8e7bd7af2afe68e06f5a26767e9> *this, const bool *__formal);
void __thiscall lambda_169506d575188a429382108dea5a3ad3_::operator()(RaceManager::initOnline::__l10::<lambda_169506d575188a429382108dea5a3ad3> *this, const RemoteSession *message);
void __thiscall lambda_4cc3dee08bd3ddb5881c065c8a6f5e4b_::operator()(RaceManager::initOnline::__l47::<lambda_4cc3dee08bd3ddb5881c065c8a6f5e4b> *this, const RemoteSessionResume *message);
void __thiscall lambda_4d6bd21bdb55aea7c890483ecf567272_::operator()(RaceManager::update::__l72::<lambda_4d6bd21bdb55aea7c890483ecf567272> *this, const bool *__formal);
char __thiscall lambda_59c3976748667e1e7edd4d54891c675d_::operator()(RaceManager::updateCarsRealTimePositions::__l34::<lambda_59c3976748667e1e7edd4d54891c675d> *this, const RealTimeCarDesc *a, const RealTimeCarDesc *b);
void __thiscall lambda_5c8e18c6096c34f7d85a3c1b4614f402_::operator()(RaceManager::initOffline::__l127::<lambda_5c8e18c6096c34f7d85a3c1b4614f402> *this);
void __thiscall lambda_cc8171a7d91ee604e177af52ab7bbe20_::operator()(RaceManager::generateWind::__l6::<lambda_cc8171a7d91ee604e177af52ab7bbe20> *this);
std::_Func_impl<std::_Callable_obj<<lambda_169506d575188a429382108dea5a3ad3>,0>,std::allocator<std::_Func_class<void,RemoteSession const &> >,void,RemoteSession const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a8934cdcb6f363d258fa7e835d4ed7a1_,0>,std::allocator<std::_Func_class<void,RemoteSession const &>>,void,RemoteSession const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_169506d575188a429382108dea5a3ad3>,0>,std::allocator<std::_Func_class<void,RemoteSession const &> >,void,RemoteSession const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_4cc3dee08bd3ddb5881c065c8a6f5e4b>,0>,std::allocator<std::_Func_class<void,RemoteSessionResume const &> >,void,RemoteSessionResume const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4cc3dee08bd3ddb5881c065c8a6f5e4b_,0>,std::allocator<std::_Func_class<void,RemoteSessionResume const &>>,void,RemoteSessionResume const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_4cc3dee08bd3ddb5881c065c8a6f5e4b>,0>,std::allocator<std::_Func_class<void,RemoteSessionResume const &> >,void,RemoteSessionResume const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_d361f6b318de1ab2f7ed810b0ea4e32b>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d361f6b318de1ab2f7ed810b0ea4e32b_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_d361f6b318de1ab2f7ed810b0ea4e32b>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, unsigned int a2);
RaceManager *__thiscall RaceManager::`vector deleting destructor'(RaceManager *this, unsigned int a2);
std::logic_error *__thiscall std::logic_error::`vector deleting destructor'(std::logic_error *this, unsigned int a2);
char __thiscall std::vector<LeaderboardEntry>::_Buy(std::vector<LeaderboardEntry> *this, unsigned int _Capacity);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_169506d575188a429382108dea5a3ad3_,0>,std::allocator<std::_Func_class<void,RemoteSession const &>>,void,RemoteSession const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_169506d575188a429382108dea5a3ad3>,0>,std::allocator<std::_Func_class<void,RemoteSession const &> >,void,RemoteSession const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_813bf8c3df5835004fac3e0e9e32445e_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_813bf8c3df5835004fac3e0e9e32445e>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cc8171a7d91ee604e177af52ab7bbe20_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_cc8171a7d91ee604e177af52ab7bbe20>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e66b8fb25d8cccd64d42f98c9162898c_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_e66b8fb25d8cccd64d42f98c9162898c>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_03d4a4e38214184ac663a9958eafa959_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_03d4a4e38214184ac663a9958eafa959>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_14bcb8e7bd7af2afe68e06f5a26767e9_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_14bcb8e7bd7af2afe68e06f5a26767e9>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_169506d575188a429382108dea5a3ad3_,0>,std::allocator<std::_Func_class<void,RemoteSession const &>>,void,RemoteSession const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_169506d575188a429382108dea5a3ad3>,0>,std::allocator<std::_Func_class<void,RemoteSession const &> >,void,RemoteSession const &> *this, const RemoteSession *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4cc3dee08bd3ddb5881c065c8a6f5e4b_,0>,std::allocator<std::_Func_class<void,RemoteSessionResume const &>>,void,RemoteSessionResume const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4cc3dee08bd3ddb5881c065c8a6f5e4b>,0>,std::allocator<std::_Func_class<void,RemoteSessionResume const &> >,void,RemoteSessionResume const &> *this, const RemoteSessionResume *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4d6bd21bdb55aea7c890483ecf567272_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4d6bd21bdb55aea7c890483ecf567272>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5c8e18c6096c34f7d85a3c1b4614f402_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5c8e18c6096c34f7d85a3c1b4614f402>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_813bf8c3df5835004fac3e0e9e32445e_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e66b8fb25d8cccd64d42f98c9162898c>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c4116babb8d0c89a747015575c7e2744_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f6a64d8a54227b2f743428c631e617f1>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cc8171a7d91ee604e177af52ab7bbe20_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_cc8171a7d91ee604e177af52ab7bbe20>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_dbba9b0d9e9513ca461adfb6c16f36e3_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_dbba9b0d9e9513ca461adfb6c16f36e3>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a507984fee0d9ba3947b22da73d6b594_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f0eb2e86a25b9a117567327b8bc66e48>,0>,std::allocator<std::_Func_class<void> >,void> *this);
bool __cdecl std::_Equal(const unsigned __int8 *_First1, const unsigned __int8 *_Last1, const unsigned __int8 *_First2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_03d4a4e38214184ac663a9958eafa959_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_03d4a4e38214184ac663a9958eafa959>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_14bcb8e7bd7af2afe68e06f5a26767e9_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_14bcb8e7bd7af2afe68e06f5a26767e9>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4cc3dee08bd3ddb5881c065c8a6f5e4b_,0>,std::allocator<std::_Func_class<void,RemoteSessionResume const &>>,void,RemoteSessionResume const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_4cc3dee08bd3ddb5881c065c8a6f5e4b>,0>,std::allocator<std::_Func_class<void,RemoteSessionResume const &> >,void,RemoteSessionResume const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4d6bd21bdb55aea7c890483ecf567272_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_4d6bd21bdb55aea7c890483ecf567272>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5c8e18c6096c34f7d85a3c1b4614f402_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_5c8e18c6096c34f7d85a3c1b4614f402>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a507984fee0d9ba3947b22da73d6b594_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_a507984fee0d9ba3947b22da73d6b594>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c4116babb8d0c89a747015575c7e2744_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_c4116babb8d0c89a747015575c7e2744>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_dbba9b0d9e9513ca461adfb6c16f36e3_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_dbba9b0d9e9513ca461adfb6c16f36e3>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f0eb2e86a25b9a117567327b8bc66e48_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_f0eb2e86a25b9a117567327b8bc66e48>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f6a64d8a54227b2f743428c631e617f1_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_f6a64d8a54227b2f743428c631e617f1>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::vector<OnSessionEndEvent>::_Reallocate(std::vector<OnSessionEndEvent> *this, unsigned int _Count);
void __thiscall std::vector<CTData>::_Reallocate(std::vector<TyreTestFrame> *this, unsigned int _Count);
void __thiscall std::vector<std::vector<Lap>>::_Reallocate(std::vector<std::vector<Lap>> *this, unsigned int _Count);
void __thiscall std::vector<Session>::_Reallocate(std::vector<Session> *this, unsigned int _Count);
void __thiscall std::vector<OnSessionEndEvent>::_Reserve(std::vector<OnSessionEndEvent> *this, unsigned int _Count);
void __thiscall std::vector<CTData>::_Reserve(std::vector<TyreTestFrame> *this, unsigned int _Count);
void __thiscall std::vector<std::vector<Lap>>::_Reserve(std::vector<std::vector<Lap>> *this, unsigned int _Count);
void __thiscall std::vector<Session>::_Reserve(std::vector<Session> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_03d4a4e38214184ac663a9958eafa959_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_03d4a4e38214184ac663a9958eafa959>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_14bcb8e7bd7af2afe68e06f5a26767e9_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_14bcb8e7bd7af2afe68e06f5a26767e9>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_169506d575188a429382108dea5a3ad3_,0>,std::allocator<std::_Func_class<void,RemoteSession const &>>,void,RemoteSession const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_169506d575188a429382108dea5a3ad3>,0>,std::allocator<std::_Func_class<void,RemoteSession const &> >,void,RemoteSession const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4cc3dee08bd3ddb5881c065c8a6f5e4b_,0>,std::allocator<std::_Func_class<void,RemoteSessionResume const &>>,void,RemoteSessionResume const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4cc3dee08bd3ddb5881c065c8a6f5e4b>,0>,std::allocator<std::_Func_class<void,RemoteSessionResume const &> >,void,RemoteSessionResume const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4d6bd21bdb55aea7c890483ecf567272_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4d6bd21bdb55aea7c890483ecf567272>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5c8e18c6096c34f7d85a3c1b4614f402_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5c8e18c6096c34f7d85a3c1b4614f402>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_813bf8c3df5835004fac3e0e9e32445e_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_813bf8c3df5835004fac3e0e9e32445e>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a507984fee0d9ba3947b22da73d6b594_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a507984fee0d9ba3947b22da73d6b594>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c4116babb8d0c89a747015575c7e2744_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c4116babb8d0c89a747015575c7e2744>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cc8171a7d91ee604e177af52ab7bbe20_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_cc8171a7d91ee604e177af52ab7bbe20>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_dbba9b0d9e9513ca461adfb6c16f36e3_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_dbba9b0d9e9513ca461adfb6c16f36e3>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e66b8fb25d8cccd64d42f98c9162898c_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e66b8fb25d8cccd64d42f98c9162898c>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f0eb2e86a25b9a117567327b8bc66e48_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f0eb2e86a25b9a117567327b8bc66e48>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f6a64d8a54227b2f743428c631e617f1_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f6a64d8a54227b2f743428c631e617f1>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
void __thiscall std::vector<ClientRemoteCarDef>::_Tidy(std::vector<ClientRemoteCarDef> *this);
void __thiscall std::vector<OnSessionEndEvent>::~vector<OnSessionEndEvent>(std::vector<OnSessionEndEvent> *this);
void __thiscall RaceManager::checkMandatoryPit(RaceManager *this, int carIndex, float entry, float exit);
Session *__thiscall RaceManager::convertRemoteSession(RaceManager *this, Session *result, const RemoteSession *rs);
void __thiscall RaceManager::finalizeCurrentSession(RaceManager *this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,enum DynamicControllerInput> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,CBuffer *,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,CBuffer *>>,0>>::find(std::_Tree<std::_Tmap_traits<std::wstring,enum DynamicControllerInput,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,enum DynamicControllerInput> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,enum DynamicControllerInput> > > > *result, const std::wstring *_Keyval);
void __thiscall RaceManager::generateWind(RaceManager *this);
__int16 __thiscall PhysicsAvatar::getBasePitPenaltyLaps(PhysicsAvatar *this);
Lap *__thiscall RaceManager::getBestLap(RaceManager *this, Lap *result, CarAvatar *car);
unsigned int __thiscall RaceManager::getBestLap(RaceManager *this);
unsigned int __thiscall RaceManager::getBestSplit(RaceManager *this, const int *sector, const bool *isGlobal, CarAvatar *car);
unsigned int __thiscall RaceManager::getCarLeaderboardPosition(RaceManager *this, CarAvatar *car);
unsigned int __thiscall RaceManager::getCarRealTimePosition(RaceManager *this, CarAvatar *car);
Lap *__thiscall RaceManager::getCurrentLap(RaceManager *this, Lap *result, CarAvatar *car);
Session *__thiscall RaceManager::getCurrentSession(RaceManager *this, Session *result);
int __thiscall RaceManager::getCurrentSessionIndex(RaceManager *this);
SessionType __thiscall RaceManager::getCurrentSessionType(RaceManager *this);
bool __thiscall RaceManager::getHasCompletedFlag(RaceManager *this, CarAvatar *car);
CarAvatar *__thiscall RaceManager::getInstanceBestLap(RaceManager *this, CarAvatar *car);
int __thiscall RaceManager::getInvertedGridPositions(RaceManager *this);
int __thiscall RaceManager::getLapCount(RaceManager *this, CarAvatar *car);
std::vector<Lap> *__thiscall RaceManager::getLaps(RaceManager *this, std::vector<Lap> *result, CarAvatar *car, bool readReplayModeIfActive);
Lap *__thiscall RaceManager::getLastLap(RaceManager *this, Lap *result, CarAvatar *car);
unsigned int __thiscall RaceManager::getLastSplit(RaceManager *this, CarAvatar *car, const int *sector);
unsigned int __thiscall RaceManager::getLeaderLapCount(RaceManager *this);
std::vector<LeaderboardEntry> *__thiscall RaceManager::getLeaderboard(RaceManager *this, std::vector<LeaderboardEntry> *result);
std::vector<LeaderboardEntry> *__thiscall RaceManager::getLeaderboardFromSession(RaceManager *this, std::vector<LeaderboardEntry> *result, int sessionID);
std::vector<std::wstring> *__thiscall RaceManager::getModelSkins(RaceManager *this, std::vector<std::wstring> *result, const std::wstring *model);
unsigned __int16 __thiscall RaceManager::getPitWindowEnd(RaceManager *this);
unsigned __int16 __thiscall RaceManager::getPitWindowStart(RaceManager *this);
std::wstring *__thiscall RaceManager::getPracticeQualifyText(RaceManager *this, std::wstring *result);
std::wstring *__thiscall RaceManager::getRaceText(RaceManager *this, std::wstring *result);
int __thiscall RaceManager::getSessionCount(RaceManager *this);
OnSessionEndEvent *__thiscall RaceManager::getSessionHistory(RaceManager *this, OnSessionEndEvent *result, const int *sessionID);
Session *__thiscall RaceManager::getSessionInfo(RaceManager *this, Session *result, int sessionIndex);
long double __thiscall RaceManager::getSessionTimeLeft(RaceManager *this);
int __thiscall RaceManager::getSessionTotalTime(RaceManager *this, unsigned int carIndex);
int __thiscall RaceManager::getSplit(RaceManager *this, CarAvatar *car);
unsigned int __thiscall RaceManager::getSplit(RaceManager *this, CarAvatar *car, const int *sector);
double __thiscall RaceManager::getTimeToSessionStart(RaceManager *this);
long double __thiscall RaceManager::getTimetoWait(RaceManager *this);
bool __thiscall RaceManager::hasExtraLap(RaceManager *this);
bool __thiscall RaceManager::hasSessionStarted(RaceManager *this);
void __thiscall RaceManager::initGhostcar(RaceManager *this, INIReaderDocuments *ini);
void __thiscall RaceManager::initLighting(RaceManager *this, INIReaderDocuments *ini);
// char __userpurge RaceManager::initOffline@<al>(RaceManager *this@<ecx>, __m128 a2@<xmm0>, __m128 a3@<xmm3>, __m128 a4@<xmm4>, INIReaderDocuments *anIniReader);
// char __userpurge RaceManager::initOnline@<al>(RaceManager *this@<ecx>, __m128 a2@<xmm3>, __m128 a3@<xmm4>, INIReaderDocuments *ini);
// char __userpurge RaceManager::initReplay@<al>(RaceManager *this@<ecx>, __m128 a2@<xmm3>, __m128 a3@<xmm4>, INIReaderDocuments *r);
bool __thiscall RaceManager::isBestSplit(RaceManager *this, const int *sector, const int *t, const bool *isGlobal, CarAvatar *car);
char __thiscall RaceManager::isRaceOver(RaceManager *this, unsigned int carIndex);
bool __thiscall RaceManager::isSkinAvailable(RaceManager *this, const std::wstring *model, const std::wstring *skin);
// char __usercall RaceManager::loadSessions@<al>(RaceManager *this@<ecx>, unsigned int a2@<ebx>, __m128 a3@<xmm0>, __m128 a4@<xmm3>, __m128 a5@<xmm4>);
void __thiscall RaceManager::onLapCompleted(RaceManager *this, const OnLapCompletedEvent *message);
void __thiscall std::vector<Lap>::push_back(std::vector<Lap> *this, const Lap *_Val);
void __thiscall std::vector<LeaderboardEntry>::push_back(std::vector<LeaderboardEntry> *this, const LeaderboardEntry *_Val);
void __thiscall std::vector<CubicSpline<float,float>::Element,std::allocator<CubicSpline<float,float>::Element>>::push_back(std::vector<TyreTestFrame> *this, const TyreTestFrame *_Val);
void __thiscall std::vector<Session>::push_back(std::vector<Session> *this, const Session *_Val);
void __thiscall RaceManager::renderHUD(RaceManager *this, float dt);
void __thiscall RaceManager::resetCurrentLaps(RaceManager *this);
void __thiscall RaceManager::resetInvalidStateCarsToPits(RaceManager *this, float dt);
void __thiscall RaceManager::resetMandatoryPit(RaceManager *this);
void __thiscall std::vector<float>::resize(std::vector<float> *this, unsigned int _Newsize);
void __thiscall std::vector<Lap>::resize(std::vector<Lap> *this, unsigned int _Newsize);
void __thiscall std::vector<OnSessionEndEvent>::resize(std::vector<OnSessionEndEvent> *this, unsigned int _Newsize);
void __thiscall std::vector<std::vector<Lap>>::resize(std::vector<std::vector<Lap>> *this, unsigned int _Newsize);
void __thiscall RaceManager::restartCurrentSession(RaceManager *this);
void __thiscall RaceManager::setCurrentSession(RaceManager *this, unsigned int index);
void __thiscall PhysicsEngine::setDynamicTempData(PhysicsEngine *this, DynamicTempData *data);
void __thiscall RaceManager::setHasCompletedFlag(RaceManager *this, CarAvatar *car, bool value);
void __thiscall PhysicsAvatar::setJumpStartPenaltyMode(PhysicsAvatar *this, JumpStartPenaltyMode mode);
void __thiscall RaceManager::shutdown(RaceManager *this);
char __thiscall RaceManager::skipCurrentSession(RaceManager *this);
void __thiscall RaceManager::startRace(RaceManager *this, float millisecondsToStart);
void __thiscall RaceManager::update(RaceManager *this, float deltaT);
void __thiscall RaceManager::updateCarsEndRace(RaceManager *this, float dt);
void __thiscall RaceManager::updateCarsRealTimePositions(RaceManager *this, float dt);
void __cdecl std::_Adjust_heap<LeaderboardEntry *,int,LeaderboardEntry,std::less<void>>(LeaderboardEntry *_First, int _Hole, int _Bottom, LeaderboardEntry *_Val);
std::_Tree_node<std::pair<CarAvatar * const,Lap>,void *> *__thiscall std::_Tree_buy<std::pair<CarAvatar * const,Lap>>::_Buynode<std::piecewise_construct_t const &,std::tuple<CarAvatar * const &>,std::tuple<>>(std::_Tree_buy<std::pair<CarAvatar * const,Lap>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<CarAvatar * const &> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > > *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,Lap,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,Lap>>,0>>::_Insert_at<std::pair<CarAvatar * const,Lap> &,std::_Tree_node<std::pair<CarAvatar * const,Lap>,void *> *>(std::_Tree<std::_Tmap_traits<CarAvatar *,Lap,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,Lap> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > > *result, bool _Addleft, std::_Tree_node<std::pair<CarAvatar * const,Lap>,void *> *_Wherenode, std::pair<CarAvatar * const,Lap> *_Val, std::_Tree_node<std::pair<CarAvatar * const,Lap>,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > > *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,Lap,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,Lap>>,0>>::_Insert_hint<std::pair<CarAvatar * const,Lap> &,std::_Tree_node<std::pair<CarAvatar * const,Lap>,void *> *>(std::_Tree<std::_Tmap_traits<CarAvatar *,Lap,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,Lap> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > > _Where, std::pair<CarAvatar * const,Lap> *_Val, std::_Tree_node<std::pair<CarAvatar * const,Lap>,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,Lap,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,Lap>>,0>>::_Insert_nohint<std::pair<CarAvatar * const,Lap> &,std::_Tree_node<std::pair<CarAvatar * const,Lap>,void *> *>(std::_Tree<std::_Tmap_traits<CarAvatar *,Lap,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,Lap> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > > _Leftish, std::pair<CarAvatar * const,Lap> *_Val, std::_Tree_node<std::pair<CarAvatar * const,Lap>,void *> *_Newnode);
void __cdecl std::_Insertion_sort1<LeaderboardEntry *,std::less<void>,LeaderboardEntry>(LeaderboardEntry *_First, LeaderboardEntry *_Last);
void __cdecl std::_Make_heap<LeaderboardEntry *,int,LeaderboardEntry,std::less<void>>(LeaderboardEntry *_First, LeaderboardEntry *_Last);
void __cdecl std::_Med3<LeaderboardEntry *,std::less<void>>(LeaderboardEntry *_First, LeaderboardEntry *_Mid, LeaderboardEntry *_Last);
void __cdecl std::_Median<LeaderboardEntry *,std::less<void>>(LeaderboardEntry *_First, LeaderboardEntry *_Mid, LeaderboardEntry *_Last);
void __cdecl std::_Push_heap<LeaderboardEntry *,int,LeaderboardEntry,std::less<void>>(LeaderboardEntry *_First, int _Hole, int _Top, LeaderboardEntry *_Val);
void __cdecl std::_Sort<LeaderboardEntry *,int,std::less<void>>(LeaderboardEntry *_First, LeaderboardEntry *_Last, int _Ideal, std::less<void> _Pred);
void __cdecl std::_Sort_heap<LeaderboardEntry *,std::less<void>>(LeaderboardEntry *_First, LeaderboardEntry *_Last);
std::pair<LeaderboardEntry *,LeaderboardEntry *> *__cdecl std::_Unguarded_partition<LeaderboardEntry *,std::less<void>>(std::pair<LeaderboardEntry *,LeaderboardEntry *> *result, LeaderboardEntry *_First, LeaderboardEntry *_Last);
std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LapDB *> > > *__cdecl std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LapDB *>>>,_lambda_7c544edf6e1913ee9bc9dbefa47405ac_>(std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LapDB *> > > *result, std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LapDB *> > > _First, std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LapDB *> > > _Last, RaceTimingServices::getLapDB::__l6::<lambda_7c544edf6e1913ee9bc9dbefa47405ac> _Pred);
void __thiscall LapDB::LapDB(LapDB *this, CarAvatar *icar);
void __thiscall RaceTimingServices::RaceTimingServices(RaceTimingServices *this, Sim *asim);
void __thiscall std::map<CarAvatar *,Lap>::~map<CarAvatar *,Lap>(std::map<CarAvatar *,Lap> *this);
void __thiscall LapDB::~LapDB(LapDB *this);
void __thiscall RaceTimingServices::~RaceTimingServices(RaceTimingServices *this);
CarAvatar *const *__thiscall std::map<CarAvatar *,Lap>::operator[](std::map<CarAvatar *,Lap> *this, CarAvatar *const *_Keyval);
bool __thiscall LeaderboardEntry::operator<(LeaderboardEntry *this, const LeaderboardEntry *l);
RaceTimingServices *__thiscall RaceTimingServices::`vector deleting destructor'(RaceTimingServices *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_26946f792b50d43e9d635487129478af_,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &>>,void,OnSectorSplitEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_26946f792b50d43e9d635487129478af>,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &> >,void,OnSectorSplitEvent const &> *this, void *_Where);
void __thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,Lap,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,Lap>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<CarAvatar *,Lap,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,Lap> >,0> > *this, std::_Tree_node<std::pair<CarAvatar * const,Lap>,void *> *_Newnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_26946f792b50d43e9d635487129478af_,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &>>,void,OnSectorSplitEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_26946f792b50d43e9d635487129478af>,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &> >,void,OnSectorSplitEvent const &> *this, const OnSectorSplitEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_aba674e0e7decd065f55cc1ff64dacb4_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_aba674e0e7decd065f55cc1ff64dacb4>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,Lap,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,Lap>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<CarAvatar *,Lap,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,Lap> >,0> > *this, std::_Tree_node<std::pair<CarAvatar * const,Lap>,void *> *_Rootnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_aba674e0e7decd065f55cc1ff64dacb4_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_aba674e0e7decd065f55cc1ff64dacb4>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_26946f792b50d43e9d635487129478af_,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &>>,void,OnSectorSplitEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_26946f792b50d43e9d635487129478af>,0>,std::allocator<std::_Func_class<void,OnSectorSplitEvent const &> >,void,OnSectorSplitEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_aba674e0e7decd065f55cc1ff64dacb4_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_aba674e0e7decd065f55cc1ff64dacb4>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > > *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,Lap,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,Lap>>,0>>::erase(std::_Tree<std::_Tmap_traits<CarAvatar *,Lap,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,Lap> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > > _Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > > *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,Lap,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,Lap>>,0>>::erase(std::_Tree<std::_Tmap_traits<CarAvatar *,Lap,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,Lap> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,Lap> > > > _Where);
Lap *__thiscall RaceTimingServices::getBestLap(RaceTimingServices *this, Lap *result, CarAvatar *car);
unsigned int __thiscall RaceTimingServices::getBestSplit(RaceTimingServices *this, const int *sector, const bool *isGlobal, CarAvatar *car);
int __thiscall RaceTimingServices::getCarLeaderboardPosition(RaceTimingServices *this, CarAvatar *car);
void __thiscall RaceTimingServices::getCurrentLapSplits(RaceTimingServices *this, CarAvatar *car, std::vector<unsigned int> *currentSplits);
bool __thiscall RaceTimingServices::getHasCompletedFlag(RaceTimingServices *this, CarAvatar *car);
CarAvatar *__thiscall RaceTimingServices::getInstanceBestTime(RaceTimingServices *this, CarAvatar *car);
int __thiscall RaceTimingServices::getLapCount(RaceTimingServices *this, CarAvatar *car);
LapDB *__thiscall RaceTimingServices::getLapDB(RaceTimingServices *this, CarAvatar *car);
std::vector<Lap> *__thiscall RaceTimingServices::getLaps(RaceTimingServices *this, std::vector<Lap> *result, CarAvatar *car);
Lap *__thiscall RaceTimingServices::getLastLap(RaceTimingServices *this, Lap *result, CarAvatar *car);
unsigned int __thiscall RaceTimingServices::getLastSplit(RaceTimingServices *this, CarAvatar *car, const int *sector);
std::vector<LeaderboardEntry> *__thiscall RaceTimingServices::getLeaderboard(RaceTimingServices *this, std::vector<LeaderboardEntry> *result);
unsigned int __thiscall RaceTimingServices::getSplit(RaceTimingServices *this, CarAvatar *car, const int *sector);
int __thiscall RaceTimingServices::getSplit(RaceTimingServices *this, CarAvatar *car);
long double __thiscall RaceTimingServices::getTotalTime(RaceTimingServices *this, CarAvatar *car);
bool __thiscall RaceTimingServices::isBestSplit(RaceTimingServices *this, const int *sector, const int *t, const bool *isGlobal, CarAvatar *car);
void __thiscall RaceTimingServices::onLapCompleted(RaceTimingServices *this, const OnLapCompletedEvent *event);
void __thiscall RaceTimingServices::onNewSession(RaceTimingServices *this, const OnNewSessionEvent *message);
void __thiscall RaceTimingServices::onSectorSplit(RaceTimingServices *this, const OnSectorSplitEvent *event);
void __thiscall LapDB::reset(LapDB *this);
void __thiscall RaceTimingServices::resetCurrentLaps(RaceTimingServices *this);
void __thiscall RaceTimingServices::setHasCompletedFlag(RaceTimingServices *this, CarAvatar *car, bool flag);
void __thiscall RaceTimingServices::shutdown(RaceTimingServices *this);
void __thiscall RaceTimingServices::update(RaceTimingServices *this, float dt);
void __thiscall RaceTimingServices::updateLeaderboard(RaceTimingServices *this);
void __thiscall RemoteTelemetryUDP::RemoteTelemetryUDP(RemoteTelemetryUDP *this, Sim *aSim, CarAvatar *aCar);
RemoteTelemetryUDP *__thiscall RemoteTelemetryUDP::`scalar deleting destructor'(RemoteTelemetryUDP *this, unsigned int a2);
void __thiscall std::vector<CarCollisionBox>::_Reallocate(std::vector<CarCollisionBox> *this, unsigned int _Count);
void __thiscall std::vector<GrooveMesh>::_Reserve(std::vector<CarCollisionBox> *this, unsigned int _Count);
unsigned int __thiscall std::wstring::copy(std::wstring *this, wchar_t *_Ptr, unsigned int _Count, unsigned int _Off);
std::_Vector_iterator<std::_Vector_val<std::_Simple_types<RTListener> > > *__thiscall std::vector<RTListener>::erase(std::vector<RTListener> *this, std::_Vector_iterator<std::_Vector_val<std::_Simple_types<RTListener> > > *result, std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<RTListener> > > _Where);
void __thiscall RemoteTelemetryUDP::listen(RemoteTelemetryUDP *this);
void __thiscall RemoteTelemetryUDP::onLapUpdateEvent(RemoteTelemetryUDP *this, int carId);
void __thiscall std::vector<GrooveMesh>::push_back(std::vector<CarCollisionBox> *this, const CarCollisionBox *_Val);
void __thiscall RemoteTelemetryUDP::sendMessage(RemoteTelemetryUDP *this, sockaddr_in destination, unsigned int socket, const void *data, int size);
void __thiscall RemoteTelemetryUDP::update(RemoteTelemetryUDP *this, float dt);
void __thiscall RemoteTelemetryUDP::updateListeners(RemoteTelemetryUDP *this);
void __thiscall RemoteTelemetryUDP::updateRTCarInfo(RemoteTelemetryUDP *this);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l76::<lambda_02b27eb1b8b27a7348662550d52c5c9b> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnSpinnerValueChanged const &)>::function<void __cdecl (ksgui::OnSpinnerValueChanged const &)>(std::function<void __cdecl(ksgui::OnSpinnerValueChanged const &)> *this, ReplayInterface::{ctor}::__l112::<lambda_186c93b6935219ead332f0f0905cfbd1> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnSpinnerValueChanged const &)>::function<void __cdecl (ksgui::OnSpinnerValueChanged const &)>(std::function<void __cdecl(ksgui::OnSpinnerValueChanged const &)> *this, ReplayInterface::{ctor}::__l26::<lambda_2c673dac99c55c56eb775ef604d618ac> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l159::<lambda_2ded351382148aadca8693d28545c375> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l153::<lambda_4f8c8057e5106a3c35749d1d3d395180> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l150::<lambda_58949d9e7c57671f4497bc964d44c8cb> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnSpinnerValueChanged const &)>::function<void __cdecl (ksgui::OnSpinnerValueChanged const &)>(std::function<void __cdecl(ksgui::OnSpinnerValueChanged const &)> *this, ReplayInterface::{ctor}::__l135::<lambda_6a47848197992ab31b5c4f6837bc4391> *_Func);
void __thiscall std::function<void __cdecl (std::wstring const &)>::function<void __cdecl (std::wstring const &)>(std::function<void __cdecl(std::wstring const &)> *this, ReplayInterface::{ctor}::__l27::<lambda_6cfe70df1760800e6c28a04fadc9c931> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l56::<lambda_79170e56906ff677fef98aaeb3a1b15b> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnSpinnerValueChanged const &)>::function<void __cdecl (ksgui::OnSpinnerValueChanged const &)>(std::function<void __cdecl(ksgui::OnSpinnerValueChanged const &)> *this, ReplayInterface::{ctor}::__l121::<lambda_8833ae9cb03aa9e139720c80dcd22fbb> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l33::<lambda_88aebe8e7e92e65ebcfe9e6d819c36f1> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnSpinnerValueChanged const &)>::function<void __cdecl (ksgui::OnSpinnerValueChanged const &)>(std::function<void __cdecl(ksgui::OnSpinnerValueChanged const &)> *this, ReplayInterface::{ctor}::__l21::<lambda_8ec564c1fafc3b78e3b22242472fcb12> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l42::<lambda_a63156a1d7c34b821283a3c485846a4c> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l62::<lambda_b277ad41c224a3784fddb53c761bdd3c> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnSpinnerValueChanged const &)>::function<void __cdecl (ksgui::OnSpinnerValueChanged const &)>(std::function<void __cdecl(ksgui::OnSpinnerValueChanged const &)> *this, ReplayInterface::{ctor}::__l22::<lambda_d76d3ed440978395be2c62933bd80879> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l49::<lambda_ddf4e618080d258d39c9dc6f8d48e76a> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l160::<lambda_ded3707ff4d4c34e080072b4586eb339> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnSpinnerValueChanged const &)>::function<void __cdecl (ksgui::OnSpinnerValueChanged const &)>(std::function<void __cdecl(ksgui::OnSpinnerValueChanged const &)> *this, ReplayInterface::{ctor}::__l149::<lambda_e25430da128598e0160ba43a9249a5cc> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l100::<lambda_e8cfa7e9aaddd05432aa7ad70daf9ed5> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l152::<lambda_f14e3f2b70dac5c0cb2269a52f45865d> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l80::<lambda_f73a00d2f2b08264ee277e757078d1c4> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l156::<lambda_fa8842fb027ab1e4e5be5feb1b601442> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l70::<lambda_fe5209ac42930180669aeef8a67ad028> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, ReplayInterface::{ctor}::__l151::<lambda_fee5ffb9cf08fa100b3ca23cf4b1f997> *_Func);
void __thiscall ReplayInterface::ReplayInterface(ReplayInterface *this, ReplayManager *aReplayManager, Sim *aSim);
void __thiscall ReplayInterface::~ReplayInterface(ReplayInterface *this);
void __thiscall lambda_186c93b6935219ead332f0f0905cfbd1_::operator()(ReplayInterface::{ctor}::__l112::<lambda_186c93b6935219ead332f0f0905cfbd1> *this, const ksgui::OnSpinnerValueChanged *ev);
// void __userpurge lambda_2ded351382148aadca8693d28545c375_::operator()(ReplayInterface::{ctor}::__l159::<lambda_2ded351382148aadca8693d28545c375> *this@<ecx>, __m128 a2@<xmm4>, const ksgui::OnControlClicked *message);
// void __userpurge lambda_4f8c8057e5106a3c35749d1d3d395180_::operator()(ReplayInterface::{ctor}::__l153::<lambda_4f8c8057e5106a3c35749d1d3d395180> *this@<ecx>, __m128 a2@<xmm4>, const ksgui::OnControlClicked *message);
void __thiscall lambda_6a47848197992ab31b5c4f6837bc4391_::operator()(ReplayInterface::{ctor}::__l135::<lambda_6a47848197992ab31b5c4f6837bc4391> *this, const ksgui::OnSpinnerValueChanged *ev);
void __thiscall lambda_8833ae9cb03aa9e139720c80dcd22fbb_::operator()(ReplayInterface::{ctor}::__l121::<lambda_8833ae9cb03aa9e139720c80dcd22fbb> *this, const ksgui::OnSpinnerValueChanged *ev);
void __thiscall lambda_88aebe8e7e92e65ebcfe9e6d819c36f1_::operator()(ReplayInterface::{ctor}::__l33::<lambda_88aebe8e7e92e65ebcfe9e6d819c36f1> *this, const ksgui::OnControlClicked *ev);
void __thiscall lambda_8ec564c1fafc3b78e3b22242472fcb12_::operator()(ReplayInterface::{ctor}::__l21::<lambda_8ec564c1fafc3b78e3b22242472fcb12> *this, const ksgui::OnSpinnerValueChanged *ev);
void __thiscall lambda_ded3707ff4d4c34e080072b4586eb339_::operator()(ReplayInterface::{ctor}::__l160::<lambda_ded3707ff4d4c34e080072b4586eb339> *this, const ksgui::OnControlClicked *ev);
void __thiscall lambda_e25430da128598e0160ba43a9249a5cc_::operator()(ReplayInterface::{ctor}::__l149::<lambda_e25430da128598e0160ba43a9249a5cc> *this, const ksgui::OnSpinnerValueChanged *ev);
// void __userpurge lambda_e8cfa7e9aaddd05432aa7ad70daf9ed5_::operator()(ReplayInterface::{ctor}::__l100::<lambda_e8cfa7e9aaddd05432aa7ad70daf9ed5> *this@<ecx>, unsigned int a2@<ebx>, const ksgui::OnControlClicked *ev);
// void __userpurge lambda_f14e3f2b70dac5c0cb2269a52f45865d_::operator()(ReplayInterface::{ctor}::__l152::<lambda_f14e3f2b70dac5c0cb2269a52f45865d> *this@<ecx>, __m128 a2@<xmm4>, const ksgui::OnControlClicked *message);
// void __userpurge lambda_fa8842fb027ab1e4e5be5feb1b601442_::operator()(ReplayInterface::{ctor}::__l156::<lambda_fa8842fb027ab1e4e5be5feb1b601442> *this@<ecx>, __m128 a2@<xmm4>, const ksgui::OnControlClicked *message);
std::_Func_impl<std::_Callable_obj<<lambda_51c5d3b44fb8385ab20fdf91837a9892>,0>,std::allocator<std::_Func_class<void,ksgui::OnCutExtremesChanged const &> >,void,ksgui::OnCutExtremesChanged const &> *__thiscall std::_Func_base<void,ksgui::OnCutExtremesChanged const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_51c5d3b44fb8385ab20fdf91837a9892>,0>,std::allocator<std::_Func_class<void,ksgui::OnCutExtremesChanged const &> >,void,ksgui::OnCutExtremesChanged const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_553279367ad7b1ec0113a9a6af66da2b>,0>,std::allocator<std::_Func_class<void,ksgui::OnSliderInteraction const &> >,void,ksgui::OnSliderInteraction const &> *__thiscall std::_Func_base<void,ksgui::OnSliderInteraction const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_553279367ad7b1ec0113a9a6af66da2b>,0>,std::allocator<std::_Func_class<void,ksgui::OnSliderInteraction const &> >,void,ksgui::OnSliderInteraction const &> *this, unsigned int a2);
ReplayInterface *__thiscall ReplayInterface::`vector deleting destructor'(ReplayInterface *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_02b27eb1b8b27a7348662550d52c5c9b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_02b27eb1b8b27a7348662550d52c5c9b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1300a5c7456b1ec813b458f89c214224_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1300a5c7456b1ec813b458f89c214224>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_186c93b6935219ead332f0f0905cfbd1_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_186c93b6935219ead332f0f0905cfbd1>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2ded351382148aadca8693d28545c375_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_2ded351382148aadca8693d28545c375>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4f8c8057e5106a3c35749d1d3d395180_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_4f8c8057e5106a3c35749d1d3d395180>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_51c5d3b44fb8385ab20fdf91837a9892_,0>,std::allocator<std::_Func_class<void,ksgui::OnCutExtremesChanged const &>>,void,ksgui::OnCutExtremesChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_51c5d3b44fb8385ab20fdf91837a9892>,0>,std::allocator<std::_Func_class<void,ksgui::OnCutExtremesChanged const &> >,void,ksgui::OnCutExtremesChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_553279367ad7b1ec0113a9a6af66da2b_,0>,std::allocator<std::_Func_class<void,ksgui::OnSliderInteraction const &>>,void,ksgui::OnSliderInteraction const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_553279367ad7b1ec0113a9a6af66da2b>,0>,std::allocator<std::_Func_class<void,ksgui::OnSliderInteraction const &> >,void,ksgui::OnSliderInteraction const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6a47848197992ab31b5c4f6837bc4391_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_6a47848197992ab31b5c4f6837bc4391>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6cfe70df1760800e6c28a04fadc9c931_,0>,std::allocator<std::_Func_class<void,std::wstring const &>>,void,std::wstring const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_6cfe70df1760800e6c28a04fadc9c931>,0>,std::allocator<std::_Func_class<void,std::wstring const &> >,void,std::wstring const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ec564c1fafc3b78e3b22242472fcb12_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_8ec564c1fafc3b78e3b22242472fcb12>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a63156a1d7c34b821283a3c485846a4c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_a63156a1d7c34b821283a3c485846a4c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b277ad41c224a3784fddb53c761bdd3c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_b277ad41c224a3784fddb53c761bdd3c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d76d3ed440978395be2c62933bd80879_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d76d3ed440978395be2c62933bd80879>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e25430da128598e0160ba43a9249a5cc_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e25430da128598e0160ba43a9249a5cc>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f14e3f2b70dac5c0cb2269a52f45865d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_f14e3f2b70dac5c0cb2269a52f45865d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fc5392bda296b6208225c89f1bb76f2d_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_fc5392bda296b6208225c89f1bb76f2d>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe5209ac42930180669aeef8a67ad028_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_fe5209ac42930180669aeef8a67ad028>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_02b27eb1b8b27a7348662550d52c5c9b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_02b27eb1b8b27a7348662550d52c5c9b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, int a2@<ebp>, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1300a5c7456b1ec813b458f89c214224_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1300a5c7456b1ec813b458f89c214224>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this, const int *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_186c93b6935219ead332f0f0905cfbd1_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_186c93b6935219ead332f0f0905cfbd1>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2c673dac99c55c56eb775ef604d618ac_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2c673dac99c55c56eb775ef604d618ac>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_2ded351382148aadca8693d28545c375_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2ded351382148aadca8693d28545c375>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, __m128 a2@<xmm4>, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4f4aa9af08cede00e65e0651e2fa733d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4f4aa9af08cede00e65e0651e2fa733d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_4f8c8057e5106a3c35749d1d3d395180_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4f8c8057e5106a3c35749d1d3d395180>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, __m128 a2@<xmm4>, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_51c5d3b44fb8385ab20fdf91837a9892_,0>,std::allocator<std::_Func_class<void,ksgui::OnCutExtremesChanged const &>>,void,ksgui::OnCutExtremesChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_51c5d3b44fb8385ab20fdf91837a9892>,0>,std::allocator<std::_Func_class<void,ksgui::OnCutExtremesChanged const &> >,void,ksgui::OnCutExtremesChanged const &> *this, const ksgui::OnCutExtremesChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_553279367ad7b1ec0113a9a6af66da2b_,0>,std::allocator<std::_Func_class<void,ksgui::OnSliderInteraction const &>>,void,ksgui::OnSliderInteraction const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_553279367ad7b1ec0113a9a6af66da2b>,0>,std::allocator<std::_Func_class<void,ksgui::OnSliderInteraction const &> >,void,ksgui::OnSliderInteraction const &> *this, const ksgui::OnSliderInteraction *<_Args_0>);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_58949d9e7c57671f4497bc964d44c8cb_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_58949d9e7c57671f4497bc964d44c8cb>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, int a2@<esi>, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6a47848197992ab31b5c4f6837bc4391_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6a47848197992ab31b5c4f6837bc4391>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6cfe70df1760800e6c28a04fadc9c931_,0>,std::allocator<std::_Func_class<void,std::wstring const &>>,void,std::wstring const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6cfe70df1760800e6c28a04fadc9c931>,0>,std::allocator<std::_Func_class<void,std::wstring const &> >,void,std::wstring const &> *this, const std::wstring *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_79170e56906ff677fef98aaeb3a1b15b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_79170e56906ff677fef98aaeb3a1b15b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8833ae9cb03aa9e139720c80dcd22fbb_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8833ae9cb03aa9e139720c80dcd22fbb>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_88aebe8e7e92e65ebcfe9e6d819c36f1_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_88aebe8e7e92e65ebcfe9e6d819c36f1>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ec564c1fafc3b78e3b22242472fcb12_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8ec564c1fafc3b78e3b22242472fcb12>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a63156a1d7c34b821283a3c485846a4c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a63156a1d7c34b821283a3c485846a4c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b277ad41c224a3784fddb53c761bdd3c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b277ad41c224a3784fddb53c761bdd3c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d76d3ed440978395be2c62933bd80879_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d76d3ed440978395be2c62933bd80879>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ddf4e618080d258d39c9dc6f8d48e76a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ddf4e618080d258d39c9dc6f8d48e76a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ded3707ff4d4c34e080072b4586eb339_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ded3707ff4d4c34e080072b4586eb339>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e25430da128598e0160ba43a9249a5cc_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e25430da128598e0160ba43a9249a5cc>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_e8cfa7e9aaddd05432aa7ad70daf9ed5_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e8cfa7e9aaddd05432aa7ad70daf9ed5>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, unsigned int a2@<ebx>, const ksgui::OnControlClicked *<_Args_0>);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_f14e3f2b70dac5c0cb2269a52f45865d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f14e3f2b70dac5c0cb2269a52f45865d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, __m128 a2@<xmm4>, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f73a00d2f2b08264ee277e757078d1c4_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f73a00d2f2b08264ee277e757078d1c4>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_fa8842fb027ab1e4e5be5feb1b601442_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fa8842fb027ab1e4e5be5feb1b601442>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, __m128 a2@<xmm4>, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fc5392bda296b6208225c89f1bb76f2d_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fc5392bda296b6208225c89f1bb76f2d>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe5209ac42930180669aeef8a67ad028_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fe5209ac42930180669aeef8a67ad028>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_fee5ffb9cf08fa100b3ca23cf4b1f997_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fee5ffb9cf08fa100b3ca23cf4b1f997>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, int a2@<esi>, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2c673dac99c55c56eb775ef604d618ac_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_2c673dac99c55c56eb775ef604d618ac>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4f4aa9af08cede00e65e0651e2fa733d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_4f4aa9af08cede00e65e0651e2fa733d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_58949d9e7c57671f4497bc964d44c8cb_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_58949d9e7c57671f4497bc964d44c8cb>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_79170e56906ff677fef98aaeb3a1b15b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_79170e56906ff677fef98aaeb3a1b15b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8833ae9cb03aa9e139720c80dcd22fbb_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_8833ae9cb03aa9e139720c80dcd22fbb>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_88aebe8e7e92e65ebcfe9e6d819c36f1_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_88aebe8e7e92e65ebcfe9e6d819c36f1>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ddf4e618080d258d39c9dc6f8d48e76a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_ddf4e618080d258d39c9dc6f8d48e76a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ded3707ff4d4c34e080072b4586eb339_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_ded3707ff4d4c34e080072b4586eb339>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e8cfa7e9aaddd05432aa7ad70daf9ed5_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_e8cfa7e9aaddd05432aa7ad70daf9ed5>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f73a00d2f2b08264ee277e757078d1c4_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f73a00d2f2b08264ee277e757078d1c4>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fa8842fb027ab1e4e5be5feb1b601442_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_fa8842fb027ab1e4e5be5feb1b601442>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fee5ffb9cf08fa100b3ca23cf4b1f997_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_fee5ffb9cf08fa100b3ca23cf4b1f997>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (ksgui::OnCutExtremesChanged const &)>>>::_Reallocate(std::vector<std::pair<void *,std::function<void __cdecl(ksgui::OnListBoxItemClickedEvent const &)> >> *this, unsigned int _Count);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (ksgui::OnSliderInteraction const &)>>>::_Reserve(std::vector<std::pair<void *,std::function<void __cdecl(ksgui::OnListBoxItemClickedEvent const &)> >> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_02b27eb1b8b27a7348662550d52c5c9b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_02b27eb1b8b27a7348662550d52c5c9b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1300a5c7456b1ec813b458f89c214224_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1300a5c7456b1ec813b458f89c214224>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_186c93b6935219ead332f0f0905cfbd1_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_186c93b6935219ead332f0f0905cfbd1>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2c673dac99c55c56eb775ef604d618ac_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2c673dac99c55c56eb775ef604d618ac>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2ded351382148aadca8693d28545c375_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2ded351382148aadca8693d28545c375>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4f4aa9af08cede00e65e0651e2fa733d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4f4aa9af08cede00e65e0651e2fa733d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4f8c8057e5106a3c35749d1d3d395180_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4f8c8057e5106a3c35749d1d3d395180>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_51c5d3b44fb8385ab20fdf91837a9892_,0>,std::allocator<std::_Func_class<void,ksgui::OnCutExtremesChanged const &>>,void,ksgui::OnCutExtremesChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_51c5d3b44fb8385ab20fdf91837a9892>,0>,std::allocator<std::_Func_class<void,ksgui::OnCutExtremesChanged const &> >,void,ksgui::OnCutExtremesChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_553279367ad7b1ec0113a9a6af66da2b_,0>,std::allocator<std::_Func_class<void,ksgui::OnSliderInteraction const &>>,void,ksgui::OnSliderInteraction const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_553279367ad7b1ec0113a9a6af66da2b>,0>,std::allocator<std::_Func_class<void,ksgui::OnSliderInteraction const &> >,void,ksgui::OnSliderInteraction const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_58949d9e7c57671f4497bc964d44c8cb_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_58949d9e7c57671f4497bc964d44c8cb>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6a47848197992ab31b5c4f6837bc4391_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6a47848197992ab31b5c4f6837bc4391>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6cfe70df1760800e6c28a04fadc9c931_,0>,std::allocator<std::_Func_class<void,std::wstring const &>>,void,std::wstring const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6cfe70df1760800e6c28a04fadc9c931>,0>,std::allocator<std::_Func_class<void,std::wstring const &> >,void,std::wstring const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_79170e56906ff677fef98aaeb3a1b15b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_79170e56906ff677fef98aaeb3a1b15b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8833ae9cb03aa9e139720c80dcd22fbb_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8833ae9cb03aa9e139720c80dcd22fbb>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_88aebe8e7e92e65ebcfe9e6d819c36f1_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_88aebe8e7e92e65ebcfe9e6d819c36f1>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8ec564c1fafc3b78e3b22242472fcb12_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8ec564c1fafc3b78e3b22242472fcb12>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a63156a1d7c34b821283a3c485846a4c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a63156a1d7c34b821283a3c485846a4c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b277ad41c224a3784fddb53c761bdd3c_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b277ad41c224a3784fddb53c761bdd3c>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d76d3ed440978395be2c62933bd80879_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d76d3ed440978395be2c62933bd80879>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ddf4e618080d258d39c9dc6f8d48e76a_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ddf4e618080d258d39c9dc6f8d48e76a>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ded3707ff4d4c34e080072b4586eb339_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ded3707ff4d4c34e080072b4586eb339>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e25430da128598e0160ba43a9249a5cc_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e25430da128598e0160ba43a9249a5cc>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e8cfa7e9aaddd05432aa7ad70daf9ed5_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e8cfa7e9aaddd05432aa7ad70daf9ed5>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f14e3f2b70dac5c0cb2269a52f45865d_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f14e3f2b70dac5c0cb2269a52f45865d>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f73a00d2f2b08264ee277e757078d1c4_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f73a00d2f2b08264ee277e757078d1c4>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fa8842fb027ab1e4e5be5feb1b601442_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fa8842fb027ab1e4e5be5feb1b601442>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fc5392bda296b6208225c89f1bb76f2d_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fc5392bda296b6208225c89f1bb76f2d>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fe5209ac42930180669aeef8a67ad028_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fe5209ac42930180669aeef8a67ad028>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fee5ffb9cf08fa100b3ca23cf4b1f997_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fee5ffb9cf08fa100b3ca23cf4b1f997>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
void __thiscall ReplayInterface::didFinishedSavingReplay(ReplayInterface *this, bool response);
void __thiscall ReplayInterface::onMouseMove(ReplayInterface *this, const OnMouseMoveEvent *message);
void __thiscall ReplayInterface::onMouseWheelMovedEvent(ReplayInterface *this, const OnMouseWheelMovedEvent *message);
void __thiscall ReplayInterface::onReplayManagerStatusChanged(ReplayInterface *this, eReplayStatus status);
void __thiscall ReplayInterface::onSliderSelection(ReplayInterface *this, const ksgui::OnSliderInteraction *message);
void __thiscall ReplayInterface::onVisibleChanged(ReplayInterface *this, bool newValue);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (ksgui::OnSliderInteraction const &)>>>::push_back(std::vector<std::pair<void *,std::function<void __cdecl(ksgui::OnListBoxItemClickedEvent const &)> >> *this, const std::pair<void *,std::function<void __cdecl(ksgui::OnListBoxItemClickedEvent const &)> > *_Val);
// void __userpurge ReplayInterface::render(ReplayInterface *this@<ecx>, int i@<esi>, float dt);
void __thiscall ReplayInterface::resetCuts(ReplayInterface *this);
void __thiscall ReplayInterface::updateUIElementPosition(ReplayInterface *this, float dt);
void __thiscall ReplayInterface::updateUIElementPositionPhotoMode(ReplayInterface *this, float dt);
void __thiscall std::pair<enum SessionType,ReplayAutosave>::pair<enum SessionType,ReplayAutosave>(std::pair<enum SessionType,ReplayAutosave> *this, SessionType *_Val1, ReplayAutosave *_Val2);
void __cdecl std::_Adjust_heap<std::wstring *,int,std::wstring,std::less<void>>(std::wstring *_First, int _Hole, int _Bottom, std::wstring *_Val);
std::_Tree_node<std::pair<std::wstring const ,std::map<std::wstring,INISection> >,void *> **__thiscall std::_Tree_buy<std::pair<enum SessionType const,ReplayAutosave>>::_Buynode<std::pair<enum SessionType,ReplayAutosave>>(std::_Tree_buy<std::pair<enum SessionType const ,ReplayAutosave>> *this, std::pair<enum SessionType,ReplayAutosave> *<_Val_0>);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<StartingTrackSemaphore::LightGroup>>>(DRSDetection *_First, DRSDetection *_Last);
void __thiscall std::_Func_class<void,>::_Do_alloc<std::_Func_impl<std::_Callable_obj<_lambda_26b25348753f1a180b7ee4e9e9eac4c8_,0>,std::allocator<std::_Func_class<void,>>,void,>,_lambda_26b25348753f1a180b7ee4e9e9eac4c8_,std::allocator<std::_Func_class<void,>>>(std::_Func_class<void> *this, ReplayManager::{ctor}::__l59::<lambda_562fc1d8e92378e53abe7b05a860c0a3>::()::__l74::<lambda_26b25348753f1a180b7ee4e9e9eac4c8> *_Val, std::allocator<std::_Func_class<void> > _Ax);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SessionType const ,ReplayAutosave> > > > *__thiscall std::_Tree<std::_Tmap_traits<enum SessionType,ReplayAutosave,std::less<enum SessionType>,std::allocator<std::pair<enum SessionType const,ReplayAutosave>>,0>>::_Insert_at<std::pair<enum SessionType const,ReplayAutosave> &,std::_Tree_node<std::pair<enum SessionType const,ReplayAutosave>,void *> *>(std::_Tree<std::_Tmap_traits<enum SessionType,ReplayAutosave,std::less<enum SessionType>,std::allocator<std::pair<enum SessionType const ,ReplayAutosave> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SessionType const ,ReplayAutosave> > > > *result, bool _Addleft, std::_Tree_node<std::pair<enum SessionType const ,ReplayAutosave>,void *> *_Wherenode, std::pair<enum SessionType const ,ReplayAutosave> *_Val, std::_Tree_node<std::pair<enum SessionType const ,ReplayAutosave>,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > > *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<ReplayLap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<ReplayLap>>>,0>>::_Insert_at<std::pair<CarAvatar * const,std::vector<ReplayLap>> &,std::_Tree_node<std::pair<CarAvatar * const,std::vector<ReplayLap>>,void *> *>(std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<ReplayLap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<ReplayLap> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > > *result, bool _Addleft, std::_Tree_node<std::pair<CarAvatar * const,std::vector<ReplayLap> >,void *> *_Wherenode, std::pair<CarAvatar * const,std::vector<ReplayLap> > *_Val, std::_Tree_node<std::pair<CarAvatar * const,std::vector<ReplayLap> >,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > > *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<ReplayLap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<ReplayLap>>>,0>>::_Insert_hint<std::pair<CarAvatar * const,std::vector<ReplayLap>> &,std::_Tree_node<std::pair<CarAvatar * const,std::vector<ReplayLap>>,void *> *>(std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<ReplayLap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<ReplayLap> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > > _Where, std::pair<CarAvatar * const,std::vector<ReplayLap> > *_Val, std::_Tree_node<std::pair<CarAvatar * const,std::vector<ReplayLap> >,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SessionType const ,ReplayAutosave> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<enum SessionType,ReplayAutosave,std::less<enum SessionType>,std::allocator<std::pair<enum SessionType const,ReplayAutosave>>,0>>::_Insert_nohint<std::pair<enum SessionType const,ReplayAutosave> &,std::_Tree_node<std::pair<enum SessionType const,ReplayAutosave>,void *> *>(std::_Tree<std::_Tmap_traits<enum SessionType,ReplayAutosave,std::less<enum SessionType>,std::allocator<std::pair<enum SessionType const ,ReplayAutosave> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SessionType const ,ReplayAutosave> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SessionType const ,ReplayAutosave> > > > _Leftish, std::pair<enum SessionType const ,ReplayAutosave> *_Val, std::_Tree_node<std::pair<enum SessionType const ,ReplayAutosave>,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<ReplayLap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<ReplayLap>>>,0>>::_Insert_nohint<std::pair<CarAvatar * const,std::vector<ReplayLap>> &,std::_Tree_node<std::pair<CarAvatar * const,std::vector<ReplayLap>>,void *> *>(std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<ReplayLap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<ReplayLap> > >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > > _Leftish, std::pair<CarAvatar * const,std::vector<ReplayLap> > *_Val, std::_Tree_node<std::pair<CarAvatar * const,std::vector<ReplayLap> >,void *> *_Newnode);
void __cdecl std::_Insertion_sort1<std::wstring *,std::less<void>,std::wstring>(std::wstring *_First, std::wstring *_Last);
void __cdecl std::_Make_heap<std::wstring *,int,std::wstring,std::less<void>>(std::wstring *_First, std::wstring *_Last);
void __cdecl std::_Med3<std::wstring *,std::less<void>>(std::wstring *_First, std::wstring *_Mid, std::wstring *_Last);
void __cdecl std::_Median<std::wstring *,std::less<void>>(std::wstring *_First, std::wstring *_Mid, std::wstring *_Last);
std::wstring *__cdecl std::_Move_backward<std::wstring *,std::wstring *>(std::wstring *_First, std::wstring *_Last, std::wstring *_Dest);
void __cdecl std::_Pop_heap_0<std::wstring *,std::wstring,std::less<void>>(std::wstring *_First, std::wstring *_Last);
void __cdecl std::_Push_heap<std::wstring *,int,std::wstring,std::less<void>>(std::wstring *_First, int _Hole, int _Top, std::wstring *_Val);
void __cdecl std::_Sort<std::wstring *,int,std::less<void>>(std::wstring *_First, std::wstring *_Last, int _Ideal, std::less<void> _Pred);
void __cdecl std::_Sort_heap<std::wstring *,std::less<void>>(std::wstring *_First, std::wstring *_Last);
std::pair<std::wstring *,std::wstring *> *__cdecl std::_Unguarded_partition<std::wstring *,std::less<void>>(std::pair<std::wstring *,std::wstring *> *result, std::wstring *_First, std::wstring *_Last);
void __cdecl std::_Uninit_def_fill_n<CompressedTransform *,unsigned int,std::allocator<CompressedTransform>,CompressedTransform>(CompressedTransform *_First, unsigned int _Count);
void __cdecl std::_Uninit_def_fill_n<FrameInformation *,unsigned int,std::allocator<FrameInformation>,FrameInformation>(FrameInformation *_First, unsigned int _Count);
FrameInformation *__cdecl std::_Uninit_move<FrameInformation *,FrameInformation *,std::allocator<FrameInformation>,FrameInformation>(FrameInformation *_First, FrameInformation *_Last, FrameInformation *_Dest);
WeatherManager *__thiscall GameObject::getGameObject<WeatherManager>(GameObject *this);
void __cdecl std::iter_swap<std::wstring *,std::wstring *>(std::wstring *_Left, std::wstring *_Right);
void __cdecl std::swap<wchar_t,8>(wchar_t (*_Left)[8], wchar_t (*_Right)[8]);
void __thiscall std::vector<SectorData>::vector<SectorData>(std::vector<SectorData> *this, const std::vector<SectorData> *_Right);
void __thiscall std::vector<ReplayLap>::vector<ReplayLap>(std::vector<ReplayLap> *this, const std::vector<ReplayLap> *_Right);
void __thiscall ReplayManager::ReplayManager(ReplayManager *this, Sim *a_sim, PhysicsAvatar *physicsAvatar);
void __thiscall lambda_26b25348753f1a180b7ee4e9e9eac4c8_::__lambda_26b25348753f1a180b7ee4e9e9eac4c8_(ReplayManager::{ctor}::__l59::<lambda_562fc1d8e92378e53abe7b05a860c0a3>::()::__l74::<lambda_26b25348753f1a180b7ee4e9e9eac4c8> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_26b25348753f1a180b7ee4e9e9eac4c8_,0>,std::allocator<std::_Func_class<void,>>,void,>::~_Func_impl<std::_Callable_obj<_lambda_26b25348753f1a180b7ee4e9e9eac4c8_,0>,std::allocator<std::_Func_class<void,>>,void,>(std::_Func_impl<std::_Callable_obj<<lambda_26b25348753f1a180b7ee4e9e9eac4c8>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::map<CarAvatar *,std::vector<ReplayLap>>::~map<CarAvatar *,std::vector<ReplayLap>>(std::map<CarAvatar *,std::vector<ReplayLap>> *this);
void __thiscall std::map<enum SessionType,ReplayAutosave>::~map<enum SessionType,ReplayAutosave>(std::map<enum SessionType,ReplayAutosave> *this);
void __thiscall BonusInfo::~BonusInfo(SGearRatio *this);
void __thiscall ReplayManager::~ReplayManager(ReplayManager *this);
std::vector<WingState> *__thiscall std::vector<WingState>::operator=(std::vector<WingState> *this, std::vector<WingState> *_Right);
CarAvatar *const *__thiscall std::map<CarAvatar *,std::vector<ReplayLap>>::operator[](std::map<CarAvatar *,std::vector<ReplayLap>> *this, CarAvatar *const *_Keyval);
void __thiscall lambda_2201f2254f9e4add1f74a935e2c652bc_::operator()(ReplayManager::{ctor}::__l66::<lambda_2201f2254f9e4add1f74a935e2c652bc> *this, float dt);
void __thiscall lambda_26b25348753f1a180b7ee4e9e9eac4c8_::operator()(ReplayManager::{ctor}::__l59::<lambda_562fc1d8e92378e53abe7b05a860c0a3>::()::__l74::<lambda_26b25348753f1a180b7ee4e9e9eac4c8> *this);
void __thiscall lambda_562fc1d8e92378e53abe7b05a860c0a3_::operator()(ReplayManager::{ctor}::__l59::<lambda_562fc1d8e92378e53abe7b05a860c0a3> *this, const OnNewSessionEvent *message);
std::_Func_impl<std::_Callable_obj<<lambda_26b25348753f1a180b7ee4e9e9eac4c8>,0>,std::allocator<std::_Func_class<void> >,void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_26b25348753f1a180b7ee4e9e9eac4c8_,0>,std::allocator<std::_Func_class<void,>>,void,>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_26b25348753f1a180b7ee4e9e9eac4c8>,0>,std::allocator<std::_Func_class<void> >,void> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_e693394010a1497d94434f1322d343a3>,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &> >,void,OnPhysicsStepCompleted const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b66af63a2cd2d5a863a3454a72924bb0_,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &>>,void,OnPhysicsStepCompleted const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_e693394010a1497d94434f1322d343a3>,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &> >,void,OnPhysicsStepCompleted const &> *this, unsigned int a2);
ReplayManager *__thiscall ReplayManager::`vector deleting destructor'(ReplayManager *this, unsigned int a2);
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<enum SessionType const,ReplayAutosave>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> >> > *this);
std::_Tree_node<std::pair<std::wstring const ,std::map<std::wstring,INISection> >,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,INISection>>::_Buynode0(std::_Tree_buy<std::pair<std::wstring const ,std::map<std::wstring,INISection> >> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2201f2254f9e4add1f74a935e2c652bc_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_2201f2254f9e4add1f74a935e2c652bc>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, void *_Where);
std::_Func_base<void> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_26b25348753f1a180b7ee4e9e9eac4c8_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_26b25348753f1a180b7ee4e9e9eac4c8>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_562fc1d8e92378e53abe7b05a860c0a3_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_562fc1d8e92378e53abe7b05a860c0a3>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
void __thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<ReplayLap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<ReplayLap>>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<ReplayLap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<ReplayLap> > >,0> > *this, std::_Tree_node<std::pair<CarAvatar * const,std::vector<ReplayLap> >,void *> *_Newnode);
void __thiscall std::_Tree<std::_Tmap_traits<enum SessionType,ReplayAutosave,std::less<enum SessionType>,std::allocator<std::pair<enum SessionType const,ReplayAutosave>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<enum SessionType,ReplayAutosave,std::less<enum SessionType>,std::allocator<std::pair<enum SessionType const ,ReplayAutosave> >,0> > *this, std::_Tree_node<std::pair<enum SessionType const ,ReplayAutosave>,void *> *_Newnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2201f2254f9e4add1f74a935e2c652bc_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2201f2254f9e4add1f74a935e2c652bc>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, const float *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_26b25348753f1a180b7ee4e9e9eac4c8_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_26b25348753f1a180b7ee4e9e9eac4c8>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_562fc1d8e92378e53abe7b05a860c0a3_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_562fc1d8e92378e53abe7b05a860c0a3>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_af1081906530a8c1d2e3152aeed4b845_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_af1081906530a8c1d2e3152aeed4b845>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_df4e9314c62adb0d0142d9b310a7f325_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_df4e9314c62adb0d0142d9b310a7f325>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e693394010a1497d94434f1322d343a3_,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &>>,void,OnPhysicsStepCompleted const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e693394010a1497d94434f1322d343a3>,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &> >,void,OnPhysicsStepCompleted const &> *this, const OnPhysicsStepCompleted *<_Args_0>);
void __thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<ReplayLap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<ReplayLap>>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<ReplayLap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<ReplayLap> > >,0> > *this, std::_Tree_node<std::pair<CarAvatar * const,std::vector<ReplayLap> >,void *> *_Rootnode);
void __thiscall std::_Tree<std::_Tmap_traits<enum SessionType,ReplayAutosave,std::less<enum SessionType>,std::allocator<std::pair<enum SessionType const,ReplayAutosave>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<enum SessionType,ReplayAutosave,std::less<enum SessionType>,std::allocator<std::pair<enum SessionType const ,ReplayAutosave> >,0> > *this, std::_Tree_node<std::pair<enum SessionType const ,ReplayAutosave>,void *> *_Rootnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_af1081906530a8c1d2e3152aeed4b845_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_af1081906530a8c1d2e3152aeed4b845>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_df4e9314c62adb0d0142d9b310a7f325_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_df4e9314c62adb0d0142d9b310a7f325>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e693394010a1497d94434f1322d343a3_,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &>>,void,OnPhysicsStepCompleted const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_e693394010a1497d94434f1322d343a3>,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &> >,void,OnPhysicsStepCompleted const &> *this, void *_Where);
void __thiscall std::vector<FrameInformation>::_Reallocate(std::vector<FrameInformation> *this, unsigned int _Count);
void __thiscall std::vector<FrameInformation>::_Reserve(std::vector<FrameInformation> *this, unsigned int _Count);
void __thiscall std::wstring::_Swap_bx(std::wstring *this, std::wstring *_Right);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2201f2254f9e4add1f74a935e2c652bc_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2201f2254f9e4add1f74a935e2c652bc>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_26b25348753f1a180b7ee4e9e9eac4c8_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_26b25348753f1a180b7ee4e9e9eac4c8>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_562fc1d8e92378e53abe7b05a860c0a3_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_562fc1d8e92378e53abe7b05a860c0a3>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_af1081906530a8c1d2e3152aeed4b845_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_af1081906530a8c1d2e3152aeed4b845>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_df4e9314c62adb0d0142d9b310a7f325_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_df4e9314c62adb0d0142d9b310a7f325>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e693394010a1497d94434f1322d343a3_,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &>>,void,OnPhysicsStepCompleted const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e693394010a1497d94434f1322d343a3>,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &> >,void,OnPhysicsStepCompleted const &> *this);
void __thiscall ReplayManager::clearSaved(ReplayManager *this, std::wstring session, int maxSize);

std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > > *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<ReplayLap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<ReplayLap>>>,0>>::erase(std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<ReplayLap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<ReplayLap> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > > _Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > > *__thiscall std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<ReplayLap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<ReplayLap>>>,0>>::erase(std::_Tree<std::_Tmap_traits<CarAvatar *,std::vector<ReplayLap>,std::less<CarAvatar *>,std::allocator<std::pair<CarAvatar * const,std::vector<ReplayLap> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CarAvatar * const,std::vector<ReplayLap> > > > > _Where);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SessionType const ,ReplayAutosave> > > > *__thiscall std::_Tree<std::_Tmap_traits<enum SessionType,ReplayAutosave,std::less<enum SessionType>,std::allocator<std::pair<enum SessionType const,ReplayAutosave>>,0>>::erase(std::_Tree<std::_Tmap_traits<enum SessionType,ReplayAutosave,std::less<enum SessionType>,std::allocator<std::pair<enum SessionType const ,ReplayAutosave> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SessionType const ,ReplayAutosave> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SessionType const ,ReplayAutosave> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SessionType const ,ReplayAutosave> > > > _Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SessionType const ,ReplayAutosave> > > > *__thiscall std::_Tree<std::_Tmap_traits<enum SessionType,ReplayAutosave,std::less<enum SessionType>,std::allocator<std::pair<enum SessionType const,ReplayAutosave>>,0>>::erase(std::_Tree<std::_Tmap_traits<enum SessionType,ReplayAutosave,std::less<enum SessionType>,std::allocator<std::pair<enum SessionType const ,ReplayAutosave> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SessionType const ,ReplayAutosave> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SessionType const ,ReplayAutosave> > > > _Where);
void __thiscall ReplayManager::fastForward(ReplayManager *this, int speed, bool pression);
std::wstring *__thiscall ReplayManager::getAutoFileName(ReplayManager *this, std::wstring *result);
int __thiscall ReplayManager::getCarLeaderboardPosition(ReplayManager *this, CarAvatar *avatar);
int __thiscall ReplayManager::getCurrentFrame(ReplayManager *this);
double __thiscall ReplayManager::getCurrentSunAngle(ReplayManager *this);
std::vector<Lap> *__thiscall ReplayManager::getLaps(ReplayManager *this, std::vector<Lap> *result, CarAvatar *car);
std::wstring *__thiscall WeatherManager::getLastWeatherName(WeatherManager *this, std::wstring *result);
std::vector<LeaderboardEntry> *__thiscall ReplayManager::getLeaderboard(ReplayManager *this, std::vector<LeaderboardEntry> *result);
void __thiscall ReplayManager::getNormalizedLapChange(ReplayManager *this, unsigned int carIndex, std::vector<float> *argumentLapFrames);
double __thiscall ReplayManager::getNormalizedPosition(ReplayManager *this);
int __thiscall ReplayManager::getRecordedFrames(ReplayManager *this);
std::wstring *__thiscall ReplayManager::getReplayFileName(ReplayManager *this, std::wstring *result, std::wstring session);
bool __thiscall ReplayManager::isInReplaymode(ReplayManager *this);
// char __userpurge ReplayManager::load@<al>(ReplayManager *this@<ecx>, __m128 a2@<xmm3>, __m128 a3@<xmm4>, const std::wstring *filename);
void __thiscall ReplayManager::nextFrame(ReplayManager *this);
void __thiscall ReplayManager::nextLap(ReplayManager *this);
void __thiscall ReplayManager::onStepCompleted(ReplayManager *this, const OnPhysicsStepCompleted *ev);
void __thiscall ReplayManager::pause(ReplayManager *this);
void __thiscall ReplayManager::photoMode(ReplayManager *this);
void __thiscall ReplayManager::play(ReplayManager *this);
void __thiscall ReplayManager::previousLap(ReplayManager *this);
void __thiscall std::vector<FrameInformation>::push_back(std::vector<FrameInformation> *this, const FrameInformation *_Val);
void __thiscall std::vector<std::vector<LeaderboardEntry>>::push_back(std::vector<std::vector<LeaderboardEntry>> *this, std::vector<LeaderboardEntry> *_Val);
void __thiscall std::vector<std::vector<LeaderboardEntry>>::push_back(std::vector<std::vector<LeaderboardEntry>> *this, const std::vector<LeaderboardEntry> *_Val);
void __thiscall ReplayManager::resetReplay(ReplayManager *this);
void __thiscall std::vector<CompressedTransform>::resize(std::vector<CompressedTransform> *this, unsigned int _Newsize);
void __thiscall std::vector<FrameInformation>::resize(std::vector<FrameInformation> *this, unsigned int _Newsize);
// void __userpurge ReplayManager::rewind(ReplayManager *this@<ecx>, int speed, __int64 pression);
char __thiscall ReplayManager::save(ReplayManager *this, std::wstring fn, eSaveReplayDir saveDir);
void __thiscall ReplayManager::setCurrentFrame(ReplayManager *this, int frame);
double __thiscall ReplayManager::setCutInPerc(ReplayManager *this, float aPerc);
double __thiscall ReplayManager::setCutOutPerc(ReplayManager *this, float aPerc);
void __thiscall ReplayManager::setNormalizedPosition(ReplayManager *this, float percentage);
// void __usercall ReplayManager::shutdown(ReplayManager *this@<ecx>, const std::wstring *a2@<esi>);
void __thiscall ReplayManager::slowMotion(ReplayManager *this, float value);
// void __userpurge ReplayManager::startReplayMode(ReplayManager *this@<ecx>, int a2@<ebp>, unsigned int rewindSeconds);
// void __usercall ReplayManager::stop(ReplayManager *this@<ecx>, int a2@<ebp>);
void __thiscall ReplayManager::stopReplayMode(ReplayManager *this);
void __thiscall ReplayManager::updatePlayState(ReplayManager *this, float deltaT);
void __thiscall ReplayManager::updateReplayAudio(ReplayManager *this);
void __thiscall ReplayManager::updateReplayRecorders(ReplayManager *this, int aFrame);
void __cdecl std::_Uninit_def_fill_n<ReplayFrame *,unsigned int,std::allocator<ReplayFrame>,ReplayFrame>(ReplayFrame *_First, unsigned int _Count);
void __cdecl std::_Uninit_def_fill_n<ReplayFrameAdditionalInfo *,unsigned int,std::allocator<ReplayFrameAdditionalInfo>,ReplayFrameAdditionalInfo>(ReplayFrameAdditionalInfo *_First, unsigned int _Count);
void __cdecl std::_Uninit_def_fill_n<ReplayFrameWingStatus *,unsigned int,std::allocator<ReplayFrameWingStatus>,ReplayFrameWingStatus>(ReplayFrameWingStatus *_First, unsigned int _Count);
void __cdecl std::_Uninit_def_fill_n<WingState *,unsigned int,std::allocator<WingState>,WingState>(WingState *_First, unsigned int _Count);
ReplayFrame *__cdecl std::_Uninit_move<ReplayFrame *,ReplayFrame *,std::allocator<ReplayFrame>,ReplayFrame>(ReplayFrame *_First, ReplayFrame *_Last, ReplayFrame *_Dest);
ReplayFrameWingStatus *__cdecl std::_Uninit_move<ReplayFrameAdditionalInfo *,ReplayFrameAdditionalInfo *,std::allocator<ReplayFrameAdditionalInfo>,ReplayFrameAdditionalInfo>(ReplayFrameWingStatus *_First, ReplayFrameWingStatus *_Last, ReplayFrameWingStatus *_Dest);
CarBrakeLights *__thiscall GameObject::getGameObject<CarBrakeLights>(GameObject *this);
DynamicCarEffects *__thiscall GameObject::getGameObject<DynamicCarEffects>(GameObject *this);
void __thiscall ReplayFrame::ReplayFrame(ReplayFrame *this);
void __thiscall ReplayFrameV15::ReplayFrameV15(ReplayFrameV15 *this);
void __thiscall ReplayRecorder::ReplayRecorder(ReplayRecorder *this, CarAvatar *iavatar, ICarPhysicsStateProvider *aPhysics);
void __thiscall ReplayRecorder::~ReplayRecorder(ReplayRecorder *this);
ReplayRecorder *__thiscall ReplayRecorder::`vector deleting destructor'(char *this, unsigned int a2);
ReplayRecorder *__thiscall ReplayRecorder::`vector deleting destructor'(ReplayRecorder *this, unsigned int a2);
void __thiscall std::vector<ReplayFrame>::_Reallocate(std::vector<ReplayFrame> *this, unsigned int _Count);
void __thiscall std::vector<ReplayFrameWingStatus>::_Reallocate(std::vector<ReplayFrameWingStatus> *this, unsigned int _Count);
void __thiscall std::vector<ReplayFrame>::_Reserve(std::vector<ReplayFrame> *this, unsigned int _Count);
void __thiscall std::vector<ReplayFrameWingStatus>::_Reserve(std::vector<ReplayFrameWingStatus> *this, unsigned int _Count);
void __thiscall ReplayRecorder::clearFrames(ReplayRecorder *this);
void __cdecl convertReplayFormat(ReplayFrame *currentFormat, const ReplayFrameV15 *oldFormat);
void __cdecl fTH3(half_float::half *dst, const vec3f src);
void __thiscall ReplayRecorder::fetchLapFrames(ReplayRecorder *this, std::vector<unsigned int> *lapFramesArgument);
void __thiscall ReplayRecorder::getPhysicsState(ReplayRecorder *this, CarPhysicsState *ps);
void __thiscall ReplayRecorder::getWingState(ReplayRecorder *this, std::vector<WingState> *wingStatuses);
vec3f *__cdecl hTF3(vec3f *result, half_float::half *h);
unsigned int __thiscall ReplayRecorder::load(ReplayRecorder *this, std::ifstream *in, int aVersion);
void __thiscall ReplayRecorder::recordFrame(ReplayRecorder *this, const CarPhysicsState *physicsState);
void __thiscall std::vector<ReplayFrame>::resize(std::vector<ReplayFrame> *this, unsigned int _Newsize);
void __thiscall std::vector<ReplayFrameAdditionalInfo>::resize(std::vector<ReplayFrameAdditionalInfo> *this, unsigned int _Newsize);
void __thiscall std::vector<ReplayFrameWingStatus>::resize(std::vector<ReplayFrameWingStatus> *this, unsigned int _Newsize);
void __thiscall std::vector<WingState>::resize(std::vector<WingState> *this, unsigned int _Newsize);
void __thiscall ReplayRecorder::save(ReplayRecorder *this, std::ofstream *out, int cutIn, int cutOut, int cutSize, int pivot);
void __thiscall ReplayRecorder::setFrameSize(ReplayRecorder *this, int size);
void __thiscall ScreenCapturer::ScreenCapturer(ScreenCapturer *this, std::wstring name, Sim *aSim);
void __thiscall ScreenCapturer::~ScreenCapturer(ScreenCapturer *this);
ScreenCapturer *__thiscall ScreenCapturer::`scalar deleting destructor'(ScreenCapturer *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e4a56bf8fb7b4d6c518f597aa74e8bf0_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e4a56bf8fb7b4d6c518f597aa74e8bf0>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, const float *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e4a56bf8fb7b4d6c518f597aa74e8bf0_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e4a56bf8fb7b4d6c518f597aa74e8bf0>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e4a56bf8fb7b4d6c518f597aa74e8bf0_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e4a56bf8fb7b4d6c518f597aa74e8bf0>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this);
std::wstring *__thiscall ScreenCapturer::getPath(ScreenCapturer *this, std::wstring *result);
void __thiscall ScreenCapturer::renderHUD(ScreenCapturer *this, float dt);
void __thiscall ScreenCapturer::saveScreen(ScreenCapturer *this);
void __thiscall ScreenCapturer::takeScreen(ScreenCapturer *this, const std::wstring *path);
void __cdecl std::_Adjust_heap<BestLap *,int,BestLap,_lambda_b629da58478cbfbbaf49a3b3054e0e7d_>(BestLap *_First, int _Hole, int _Bottom, BestLap *_Val);
void __cdecl std::_Adjust_heap<DataOrderStruct *,int,DataOrderStruct,_lambda_052f79f8740a582ea4953223732c2846_>(DataOrderStruct *_First, int _Hole, int _Bottom, DataOrderStruct *_Val);
void __cdecl std::_Adjust_heap<DataOrderStructRetired *,int,DataOrderStructRetired,_lambda_eb7ef350e7829f5db0d16840c7b892e3_>(DataOrderStructRetired *_First, int _Hole, int _Bottom, DataOrderStructRetired *_Val);
void __cdecl std::_Insertion_sort1<BestLap *,_lambda_b629da58478cbfbbaf49a3b3054e0e7d_,BestLap>(BestLap *_First, BestLap *_Last);
void __cdecl std::_Insertion_sort1<DataOrderStruct *,_lambda_052f79f8740a582ea4953223732c2846_,DataOrderStruct>(DataOrderStruct *_First, DataOrderStruct *_Last);
void __cdecl std::_Insertion_sort1<DataOrderStructRetired *,_lambda_eb7ef350e7829f5db0d16840c7b892e3_,DataOrderStructRetired>(DataOrderStructRetired *_First, DataOrderStructRetired *_Last);
void __cdecl std::_Make_heap<BestLap *,int,BestLap,_lambda_b629da58478cbfbbaf49a3b3054e0e7d_>(BestLap *_First, BestLap *_Last);
void __cdecl std::_Make_heap<DataOrderStruct *,int,DataOrderStruct,_lambda_052f79f8740a582ea4953223732c2846_>(DataOrderStruct *_First, DataOrderStruct *_Last);
void __cdecl std::_Make_heap<DataOrderStructRetired *,int,DataOrderStructRetired,_lambda_eb7ef350e7829f5db0d16840c7b892e3_>(DataOrderStructRetired *_First, DataOrderStructRetired *_Last);
void __cdecl std::_Med3<BestLap *,_lambda_b629da58478cbfbbaf49a3b3054e0e7d_>(BestLap *_First, BestLap *_Mid, BestLap *_Last);
void __cdecl std::_Med3<DataOrderStruct *,_lambda_052f79f8740a582ea4953223732c2846_>(DataOrderStruct *_First, DataOrderStruct *_Mid, DataOrderStruct *_Last);
void __cdecl std::_Med3<DataOrderStructRetired *,_lambda_eb7ef350e7829f5db0d16840c7b892e3_>(DataOrderStructRetired *_First, DataOrderStructRetired *_Mid, DataOrderStructRetired *_Last);
void __cdecl std::_Median<BestLap *,_lambda_b629da58478cbfbbaf49a3b3054e0e7d_>(BestLap *_First, BestLap *_Mid, BestLap *_Last);
void __cdecl std::_Median<DataOrderStruct *,_lambda_052f79f8740a582ea4953223732c2846_>(DataOrderStruct *_First, DataOrderStruct *_Mid, DataOrderStruct *_Last);
void __cdecl std::_Median<DataOrderStructRetired *,_lambda_eb7ef350e7829f5db0d16840c7b892e3_>(DataOrderStructRetired *_First, DataOrderStructRetired *_Mid, DataOrderStructRetired *_Last);
Lap *__cdecl std::_Copy_impl<Lap *,Lap *>(Lap *_First, Lap *_Last, Lap *_Dest);
BestLap *__cdecl std::_Move_backward<BestLap *,BestLap *>(BestLap *_First, BestLap *_Last, BestLap *_Dest);
void __cdecl std::_Push_heap<BestLap *,int,BestLap,_lambda_b629da58478cbfbbaf49a3b3054e0e7d_>(BestLap *_First, int _Hole, int _Top, BestLap *_Val);
void __cdecl std::_Push_heap<DataOrderStruct *,int,DataOrderStruct,_lambda_052f79f8740a582ea4953223732c2846_>(DataOrderStruct *_First, int _Hole, int _Top, DataOrderStruct *_Val);
void __cdecl std::_Sort<BestLap *,int,_lambda_b629da58478cbfbbaf49a3b3054e0e7d_>(BestLap *_First, BestLap *_Last, int _Ideal, SessionResultProcessor::processQualifyResults::__l67::<lambda_b629da58478cbfbbaf49a3b3054e0e7d> _Pred);
void __cdecl std::_Sort<DataOrderStruct *,int,_lambda_052f79f8740a582ea4953223732c2846_>(DataOrderStruct *_First, DataOrderStruct *_Last, int _Ideal, SessionResultProcessor::processRaceResults::__l71::<lambda_052f79f8740a582ea4953223732c2846> _Pred);
void __cdecl std::_Sort<DataOrderStructRetired *,int,_lambda_eb7ef350e7829f5db0d16840c7b892e3_>(DataOrderStructRetired *_First, DataOrderStructRetired *_Last, int _Ideal, SessionResultProcessor::processRaceResults::__l72::<lambda_eb7ef350e7829f5db0d16840c7b892e3> _Pred);
void __cdecl std::_Sort_heap<BestLap *,_lambda_b629da58478cbfbbaf49a3b3054e0e7d_>(BestLap *_First, BestLap *_Last);
void __cdecl std::_Sort_heap<DataOrderStruct *,_lambda_052f79f8740a582ea4953223732c2846_>(DataOrderStruct *_First, DataOrderStruct *_Last);
void __cdecl std::_Sort_heap<DataOrderStructRetired *,_lambda_eb7ef350e7829f5db0d16840c7b892e3_>(DataOrderStructRetired *_First, DataOrderStructRetired *_Last);
std::pair<BestLap *,BestLap *> *__cdecl std::_Unguarded_partition<BestLap *,_lambda_b629da58478cbfbbaf49a3b3054e0e7d_>(std::pair<BestLap *,BestLap *> *result, BestLap *_First, BestLap *_Last);
std::pair<DataOrderStruct *,DataOrderStruct *> *__cdecl std::_Unguarded_partition<DataOrderStruct *,_lambda_052f79f8740a582ea4953223732c2846_>(std::pair<DataOrderStruct *,DataOrderStruct *> *result, DataOrderStruct *_First, DataOrderStruct *_Last);
std::pair<DataOrderStructRetired *,DataOrderStructRetired *> *__cdecl std::_Unguarded_partition<DataOrderStructRetired *,_lambda_eb7ef350e7829f5db0d16840c7b892e3_>(std::pair<DataOrderStructRetired *,DataOrderStructRetired *> *result, DataOrderStructRetired *_First, DataOrderStructRetired *_Last);
void __cdecl std::_Uninit_def_fill_n<BestLap *,unsigned int,std::allocator<BestLap>,BestLap>(BestLap *_First, unsigned int _Count);
BestLap *__cdecl std::_Uninit_move<BestLap *,BestLap *,std::allocator<BestLap>,BestLap>(BestLap *_First, BestLap *_Last, BestLap *_Dest);
void __cdecl std::swap<BestLap>(BestLap *_Left, BestLap *_Right);
void __thiscall BestLap::BestLap(BestLap *this, const BestLap *__that);
void __thiscall BestLap::~BestLap(BestLap *this);
CarAvatar *const *__thiscall std::map<CarAvatar *,std::vector<Lap>>::operator[](std::map<CarAvatar *,std::vector<Lap>> *this, CarAvatar *const *_Keyval);
void __thiscall std::vector<BestLap>::_Reallocate(std::vector<BestLap> *this, unsigned int _Count);
void __thiscall std::vector<BestLap>::_Reserve(std::vector<BestLap> *this, unsigned int _Count);
void __thiscall std::vector<BestLap>::_Tidy(std::vector<BestLap> *this);
void __cdecl disqualifyCar(CarAvatar *aCar, std::vector<int> *resultVector);
void __thiscall SessionResultProcessor::fetchBasicResults(SessionResultProcessor *this);
Lap *__cdecl getAverageLap(Lap *result, RaceManager *rm, CarAvatar *aCar);
SessionResult *__thiscall SessionResultProcessor::getCompleteAIResults(SessionResultProcessor *this, SessionResult *result);
void __thiscall SessionResultProcessor::processDragResults(SessionResultProcessor *this);
void __thiscall SessionResultProcessor::processQualifyResults(SessionResultProcessor *this);
void __thiscall SessionResultProcessor::processRaceResults(SessionResultProcessor *this);
void __thiscall std::vector<std::vector<Lap>>::push_back(std::vector<std::vector<Lap>> *this, const std::vector<Lap> *_Val);
void __thiscall std::vector<BestLap>::resize(std::vector<BestLap> *this, unsigned int _Newsize);
void __thiscall SessionStatusSystemMessage::SessionStatusSystemMessage(SessionStatusSystemMessage *this, Sim *aSim);
void __thiscall SessionStatusSystemMessage::~SessionStatusSystemMessage(SessionStatusSystemMessage *this);
void __thiscall SessionStatusSystemMessage::render(SessionStatusSystemMessage *this, float dt);
void __thiscall SessionStatusSystemMessage::update(SessionStatusSystemMessage *this, float dt);
std::wstring *__thiscall std::_Callable_obj<_lambda_bc78f13113546dcdd8613f18ac4ae0cf_,0>::_ApplyX<std::wstring,CarAvatar *,int>(std::_Callable_obj<<lambda_bc78f13113546dcdd8613f18ac4ae0cf>,0> *this, std::wstring *result, CarAvatar **<_Args_0>, int *<_Args_1>);
std::wstring *__thiscall std::_Callable_obj<_lambda_cbdfebb6417da3228235f54e30dc6613_,0>::_ApplyX<std::wstring,CarAvatar *,int>(std::_Callable_obj<<lambda_cbdfebb6417da3228235f54e30dc6613>,0> *this, std::wstring *result, CarAvatar **<_Args_0>, int *<_Args_1>);
std::wstring *__thiscall std::_Callable_obj<_lambda_e1157e21d6c7f495fa03d4dca1d457af_,0>::_ApplyX<std::wstring,CarAvatar *,int>(std::_Callable_obj<<lambda_e1157e21d6c7f495fa03d4dca1d457af>,0> *this, std::wstring *result, CarAvatar **<_Args_0>, int *<_Args_1>);
std::wstring *__thiscall std::_Callable_obj<_lambda_eea00b56d948751bd11b6c89b54c677a_,0>::_ApplyX<std::wstring,CarAvatar *,int>(std::_Callable_obj<<lambda_eea00b56d948751bd11b6c89b54c677a>,0> *this, std::wstring *result, CarAvatar **<_Args_0>, int *<_Args_1>);
std::wstring *__thiscall std::_Callable_obj<_lambda_f366ee7cf1b45b132e3eb8bf5587ac83_,0>::_ApplyX<std::wstring,CarAvatar *,int>(std::_Callable_obj<<lambda_f366ee7cf1b45b132e3eb8bf5587ac83>,0> *this, std::wstring *result, CarAvatar **<_Args_0>, int *<_Args_1>);
void __thiscall lambda_20b38918d1b98043ae37afe93d1c6ee9_::_lambda_20b38918d1b98043ae37afe93d1c6ee9_(SetupElectronics::setSpinner::__l22::<lambda_20b38918d1b98043ae37afe93d1c6ee9> *this, const SetupElectronics::setSpinner::__l22::<lambda_20b38918d1b98043ae37afe93d1c6ee9> *__that);
void __thiscall SetupElectronics::SetupElectronics(SetupElectronics *this, CarAvatar *aCar);
void __thiscall SpinnerData::SpinnerData(SpinnerData *this, std::wstring _name, ksgui::Spinner *_spinner, float _defaultValue, float _minValue, float _maxValue, std::function<float __cdecl(CarAvatar *)> _functionGetValue);
void __thiscall lambda_20b38918d1b98043ae37afe93d1c6ee9_::__lambda_20b38918d1b98043ae37afe93d1c6ee9_(SetupElectronics::setSpinner::__l22::<lambda_20b38918d1b98043ae37afe93d1c6ee9> *this);
void __thiscall std::vector<std::pair<int,float>>::~vector<std::pair<int,float>>(std::vector<SplineIndexBound> *this);
void __thiscall SetupElectronics::~SetupElectronics(SetupElectronics *this);
void __thiscall lambda_20b38918d1b98043ae37afe93d1c6ee9_::operator()(SetupElectronics::setSpinner::__l22::<lambda_20b38918d1b98043ae37afe93d1c6ee9> *this, const ksgui::OnSpinnerValueChanged *message);
std::wstring *__thiscall lambda_bc78f13113546dcdd8613f18ac4ae0cf_::operator()(SetupElectronics::addErsPower::__l8::<lambda_bc78f13113546dcdd8613f18ac4ae0cf> *this, std::wstring *result, CarAvatar *rcar, int id);
std::wstring *__thiscall lambda_cbdfebb6417da3228235f54e30dc6613_::operator()(SetupElectronics::addEngineBrake::__l5::<lambda_cbdfebb6417da3228235f54e30dc6613> *this, std::wstring *result, CarAvatar *rcar, int id);
std::wstring *__thiscall lambda_e1157e21d6c7f495fa03d4dca1d457af_::operator()(SetupElectronics::addHeatCharging::__l10::<lambda_e1157e21d6c7f495fa03d4dca1d457af> *this, std::wstring *result, CarAvatar *rcar, int id);
std::wstring *__thiscall lambda_eea00b56d948751bd11b6c89b54c677a_::operator()(SetupElectronics::addTC::__l16::<lambda_eea00b56d948751bd11b6c89b54c677a> *this, std::wstring *result, CarAvatar *rcar, int id);
std::wstring *__thiscall lambda_f366ee7cf1b45b132e3eb8bf5587ac83_::operator()(SetupElectronics::addErsRecovery::__l5::<lambda_f366ee7cf1b45b132e3eb8bf5587ac83> *this, std::wstring *result, CarAvatar *rcar, int id);
std::wstring *__thiscall std::_Func_class<std::wstring,CarAvatar *,int>::operator()(std::_Func_class<std::wstring,CarAvatar *,int> *this, std::wstring *result, CarAvatar *<_Args_0>, int <_Args_1>);
std::_Func_impl<std::_Callable_obj<<lambda_20b38918d1b98043ae37afe93d1c6ee9>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_20b38918d1b98043ae37afe93d1c6ee9_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_20b38918d1b98043ae37afe93d1c6ee9>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_f449af80f2f5e225dd8bc0ab3a70a1d6>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3fab2fe60eb1677c2f02144546c3547e_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_f449af80f2f5e225dd8bc0ab3a70a1d6>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_dd67fb5b3928a2eeb6ebcc3835e89d56>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a994709b1def3b156b747245aaafb261_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_dd67fb5b3928a2eeb6ebcc3835e89d56>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_f366ee7cf1b45b132e3eb8bf5587ac83>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a80cb031c74f3ba0d0162590a41abf65_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_f366ee7cf1b45b132e3eb8bf5587ac83>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this, unsigned int a2);
SetupElectronics *__thiscall SetupElectronics::`vector deleting destructor'(SetupElectronics *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0e8b76b6a3bf6015a601ed552f351b8f_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_0e8b76b6a3bf6015a601ed552f351b8f>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, void *_Where);
std::_Func_base<void,ksgui::OnSpinnerValueChanged const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_20b38918d1b98043ae37afe93d1c6ee9_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_20b38918d1b98043ae37afe93d1c6ee9>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3fab2fe60eb1677c2f02144546c3547e_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_3fab2fe60eb1677c2f02144546c3547e>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_51e5eac4130511a33de71c5add75cfa0_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_51e5eac4130511a33de71c5add75cfa0>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_54671ad5569bd51105e0563464a207d7_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_54671ad5569bd51105e0563464a207d7>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_63b55491879d7052e2dff3bcd0a9b7cb_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_63b55491879d7052e2dff3bcd0a9b7cb>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_832e1775156345134d8d6d37d5a5389d_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_832e1775156345134d8d6d37d5a5389d>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a5180a937a511278fb4c9f7b86ce3f76_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_a5180a937a511278fb4c9f7b86ce3f76>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a994709b1def3b156b747245aaafb261_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_a994709b1def3b156b747245aaafb261>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bc78f13113546dcdd8613f18ac4ae0cf_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_bc78f13113546dcdd8613f18ac4ae0cf>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c41af40ec1381acc51fb5a8c3bb8fab7_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_c41af40ec1381acc51fb5a8c3bb8fab7>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d5f49b0957548bf0c3da4edd73e971fc_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d5f49b0957548bf0c3da4edd73e971fc>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_eea00b56d948751bd11b6c89b54c677a_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_eea00b56d948751bd11b6c89b54c677a>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f449af80f2f5e225dd8bc0ab3a70a1d6_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f449af80f2f5e225dd8bc0ab3a70a1d6>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, void *_Where);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0e8b76b6a3bf6015a601ed552f351b8f_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0e8b76b6a3bf6015a601ed552f351b8f>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, CarAvatar **<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_13d048c8a74cc9cf393e1d21df639e9e_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_13d048c8a74cc9cf393e1d21df639e9e>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, CarAvatar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_20b38918d1b98043ae37afe93d1c6ee9_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_20b38918d1b98043ae37afe93d1c6ee9>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3fab2fe60eb1677c2f02144546c3547e_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3fab2fe60eb1677c2f02144546c3547e>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, CarAvatar **<_Args_0>);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f449af80f2f5e225dd8bc0ab3a70a1d6_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f449af80f2f5e225dd8bc0ab3a70a1d6>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, CarAvatar **<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_51e5eac4130511a33de71c5add75cfa0_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_51e5eac4130511a33de71c5add75cfa0>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, CarAvatar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_54671ad5569bd51105e0563464a207d7_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_54671ad5569bd51105e0563464a207d7>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, CarAvatar **<_Args_0>, float *<_Args_1>);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_63b55491879d7052e2dff3bcd0a9b7cb_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_63b55491879d7052e2dff3bcd0a9b7cb>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, CarAvatar **<_Args_0>);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_801f1bc0da23acf585600afb34e3de3e_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_801f1bc0da23acf585600afb34e3de3e>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, CarAvatar **<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_832e1775156345134d8d6d37d5a5389d_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_832e1775156345134d8d6d37d5a5389d>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, CarAvatar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a5180a937a511278fb4c9f7b86ce3f76_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a5180a937a511278fb4c9f7b86ce3f76>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, CarAvatar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a994709b1def3b156b747245aaafb261_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a994709b1def3b156b747245aaafb261>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, CarAvatar **<_Args_0>, float *<_Args_1>);
std::wstring *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_bc78f13113546dcdd8613f18ac4ae0cf_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_bc78f13113546dcdd8613f18ac4ae0cf>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this, std::wstring *result, CarAvatar **<_Args_0>, int *<_Args_1>);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c41af40ec1381acc51fb5a8c3bb8fab7_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c41af40ec1381acc51fb5a8c3bb8fab7>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, CarAvatar **<_Args_0>);
std::wstring *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_caec48f8f26ff3e17fa123238713f1b8_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_eea00b56d948751bd11b6c89b54c677a>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this, std::wstring *result, CarAvatar **<_Args_0>, int *<_Args_1>);
std::wstring *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cbdfebb6417da3228235f54e30dc6613_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_cbdfebb6417da3228235f54e30dc6613>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this, std::wstring *result, CarAvatar **<_Args_0>, int *<_Args_1>);
double __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d5f49b0957548bf0c3da4edd73e971fc_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d5f49b0957548bf0c3da4edd73e971fc>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, CarAvatar **<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_dd67fb5b3928a2eeb6ebcc3835e89d56_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_dd67fb5b3928a2eeb6ebcc3835e89d56>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, CarAvatar **<_Args_0>, float *<_Args_1>);
std::wstring *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e1157e21d6c7f495fa03d4dca1d457af_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e1157e21d6c7f495fa03d4dca1d457af>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this, std::wstring *result, CarAvatar **<_Args_0>, int *<_Args_1>);
std::wstring *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a80cb031c74f3ba0d0162590a41abf65_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f366ee7cf1b45b132e3eb8bf5587ac83>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this, std::wstring *result, CarAvatar **<_Args_0>, int *<_Args_1>);
std::_Callable_obj<<lambda_a8437c01ad429eb8483fb0d50f1b0bec>,0> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_917dba4247aaddcdf1f957f212166217_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Get(std::_Func_impl<std::_Callable_obj<<lambda_a8437c01ad429eb8483fb0d50f1b0bec>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_13d048c8a74cc9cf393e1d21df639e9e_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_13d048c8a74cc9cf393e1d21df639e9e>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4ad41c6d5f192cbd281f3c43d00c0142_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_4ad41c6d5f192cbd281f3c43d00c0142>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_801f1bc0da23acf585600afb34e3de3e_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_801f1bc0da23acf585600afb34e3de3e>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a80cb031c74f3ba0d0162590a41abf65_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_a80cb031c74f3ba0d0162590a41abf65>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_caec48f8f26ff3e17fa123238713f1b8_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_caec48f8f26ff3e17fa123238713f1b8>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cbdfebb6417da3228235f54e30dc6613_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_cbdfebb6417da3228235f54e30dc6613>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_dd67fb5b3928a2eeb6ebcc3835e89d56_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_dd67fb5b3928a2eeb6ebcc3835e89d56>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e1157e21d6c7f495fa03d4dca1d457af_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e1157e21d6c7f495fa03d4dca1d457af>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f366ee7cf1b45b132e3eb8bf5587ac83_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f366ee7cf1b45b132e3eb8bf5587ac83>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0e8b76b6a3bf6015a601ed552f351b8f_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0e8b76b6a3bf6015a601ed552f351b8f>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_13d048c8a74cc9cf393e1d21df639e9e_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_13d048c8a74cc9cf393e1d21df639e9e>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_20b38918d1b98043ae37afe93d1c6ee9_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_20b38918d1b98043ae37afe93d1c6ee9>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3fab2fe60eb1677c2f02144546c3547e_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3fab2fe60eb1677c2f02144546c3547e>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4ad41c6d5f192cbd281f3c43d00c0142_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4ad41c6d5f192cbd281f3c43d00c0142>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_51e5eac4130511a33de71c5add75cfa0_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_51e5eac4130511a33de71c5add75cfa0>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_54671ad5569bd51105e0563464a207d7_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_54671ad5569bd51105e0563464a207d7>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_63b55491879d7052e2dff3bcd0a9b7cb_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_63b55491879d7052e2dff3bcd0a9b7cb>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_801f1bc0da23acf585600afb34e3de3e_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_801f1bc0da23acf585600afb34e3de3e>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_832e1775156345134d8d6d37d5a5389d_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_832e1775156345134d8d6d37d5a5389d>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a5180a937a511278fb4c9f7b86ce3f76_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a5180a937a511278fb4c9f7b86ce3f76>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a80cb031c74f3ba0d0162590a41abf65_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a80cb031c74f3ba0d0162590a41abf65>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a994709b1def3b156b747245aaafb261_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a994709b1def3b156b747245aaafb261>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_bc78f13113546dcdd8613f18ac4ae0cf_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_bc78f13113546dcdd8613f18ac4ae0cf>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c41af40ec1381acc51fb5a8c3bb8fab7_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c41af40ec1381acc51fb5a8c3bb8fab7>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_caec48f8f26ff3e17fa123238713f1b8_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_caec48f8f26ff3e17fa123238713f1b8>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cbdfebb6417da3228235f54e30dc6613_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_cbdfebb6417da3228235f54e30dc6613>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d5f49b0957548bf0c3da4edd73e971fc_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d5f49b0957548bf0c3da4edd73e971fc>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_dd67fb5b3928a2eeb6ebcc3835e89d56_,0>,std::allocator<std::_Func_class<void,CarAvatar *,float>>,void,CarAvatar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_dd67fb5b3928a2eeb6ebcc3835e89d56>,0>,std::allocator<std::_Func_class<void,CarAvatar *,float> >,void,CarAvatar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e1157e21d6c7f495fa03d4dca1d457af_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e1157e21d6c7f495fa03d4dca1d457af>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_eea00b56d948751bd11b6c89b54c677a_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_eea00b56d948751bd11b6c89b54c677a>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f366ee7cf1b45b132e3eb8bf5587ac83_,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int>>,std::wstring,CarAvatar *,int>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f366ee7cf1b45b132e3eb8bf5587ac83>,0>,std::allocator<std::_Func_class<std::wstring,CarAvatar *,int> >,std::wstring,CarAvatar *,int> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f449af80f2f5e225dd8bc0ab3a70a1d6_,0>,std::allocator<std::_Func_class<float,CarAvatar *>>,float,CarAvatar *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f449af80f2f5e225dd8bc0ab3a70a1d6>,0>,std::allocator<std::_Func_class<float,CarAvatar *> >,float,CarAvatar *> *this);
SpinnerData *__thiscall SetupElectronics::addABS(SetupElectronics *this, ksgui::GUI *gui);
SpinnerData *__thiscall SetupElectronics::addEngineBrake(SetupElectronics *this, ksgui::GUI *gui);
SpinnerData *__thiscall SetupElectronics::addErsPower(SetupElectronics *this, ksgui::GUI *gui);
SpinnerData *__thiscall SetupElectronics::addErsRecovery(SetupElectronics *this, ksgui::GUI *gui);
SpinnerData *__thiscall SetupElectronics::addHeatCharging(SetupElectronics *this, ksgui::GUI *gui);
SpinnerData *__thiscall SetupElectronics::addTC(SetupElectronics *this, ksgui::GUI *gui);
SpinnerData *__thiscall SetupElectronics::addTurbo(SetupElectronics *this, ksgui::GUI *gui);
// void __usercall SetupElectronics::checkDrivingAssist(SetupElectronics *this@<ecx>, unsigned int a2@<ebx>);
std::wstring *__thiscall SetupElectronics::getStringToSave(SetupElectronics *this, std::wstring *result);
void __thiscall SetupElectronics::loadFromINI(SetupElectronics *this, INIReader *ini, bool isFixed);
void __thiscall SetupElectronics::onVisibleChanged(SetupElectronics *this, float value);
// void __userpurge SetupElectronics::render(SetupElectronics *this@<ecx>, __int64 a2@<esi:edi>, float dt);
void __thiscall SetupElectronics::resetToDefaultValues(SetupElectronics *this);
void __thiscall SetupElectronics::setSpinner(SetupElectronics *this, SpinnerData *customSpinner, std::function<float __cdecl(CarAvatar *)> functionGetValue, std::function<void __cdecl(CarAvatar *,float)> functionSetValue, std::function<std::wstring __cdecl(CarAvatar *,int)> functionGetName);
void __thiscall SetupFuelManager::SetupFuelManager(SetupFuelManager *this, CarAvatar *aCar);
void __thiscall lambda_07dab914dc7d209f6d70749e1cdf3c57_::operator()(SetupFuelManager::{ctor}::__l10::<lambda_07dab914dc7d209f6d70749e1cdf3c57> *this, const ksgui::OnSpinnerValueChanged *message);
void __thiscall lambda_b07f6807480575b02d051cf7f381de52_::operator()(SetupFuelManager::{ctor}::__l10::<lambda_07dab914dc7d209f6d70749e1cdf3c57>::()::__l16::<lambda_b07f6807480575b02d051cf7f381de52> *this);
SetupFuelManager *__thiscall SetupFuelManager::`vector deleting destructor'(SetupFuelManager *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_07dab914dc7d209f6d70749e1cdf3c57_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_07dab914dc7d209f6d70749e1cdf3c57>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_07dab914dc7d209f6d70749e1cdf3c57_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_07dab914dc7d209f6d70749e1cdf3c57>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b07f6807480575b02d051cf7f381de52_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b07f6807480575b02d051cf7f381de52>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b07f6807480575b02d051cf7f381de52_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_b07f6807480575b02d051cf7f381de52>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_07dab914dc7d209f6d70749e1cdf3c57_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_07dab914dc7d209f6d70749e1cdf3c57>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b07f6807480575b02d051cf7f381de52_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b07f6807480575b02d051cf7f381de52>,0>,std::allocator<std::_Func_class<void> >,void> *this);
double __thiscall SetupFuelManager::getSetupFuel(SetupFuelManager *this);
std::wstring *__thiscall SetupFuelManager::getStringToSave(SetupFuelManager *this, std::wstring *result);
bool __thiscall SetupFuelManager::isFixedFuel(SetupFuelManager *this);
void __thiscall SetupFuelManager::loadFromINI(SetupFuelManager *this, INIReader *ini, bool isFixed);
void __thiscall SetupFuelManager::onVisibleChanged(SetupFuelManager *this, bool value);
// void __userpurge SetupFuelManager::render(SetupFuelManager *this@<ecx>, __int64 a2@<esi:edi>, float dt);
void __thiscall SetupTyresManager::resetToDefaultValues(SetupFuelManager *this);
std::_Tree_node<std::pair<std::wstring const ,GearSetDef>,void *> *__thiscall std::_Tree_buy<std::pair<std::wstring const,std::vector<Node *>>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring &&>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,GearSetDef>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring &&> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_node<std::pair<ksgui::Spinner * const,GearDef>,void *> *__thiscall std::_Tree_buy<std::pair<ksgui::Spinner * const,GearDef>>::_Buynode<std::piecewise_construct_t const &,std::tuple<ksgui::Spinner * const &>,std::tuple<>>(std::_Tree_buy<std::pair<ksgui::Spinner * const,GearDef>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<ksgui::Spinner * const &> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_node<std::pair<std::wstring const ,std::vector<AudioEvent *> >,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,std::vector<AudioEvent *>>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,std::vector<AudioEvent *> >> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring const &> *<_Val_1>, std::tuple<> *<_Val_2>);
GearDef *__cdecl std::_Copy_impl<GearDef *,GearDef *>(GearDef *_First, GearDef *_Last, GearDef *_Dest);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<GearDef>>>(GearDef *_First, GearDef *_Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,GearSetDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,GearSetDef>>,0>>::_Insert_at<std::pair<std::wstring const,GearSetDef> &,std::_Tree_node<std::pair<std::wstring const,GearSetDef>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,GearSetDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,GearSetDef> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::wstring const ,GearSetDef>,void *> *_Wherenode, std::pair<std::wstring const ,GearSetDef> *_Val, std::_Tree_node<std::pair<std::wstring const ,GearSetDef>,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > > *__thiscall std::_Tree<std::_Tmap_traits<ksgui::Spinner *,GearDef,std::less<ksgui::Spinner *>,std::allocator<std::pair<ksgui::Spinner * const,GearDef>>,0>>::_Insert_at<std::pair<ksgui::Spinner * const,GearDef> &,std::_Tree_node<std::pair<ksgui::Spinner * const,GearDef>,void *> *>(std::_Tree<std::_Tmap_traits<ksgui::Spinner *,GearDef,std::less<ksgui::Spinner *>,std::allocator<std::pair<ksgui::Spinner * const,GearDef> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > > *result, bool _Addleft, std::_Tree_node<std::pair<ksgui::Spinner * const,GearDef>,void *> *_Wherenode, std::pair<ksgui::Spinner * const,GearDef> *_Val, std::_Tree_node<std::pair<ksgui::Spinner * const,GearDef>,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,GearSetDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,GearSetDef>>,0>>::_Insert_hint<std::pair<std::wstring const,GearSetDef> &,std::_Tree_node<std::pair<std::wstring const,GearSetDef>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,GearSetDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,GearSetDef> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > > _Where, std::pair<std::wstring const ,GearSetDef> *_Val, std::_Tree_node<std::pair<std::wstring const ,GearSetDef>,void *> *_Newnode);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > > *__thiscall std::_Tree<std::_Tmap_traits<ksgui::Spinner *,GearDef,std::less<ksgui::Spinner *>,std::allocator<std::pair<ksgui::Spinner * const,GearDef>>,0>>::_Insert_hint<std::pair<ksgui::Spinner * const,GearDef> &,std::_Tree_node<std::pair<ksgui::Spinner * const,GearDef>,void *> *>(std::_Tree<std::_Tmap_traits<ksgui::Spinner *,GearDef,std::less<ksgui::Spinner *>,std::allocator<std::pair<ksgui::Spinner * const,GearDef> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > > _Where, std::pair<ksgui::Spinner * const,GearDef> *_Val, std::_Tree_node<std::pair<ksgui::Spinner * const,GearDef>,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,GearSetDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,GearSetDef>>,0>>::_Insert_nohint<std::pair<std::wstring const,GearSetDef> &,std::_Tree_node<std::pair<std::wstring const,GearSetDef>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,GearSetDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,GearSetDef> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > > _Leftish, std::pair<std::wstring const ,GearSetDef> *_Val, std::_Tree_node<std::pair<std::wstring const ,GearSetDef>,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<ksgui::Spinner *,GearDef,std::less<ksgui::Spinner *>,std::allocator<std::pair<ksgui::Spinner * const,GearDef>>,0>>::_Insert_nohint<std::pair<ksgui::Spinner * const,GearDef> &,std::_Tree_node<std::pair<ksgui::Spinner * const,GearDef>,void *> *>(std::_Tree<std::_Tmap_traits<ksgui::Spinner *,GearDef,std::less<ksgui::Spinner *>,std::allocator<std::pair<ksgui::Spinner * const,GearDef> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > > _Leftish, std::pair<ksgui::Spinner * const,GearDef> *_Val, std::_Tree_node<std::pair<ksgui::Spinner * const,GearDef>,void *> *_Newnode);
GearDef *__thiscall std::vector<GearDef>::_Ucopy<GearDef *>(std::vector<GearDef> *this, GearDef *_First, GearDef *_Last, GearDef *_Ptr);
void __thiscall std::wifstream::wifstream(std::wifstream *this, int a2);
void __thiscall SetupGearManager::SetupGearManager(SetupGearManager *this, CarAvatar *aCar);
void __thiscall std::map<ksgui::Spinner *,GearDef>::~map<ksgui::Spinner *,GearDef>(std::map<ksgui::Spinner *,GearDef> *this);
void __thiscall std::map<std::wstring,GearSetDef>::~map<std::wstring,GearSetDef>(std::map<std::wstring,GearSetDef> *this);
void __thiscall std::pair<std::wstring const,GearSetDef>::~pair<std::wstring const,GearSetDef>(std::pair<std::wstring const ,GearSetDef> *this);
void __thiscall std::vector<GearDef>::_Tidy(std::vector<GearDef> *this);
void __thiscall SetupGearManager::~SetupGearManager(SetupGearManager *this);
std::vector<GearDef> *__thiscall std::vector<GearDef>::operator=(std::vector<GearDef> *this, const std::vector<GearDef> *_Right);
ksgui::Spinner *const *__thiscall std::map<ksgui::Spinner *,GearDef>::operator[](std::map<ksgui::Spinner *,GearDef> *this, ksgui::Spinner *const *_Keyval);
GearSetDef *__thiscall std::map<std::wstring,GearSetDef>::operator[](std::map<std::wstring,GearSetDef> *this, std::wstring *_Keyval);
GearSetDef *__thiscall std::map<std::wstring,GearSetDef>::operator[](std::map<std::wstring,GearSetDef> *this, const std::wstring *_Keyval);
void __thiscall lambda_0488e465f417cf176783f246f52fde28_::operator()(SetupGearManager::addGearSet::__l8::<lambda_0488e465f417cf176783f246f52fde28> *this, const ksgui::OnSpinnerValueChanged *ev);
void __thiscall lambda_62bb50cacea067a8a5d5ee1d50fd74f9_::operator()(SetupGearManager::addSetupItem::__l13::<lambda_62bb50cacea067a8a5d5ee1d50fd74f9> *this, const ksgui::OnSpinnerValueChanged *message);
SetupGearManager *__thiscall SetupGearManager::`scalar deleting destructor'(SetupGearManager *this, unsigned int a2);
char __thiscall std::vector<Turbo>::_Buy(std::vector<Turbo> *this, unsigned int _Capacity);
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const,GearSetDef>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const ,std::vector<AudioEvent *> >> > *this);
void __thiscall std::_Tree<std::_Tmap_traits<ksgui::Spinner *,GearDef,std::less<ksgui::Spinner *>,std::allocator<std::pair<ksgui::Spinner * const,GearDef>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<ksgui::Spinner *,GearDef,std::less<ksgui::Spinner *>,std::allocator<std::pair<ksgui::Spinner * const,GearDef> >,0> > *this, std::_Tree_node<std::pair<ksgui::Spinner * const,GearDef>,void *> *_Newnode);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,GearSetDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,GearSetDef>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<std::wstring,GearSetDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,GearSetDef> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,GearSetDef>,void *> *_Newnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0488e465f417cf176783f246f52fde28_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0488e465f417cf176783f246f52fde28>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_62bb50cacea067a8a5d5ee1d50fd74f9_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_62bb50cacea067a8a5d5ee1d50fd74f9>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
void __thiscall std::_Tree<std::_Tmap_traits<ksgui::Spinner *,GearDef,std::less<ksgui::Spinner *>,std::allocator<std::pair<ksgui::Spinner * const,GearDef>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<ksgui::Spinner *,GearDef,std::less<ksgui::Spinner *>,std::allocator<std::pair<ksgui::Spinner * const,GearDef> >,0> > *this, std::_Tree_node<std::pair<ksgui::Spinner * const,GearDef>,void *> *_Rootnode);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,GearSetDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,GearSetDef>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<std::wstring,GearSetDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,GearSetDef> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,GearSetDef>,void *> *_Rootnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0488e465f417cf176783f246f52fde28_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_0488e465f417cf176783f246f52fde28>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_62bb50cacea067a8a5d5ee1d50fd74f9_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_62bb50cacea067a8a5d5ee1d50fd74f9>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0488e465f417cf176783f246f52fde28_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0488e465f417cf176783f246f52fde28>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_62bb50cacea067a8a5d5ee1d50fd74f9_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_62bb50cacea067a8a5d5ee1d50fd74f9>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall SetupGearManager::addGearSet(SetupGearManager *this, std::wstring name, GearSetDef gs);
void __thiscall SetupGearManager::addSetupItem(SetupGearManager *this, int absoluteGearIndex, const SetupItemText *item);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > > *__thiscall std::_Tree<std::_Tmap_traits<ksgui::Spinner *,GearDef,std::less<ksgui::Spinner *>,std::allocator<std::pair<ksgui::Spinner * const,GearDef>>,0>>::erase(std::_Tree<std::_Tmap_traits<ksgui::Spinner *,GearDef,std::less<ksgui::Spinner *>,std::allocator<std::pair<ksgui::Spinner * const,GearDef> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > > _Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > > *__thiscall std::_Tree<std::_Tmap_traits<ksgui::Spinner *,GearDef,std::less<ksgui::Spinner *>,std::allocator<std::pair<ksgui::Spinner * const,GearDef>>,0>>::erase(std::_Tree<std::_Tmap_traits<ksgui::Spinner *,GearDef,std::less<ksgui::Spinner *>,std::allocator<std::pair<ksgui::Spinner * const,GearDef> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<ksgui::Spinner * const,GearDef> > > > _Where);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,GearSetDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,GearSetDef>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,GearSetDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,GearSetDef> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > > _Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,GearSetDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,GearSetDef>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,GearSetDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,GearSetDef> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,GearSetDef> > > > _Where);
std::wstring *__thiscall SetupGearManager::getStringMaxSpeed(SetupGearManager *this, std::wstring *result, unsigned int gear);
std::wstring *__thiscall SetupGearManager::getStringToSave(SetupGearManager *this, std::wstring *result);
void __thiscall SetupGearManager::loadFromINI(SetupGearManager *this, INIReader *ini, bool isFixed);
// void __userpurge SetupGearManager::populateSpinner(SetupGearManager *this@<ecx>, unsigned int a2@<ebx>, int absoluteGearIndex, ksgui::Spinner *spinner, const SetupItemText *item);
// void __userpurge SetupGearManager::render(SetupGearManager *this@<ecx>, __int64 a2@<esi:edi>, float dt);
void __thiscall SetupGearManager::resetToDefaultValues(SetupGearManager *this);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, SetupIOManager::{ctor}::__l24::<lambda_1fb02ca72f51846335925a618f490a43> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, SetupIOManager::{ctor}::__l23::<lambda_976c79855a6dadcae9f5d36ece314050> *_Func);
void __thiscall std::function<void __cdecl (std::wstring const &)>::function<void __cdecl (std::wstring const &)>(std::function<void __cdecl(std::wstring const &)> *this, SetupIOManager::{ctor}::__l26::<lambda_b2cfcc70492f792e61fd520a8d98558b> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnListBoxItemClickedEvent const &)>::function<void __cdecl (ksgui::OnListBoxItemClickedEvent const &)>(std::function<void __cdecl(ksgui::OnListBoxItemClickedEvent const &)> *this, SetupIOManager::{ctor}::__l28::<lambda_be89d894e85a1cb82d1d573b487ac16c> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnControlClicked const &)>::function<void __cdecl (ksgui::OnControlClicked const &)>(std::function<void __cdecl(ksgui::OnControlClicked const &)> *this, SetupIOManager::{ctor}::__l25::<lambda_d69f21d976d1d06b6fd05ef33606f75b> *_Func);
void __thiscall std::function<void __cdecl (ksgui::OnListBoxItemClickedEvent const &)>::function<void __cdecl (ksgui::OnListBoxItemClickedEvent const &)>(std::function<void __cdecl(ksgui::OnListBoxItemClickedEvent const &)> *this, SetupIOManager::{ctor}::__l27::<lambda_e1e3b15fa0bdd39136aa4fc3367e9e69> *_Func);
void __thiscall SetupIOManager::SetupIOManager(SetupIOManager *this, Sim *aSim);
void __thiscall SetupIOManager::~SetupIOManager(SetupIOManager *this);
// void __userpurge lambda_976c79855a6dadcae9f5d36ece314050_::operator()(SetupIOManager::{ctor}::__l23::<lambda_976c79855a6dadcae9f5d36ece314050> *this@<ecx>, unsigned int a2@<ebx>, const ksgui::OnControlClicked *message);
// void __userpurge lambda_b1dff931891abcb98a0593128298a719_::operator()(SetupIOManager::{ctor}::__l19::<lambda_b1dff931891abcb98a0593128298a719> *this@<ecx>, unsigned int a2@<ebx>, const ksgui::OnControlClicked *message);
void __thiscall lambda_e1e3b15fa0bdd39136aa4fc3367e9e69_::operator()(SetupIOManager::{ctor}::__l27::<lambda_e1e3b15fa0bdd39136aa4fc3367e9e69> *this, const ksgui::OnListBoxItemClickedEvent *message);
std::_Func_impl<std::_Callable_obj<<lambda_bf284045a6ef436797ad753c4166a82c>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *__thiscall std::_Func_base<void,ksgui::OnListBoxItemClickedEvent const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_bf284045a6ef436797ad753c4166a82c>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this, unsigned int a2);
SetupIOManager *__thiscall SetupIOManager::`scalar deleting destructor'(SetupIOManager *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1fb02ca72f51846335925a618f490a43_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_1fb02ca72f51846335925a618f490a43>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8759acc0ca6187b6bc4aa15f32484545_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_8759acc0ca6187b6bc4aa15f32484545>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_976c79855a6dadcae9f5d36ece314050_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_976c79855a6dadcae9f5d36ece314050>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b2cfcc70492f792e61fd520a8d98558b_,0>,std::allocator<std::_Func_class<void,std::wstring const &>>,void,std::wstring const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_b2cfcc70492f792e61fd520a8d98558b>,0>,std::allocator<std::_Func_class<void,std::wstring const &> >,void,std::wstring const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d004a09e503e10e8c0550315956595df_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_d004a09e503e10e8c0550315956595df>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e1e3b15fa0bdd39136aa4fc3367e9e69_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_e1e3b15fa0bdd39136aa4fc3367e9e69>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this, void *_Where);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_1fb02ca72f51846335925a618f490a43_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1fb02ca72f51846335925a618f490a43>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, unsigned int a2@<ebx>, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_8759acc0ca6187b6bc4aa15f32484545_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_8759acc0ca6187b6bc4aa15f32484545>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_976c79855a6dadcae9f5d36ece314050_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_976c79855a6dadcae9f5d36ece314050>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, unsigned int a2@<ebx>, const ksgui::OnControlClicked *<_Args_0>);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_b1dff931891abcb98a0593128298a719_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b1dff931891abcb98a0593128298a719>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this@<ecx>, unsigned int a2@<ebx>, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b2cfcc70492f792e61fd520a8d98558b_,0>,std::allocator<std::_Func_class<void,std::wstring const &>>,void,std::wstring const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d69f21d976d1d06b6fd05ef33606f75b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_be89d894e85a1cb82d1d573b487ac16c_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_be89d894e85a1cb82d1d573b487ac16c>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this, const ksgui::OnListBoxItemClickedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d004a09e503e10e8c0550315956595df_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d004a09e503e10e8c0550315956595df>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e1e3b15fa0bdd39136aa4fc3367e9e69_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e1e3b15fa0bdd39136aa4fc3367e9e69>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this, const ksgui::OnListBoxItemClickedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b1dff931891abcb98a0593128298a719_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_b1dff931891abcb98a0593128298a719>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_be89d894e85a1cb82d1d573b487ac16c_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_be89d894e85a1cb82d1d573b487ac16c>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d69f21d976d1d06b6fd05ef33606f75b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_d69f21d976d1d06b6fd05ef33606f75b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1fb02ca72f51846335925a618f490a43_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1fb02ca72f51846335925a618f490a43>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_8759acc0ca6187b6bc4aa15f32484545_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_8759acc0ca6187b6bc4aa15f32484545>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_976c79855a6dadcae9f5d36ece314050_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_976c79855a6dadcae9f5d36ece314050>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b1dff931891abcb98a0593128298a719_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b1dff931891abcb98a0593128298a719>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b2cfcc70492f792e61fd520a8d98558b_,0>,std::allocator<std::_Func_class<void,std::wstring const &>>,void,std::wstring const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b2cfcc70492f792e61fd520a8d98558b>,0>,std::allocator<std::_Func_class<void,std::wstring const &> >,void,std::wstring const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_be89d894e85a1cb82d1d573b487ac16c_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_be89d894e85a1cb82d1d573b487ac16c>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d004a09e503e10e8c0550315956595df_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d004a09e503e10e8c0550315956595df>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d69f21d976d1d06b6fd05ef33606f75b_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d69f21d976d1d06b6fd05ef33606f75b>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e1e3b15fa0bdd39136aa4fc3367e9e69_,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &>>,void,ksgui::OnListBoxItemClickedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e1e3b15fa0bdd39136aa4fc3367e9e69>,0>,std::allocator<std::_Func_class<void,ksgui::OnListBoxItemClickedEvent const &> >,void,ksgui::OnListBoxItemClickedEvent const &> *this);
std::wstring *__cdecl cutStringIfExceeds(std::wstring *result, std::wstring aString, unsigned int maxNumberOfCharacters);
std::wstring *__thiscall SetupIOManager::getPathFromSetupName(SetupIOManager *this, std::wstring *result, const std::wstring *setupName, bool strategy);
void __thiscall SetupIOManager::onVisibleChanged(SetupIOManager *this, bool newValue);
void __thiscall SetupIOManager::refreshSetupListBox(SetupIOManager *this);
void __thiscall SetupIOManager::refreshStatus(SetupIOManager *this);
// void __userpurge SetupIOManager::render(SetupIOManager *this@<ecx>, __int64 a2@<esi:edi>, float dt);
void __thiscall SetupIOManager::resetUI(SetupIOManager *this);
// void __usercall SetupIOManager::sendSaveMessage(SetupIOManager *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall SetupIOManager::setOverrideStatus(SetupIOManager *this, bool overrideStatus);
void __thiscall SetupIOManager::setRemoveStatus(SetupIOManager *this, bool removeStatus);
void __thiscall SetupIOManager::setSelectedTrack(SetupIOManager *this, const std::wstring *track);
void __thiscall SetupIOManager::showStatus(SetupIOManager *this, bool show, std::wstring text);
void __thiscall SetupPitstopPresets::SetupPitstopPresets(SetupPitstopPresets *this, CarAvatar *aCar, QuickMenuPitstop *aPit);
QuickMenuPitstopItem *__thiscall QuickMenuPitstopItem::operator=(QuickMenuPitstopItem *this, const QuickMenuPitstopItem *__that);
std::_Func_impl<std::_Callable_obj<<lambda_44b5ac47c068dd6558d7c817ed79d7b9>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_dd21360307adb6d027fdbb916ff38fbd_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_44b5ac47c068dd6558d7c817ed79d7b9>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, unsigned int a2);
SetupPitstopPresets *__thiscall SetupPitstopPresets::`scalar deleting destructor'(SetupPitstopPresets *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1ac7f74e0155320955b56e2fd8eda8ef_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1ac7f74e0155320955b56e2fd8eda8ef>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f6171b2e31fb2aa2de8938764ec9142e_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f6171b2e31fb2aa2de8938764ec9142e>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7e845f6cddd5849a4436595890680bb7_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_7e845f6cddd5849a4436595890680bb7>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f6171b2e31fb2aa2de8938764ec9142e_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f726f1d6e9367dcc20b39a7fa8856fc1>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_61559dcb57a987539418aedbffe68d9f_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_61559dcb57a987539418aedbffe68d9f>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7e845f6cddd5849a4436595890680bb7_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_7e845f6cddd5849a4436595890680bb7>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a1d433f8ba72e84bfdb87fa8d2c7942c_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_a1d433f8ba72e84bfdb87fa8d2c7942c>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_dd21360307adb6d027fdbb916ff38fbd_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_dd21360307adb6d027fdbb916ff38fbd>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f726f1d6e9367dcc20b39a7fa8856fc1_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_f726f1d6e9367dcc20b39a7fa8856fc1>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1ac7f74e0155320955b56e2fd8eda8ef_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1ac7f74e0155320955b56e2fd8eda8ef>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_61559dcb57a987539418aedbffe68d9f_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_61559dcb57a987539418aedbffe68d9f>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7e845f6cddd5849a4436595890680bb7_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_7e845f6cddd5849a4436595890680bb7>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a1d433f8ba72e84bfdb87fa8d2c7942c_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a1d433f8ba72e84bfdb87fa8d2c7942c>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_dd21360307adb6d027fdbb916ff38fbd_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_dd21360307adb6d027fdbb916ff38fbd>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f6171b2e31fb2aa2de8938764ec9142e_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f6171b2e31fb2aa2de8938764ec9142e>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f726f1d6e9367dcc20b39a7fa8856fc1_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f726f1d6e9367dcc20b39a7fa8856fc1>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
void __thiscall SetupPitstopPresets::loadFixed(SetupPitstopPresets *this, const std::wstring *path);
void __thiscall SetupPitstopPresets::loadPresets(SetupPitstopPresets *this, INIReader *ini);
void __thiscall SetupPitstopPresets::onVisibleChanged(SetupPitstopPresets *this, bool value);
// void __userpurge SetupPitstopPresets::render(SetupPitstopPresets *this@<ecx>, __int64 a2@<esi:edi>, float dt);
void __thiscall SetupPitstopPresets::savePresets(SetupPitstopPresets *this, std::wofstream *file);
void __thiscall SetupPitstopPresets::syncCarPitstop(SetupPitstopPresets *this);
void __thiscall SetupPitstopPresets::syncSpinners(SetupPitstopPresets *this);
void __cdecl std::_Adjust_heap<SetupTab * *,int,SetupTab *,_lambda_d0860adfc7865b83237ab17dc7c59510_>(SetupTab **_First, int _Hole, int _Bottom, SetupTab **_Val);
void __cdecl std::_Insertion_sort1<SetupTab * *,_lambda_d0860adfc7865b83237ab17dc7c59510_,SetupTab *>(SetupTab **_First, SetupTab **_Last);
void __cdecl std::_Make_heap<SetupTab * *,int,SetupTab *,_lambda_d0860adfc7865b83237ab17dc7c59510_>(SetupTab **_First, SetupTab **_Last);
void __cdecl std::_Med3<SetupTab * *,_lambda_d0860adfc7865b83237ab17dc7c59510_>(SetupTab **_First, SetupTab **_Mid, SetupTab **_Last);
void __cdecl std::_Median<SetupTab * *,_lambda_d0860adfc7865b83237ab17dc7c59510_>(SetupTab **_First, SetupTab **_Mid, SetupTab **_Last);
void __cdecl std::_Push_heap<SetupTab * *,int,SetupTab *,_lambda_d0860adfc7865b83237ab17dc7c59510_>(SetupTab **_First, int _Hole, int _Top, SetupTab **_Val);
void __cdecl std::_Sort<SetupTab * *,int,_lambda_d0860adfc7865b83237ab17dc7c59510_>(SetupTab **_First, SetupTab **_Last, int _Ideal, SetupScreen::loadINI::__l63::<lambda_d0860adfc7865b83237ab17dc7c59510> _Pred);
void __cdecl std::_Sort_heap<SetupTab * *,_lambda_d0860adfc7865b83237ab17dc7c59510_>(SetupTab **_First, SetupTab **_Last);
std::pair<SetupTab * *,SetupTab * *> *__cdecl std::_Unguarded_partition<SetupTab * *,_lambda_d0860adfc7865b83237ab17dc7c59510_>(std::pair<SetupTab * *,SetupTab * *> *result, SetupTab **_First, SetupTab **_Last);
GearDef *__cdecl std::_Uninit_copy<GearDef const *,GearDef *,std::allocator<GearDef>>(GearDef *_First, GearDef *_Last, GearDef *_Dest);
void __cdecl std::sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SetupTab *>>>,_lambda_d0860adfc7865b83237ab17dc7c59510_>(std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SetupTab *> > > _First, std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SetupTab *> > > _Last, SetupScreen::loadINI::__l63::<lambda_d0860adfc7865b83237ab17dc7c59510> _Pred);
void __thiscall std::vector<GearDef>::vector<GearDef>(std::vector<GearDef> *this, const std::vector<GearDef> *_Right);
void __thiscall SetupScreen::SetupScreen(SetupScreen *this, Sim *sim);
void __thiscall SetupItemDef::~SetupItemDef(SetupItemDef *this);
void __thiscall SetupScreen::~SetupScreen(SetupScreen *this);
std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SetupTab *> > > *__thiscall std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SetupTab *>>>::operator+(std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SetupTab *> > > *this, std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SetupTab *> > > *result, int _Off);
std::_Func_impl<std::_Callable_obj<<lambda_f3bf81b48c9e50cc0a810c999e0f6e84>,0>,std::allocator<std::_Func_class<void,OnCellSelected const &> >,void,OnCellSelected const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f3bf81b48c9e50cc0a810c999e0f6e84_,0>,std::allocator<std::_Func_class<void,OnCellSelected const &>>,void,OnCellSelected const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_f3bf81b48c9e50cc0a810c999e0f6e84>,0>,std::allocator<std::_Func_class<void,OnCellSelected const &> >,void,OnCellSelected const &> *this, unsigned int a2);
SetupScreen *__thiscall SetupScreen::`vector deleting destructor'(SetupScreen *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f3bf81b48c9e50cc0a810c999e0f6e84_,0>,std::allocator<std::_Func_class<void,OnCellSelected const &>>,void,OnCellSelected const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f3bf81b48c9e50cc0a810c999e0f6e84>,0>,std::allocator<std::_Func_class<void,OnCellSelected const &> >,void,OnCellSelected const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f3bf81b48c9e50cc0a810c999e0f6e84_,0>,std::allocator<std::_Func_class<void,OnCellSelected const &>>,void,OnCellSelected const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f3bf81b48c9e50cc0a810c999e0f6e84>,0>,std::allocator<std::_Func_class<void,OnCellSelected const &> >,void,OnCellSelected const &> *this, const OnCellSelected *<_Args_0>);
void __thiscall std::vector<GearDef>::_Reallocate(std::vector<GearDef> *this, unsigned int _Count);
void __thiscall std::vector<GearDef>::_Reserve(std::vector<GearDef> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f3bf81b48c9e50cc0a810c999e0f6e84_,0>,std::allocator<std::_Func_class<void,OnCellSelected const &>>,void,OnCellSelected const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f3bf81b48c9e50cc0a810c999e0f6e84>,0>,std::allocator<std::_Func_class<void,OnCellSelected const &> >,void,OnCellSelected const &> *this);
void __thiscall Event<ksgui::OnListBoxItemClickedEvent>::addHandler(Event<ksgui::OnListBoxItemClickedEvent> *this, std::function<void __cdecl(ksgui::OnListBoxItemClickedEvent const &)> h, void *owner);
double __thiscall SetupScreen::getFixedFuel(SetupScreen *this);
SetupTab *__thiscall SetupScreen::getSetupTab(SetupScreen *this, std::wstring name);
int __thiscall TabBar::getTabNamesCount(TabBar *this);
bool __thiscall SetupScreen::isFixedFuel(SetupScreen *this);
void __thiscall SetupScreen::loadINI(SetupScreen *this);
// bool __userpurge SetupScreen::loadSetupAbsolutePath@<al>(SetupScreen *this@<ecx>, unsigned int i@<ebx>, const std::wstring *loadPath, BOOL isFixed);
char __thiscall SetupScreen::needToSave(SetupScreen *this);
void __thiscall std::vector<GearDef>::push_back(std::vector<GearDef> *this, const GearDef *_Val);
void __thiscall SetupScreen::render(SetupScreen *this, float dt);
void __thiscall SetupScreen::resetTabsValueToDefault(SetupScreen *this);
char __thiscall SetupScreen::saveSetupAbsolutePath(SetupScreen *this, const std::wstring *savePath);
void __thiscall SetupScreen::switchVisibility(SetupScreen *this);
void __thiscall SetupInformation::SetupInformation(SetupInformation *this, Sim *aSim);
SetupInformation *__thiscall SetupInformation::`vector deleting destructor'(SetupInformation *this, unsigned int a2);
std::wstring *__thiscall SetupInformation::cutDecimals(SetupInformation *this, std::wstring *result, const std::wstring *s, int decimalCount);
double __thiscall SetupInformation::getTOE(SetupInformation *this, int tyreIndex);
// void __userpurge SetupInformation::render(SetupInformation *this@<ecx>, int a2@<esi>, float dt);
void __thiscall SetupInformation::setFrontValues(SetupInformation *this, CarInfoFront *info, float x, float y);
void __thiscall SetupInformation::setRearValues(SetupInformation *this, CarInfoRear *info, float x, float y);
std::wstring *__cdecl tempToString(std::wstring *result, float *temps);
void __thiscall SetupItemDef::SetupItemDef(SetupItemDef *this, const SetupItemDef *__that);
void __thiscall SetupTab::SetupTab(SetupTab *this, std::wstring aname, ksgui::GUI *aGui, Sim *sim);
void __thiscall SetupTab::~SetupTab(SetupTab *this);
void __thiscall lambda_06d8555c694e659519f903dc91030213_::operator()(SetupTab::addItem::__l21::<lambda_06d8555c694e659519f903dc91030213> *this, const ksgui::OnSpinnerValueChanged *ev);
SetupTab *__thiscall SetupTab::`vector deleting destructor'(SetupTab *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1e3f31f7bc256247176f0f8c1fde3839_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1e3f31f7bc256247176f0f8c1fde3839>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_06d8555c694e659519f903dc91030213_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_06d8555c694e659519f903dc91030213>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1e3f31f7bc256247176f0f8c1fde3839_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1e3f31f7bc256247176f0f8c1fde3839>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_06d8555c694e659519f903dc91030213_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_06d8555c694e659519f903dc91030213>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_06d8555c694e659519f903dc91030213_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_06d8555c694e659519f903dc91030213>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1e3f31f7bc256247176f0f8c1fde3839_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1e3f31f7bc256247176f0f8c1fde3839>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall SetupTab::addItem(SetupTab *this, SetupItemDef *item);
void __thiscall SetupTab::drawFrame(SetupTab *this, const ksgui::ksRect *wrect);
std::wstring *__thiscall SetupTab::getStringToSave(SetupTab *this, std::wstring *result);
void __thiscall SetupTab::loadFromINI(SetupTab *this, INIReader *ini, bool isFixed);
void __thiscall SetupTab::onVisibleChanged(SetupTab *this, bool value);
// void __userpurge SetupTab::render(SetupTab *this@<ecx>, __int64 a2@<esi:edi>, float dt);
void __thiscall SetupTab::resetToDefaultValues(SetupTab *this);
void __thiscall SetupTab::setValueToSpinner(SetupTab *this, ksgui::Spinner *sp, bool isFixed, int spinnerValue);
void __thiscall SetupTyresManager::SetupTyresManager(SetupTyresManager *this, CarAvatar *aCar);
void __thiscall lambda_6244a6114f3f98b4fe0400fb27f86efc_::operator()(SetupTyresManager::{ctor}::__l16::<lambda_6244a6114f3f98b4fe0400fb27f86efc> *this, const ksgui::OnSpinnerValueChanged *message);
SetupTyresManager *__thiscall SetupTyresManager::`scalar deleting destructor'(SetupTyresManager *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6244a6114f3f98b4fe0400fb27f86efc_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6244a6114f3f98b4fe0400fb27f86efc>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, const ksgui::OnSpinnerValueChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6244a6114f3f98b4fe0400fb27f86efc_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_6244a6114f3f98b4fe0400fb27f86efc>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6244a6114f3f98b4fe0400fb27f86efc_,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &>>,void,ksgui::OnSpinnerValueChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6244a6114f3f98b4fe0400fb27f86efc>,0>,std::allocator<std::_Func_class<void,ksgui::OnSpinnerValueChanged const &> >,void,ksgui::OnSpinnerValueChanged const &> *this);
std::wstring *__thiscall SetupTyresManager::getStringToSave(SetupTyresManager *this, std::wstring *result);
void __thiscall SetupTyresManager::loadFromINI(SetupTyresManager *this, INIReader *ini, bool isFixed);
WingData *__cdecl std::_Copy_impl<WingData *,WingData *>(WingData *_First, WingData *_Last, WingData *_Dest);
WingData *__thiscall std::vector<WingData>::_Ucopy<WingData *>(std::vector<WingData> *this, WingData *_First, WingData *_Last, WingData *_Ptr);
WingData *__cdecl std::_Uninit_move<WingData *,WingData *,std::allocator<WingData>,WingData>(WingData *_First, WingData *_Last, WingData *_Dest);
void __cdecl stringToSM<wchar_t,33>(wchar_t (*dest)[33], const std::wstring source);
void __cdecl stringToSM<wchar_t,15>(wchar_t (*dest)[15], const std::wstring source);
void __thiscall std::wifstream::wifstream(std::wifstream *this, const wchar_t *_Filename, int _Mode, int _Prot, int a5);
void __thiscall SPageFileGraphic::SPageFileGraphic(SPageFileGraphic *this);
// void __userpurge SharedMemoryWriter::SharedMemoryWriter(SharedMemoryWriter *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
std::vector<WingData> *__thiscall std::vector<WingData>::operator=(std::vector<WingData> *this, const std::vector<WingData> *_Right);
CarPhysicsInfo *__thiscall CarPhysicsInfo::operator=(CarPhysicsInfo *this, const CarPhysicsInfo *__that);
SharedMemoryWriter *__thiscall SharedMemoryWriter::`vector deleting destructor'(SharedMemoryWriter *this, unsigned int a2);
char __thiscall std::vector<WingData>::_Buy(std::vector<WingData> *this, unsigned int _Capacity);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d2fc0c42a80ea3e59c28bb6b7036a081_,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &>>,void,OnNewCarLoadedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d2fc0c42a80ea3e59c28bb6b7036a081>,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &> >,void,OnNewCarLoadedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b66af63a2cd2d5a863a3454a72924bb0_,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &>>,void,OnPhysicsStepCompleted const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b66af63a2cd2d5a863a3454a72924bb0>,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &> >,void,OnPhysicsStepCompleted const &> *this, const OnPhysicsStepCompleted *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d2fc0c42a80ea3e59c28bb6b7036a081_,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &>>,void,OnNewCarLoadedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d2fc0c42a80ea3e59c28bb6b7036a081>,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &> >,void,OnNewCarLoadedEvent const &> *this, const OnNewCarLoadedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b66af63a2cd2d5a863a3454a72924bb0_,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &>>,void,OnPhysicsStepCompleted const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_b66af63a2cd2d5a863a3454a72924bb0>,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &> >,void,OnPhysicsStepCompleted const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b66af63a2cd2d5a863a3454a72924bb0_,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &>>,void,OnPhysicsStepCompleted const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b66af63a2cd2d5a863a3454a72924bb0>,0>,std::allocator<std::_Func_class<void,OnPhysicsStepCompleted const &> >,void,OnPhysicsStepCompleted const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d2fc0c42a80ea3e59c28bb6b7036a081_,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &>>,void,OnNewCarLoadedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d2fc0c42a80ea3e59c28bb6b7036a081>,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &> >,void,OnNewCarLoadedEvent const &> *this);
char __thiscall SharedMemoryWriter::initSharedMemory(SharedMemoryWriter *this, unsigned int memoryIndex, std::wstring memoryName);
void __thiscall SharedMemoryWriter::shutdown(SharedMemoryWriter *this);
void __thiscall SharedMemoryWriter::update(SharedMemoryWriter *this, float dt);
void __thiscall SharedMemoryWriter::updatePhysics(SharedMemoryWriter *this, const long double *dt);
void __thiscall SharedMemoryWriter::writeStatic(SharedMemoryWriter *this);
void __thiscall SimScreen::SimScreen(SimScreen *this, Sim *isim);
SimScreen *__thiscall SimScreen::`scalar deleting destructor'(SimScreen *this, unsigned int a2);
// void __userpurge SimScreen::render(SimScreen *this@<ecx>, __int64 a2@<esi:edi>, float deltaT);
std::wstring *__thiscall std::_Callable_obj<_lambda_195a8fc541f28759226bf4d1f39832db_,0>::_ApplyX<std::wstring,>(std::_Callable_obj<<lambda_195a8fc541f28759226bf4d1f39832db>,0> *this, std::wstring *result);
std::_Tree_node<std::pair<std::wstring const ,TyreCompoundStrategy>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,void *>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,enum DynamicControllerInput>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring const &> *<_Val_1>, std::tuple<> *<_Val_2>);
std::wstring *__cdecl std::_Move<std::wstring *,std::wstring *>(std::wstring *_First, std::wstring *_Last, std::wstring *_Dest);
// void __userpurge Console::Console(Console *this@<ecx>, unsigned int a2@<ebx>, Sim *isim);
void __thiscall Console::~Console(Console *this);
Console *__thiscall Console::operator<<(Console *this, const int *v);
Console *__thiscall Console::operator<<(Console *this, const float *v);
Console *__thiscall Console::operator<<(Console *this, std::string s);
Console *__thiscall Console::operator<<(Console *this, std::wstring s);
float *__thiscall std::map<std::wstring,float>::operator[](std::map<std::wstring,float> *this, const std::wstring *_Keyval);
char __thiscall lambda_5d49014e8dad7e676d58818d1d25ba7c_::operator()(Console::initCommands::__l18::<lambda_5d49014e8dad7e676d58818d1d25ba7c> *this, std::wstring command);
std::_Func_impl<std::_Callable_obj<<lambda_dd422d109689ec70c09d8082b616f3cd>,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &> >,void,OnNewCarLoadedEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_dd422d109689ec70c09d8082b616f3cd_,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &>>,void,OnNewCarLoadedEvent const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_dd422d109689ec70c09d8082b616f3cd>,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &> >,void,OnNewCarLoadedEvent const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_eb39b18eba66b5c84fa469eaebd8b4b2>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_24cbc0b64d4fe93ea5626370da3f9258_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_eb39b18eba66b5c84fa469eaebd8b4b2>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_c30245db0ab22c60bd421578e1fa631a>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *__thiscall std::_Func_base<bool,std::wstring>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_c30245db0ab22c60bd421578e1fa631a>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this, unsigned int a2);
Console *__thiscall Console::`scalar deleting destructor'(Console *this, unsigned int a2);
ConsoleCrash *__thiscall ConsoleCrash::`vector deleting destructor'(ConsoleCrash *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_01ce1ab6eed4adfcbaa8ffbc2f77c412_,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &>>,void,OnNewCarLoadedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_01ce1ab6eed4adfcbaa8ffbc2f77c412>,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &> >,void,OnNewCarLoadedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d49014e8dad7e676d58818d1d25ba7c_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_5d49014e8dad7e676d58818d1d25ba7c>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_01ce1ab6eed4adfcbaa8ffbc2f77c412_,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &>>,void,OnNewCarLoadedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_01ce1ab6eed4adfcbaa8ffbc2f77c412>,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &> >,void,OnNewCarLoadedEvent const &> *this, const OnNewCarLoadedEvent *<_Args_0>);
std::wstring *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_195a8fc541f28759226bf4d1f39832db_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_195a8fc541f28759226bf4d1f39832db>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this, std::wstring *result);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5adc8304e19c9a91ea4fcfb6b36124e9_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5adc8304e19c9a91ea4fcfb6b36124e9>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
char __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d49014e8dad7e676d58818d1d25ba7c_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5d49014e8dad7e676d58818d1d25ba7c>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this, std::wstring *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_195a8fc541f28759226bf4d1f39832db_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_195a8fc541f28759226bf4d1f39832db>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5adc8304e19c9a91ea4fcfb6b36124e9_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_5adc8304e19c9a91ea4fcfb6b36124e9>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_01ce1ab6eed4adfcbaa8ffbc2f77c412_,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &>>,void,OnNewCarLoadedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_01ce1ab6eed4adfcbaa8ffbc2f77c412>,0>,std::allocator<std::_Func_class<void,OnNewCarLoadedEvent const &> >,void,OnNewCarLoadedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_195a8fc541f28759226bf4d1f39832db_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_195a8fc541f28759226bf4d1f39832db>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5adc8304e19c9a91ea4fcfb6b36124e9_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5adc8304e19c9a91ea4fcfb6b36124e9>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5d49014e8dad7e676d58818d1d25ba7c_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5d49014e8dad7e676d58818d1d25ba7c>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this);
void __thiscall Console::addCommand(Console *this, const std::wstring *name, std::function<bool __cdecl(std::wstring)> exeFun, std::function<std::wstring __cdecl(void)> helpFun);
void __thiscall Console::addVar(Console *this, std::wstring name, float *var, IVarCallback *callback, bool readOnly, float multiplier);
void __thiscall Console::addVarLambda(Console *this, std::wstring name, std::function<void __cdecl(SVar *,float)> lambda, bool readyonly, float multiplier);
char __thiscall ConsoleCrash::execute(ConsoleCrash *this, std::wstring commandLine);
std::wstring *__thiscall ConsoleCrash::getHelp(ConsoleCrash *this, std::wstring *result);
void __thiscall Console::initCommands(Console *this);
void __thiscall Console::onKeyChar(Console *this, const unsigned int key);
void __thiscall Console::onKeyDown(Console *this, const OnKeyEvent *message);
void __thiscall Console::onSetVar(Console *this, SVar *var, float value);
void __thiscall Console::parse(Console *this, std::wstring c);
void __thiscall Console::renderHUD(Console *this, float dt);
void __thiscall Console::show(Console *this, bool mode);
Console *__cdecl Console::singleton();
void __thiscall ConsoleSet::ConsoleSet(ConsoleSet *this, Console *con);
ConsoleSet *__thiscall ConsoleSet::`vector deleting destructor'(ConsoleSet *this, unsigned int a2);
char __thiscall ConsoleSet::execute(ConsoleSet *this, std::wstring commandLine);
std::wstring *__thiscall ConsoleSet::getHelp(ConsoleSet *this, std::wstring *result);
void __thiscall NKUtils::NKUtils(NKUtils *this);
void __thiscall NKUtils::~NKUtils(NKUtils *this);
NKUtils *__thiscall NKUtils::`vector deleting destructor'(NKUtils *this, unsigned int a2);
int __thiscall NKUtils::getSectorID(NKUtils *this, std::wstring name);
void __thiscall OptionsManager::OptionsManager(OptionsManager *this);
void __thiscall OptionsManager::~OptionsManager(OptionsManager *this);
OptionsManager *__thiscall OptionsManager::`scalar deleting destructor'(OptionsManager *this, unsigned int a2);
void __thiscall OptionsManager::loadOptions(OptionsManager *this);
void __thiscall PluginManager::PluginManager(PluginManager *this, Sim *isim);
PluginManager *__thiscall PluginManager::`vector deleting destructor'(PluginManager *this, unsigned int a2);
void __thiscall PluginManager::loadPlugins(PluginManager *this);
void __thiscall PluginManager::renderHUD(PluginManager *this, float dt);
void __thiscall PluginManager::shutdown(PluginManager *this);
void __thiscall PluginManager::update(PluginManager *this, float deltaT);
void __thiscall SharedFileOut::SharedFileOut(SharedFileOut *this, Sim *isim);
SharedFileOut *__thiscall SharedFileOut::`vector deleting destructor'(SharedFileOut *this, unsigned int a2);
void __thiscall SharedFileOut::update(SharedFileOut *this, float deltaT);
void __thiscall SkidMarkBuffer::SkidMarkBuffer(SkidMarkBuffer *this, GraphicsManager *graphics, unsigned int isize);
void __thiscall SkidMarkBuffer::~SkidMarkBuffer(SkidMarkBuffer *this);
std::_Ref_count<Material> *__thiscall std::_Ref_count_obj<Material>::`scalar deleting destructor'(std::_Ref_count<Material> *this, unsigned int a2);
SkidMarkBuffer *__thiscall SkidMarkBuffer::`vector deleting destructor'(SkidMarkBuffer *this, unsigned int a2);
void __thiscall std::_Ref_count_obj<Material>::_Destroy(std::_Ref_count_obj<Material> *this);
void __thiscall SkidMarkBuffer::addSegment(SkidMarkBuffer *this, const vec3f *v1, const vec3f *v2, const vec3f *normal, float alpha);
void __thiscall SkidMarkBuffer::addVertex(SkidMarkBuffer *this, const vec3f *pos, const vec3f *normal, const vec2f *texcoord, float alpha);
void __thiscall SkidMarkBuffer::render(SkidMarkBuffer *this, RenderContext *rc);
void __thiscall SkidMarkBuffer::reset(SkidMarkBuffer *this);
void __thiscall SkidMarkBuffer::split(SkidMarkBuffer *this);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, Sim::{ctor}::__l163::<lambda_0126d507b0e75f5f24e1413b5e200ee5> *_Func);
void __thiscall std::function<void __cdecl (bool const &)>::function<void __cdecl (bool const &)>(std::function<void __cdecl(bool const &)> *this, Sim::onKeyDown::__l385::<lambda_0727a0eb368ea446cf4b19c771fd53c9> *_Func);
void __thiscall std::function<void __cdecl (bool const &)>::function<void __cdecl (bool const &)>(std::function<void __cdecl(bool const &)> *this, Sim::onKeyDown::__l383::<lambda_13cf479f16c93369468a6946710b9319> *_Func);
void __thiscall std::function<void __cdecl (SVar *,float)>::function<void __cdecl (SVar *,float)>(std::function<void __cdecl(SVar *,float)> *this, Sim::{ctor}::__l156::<lambda_16aa69a2b949a21e27f913bb05684dfe> *_Func);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, Sim::onKeyDown::__l189::<lambda_19d5872d209bba5d002c5accf43621b8> *_Func);
void __thiscall std::function<void __cdecl (bool const &)>::function<void __cdecl (bool const &)>(std::function<void __cdecl(bool const &)> *this, Sim::onKeyDown::__l390::<lambda_1c4d450c8d498e06cbe083ef9a95b6d4> *_Func);
void __thiscall std::function<void __cdecl (SVar *,float)>::function<void __cdecl (SVar *,float)>(std::function<void __cdecl(SVar *,float)> *this, Sim::{ctor}::__l137::<lambda_25d14ad2eade83d5779db6381d690ff1> *_Func);
void __thiscall std::function<void __cdecl (bool const &)>::function<void __cdecl (bool const &)>(std::function<void __cdecl(bool const &)> *this, Sim::onKeyDown::__l400::<lambda_3038a154952c7952585d6e09cf386330> *_Func);
void __thiscall std::function<void __cdecl (SVar *,float)>::function<void __cdecl (SVar *,float)>(std::function<void __cdecl(SVar *,float)> *this, Sim::{ctor}::__l148::<lambda_47b3546a3185b0ddbb338bc74e0bb1a1> *_Func);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, Sim::{ctor}::__l148::<lambda_47b3546a3185b0ddbb338bc74e0bb1a1>::()::__l157::<lambda_6365f3be29aa15f4bd1a0202b43441a8> *_Func);
void __thiscall std::function<void __cdecl (SVar *,float)>::function<void __cdecl (SVar *,float)>(std::function<void __cdecl(SVar *,float)> *this, Sim::{ctor}::__l138::<lambda_6547d3c58cfc0f47944b490e8ced7c94> *_Func);
void __thiscall std::function<void __cdecl (bool const &)>::function<void __cdecl (bool const &)>(std::function<void __cdecl(bool const &)> *this, Sim::onKeyDown::__l338::<lambda_80870c9d530af70726001765d3e328c5> *_Func);
void __thiscall std::function<void __cdecl (OnNodeRenderEvent const &)>::function<void __cdecl (OnNodeRenderEvent const &)>(std::function<void __cdecl(OnNodeRenderEvent const &)> *this, Sim::{ctor}::__l204::<lambda_9365af50048c57821365e8ba72a394e3> *_Func);
void __thiscall std::function<void __cdecl (bool const &)>::function<void __cdecl (bool const &)>(std::function<void __cdecl(bool const &)> *this, Sim::onKeyDown::__l356::<lambda_999f2b28c30e2af003ac064c3a501ea1> *_Func);
void __thiscall std::function<void __cdecl (RemoteSession const &)>::function<void __cdecl (RemoteSession const &)>(std::function<void __cdecl(RemoteSession const &)> *this, Sim::{ctor}::__l100::<lambda_a8934cdcb6f363d258fa7e835d4ed7a1> *_Func);
void __thiscall std::function<void __cdecl (OnNewSessionEvent const &)>::function<void __cdecl (OnNewSessionEvent const &)>(std::function<void __cdecl(OnNewSessionEvent const &)> *this, Sim::{ctor}::__l135::<lambda_af39a7517139f6a5869e118678b0f708> *_Func);
void __thiscall std::function<void __cdecl (bool const &)>::function<void __cdecl (bool const &)>(std::function<void __cdecl(bool const &)> *this, Sim::onKeyDown::__l395::<lambda_e29c70e447da9a3030f56bf152de03d2> *_Func);
void __thiscall std::function<void __cdecl (SVar *,float)>::function<void __cdecl (SVar *,float)>(std::function<void __cdecl(SVar *,float)> *this, Sim::{ctor}::__l136::<lambda_e49627c2b163b572ea864b95e6e5ab27> *_Func);
void __thiscall std::function<void __cdecl (bool const &)>::function<void __cdecl (bool const &)>(std::function<void __cdecl(bool const &)> *this, Sim::onKeyDown::__l331::<lambda_effbbc30b6ffed4f18f6a17916eea29e> *_Func);
void __thiscall std::function<void __cdecl (void)>::function<void __cdecl (void)>(std::function<void __cdecl(void)> *this, Sim::onKeyDown::__l370::<lambda_f88ce723f09c46af68702020f748c345> *_Func);
void __thiscall std::function<void __cdecl (OnESCMenuTriggered const &)>::function<void __cdecl (OnESCMenuTriggered const &)>(std::function<void __cdecl(OnESCMenuTriggered const &)> *this, Sim::{ctor}::__l106::<lambda_fbd0a65f3eb1aa7aebf79671d2661532> *_Func);
void __thiscall std::function<void __cdecl (bool const &)>::function<void __cdecl (bool const &)>(std::function<void __cdecl(bool const &)> *this, Sim::onKeyDown::__l324::<lambda_fece7355d7de510eb2229a3de6f131b2> *_Func);
std::_Tree_node<std::pair<std::wstring const ,Texture>,void *> *__thiscall std::_Tree_buy<std::pair<std::wstring const,Texture>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring &&>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,Texture>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring &&> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_node<std::pair<std::wstring const ,TagDocumentText>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,Texture>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,Texture>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring const &> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,Texture,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,Texture>>,0>>::_Insert_at<std::pair<std::wstring const,Texture> &,std::_Tree_node<std::pair<std::wstring const,Texture>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,Texture,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,Texture> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::wstring const ,Texture>,void *> *_Wherenode, std::pair<std::wstring const ,Texture> *_Val, std::_Tree_node<std::pair<std::wstring const ,Texture>,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,Texture,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,Texture>>,0>>::_Insert_hint<std::pair<std::wstring const,Texture> &,std::_Tree_node<std::pair<std::wstring const,Texture>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,Texture,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,Texture> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > > _Where, std::pair<std::wstring const ,Texture> *_Val, std::_Tree_node<std::pair<std::wstring const ,Texture>,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,Texture,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,Texture>>,0>>::_Insert_nohint<std::pair<std::wstring const,Texture> &,std::_Tree_node<std::pair<std::wstring const,Texture>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,Texture,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,Texture> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > > _Leftish, std::pair<std::wstring const ,Texture> *_Val, std::_Tree_node<std::pair<std::wstring const ,Texture>,void *> *_Newnode);
void __cdecl std::_Insertion_sort1<Sim::CarItemCmp *,_lambda_6c7e3ba0a265af4ea424899147498d7c_,Sim::CarItemCmp>(ComparablePoint *_First, ComparablePoint *_Last);
void __cdecl std::_Median<Sim::CarItemCmp *,_lambda_6c7e3ba0a265af4ea424899147498d7c_>(ComparablePoint *_First, ComparablePoint *_Mid, ComparablePoint *_Last);
void __cdecl std::_Sort<ComparablePoint *,int,std::less<void>>(ComparablePoint *_First, ComparablePoint *_Last, int _Ideal, std::less<void> _Pred);
MeshVertex *__cdecl std::_Uninit_move<MeshVertex *,MeshVertex *,std::allocator<MeshVertex>,MeshVertex>(MeshVertex *_First, MeshVertex *_Last, MeshVertex *_Dest);
ACOperatingSystem *__thiscall GameObject::addGameObject<ACOperatingSystem>(GameObject *this, ACOperatingSystem *object);
DamageDisplayer *__thiscall GameObject::getGameObject<DamageDisplayer>(GameObject *this);
DriverNameDisplayer *__thiscall GameObject::getGameObject<DriverNameDisplayer>(GameObject *this);
MouseHider *__thiscall GameObject::getGameObject<MouseHider>(GameObject *this);
void __thiscall lambda_47b3546a3185b0ddbb338bc74e0bb1a1_::_lambda_47b3546a3185b0ddbb338bc74e0bb1a1_(Sim::{ctor}::__l148::<lambda_47b3546a3185b0ddbb338bc74e0bb1a1> *this, Sim *_This, const int *__i);
void __thiscall MeshVertex::MeshVertex(MeshVertex *this, const MeshVertex *mv);
// void __userpurge Sim::Sim(Sim *this@<ecx>, unsigned int a2@<ebx>, __m128 a3@<xmm3>, __m128 a4@<xmm4>, Game *igame);
void __thiscall Event<OnNewSessionEvent>::~Event<OnNewSessionEvent>(Event<OnWindowResize> *this);
void __thiscall std::map<std::wstring,Texture>::~map<std::wstring,Texture>(std::map<std::wstring,Texture> *this);
void __thiscall NetCarStateProviderDef::~NetCarStateProviderDef(NetCarStateProviderDef *this);
void __thiscall Sim::~Sim(Sim *this);
Texture *__thiscall std::map<std::wstring,Texture>::operator[](std::map<std::wstring,Texture> *this, std::wstring *_Keyval);
Texture *__thiscall std::map<std::wstring,Texture>::operator[](std::map<std::wstring,Texture> *this, const std::wstring *_Keyval);
void __thiscall lambda_16aa69a2b949a21e27f913bb05684dfe_::operator()(Sim::{ctor}::__l156::<lambda_16aa69a2b949a21e27f913bb05684dfe> *this, SVar *v, float value);
void __thiscall lambda_19d5872d209bba5d002c5accf43621b8_::operator()(Sim::onKeyDown::__l189::<lambda_19d5872d209bba5d002c5accf43621b8> *this);
void __thiscall lambda_47b3546a3185b0ddbb338bc74e0bb1a1_::operator()(Sim::{ctor}::__l148::<lambda_47b3546a3185b0ddbb338bc74e0bb1a1> *this, SVar *v, float value);
void __thiscall lambda_999f2b28c30e2af003ac064c3a501ea1_::operator()(Sim::onKeyDown::__l356::<lambda_999f2b28c30e2af003ac064c3a501ea1> *this, const bool *fading);
void __thiscall lambda_af39a7517139f6a5869e118678b0f708_::operator()(Sim::{ctor}::__l135::<lambda_af39a7517139f6a5869e118678b0f708> *this, const OnNewSessionEvent *ev);
void __thiscall lambda_b284e6a412ac28e54d823b1721065045_::operator()(Sim::startGame::__l9::<lambda_b284e6a412ac28e54d823b1721065045> *this, const bool *__formal);
void __thiscall lambda_f88ce723f09c46af68702020f748c345_::operator()(Sim::onKeyDown::__l370::<lambda_f88ce723f09c46af68702020f748c345> *this);
std::_Func_impl<std::_Callable_obj<<lambda_946fcd06e20ad4ff585c573ef4cf23ad>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e49627c2b163b572ea864b95e6e5ab27_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_946fcd06e20ad4ff585c573ef4cf23ad>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_0f4951729d63fd321729e1045e37a043>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9978203bfa93d47158f91df2e13620d5_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_0f4951729d63fd321729e1045e37a043>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_be99df9070aa0c099bca5887c9856fd4>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_be99df9070aa0c099bca5887c9856fd4_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_be99df9070aa0c099bca5887c9856fd4>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_fbd0a65f3eb1aa7aebf79671d2661532>,0>,std::allocator<std::_Func_class<void,OnESCMenuTriggered const &> >,void,OnESCMenuTriggered const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fbd0a65f3eb1aa7aebf79671d2661532_,0>,std::allocator<std::_Func_class<void,OnESCMenuTriggered const &>>,void,OnESCMenuTriggered const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_fbd0a65f3eb1aa7aebf79671d2661532>,0>,std::allocator<std::_Func_class<void,OnESCMenuTriggered const &> >,void,OnESCMenuTriggered const &> *this, unsigned int a2);
Sim *__thiscall Sim::`scalar deleting destructor'(Sim *this, unsigned int a2);
bool __thiscall FanatecUpdater::IsConnected(FanatecUpdater *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0126d507b0e75f5f24e1413b5e200ee5_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_0126d507b0e75f5f24e1413b5e200ee5>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0727a0eb368ea446cf4b19c771fd53c9_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_0727a0eb368ea446cf4b19c771fd53c9>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1c4d450c8d498e06cbe083ef9a95b6d4_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1c4d450c8d498e06cbe083ef9a95b6d4>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1d4466c7ff4df7aa72f6d191899c6b8f_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_1d4466c7ff4df7aa72f6d191899c6b8f>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_28639bfdd796648a1e9c4dd30dd24c68_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_28639bfdd796648a1e9c4dd30dd24c68>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3038a154952c7952585d6e09cf386330_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_3038a154952c7952585d6e09cf386330>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3c340583a9c45c0bc96a60c975e9e6c1_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_3c340583a9c45c0bc96a60c975e9e6c1>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3cd36707c912741a6dd403569aa5ef51_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_3cd36707c912741a6dd403569aa5ef51>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_47b3546a3185b0ddbb338bc74e0bb1a1_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_47b3546a3185b0ddbb338bc74e0bb1a1>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6547d3c58cfc0f47944b490e8ced7c94_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_6547d3c58cfc0f47944b490e8ced7c94>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_999f2b28c30e2af003ac064c3a501ea1_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_999f2b28c30e2af003ac064c3a501ea1>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a8934cdcb6f363d258fa7e835d4ed7a1_,0>,std::allocator<std::_Func_class<void,RemoteSession const &>>,void,RemoteSession const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_a8934cdcb6f363d258fa7e835d4ed7a1>,0>,std::allocator<std::_Func_class<void,RemoteSession const &> >,void,RemoteSession const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b284e6a412ac28e54d823b1721065045_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_b284e6a412ac28e54d823b1721065045>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e49627c2b163b572ea864b95e6e5ab27_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e49627c2b163b572ea864b95e6e5ab27>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f8b9d0f8b0fe612572c0d95c92a874de_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f8b9d0f8b0fe612572c0d95c92a874de>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this, void *_Where);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,Texture,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,Texture>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<std::wstring,Texture,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,Texture> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,Texture>,void *> *_Newnode);
// void __usercall std::_Func_impl<std::_Callable_obj<_lambda_0126d507b0e75f5f24e1413b5e200ee5_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0126d507b0e75f5f24e1413b5e200ee5>,0>,std::allocator<std::_Func_class<void> >,void> *this@<ecx>, int a2@<ebp>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0727a0eb368ea446cf4b19c771fd53c9_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0727a0eb368ea446cf4b19c771fd53c9>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_13cf479f16c93369468a6946710b9319_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_13cf479f16c93369468a6946710b9319>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_16aa69a2b949a21e27f913bb05684dfe_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_16aa69a2b949a21e27f913bb05684dfe>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_19d5872d209bba5d002c5accf43621b8_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_19d5872d209bba5d002c5accf43621b8>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1c4d450c8d498e06cbe083ef9a95b6d4_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1c4d450c8d498e06cbe083ef9a95b6d4>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1d4466c7ff4df7aa72f6d191899c6b8f_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1d4466c7ff4df7aa72f6d191899c6b8f>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_25d14ad2eade83d5779db6381d690ff1_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_25d14ad2eade83d5779db6381d690ff1>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
// void __usercall std::_Func_impl<std::_Callable_obj<_lambda_28639bfdd796648a1e9c4dd30dd24c68_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_28639bfdd796648a1e9c4dd30dd24c68>,0>,std::allocator<std::_Func_class<void> >,void> *this@<ecx>, int a2@<ebp>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3038a154952c7952585d6e09cf386330_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3038a154952c7952585d6e09cf386330>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3c340583a9c45c0bc96a60c975e9e6c1_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3c340583a9c45c0bc96a60c975e9e6c1>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3cd36707c912741a6dd403569aa5ef51_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3cd36707c912741a6dd403569aa5ef51>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this, const int *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_47b3546a3185b0ddbb338bc74e0bb1a1_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_47b3546a3185b0ddbb338bc74e0bb1a1>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_52ee50730b424552787d4133d4b7f69c_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_52ee50730b424552787d4133d4b7f69c>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, const float *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6365f3be29aa15f4bd1a0202b43441a8_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6365f3be29aa15f4bd1a0202b43441a8>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6547d3c58cfc0f47944b490e8ced7c94_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_6547d3c58cfc0f47944b490e8ced7c94>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_80870c9d530af70726001765d3e328c5_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_80870c9d530af70726001765d3e328c5>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9365af50048c57821365e8ba72a394e3_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_9365af50048c57821365e8ba72a394e3>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, const OnNodeRenderEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_999f2b28c30e2af003ac064c3a501ea1_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_999f2b28c30e2af003ac064c3a501ea1>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_a8934cdcb6f363d258fa7e835d4ed7a1_,0>,std::allocator<std::_Func_class<void,RemoteSession const &>>,void,RemoteSession const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_a8934cdcb6f363d258fa7e835d4ed7a1>,0>,std::allocator<std::_Func_class<void,RemoteSession const &> >,void,RemoteSession const &> *this, const RemoteSession *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_af39a7517139f6a5869e118678b0f708_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_af39a7517139f6a5869e118678b0f708>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b02171bdbb0a58cfca78de503084e9c0_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b02171bdbb0a58cfca78de503084e9c0>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b284e6a412ac28e54d823b1721065045_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b284e6a412ac28e54d823b1721065045>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bc6fa735863c7edf25f2f5af6cfe4c4c_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_bc6fa735863c7edf25f2f5af6cfe4c4c>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, const float *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e49627c2b163b572ea864b95e6e5ab27_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e49627c2b163b572ea864b95e6e5ab27>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_eb05c154284acbbf2a8ed5540e383649_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_eb05c154284acbbf2a8ed5540e383649>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e29c70e447da9a3030f56bf152de03d2_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_effbbc30b6ffed4f18f6a17916eea29e>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f88ce723f09c46af68702020f748c345_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f88ce723f09c46af68702020f748c345>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f8b9d0f8b0fe612572c0d95c92a874de_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f8b9d0f8b0fe612572c0d95c92a874de>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this, const int *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fbd0a65f3eb1aa7aebf79671d2661532_,0>,std::allocator<std::_Func_class<void,OnESCMenuTriggered const &>>,void,OnESCMenuTriggered const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fbd0a65f3eb1aa7aebf79671d2661532>,0>,std::allocator<std::_Func_class<void,OnESCMenuTriggered const &> >,void,OnESCMenuTriggered const &> *this, const OnESCMenuTriggered *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fece7355d7de510eb2229a3de6f131b2_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fece7355d7de510eb2229a3de6f131b2>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,Texture,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,Texture>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<std::wstring,Texture,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,Texture> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,Texture>,void *> *_Rootnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_13cf479f16c93369468a6946710b9319_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_13cf479f16c93369468a6946710b9319>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_16aa69a2b949a21e27f913bb05684dfe_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_16aa69a2b949a21e27f913bb05684dfe>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_19d5872d209bba5d002c5accf43621b8_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_19d5872d209bba5d002c5accf43621b8>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_25d14ad2eade83d5779db6381d690ff1_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_25d14ad2eade83d5779db6381d690ff1>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_52ee50730b424552787d4133d4b7f69c_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_52ee50730b424552787d4133d4b7f69c>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6365f3be29aa15f4bd1a0202b43441a8_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_6365f3be29aa15f4bd1a0202b43441a8>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_80870c9d530af70726001765d3e328c5_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_80870c9d530af70726001765d3e328c5>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_9365af50048c57821365e8ba72a394e3_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_9365af50048c57821365e8ba72a394e3>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_af39a7517139f6a5869e118678b0f708_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_af39a7517139f6a5869e118678b0f708>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b02171bdbb0a58cfca78de503084e9c0_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_b02171bdbb0a58cfca78de503084e9c0>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bc6fa735863c7edf25f2f5af6cfe4c4c_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_bc6fa735863c7edf25f2f5af6cfe4c4c>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e29c70e447da9a3030f56bf152de03d2_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_e29c70e447da9a3030f56bf152de03d2>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_eb05c154284acbbf2a8ed5540e383649_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_eb05c154284acbbf2a8ed5540e383649>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_effbbc30b6ffed4f18f6a17916eea29e_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_effbbc30b6ffed4f18f6a17916eea29e>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f88ce723f09c46af68702020f748c345_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_f88ce723f09c46af68702020f748c345>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fbd0a65f3eb1aa7aebf79671d2661532_,0>,std::allocator<std::_Func_class<void,OnESCMenuTriggered const &>>,void,OnESCMenuTriggered const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_fbd0a65f3eb1aa7aebf79671d2661532>,0>,std::allocator<std::_Func_class<void,OnESCMenuTriggered const &> >,void,OnESCMenuTriggered const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fece7355d7de510eb2229a3de6f131b2_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_fece7355d7de510eb2229a3de6f131b2>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::vector<MeshVertex>::_Reallocate(std::vector<MeshVertex> *this, unsigned int _Count);
void __thiscall std::vector<SkinnedMeshVertex>::_Reallocate(std::vector<SkinnedMeshVertex> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0126d507b0e75f5f24e1413b5e200ee5_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0126d507b0e75f5f24e1413b5e200ee5>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0727a0eb368ea446cf4b19c771fd53c9_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0727a0eb368ea446cf4b19c771fd53c9>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_13cf479f16c93369468a6946710b9319_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_13cf479f16c93369468a6946710b9319>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_16aa69a2b949a21e27f913bb05684dfe_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_16aa69a2b949a21e27f913bb05684dfe>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_19d5872d209bba5d002c5accf43621b8_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_19d5872d209bba5d002c5accf43621b8>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1c4d450c8d498e06cbe083ef9a95b6d4_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1c4d450c8d498e06cbe083ef9a95b6d4>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1d4466c7ff4df7aa72f6d191899c6b8f_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1d4466c7ff4df7aa72f6d191899c6b8f>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_25d14ad2eade83d5779db6381d690ff1_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_25d14ad2eade83d5779db6381d690ff1>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_28639bfdd796648a1e9c4dd30dd24c68_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_28639bfdd796648a1e9c4dd30dd24c68>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3038a154952c7952585d6e09cf386330_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3038a154952c7952585d6e09cf386330>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3c340583a9c45c0bc96a60c975e9e6c1_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3c340583a9c45c0bc96a60c975e9e6c1>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3cd36707c912741a6dd403569aa5ef51_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3cd36707c912741a6dd403569aa5ef51>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_47b3546a3185b0ddbb338bc74e0bb1a1_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_47b3546a3185b0ddbb338bc74e0bb1a1>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_52ee50730b424552787d4133d4b7f69c_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_52ee50730b424552787d4133d4b7f69c>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6365f3be29aa15f4bd1a0202b43441a8_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6365f3be29aa15f4bd1a0202b43441a8>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6547d3c58cfc0f47944b490e8ced7c94_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6547d3c58cfc0f47944b490e8ced7c94>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_80870c9d530af70726001765d3e328c5_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_80870c9d530af70726001765d3e328c5>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_9365af50048c57821365e8ba72a394e3_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_9365af50048c57821365e8ba72a394e3>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_999f2b28c30e2af003ac064c3a501ea1_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_999f2b28c30e2af003ac064c3a501ea1>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_a8934cdcb6f363d258fa7e835d4ed7a1_,0>,std::allocator<std::_Func_class<void,RemoteSession const &>>,void,RemoteSession const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_a8934cdcb6f363d258fa7e835d4ed7a1>,0>,std::allocator<std::_Func_class<void,RemoteSession const &> >,void,RemoteSession const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_af39a7517139f6a5869e118678b0f708_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_af39a7517139f6a5869e118678b0f708>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b02171bdbb0a58cfca78de503084e9c0_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b02171bdbb0a58cfca78de503084e9c0>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b284e6a412ac28e54d823b1721065045_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b284e6a412ac28e54d823b1721065045>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_bc6fa735863c7edf25f2f5af6cfe4c4c_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_bc6fa735863c7edf25f2f5af6cfe4c4c>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e29c70e447da9a3030f56bf152de03d2_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e29c70e447da9a3030f56bf152de03d2>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e49627c2b163b572ea864b95e6e5ab27_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e49627c2b163b572ea864b95e6e5ab27>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_eb05c154284acbbf2a8ed5540e383649_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_eb05c154284acbbf2a8ed5540e383649>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_effbbc30b6ffed4f18f6a17916eea29e_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_effbbc30b6ffed4f18f6a17916eea29e>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f88ce723f09c46af68702020f748c345_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f88ce723f09c46af68702020f748c345>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f8b9d0f8b0fe612572c0d95c92a874de_,0>,std::allocator<std::_Func_class<void,int const &>>,void,int const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f8b9d0f8b0fe612572c0d95c92a874de>,0>,std::allocator<std::_Func_class<void,int const &> >,void,int const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fbd0a65f3eb1aa7aebf79671d2661532_,0>,std::allocator<std::_Func_class<void,OnESCMenuTriggered const &>>,void,OnESCMenuTriggered const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fbd0a65f3eb1aa7aebf79671d2661532>,0>,std::allocator<std::_Func_class<void,OnESCMenuTriggered const &> >,void,OnESCMenuTriggered const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fece7355d7de510eb2229a3de6f131b2_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fece7355d7de510eb2229a3de6f131b2>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
void __thiscall Sim::activateEscMenu(Sim *this);
void __thiscall Sim::activateGameGui(Sim *this);
void __thiscall Sim::activatePauseMenu(Sim *this);
// CarAvatar *__userpurge Sim::addCar@<eax>(Sim *this@<ecx>, __m128 a2@<xmm3>, __m128 a3@<xmm4>, const std::wstring *model, const std::wstring *config, const std::wstring *skin);
void __thiscall Sim::addForm(Sim *this, ksgui::Form *aForm, bool isInDevMode);
CarAvatar *__thiscall Sim::addNetCar(Sim *this, ClientRemoteCarDef *desc, ACClient *client);
void __thiscall Sim::applyCustomWeather(Sim *this, const std::wstring *name);
StereoCameraForward *__thiscall Sim::createCamera(Sim *this, INIReaderDocuments *videoIni, float useBlur);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,Texture,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,Texture>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,Texture,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,Texture> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > > _Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,Texture,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,Texture>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,Texture,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,Texture> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Texture> > > > _Where);
void __thiscall Sim::executeOnMainThread(Sim *this, std::function<void __cdecl(void)> f);
CarAvatar *__thiscall Sim::getCar(Sim *this, unsigned int index);
Console *__thiscall Sim::getConsole(Sim *this);
unsigned int __thiscall Sim::getFocusedCarIndex(Sim *this);
Texture *__thiscall Sim::getNationFlag(Sim *this, const std::wstring *nationCode);
CameraForward *__thiscall Sim::getSceneCamera(Sim *this);
TrackData *__thiscall Sim::getTrackData(Sim *this, TrackData *result);
void __thiscall Sim::initCubemaps(Sim *this);
void __thiscall Sim::initHDRLevels(Sim *this);
void __thiscall Sim::initSceneGraph(Sim *this);
void __thiscall Sim::initStaticCubemap(Sim *this);
bool __thiscall Sim::isInTripleScreenMode(Sim *this);
bool __thiscall RaceManager::isOfficialSpecialEvent(RaceManager *this);
void __thiscall PostProcessEffectsUpdater::loadDefaultConfiguration(PostProcessEffectsUpdater *this);
// void __userpurge Sim::loadTrack(Sim *this@<ecx>, __m128 a2@<xmm0>, __m128 a3@<xmm3>, __m128 a4@<xmm4>, const std::wstring *tname, const std::wstring *config, int playerPitPosition);
unsigned int __thiscall Sim::nextCar(Sim *this, const unsigned int anIndex);
void __thiscall Sim::onKeyDown(Sim *this, const OnKeyEvent *message);
void __thiscall Sim::onPostLoad(Sim *this);
void __thiscall Sim::onReplayModeChanged(Sim *this, const OnReplayStatusChanged *message);
unsigned int __thiscall Sim::previousCar(Sim *this, const unsigned int anIndex);
void __thiscall DebugVisualizer::previousLayer(DebugVisualizer *this);
void __thiscall Sim::render(Sim *this, float deltaT);
void __thiscall Sim::renderHUD(Sim *this, float deltaT);
// void __userpurge Sim::renderScene(Sim *this@<ecx>, __int64 a2@<esi:edi>, float deltaT);
void __thiscall Sim::setFocusedCarIndex(Sim *this, unsigned int aCarIndex);
void __thiscall Sim::setPauseMode(Sim *this, bool mode);
void __thiscall CameraOnBoardFree::setPosition(CameraOnBoardFree *this, const vec3f *pos);
void __thiscall Sim::setSplashLoadingCar(Sim *this, const std::wstring *carUnixName);
void __thiscall Sim::setSplashMessage(Sim *this, const std::wstring *msg);
void __thiscall std::vector<MeshVertex>::shrink_to_fit(std::vector<MeshVertex> *this);
void __thiscall std::vector<SkinnedMeshVertex>::shrink_to_fit(std::vector<SkinnedMeshVertex> *this);
void __thiscall Sim::shutdown(Sim *this);
void __thiscall Sim::startGame(Sim *this);
void __cdecl Sim::stepPhysicsEvent(int a1, float colliderCategory);
void __thiscall Sim::unloadMeshResources(Sim *this, Node *node);
void __thiscall Sim::update(Sim *this, float deltaT);
void __thiscall Sim::writeOutputJson(Sim *this);
std::pair<void *,std::function<void __cdecl(vec3f const &)> > *__cdecl std::_Move<std::pair<void *,std::function<void __cdecl (vec3f const &)>> *,std::pair<void *,std::function<void __cdecl (vec3f const &)>> *>(std::pair<void *,std::function<void __cdecl(vec3f const &)> > *_First, std::pair<void *,std::function<void __cdecl(vec3f const &)> > *_Last, std::pair<void *,std::function<void __cdecl(vec3f const &)> > *_Dest);
// void __userpurge SplashScreen::SplashScreen(SplashScreen *this@<ecx>, unsigned int a2@<ebx>, Game *igame);
void __thiscall std::lock_guard<std::mutex>::~lock_guard<std::mutex>(std::lock_guard<std::mutex> *this);
void __thiscall SplashScreen::~SplashScreen(SplashScreen *this);
std::_Func_impl<std::_Callable_obj<<lambda_d346950f61913737636a1cb1d10c31ee>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *__thiscall std::_Func_base<void,double const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_d346950f61913737636a1cb1d10c31ee>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, unsigned int a2);
SplashScreen *__thiscall SplashScreen::`scalar deleting destructor'(SplashScreen *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1213171aa219c38b7d20c3b5d349fb43_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1213171aa219c38b7d20c3b5d349fb43>,0>,std::allocator<std::_Func_class<void> >,void> *this);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_ce339457d759b347ea5ace4f3121da81_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ce339457d759b347ea5ace4f3121da81>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this@<ecx>, unsigned int a2@<ebx>, int a3@<esi>, __m128 a4@<xmm3>, __m128 a5@<xmm4>, const long double *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1213171aa219c38b7d20c3b5d349fb43_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1213171aa219c38b7d20c3b5d349fb43>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ce339457d759b347ea5ace4f3121da81_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_ce339457d759b347ea5ace4f3121da81>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1213171aa219c38b7d20c3b5d349fb43_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1213171aa219c38b7d20c3b5d349fb43>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ce339457d759b347ea5ace4f3121da81_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ce339457d759b347ea5ace4f3121da81>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this);
void __thiscall SplashScreen::addLoadingCar(SplashScreen *this, const std::wstring *carUnixName);
std::wstring *__thiscall CarHintLoader::getCarName(CarHintLoader *this, std::wstring *result);
std::vector<std::wstring> *__thiscall CarHintLoader::getHints(CarHintLoader *this, std::vector<std::wstring> *result);
// void __usercall SplashScreen::initHints(SplashScreen *this@<ecx>, char a2@<bl>);
// void __userpurge SplashScreen::loadHints(SplashScreen *this@<ecx>, unsigned int a2@<ebx>, const std::wstring *carmodel);
// void __userpurge SplashScreen::postRender(SplashScreen *this@<ecx>, unsigned int a2@<ebx>, int a3@<esi>, __m128 a4@<xmm3>, __m128 a5@<xmm4>, float deltaT);
char __thiscall Event<OnStepCompleteEvent>::removeHandler(Event<vec3f> *this, void *owner);
void __thiscall SplashScreen::renderHUD(SplashScreen *this, float deltaT);
void __thiscall SplashScreen::setCurrentMessage(SplashScreen *this, const std::wstring *msg);
// void __userpurge SplashScreen::setOnlinePlayerCar(SplashScreen *this@<ecx>, unsigned int a2@<ebx>, const std::wstring *model, const std::wstring *config);
void __thiscall SplashScreen::setServerHints(SplashScreen *this, const std::vector<std::wstring> *ihints);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<TrackStartingLight>>>(TrackStartingLight *_First, TrackStartingLight *_Last);
void __cdecl std::_For_each<enum eStartLightColour *,_lambda_c0c2aa218c2af9472482a9d96df5d332_>(eStartLightColour *_First, eStartLightColour *_Last, StartingLights::renderHUD::__l31::<lambda_c0c2aa218c2af9472482a9d96df5d332> *_Func);
void __cdecl std::_For_each<enum eStartLightColour *,_lambda_fa340b727ec482ed946200e5cd0eacda_>(eStartLightColour *_First, eStartLightColour *_Last, StartingLights::renderHUD::__l30::<lambda_fa340b727ec482ed946200e5cd0eacda> *_Func);
TrackStartingLight *__cdecl std::_Uninit_move<TrackStartingLight *,TrackStartingLight *,std::allocator<TrackStartingLight>,TrackStartingLight>(TrackStartingLight *_First, TrackStartingLight *_Last, TrackStartingLight *_Dest);
void __thiscall std::_Wrap_alloc<std::allocator<TrackStartingLight>>::destroy<TrackStartingLight>(std::_Wrap_alloc<std::allocator<TrackStartingLight> > *this, TrackStartingLight *_Ptr);
void __thiscall StartingLights::StartingLights(StartingLights *this, Sim *sim);
void __thiscall std::vector<TrackStartingLight>::~vector<TrackStartingLight>(std::vector<TrackStartingLight> *this);
void __thiscall StartingLights::~StartingLights(StartingLights *this);
void __thiscall TrackStartingLight::~TrackStartingLight(TrackStartingLight *this);
StartingLights *__thiscall StartingLights::`vector deleting destructor'(StartingLights *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7b20f34712fe391a229c201c78115743_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_7b20f34712fe391a229c201c78115743>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d10444b5017a0be549ef3857e79b6e96_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d10444b5017a0be549ef3857e79b6e96>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7b20f34712fe391a229c201c78115743_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_7b20f34712fe391a229c201c78115743>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d10444b5017a0be549ef3857e79b6e96_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d10444b5017a0be549ef3857e79b6e96>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::vector<TrackStartingLight>::_Reallocate(std::vector<TrackStartingLight> *this, unsigned int _Count);
void __thiscall std::vector<TrackStartingLight>::_Reserve(std::vector<TrackStartingLight> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7b20f34712fe391a229c201c78115743_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_7b20f34712fe391a229c201c78115743>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d10444b5017a0be549ef3857e79b6e96_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d10444b5017a0be549ef3857e79b6e96>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
void __thiscall std::vector<TrackStartingLight>::push_back(std::vector<TrackStartingLight> *this, const TrackStartingLight *_Val);
void __thiscall StartingLights::renderHUD(StartingLights *this, float deltaT);
void __thiscall StartingLights::renderLight(StartingLights *this, float x, float y, vec3f colour);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<StartingTrackSemaphore::SemaphoreElement>>>(StartingTrackSemaphore::SemaphoreElement *_First, StartingTrackSemaphore::SemaphoreElement *_Last);
StartingTrackSemaphore::LightGroup *__cdecl std::_Uninit_copy<StartingTrackSemaphore::LightGroup const *,StartingTrackSemaphore::LightGroup *,std::allocator<StartingTrackSemaphore::LightGroup>>(StartingTrackSemaphore::LightGroup *_First, StartingTrackSemaphore::LightGroup *_Last, StartingTrackSemaphore::LightGroup *_Dest);
void __cdecl std::_Uninit_def_fill_n<StartingTrackSemaphore::LightGroup *,unsigned int,std::allocator<StartingTrackSemaphore::LightGroup>,StartingTrackSemaphore::LightGroup>(StartingTrackSemaphore::LightGroup *_First, unsigned int _Count);
StartingTrackSemaphore::SemaphoreElement *__cdecl std::_Uninit_move<StartingTrackSemaphore::SemaphoreElement *,StartingTrackSemaphore::SemaphoreElement *,std::allocator<StartingTrackSemaphore::SemaphoreElement>,StartingTrackSemaphore::SemaphoreElement>(StartingTrackSemaphore::SemaphoreElement *_First, StartingTrackSemaphore::SemaphoreElement *_Last, StartingTrackSemaphore::SemaphoreElement *_Dest);
void __thiscall std::_Wrap_alloc<std::allocator<StartingTrackSemaphore::SemaphoreElement>>::destroy<StartingTrackSemaphore::SemaphoreElement>(std::_Wrap_alloc<std::allocator<StartingTrackSemaphore::SemaphoreElement> > *this, StartingTrackSemaphore::SemaphoreElement *_Ptr);
void __thiscall std::vector<StartingTrackSemaphore::LightGroup>::vector<StartingTrackSemaphore::LightGroup>(std::vector<StartingTrackSemaphore::LightGroup> *this, const std::vector<StartingTrackSemaphore::LightGroup> *_Right);
void __thiscall StartingTrackSemaphore::StartingTrackSemaphore(StartingTrackSemaphore *this, Sim *aSim);
void __thiscall std::vector<StartingTrackSemaphore::SemaphoreElement>::~vector<StartingTrackSemaphore::SemaphoreElement>(std::vector<StartingTrackSemaphore::SemaphoreElement> *this);
void __thiscall StartingTrackSemaphore::SemaphoreElement::~SemaphoreElement(StartingTrackSemaphore::SemaphoreElement *this);
void __thiscall StartingTrackSemaphore::~StartingTrackSemaphore(StartingTrackSemaphore *this);
StartingTrackSemaphore *__thiscall StartingTrackSemaphore::`scalar deleting destructor'(StartingTrackSemaphore *this, unsigned int a2);
char __thiscall std::vector<StartingTrackSemaphore::LightGroup>::_Buy(std::vector<StartingTrackSemaphore::LightGroup> *this, unsigned int _Capacity);
void __thiscall std::vector<StartingTrackSemaphore::LightGroup>::_Reallocate(std::vector<StartingTrackSemaphore::LightGroup> *this, unsigned int _Count);
void __thiscall std::vector<StartingTrackSemaphore::SemaphoreElement>::_Reallocate(std::vector<StartingTrackSemaphore::SemaphoreElement> *this, unsigned int _Count);
void __thiscall std::vector<StartingTrackSemaphore::LightGroup>::_Reserve(std::vector<StartingTrackSemaphore::LightGroup> *this, unsigned int _Count);
void __thiscall std::vector<StartingTrackSemaphore::SemaphoreElement>::_Reserve(std::vector<StartingTrackSemaphore::SemaphoreElement> *this, unsigned int _Count);
void __thiscall std::vector<FrameInformation>::_Tidy(std::vector<DRSDetection> *this);
double __thiscall StartingTrackSemaphore::getTimeToSessionStart(StartingTrackSemaphore *this);
void __thiscall std::vector<StartingTrackSemaphore::SemaphoreElement>::push_back(std::vector<StartingTrackSemaphore::SemaphoreElement> *this, StartingTrackSemaphore::SemaphoreElement *_Val);
void __thiscall StartingTrackSemaphore::resetLights(StartingTrackSemaphore *this);
void __thiscall std::vector<StartingTrackSemaphore::LightGroup>::resize(std::vector<StartingTrackSemaphore::LightGroup> *this, unsigned int _Newsize);
void __thiscall StartingTrackSemaphore::setCustomStartTime(StartingTrackSemaphore *this, long double startTime);
void __thiscall StartingTrackSemaphore::update(StartingTrackSemaphore *this, float dt);
std::wstring *__thiscall std::_Callable_obj<_lambda_d215e4f63103bf9b8f209205814c8e60_,0>::_ApplyX<std::wstring,>(std::_Callable_obj<<lambda_d215e4f63103bf9b8f209205814c8e60>,0> *this, std::wstring *result);
std::_Tree_node<std::pair<std::wstring const ,Achievement>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,Achievement>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,Achievement>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring const &> *<_Val_1>, std::tuple<> *<_Val_2>);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<CarTrackComb>>>(CarTrackComb *_First, CarTrackComb *_Last);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<SteamLeaderboardEntry>>>(SteamLeaderboardEntry *_First, SteamLeaderboardEntry *_Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,Achievement,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,Achievement>>,0>>::_Insert_at<std::pair<std::wstring const,Achievement> &,std::_Tree_node<std::pair<std::wstring const,Achievement>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,Achievement,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,Achievement> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::wstring const ,Achievement>,void *> *_Wherenode, std::pair<std::wstring const ,Achievement> *_Val, std::_Tree_node<std::pair<std::wstring const ,Achievement>,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,Achievement,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,Achievement>>,0>>::_Insert_hint<std::pair<std::wstring const,Achievement> &,std::_Tree_node<std::pair<std::wstring const,Achievement>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,Achievement,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,Achievement> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > > _Where, std::pair<std::wstring const ,Achievement> *_Val, std::_Tree_node<std::pair<std::wstring const ,Achievement>,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,Achievement,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,Achievement>>,0>>::_Insert_nohint<std::pair<std::wstring const,Achievement> &,std::_Tree_node<std::pair<std::wstring const,Achievement>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,Achievement,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,Achievement> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > > _Leftish, std::pair<std::wstring const ,Achievement> *_Val, std::_Tree_node<std::pair<std::wstring const ,Achievement>,void *> *_Newnode);
CarTrackComb *__cdecl std::_Uninit_move<CarTrackComb *,CarTrackComb *,std::allocator<CarTrackComb>,CarTrackComb>(CarTrackComb *_First, CarTrackComb *_Last, CarTrackComb *_Dest);
SteamLeaderboardEntry *__cdecl std::_Uninit_move<SteamLeaderboardEntry *,SteamLeaderboardEntry *,std::allocator<SteamLeaderboardEntry>,SteamLeaderboardEntry>(SteamLeaderboardEntry *_First, SteamLeaderboardEntry *_Last, SteamLeaderboardEntry *_Dest);
void __thiscall CarTrackComb::CarTrackComb(CarTrackComb *this, const CarTrackComb *__that);
void __thiscall CarTrackComb::CarTrackComb(CarTrackComb *this, std::wstring carName, std::wstring trackName, std::wstring trackConfigName, float secondsStandard, float secondsPro);
void __thiscall SteamInterface::SteamInterface(SteamInterface *this, Sim *aSim);
void __thiscall CCallResult<SteamInterface,LeaderboardFindResult_t>::~CCallResult<SteamInterface,LeaderboardFindResult_t>(CCallResult<SteamInterface,LeaderboardFindResult_t> *this);
void __thiscall CCallResult<SteamInterface,LeaderboardScoreUploaded_t>::~CCallResult<SteamInterface,LeaderboardScoreUploaded_t>(CCallResult<SteamInterface,LeaderboardScoreUploaded_t> *this);
void __thiscall CCallResult<SteamInterface,LeaderboardScoresDownloaded_t>::~CCallResult<SteamInterface,LeaderboardScoresDownloaded_t>(CCallResult<SteamInterface,LeaderboardScoresDownloaded_t> *this);
void __thiscall CCallResult<SteamInterface,RemoteStorageFileShareResult_t>::~CCallResult<SteamInterface,RemoteStorageFileShareResult_t>(CCallResult<SteamInterface,RemoteStorageFileShareResult_t> *this);
void __thiscall CCallResult<SteamInterface,RemoteStoragePublishFileResult_t>::~CCallResult<SteamInterface,RemoteStoragePublishFileResult_t>(CCallResult<SteamInterface,RemoteStoragePublishFileResult_t> *this);
void __thiscall CCallback<SteamInterface,UserStatsReceived_t,0>::~CCallback<SteamInterface,UserStatsReceived_t,0>(CCallback<SteamInterface,UserStatsReceived_t,0> *this);
void __thiscall CCallback<SteamInterface,UserStatsStored_t,0>::~CCallback<SteamInterface,UserStatsStored_t,0>(CCallback<SteamInterface,UserStatsStored_t,0> *this);
void __thiscall std::map<std::wstring,Achievement>::~map<std::wstring,Achievement>(std::map<std::wstring,Achievement> *this);
void __thiscall std::pair<std::wstring const,Achievement>::~pair<std::wstring const,Achievement>(CarTrackComb *this);
void __thiscall std::vector<SteamLeaderboardEntry>::~vector<SteamLeaderboardEntry>(std::vector<SteamLeaderboardEntry> *this);
void __thiscall SteamInterface::~SteamInterface(SteamInterface *this);
Achievement *__thiscall std::map<std::wstring,Achievement>::operator[](std::map<std::wstring,Achievement> *this, const std::wstring *_Keyval);
// void __userpurge lambda_409b327e16c7dfd0efeda47555bff056_::operator()(SteamInterface::{ctor}::__l13::<lambda_409b327e16c7dfd0efeda47555bff056> *this@<ecx>, int a2@<ebx>, int a3@<ebp>, int a4@<edi>, const float *m);
void __thiscall lambda_d03904bc9dd08604e6ae7859b5a40846_::operator()(SteamInterface::{ctor}::__l9::<lambda_d03904bc9dd08604e6ae7859b5a40846> *this, const SpecialEventAchievement *ack);
std::_Func_impl<std::_Callable_obj<<lambda_d03904bc9dd08604e6ae7859b5a40846>,0>,std::allocator<std::_Func_class<void,SpecialEventAchievement const &> >,void,SpecialEventAchievement const &> *__thiscall std::_Func_base<void,SpecialEventAchievement const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_d03904bc9dd08604e6ae7859b5a40846>,0>,std::allocator<std::_Func_class<void,SpecialEventAchievement const &> >,void,SpecialEventAchievement const &> *this, unsigned int a2);
SteamInterface *__thiscall SteamInterface::`vector deleting destructor'(SteamInterface *this, unsigned int a2);
int __thiscall CCallResult<SteamInterface,LeaderboardScoreUploaded_t>::GetCallbackSizeBytes(CCallResult<SteamInterface,LeaderboardScoreUploaded_t> *this);
int __thiscall CCallResult<SteamInterface,RemoteStorageFileShareResult_t>::GetCallbackSizeBytes(CCallResult<SteamInterface,RemoteStorageFileShareResult_t> *this);
int __thiscall CCallResult<SteamInterface,LeaderboardFindResult_t>::GetCallbackSizeBytes(CCallbackImpl<16> *this);
int __thiscall CCallResult<SteamInterface,LeaderboardScoresDownloaded_t>::GetCallbackSizeBytes(CCallbackImpl<24> *this);
void __cdecl MiniDumpFunction(_EXCEPTION_POINTERS *pException);
void __thiscall SteamInterface::OnDownloadScore(SteamInterface *this, LeaderboardScoresDownloaded_t *pDownloadLeaderboardResult, bool bIOFailure);
void __thiscall SteamInterface::OnFindLeaderboard(SteamInterface *this, LeaderboardFindResult_t *pFindLeaderboardResult, bool bIOFailure);
void __thiscall SteamInterface::OnUploadScore(SteamInterface *this, LeaderboardScoreUploaded_t *pScoreUploadedResult, bool bIOFailure);
void __thiscall CCallResult<SteamInterface,RemoteStoragePublishFileResult_t>::Run(CCallResult<SteamInterface,RemoteStoragePublishFileResult_t> *this, void *pvParam);
void __thiscall CCallResult<SteamInterface,LeaderboardFindResult_t>::Run(CCallResult<SteamInterface,RemoteStoragePublishFileResult_t> *this, void *pvParam, BOOL bIOFailure, unsigned __int64 hSteamAPICall);
void __thiscall CCallback<SteamInterface,UserStatsStored_t,0>::Run(CCallback<SteamInterface,UserStatsStored_t,0> *this, void *pvParam);
void __thiscall CCallbackImpl<24>::Run(CCallbackImpl<24> *this, void *pvParam, bool __formal, unsigned __int64 __formal);
void __thiscall CCallResult<SteamInterface,LeaderboardScoresDownloaded_t>::Set(CCallResult<SteamInterface,LeaderboardScoresDownloaded_t> *this, unsigned __int64 hAPICall, SteamInterface *p, void (__thiscall *func)(SteamInterface *this, LeaderboardScoresDownloaded_t *, bool));
// bool __usercall SteamInit@<al>(int a1@<ebx>, int a2@<edi>, int a3@<esi>, unsigned int a4);
// void __cdecl SteamShutdown(); weak
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const,Achievement>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const ,Achievement>> > *this);
std::_Tree_node<std::pair<std::wstring const ,Achievement>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,Achievement>>::_Buynode0(std::_Tree_buy<std::pair<std::wstring const ,Achievement>> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_409b327e16c7dfd0efeda47555bff056_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_409b327e16c7dfd0efeda47555bff056>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d215e4f63103bf9b8f209205814c8e60_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_d215e4f63103bf9b8f209205814c8e60>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this, void *_Where);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,Achievement,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,Achievement>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<std::wstring,Achievement,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,Achievement> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,Achievement>,void *> *_Newnode);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_409b327e16c7dfd0efeda47555bff056_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_409b327e16c7dfd0efeda47555bff056>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this@<ecx>, int a2@<ebx>, int a3@<ebp>, int a4@<edi>, const float *<_Args_0>);
char __thiscall std::_Func_impl<std::_Callable_obj<_lambda_90bb88c99c2e7661e845ce5bffd200c4_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_90bb88c99c2e7661e845ce5bffd200c4>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this, std::wstring *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d03904bc9dd08604e6ae7859b5a40846_,0>,std::allocator<std::_Func_class<void,SpecialEventAchievement const &>>,void,SpecialEventAchievement const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d03904bc9dd08604e6ae7859b5a40846>,0>,std::allocator<std::_Func_class<void,SpecialEventAchievement const &> >,void,SpecialEventAchievement const &> *this, const SpecialEventAchievement *<_Args_0>);
std::wstring *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d215e4f63103bf9b8f209205814c8e60_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d215e4f63103bf9b8f209205814c8e60>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this, std::wstring *result);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,Achievement,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,Achievement>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<std::wstring,Achievement,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,Achievement> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,Achievement>,void *> *_Rootnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_90bb88c99c2e7661e845ce5bffd200c4_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_90bb88c99c2e7661e845ce5bffd200c4>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d03904bc9dd08604e6ae7859b5a40846_,0>,std::allocator<std::_Func_class<void,SpecialEventAchievement const &>>,void,SpecialEventAchievement const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d03904bc9dd08604e6ae7859b5a40846>,0>,std::allocator<std::_Func_class<void,SpecialEventAchievement const &> >,void,SpecialEventAchievement const &> *this, void *_Where);
void __thiscall std::vector<CarTrackComb>::_Reallocate(std::vector<CarTrackComb> *this, unsigned int _Count);
void __thiscall std::vector<SteamLeaderboardEntry>::_Reallocate(std::vector<SteamLeaderboardEntry> *this, unsigned int _Count);
void __thiscall std::vector<CarTrackComb>::_Reserve(std::vector<CarTrackComb> *this, unsigned int _Count);
void __thiscall std::vector<SteamLeaderboardEntry>::_Reserve(std::vector<SteamLeaderboardEntry> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_409b327e16c7dfd0efeda47555bff056_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_409b327e16c7dfd0efeda47555bff056>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_90bb88c99c2e7661e845ce5bffd200c4_,0>,std::allocator<std::_Func_class<bool,std::wstring>>,bool,std::wstring>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_90bb88c99c2e7661e845ce5bffd200c4>,0>,std::allocator<std::_Func_class<bool,std::wstring > >,bool,std::wstring > *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d03904bc9dd08604e6ae7859b5a40846_,0>,std::allocator<std::_Func_class<void,SpecialEventAchievement const &>>,void,SpecialEventAchievement const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d03904bc9dd08604e6ae7859b5a40846>,0>,std::allocator<std::_Func_class<void,SpecialEventAchievement const &> >,void,SpecialEventAchievement const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d215e4f63103bf9b8f209205814c8e60_,0>,std::allocator<std::_Func_class<std::wstring,>>,std::wstring,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d215e4f63103bf9b8f209205814c8e60>,0>,std::allocator<std::_Func_class<std::wstring > >,std::wstring > *this);
void __thiscall SteamInterface::achievementCheck(SteamInterface *this);
void __thiscall SteamInterface::achievementCompleted(SteamInterface *this, std::wstring achievementName);
void __thiscall SteamInterface::addAchievement(SteamInterface *this, std::wstring aName);
void __thiscall SteamInterface::addAchievements(SteamInterface *this);
std::wstring *__cdecl cleanCarName(std::wstring *result, std::wstring myString, std::wstring occurrence);
void __thiscall SteamInterface::createLeaderboards(SteamInterface *this, std::wstring carName, std::wstring trackName, std::wstring trackConfig);
void __thiscall SteamInterface::damageRelatedAchievements(SteamInterface *this);
void __thiscall SteamInterface::driftAchievements(SteamInterface *this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,Achievement,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,Achievement>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,Achievement,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,Achievement> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > > _Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,Achievement,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,Achievement>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,Achievement,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,Achievement> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,Achievement> > > > _Where);
void __thiscall SteamInterface::fetchPlayerImage(SteamInterface *this);
void __thiscall SteamInterface::generalAchievements(SteamInterface *this);
void __thiscall SteamInterface::incrementStat(SteamInterface *this, std::wstring name);
// void __userpurge SteamInterface::onUserStatsReceived(SteamInterface *this@<ecx>, unsigned int a2@<ebx>, UserStatsReceived_t *parameters);
void __thiscall SteamInterface::onUserStatsStored(SteamInterface *this, UserStatsStored_t *parameters);
void __thiscall SteamInterface::practiceAchievements(SteamInterface *this);
void __thiscall std::vector<CarTrackComb>::push_back(std::vector<CarTrackComb> *this, CarTrackComb *_Val);
void __thiscall std::vector<SteamLeaderboardEntry>::push_back(std::vector<SteamLeaderboardEntry> *this, const SteamLeaderboardEntry *_Val);
void __thiscall SteamInterface::refreshPlayerLeaderboard(SteamInterface *this);
void __thiscall SteamInterface::resetAchievements(SteamInterface *this);
void __thiscall SteamInterface::resetPlayerLeaderboard(SteamInterface *this);
void __thiscall SteamInterface::timeAttackAchievements(SteamInterface *this);
std::wstring *__cdecl std::to_wstring(std::wstring *result, unsigned __int64 _Val);
void __thiscall SteamInterface::update(SteamInterface *this, float dt);
// void __usercall SteamInterface::updateStats(SteamInterface *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall SunAnimator::SunAnimator(SunAnimator *this, Sim *aSim, float baseAngle, float velocityMult, float cloudSpeed);
SunAnimator *__thiscall SunAnimator::`scalar deleting destructor'(SunAnimator *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ea14262656fe58370fe0eeb64f5a5586_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ea14262656fe58370fe0eeb64f5a5586>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ea14262656fe58370fe0eeb64f5a5586_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_ea14262656fe58370fe0eeb64f5a5586>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ea14262656fe58370fe0eeb64f5a5586_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ea14262656fe58370fe0eeb64f5a5586>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
void __thiscall SunAnimator::enableCustomSunDirection(SunAnimator *this, bool value);
double __thiscall SunAnimator::getVelocityMultiplier(SunAnimator *this);
// void __userpurge SunAnimator::setSunDirection(SunAnimator *this@<ecx>, int a2@<esi>, __m128 a3@<xmm4>, float zenith, float azimuth, float nordOffset);
void __thiscall SunAnimator::update(SunAnimator *this, float dt);
std::_Tree_node<std::pair<std::wstring const ,SurfaceDef>,void *> *__thiscall std::_Tree_buy<std::pair<std::wstring const,SurfaceDef>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring &&>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,SurfaceDef>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring &&> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_node<std::pair<std::wstring const ,SurfaceDef>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,SurfaceDef>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,SurfaceDef>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring const &> *<_Val_1>, std::tuple<> *<_Val_2>);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<std::wstring,SurfaceDef>>>>(std::pair<std::wstring,SurfaceDef> *_First, std::pair<std::wstring,SurfaceDef> *_Last);
void __cdecl std::_For_each<std::pair<std::wstring,SurfaceDef> *,_lambda_95f350032d24590ba7f8ab2718cae5d7_>(std::pair<std::wstring,SurfaceDef> *_First, std::pair<std::wstring,SurfaceDef> *_Last, SurfacesManager::getSurface::__l20::<lambda_95f350032d24590ba7f8ab2718cae5d7> *_Func);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,SurfaceDef> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,SurfaceDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,SurfaceDef>>,0>>::_Insert_at<std::pair<std::wstring const,SurfaceDef> &,std::_Tree_node<std::pair<std::wstring const,SurfaceDef>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,SurfaceDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,SurfaceDef> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,SurfaceDef> > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::wstring const ,SurfaceDef>,void *> *_Wherenode, std::pair<std::wstring const ,SurfaceDef> *_Val, std::_Tree_node<std::pair<std::wstring const ,SurfaceDef>,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,SurfaceDef> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,SurfaceDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,SurfaceDef>>,0>>::_Insert_hint<std::pair<std::wstring const,SurfaceDef> &,std::_Tree_node<std::pair<std::wstring const,SurfaceDef>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,SurfaceDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,SurfaceDef> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,SurfaceDef> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,SurfaceDef> > > > _Where, std::pair<std::wstring const ,SurfaceDef> *_Val, std::_Tree_node<std::pair<std::wstring const ,SurfaceDef>,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,SurfaceDef> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,SurfaceDef,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,SurfaceDef>>,0>>::_Insert_nohint<std::pair<std::wstring const,SurfaceDef> &,std::_Tree_node<std::pair<std::wstring const,SurfaceDef>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,SurfaceDef,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,SurfaceDef> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,SurfaceDef> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,SurfaceDef> > > > _Leftish, std::pair<std::wstring const ,SurfaceDef> *_Val, std::_Tree_node<std::pair<std::wstring const ,SurfaceDef>,void *> *_Newnode);
std::pair<std::wstring,SurfaceDef> *__cdecl std::_Uninit_move<std::pair<std::wstring,SurfaceDef> *,std::pair<std::wstring,SurfaceDef> *,std::allocator<std::pair<std::wstring,SurfaceDef>>,std::pair<std::wstring,SurfaceDef>>(std::pair<std::wstring,SurfaceDef> *_First, std::pair<std::wstring,SurfaceDef> *_Last, std::pair<std::wstring,SurfaceDef> *_Dest);
void __thiscall SurfacesManager::SurfacesManager(SurfacesManager *this, TrackAvatar *track);
void __thiscall std::vector<std::pair<std::wstring,SurfaceDef>>::~vector<std::pair<std::wstring,SurfaceDef>>(std::vector<std::pair<std::wstring,SurfaceDef>> *this);
void __thiscall SurfacesManager::~SurfacesManager(SurfacesManager *this);
SurfaceDef *__thiscall std::map<std::wstring,SurfaceDef>::operator[](std::map<std::wstring,SurfaceDef> *this, std::wstring *_Keyval);
SurfaceDef *__thiscall std::map<std::wstring,SurfaceDef>::operator[](std::map<std::wstring,SurfaceDef> *this, const std::wstring *_Keyval);
SurfacesManager *__thiscall SurfacesManager::`vector deleting destructor'(SurfacesManager *this, unsigned int a2);
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const,SurfaceDef>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const ,SurfaceDef>> > *this);
std::_Tree_node<std::pair<std::wstring const ,SurfaceDef>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,SurfaceDef>>::_Buynode0(std::_Tree_buy<std::pair<std::wstring const ,SurfaceDef>> *this);
void __thiscall std::vector<std::pair<std::wstring,SurfaceDef>>::_Reallocate(std::vector<std::pair<std::wstring,SurfaceDef>> *this, unsigned int _Count);
void __thiscall std::vector<std::pair<std::wstring,SurfaceDef>>::_Reserve(std::vector<std::pair<std::wstring,SurfaceDef>> *this, unsigned int _Count);
SurfaceDef *__thiscall SurfacesManager::getSurface(SurfacesManager *this, SurfaceDef *result, std::wstring name);
void __thiscall SurfacesManager::loadSurfaceDefinitions(SurfacesManager *this, std::wstring filename);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<SuspensionAnimatorLodDef>>>(SuspensionAnimatorLodDef *_First, SuspensionAnimatorLodDef *_Last);
SuspensionAnimatorLodDef *__cdecl std::_Uninit_move<SuspensionAnimatorLodDef *,SuspensionAnimatorLodDef *,std::allocator<SuspensionAnimatorLodDef>,SuspensionAnimatorLodDef>(SuspensionAnimatorLodDef *_First, SuspensionAnimatorLodDef *_Last, SuspensionAnimatorLodDef *_Dest);
TransmissionObject *__cdecl std::_Uninit_copy<TransmissionObject const *,TransmissionObject *,std::allocator<TransmissionObject>>(TransmissionObject *_First, TransmissionObject *_Last, TransmissionObject *_Dest);
void __thiscall std::allocator<SuspensionAnimatorLodDef>::destroy<SuspensionAnimatorLodDef>(std::allocator<SuspensionAnimatorLodDef> *this, SuspensionAnimatorLodDef *_Ptr);
void __thiscall std::vector<TransmissionObject>::vector<TransmissionObject>(std::vector<TransmissionObject> *this, const std::vector<TransmissionObject> *_Right);
void __thiscall SuspensionAnimator::SuspensionAnimator(SuspensionAnimator *this, CarAvatar *acar);
void __thiscall SuspensionAnimatorLodDef::SuspensionAnimatorLodDef(SuspensionAnimatorLodDef *this, const SuspensionAnimatorLodDef *__that);
void __thiscall SuspensionAnimatorLodDef::SuspensionAnimatorLodDef(SuspensionAnimatorLodDef *this);
void __thiscall std::vector<SuspensionAnimatorLodDef>::~vector<SuspensionAnimatorLodDef>(std::vector<SuspensionAnimatorLodDef> *this);
void __thiscall SuspensionAnimator::~SuspensionAnimator(SuspensionAnimator *this);
void __thiscall SuspensionAnimatorLodDef::~SuspensionAnimatorLodDef(SuspensionAnimatorLodDef *this);
SuspensionAnimator *__thiscall SuspensionAnimator::`scalar deleting destructor'(SuspensionAnimator *this, unsigned int a2);
char __thiscall std::vector<TransmissionObject>::_Buy(std::vector<TransmissionObject> *this, unsigned int _Capacity);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_19b8c5244cf5181909aab20284a9773e_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_19b8c5244cf5181909aab20284a9773e>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_6e8b95ade28802dea316eb9f9a78de4c_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_6e8b95ade28802dea316eb9f9a78de4c>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_19b8c5244cf5181909aab20284a9773e_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_19b8c5244cf5181909aab20284a9773e>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1a7359950317182ada4ef212cfe6e153_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1a7359950317182ada4ef212cfe6e153>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, const float *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d38bf75ea0405e2c42703fbedbda8fcb_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d38bf75ea0405e2c42703fbedbda8fcb>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
unsigned int __thiscall std::vector<SuspensionAnimatorLodDef>::_Grow_to(std::vector<SuspensionAnimatorLodDef> *this, unsigned int _Count);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1a7359950317182ada4ef212cfe6e153_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1a7359950317182ada4ef212cfe6e153>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, void *_Where);
void __thiscall std::vector<SuspensionAnimatorLodDef>::_Reallocate(std::vector<SuspensionAnimatorLodDef> *this, unsigned int _Count);
void __thiscall std::vector<TransmissionObject>::_Reallocate(std::vector<TransmissionObject> *this, unsigned int _Count);
void __thiscall std::vector<SuspensionAnimatorLodDef>::_Reserve(std::vector<SuspensionAnimatorLodDef> *this, unsigned int _Count);
void __thiscall std::vector<TransmissionObject>::_Reserve(std::vector<TransmissionObject> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_19b8c5244cf5181909aab20284a9773e_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_19b8c5244cf5181909aab20284a9773e>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1a7359950317182ada4ef212cfe6e153_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1a7359950317182ada4ef212cfe6e153>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_6e8b95ade28802dea316eb9f9a78de4c_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_6e8b95ade28802dea316eb9f9a78de4c>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
void __thiscall SuspensionAnimator::addModel(SuspensionAnimator *this, Node *root);
double __thiscall SuspensionAnimator::getGraphicsRadius(SuspensionAnimator *this, int index);
Node *__thiscall SuspensionAnimator::getSusTransform(SuspensionAnimator *this, int index);
Node *__thiscall SuspensionAnimator::getSusTransform(SuspensionAnimator *this, int lodIndex, int index);
Node *__thiscall SuspensionAnimator::getWheelTransform(SuspensionAnimator *this, int index);
Node *__thiscall SuspensionAnimator::getWheelTransform(SuspensionAnimator *this, int lodIndex, int index);
double __cdecl get_node_radius(Node *node, float currentRadius);
void __thiscall std::vector<SuspensionAnimatorLodDef>::push_back(std::vector<SuspensionAnimatorLodDef> *this, const SuspensionAnimatorLodDef *_Val);
void __thiscall std::vector<TransmissionObject>::push_back(std::vector<TransmissionObject> *this, const TransmissionObject *_Val);
void __thiscall SuspensionAnimator::suspensionAnimatorUpdate(SuspensionAnimator *this, float dt);
void __thiscall SuspensionAvatar::SuspensionAvatar(SuspensionAvatar *this, CarAvatar *car);
SuspensionAvatar *__thiscall SuspensionAvatar::`vector deleting destructor'(SuspensionAvatar *this, unsigned int a2);
void __thiscall SuspensionAvatar::addModel(SuspensionAvatar *this, Node *root);
double __thiscall SuspensionAvatar::getGraphicsRadius(SuspensionAvatar *this, int index);
Node *__thiscall SuspensionAvatar::getSusTransform(SuspensionAvatar *this, int index);
Node *__thiscall SuspensionAvatar::getWheelTransform(SuspensionAvatar *this, int index);
void __thiscall SuspensionAvatar::update(SuspensionAvatar *this, float dt);
void __thiscall SuspensionGraphics::SuspensionGraphics(SuspensionGraphics *this, CarAvatar *acar, SuspensionGraphicsDesc *desc);
SuspensionGraphics *__thiscall SuspensionGraphics::`scalar deleting destructor'(SuspensionGraphics *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c6eaa5b1cf854b09a2018ac31defeaa8_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_c6eaa5b1cf854b09a2018ac31defeaa8>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c6eaa5b1cf854b09a2018ac31defeaa8_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c6eaa5b1cf854b09a2018ac31defeaa8>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this);
void __thiscall SuspensionGraphics::update(SuspensionGraphics *this, float dt);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::shared_ptr<Material>>>>(std::shared_ptr<Material> *_First, std::shared_ptr<Material> *_Last);
void __thiscall SuspensionGraphicsGenerator::SuspensionGraphicsGenerator(SuspensionGraphicsGenerator *this, CarAvatar *acar);
void __thiscall SuspensionGraphicsGenerator::~SuspensionGraphicsGenerator(SuspensionGraphicsGenerator *this);
SuspensionGraphicsGenerator *__thiscall SuspensionGraphicsGenerator::`vector deleting destructor'(SuspensionGraphicsGenerator *this, unsigned int a2);
void __thiscall SuspensionGraphicsGenerator::generateConnections(SuspensionGraphicsGenerator *this);
Node *__thiscall SuspensionGraphicsGenerator::getNodeFromName(SuspensionGraphicsGenerator *this, std::wstring nname);
std::_Tree_node<std::pair<unsigned int const ,bool>,void *> *__thiscall std::_Tree_buy<std::pair<enum SystemMessageType const,bool>>::_Buynode<std::piecewise_construct_t const &,std::tuple<enum SystemMessageType const &>,std::tuple<>>(std::_Tree_buy<std::pair<unsigned int const ,bool>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<unsigned int const &> *<_Val_1>, std::tuple<> *<_Val_2>);
void __thiscall SystemMessage::SystemMessage(SystemMessage *this, Sim *aSim);
void __thiscall SystemMessage::~SystemMessage(SystemMessage *this);
const SystemMessageType *__thiscall std::map<enum SystemMessageType,bool>::operator[](std::map<enum SystemMessageType,bool> *this, const SystemMessageType *_Keyval);
SystemMessage *__thiscall SystemMessage::`vector deleting destructor'(SystemMessage *this, unsigned int a2);
void __thiscall SystemMessage::addCarMessage(SystemMessage *this, unsigned int carIndex, const SystemMessageType type);
void __thiscall SystemMessage::addMessage(SystemMessage *this, const std::wstring *imessage, const std::wstring *description, const SystemMessageType type);
void __thiscall SystemMessage::clearMessage(SystemMessage *this);
void __thiscall SystemMessage::loadDriversInfo(SystemMessage *this);
void __thiscall SystemMessage::renderHUD(SystemMessage *this, float dt);
void __thiscall SystemMessage::setMask(SystemMessage *this, INIReader *acIni, const std::wstring section, const std::wstring key, const SystemMessageType type);
void __thiscall SystemMessage::update(SystemMessage *this, float deltaT);
void __thiscall SystemNotification::SystemNotification(SystemNotification *this, Sim *aSim);
SystemNotification *__thiscall SystemNotification::`scalar deleting destructor'(SystemNotification *this, unsigned int a2);
void __thiscall SystemNotification::clearMessage(SystemNotification *this);
void __thiscall SystemNotification::showNotification(SystemNotification *this, const SystemNotificationMode type);
void __thiscall SystemNotification::update(SystemNotification *this, float deltaT);
Overlay *__cdecl std::_Uninit_move<Overlay *,Overlay *,std::allocator<Overlay>,Overlay>(Overlay *_First, Overlay *_Last, Overlay *_Dest);
// void __userpurge TimeAttack::TimeAttack(TimeAttack *this@<ecx>, char a2@<bl>, __m128 a3@<xmm3>, __m128 a4@<xmm4>, CarAvatar *aCar);
void __thiscall TimeAttackGameStatus::TimeAttackGameStatus(TimeAttackGameStatus *this);
void __thiscall std::unique_ptr<AISplineRecorder>::~unique_ptr<AISplineRecorder>(std::unique_ptr<AISplineRecorder> *this);
void __thiscall TimeAttack::~TimeAttack(TimeAttack *this);
void __thiscall TimeAttackGameStatus::~TimeAttackGameStatus(TimeAttackGameStatus *this);
void __thiscall TyreMaterials::~TyreMaterials(TimeAttackTarget *this);
void __thiscall lambda_2b8274081ecd2c8e7e86db8c7721e3d7_::operator()(TimeAttack::{ctor}::__l23::<lambda_2b8274081ecd2c8e7e86db8c7721e3d7> *this, const OnNodeRenderEvent *ev);
// void __userpurge lambda_4cd83c8fc8d6f26534a91090005cf574_::operator()(TimeAttack::{ctor}::__l33::<lambda_4cd83c8fc8d6f26534a91090005cf574> *this@<ecx>, __m128 a2@<xmm3>, __m128 a3@<xmm4>, const OnNewSessionEvent *message);
std::_Func_impl<std::_Callable_obj<<lambda_1ef22c60bcb012d06e71d8f6b23781ef>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2b8274081ecd2c8e7e86db8c7721e3d7_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_1ef22c60bcb012d06e71d8f6b23781ef>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, unsigned int a2);
TimeAttack *__thiscall TimeAttack::`scalar deleting destructor'(TimeAttack *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2b8274081ecd2c8e7e86db8c7721e3d7_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_2b8274081ecd2c8e7e86db8c7721e3d7>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, void *_Where);
void __thiscall std::vector<Turbo>::_Destroy(std::vector<Turbo> *this, Turbo *_First, Turbo *_Last);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2b8274081ecd2c8e7e86db8c7721e3d7_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2b8274081ecd2c8e7e86db8c7721e3d7>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this, const OnNodeRenderEvent *<_Args_0>);
// void __userpurge std::_Func_impl<std::_Callable_obj<_lambda_4cd83c8fc8d6f26534a91090005cf574_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4cd83c8fc8d6f26534a91090005cf574>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this@<ecx>, __m128 a2@<xmm3>, __m128 a3@<xmm4>, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_580fb303675d98712da4536ec482cbb6_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_580fb303675d98712da4536ec482cbb6>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ae2a90bb9214023e4a9249d4c26c1f22_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ae2a90bb9214023e4a9249d4c26c1f22>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4cd83c8fc8d6f26534a91090005cf574_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_4cd83c8fc8d6f26534a91090005cf574>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_580fb303675d98712da4536ec482cbb6_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_580fb303675d98712da4536ec482cbb6>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ae2a90bb9214023e4a9249d4c26c1f22_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_ae2a90bb9214023e4a9249d4c26c1f22>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::vector<Overlay>::_Reallocate(std::vector<Overlay> *this, unsigned int _Count);
void __thiscall std::vector<Turbo>::_Reallocate(std::vector<Turbo> *this, unsigned int _Count);
void __thiscall std::vector<Overlay>::_Reserve(std::vector<Overlay> *this, unsigned int _Count);
void __thiscall std::vector<Turbo>::_Reserve(std::vector<Turbo> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2b8274081ecd2c8e7e86db8c7721e3d7_,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &>>,void,OnNodeRenderEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2b8274081ecd2c8e7e86db8c7721e3d7>,0>,std::allocator<std::_Func_class<void,OnNodeRenderEvent const &> >,void,OnNodeRenderEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4cd83c8fc8d6f26534a91090005cf574_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4cd83c8fc8d6f26534a91090005cf574>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_580fb303675d98712da4536ec482cbb6_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_580fb303675d98712da4536ec482cbb6>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ae2a90bb9214023e4a9249d4c26c1f22_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ae2a90bb9214023e4a9249d4c26c1f22>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
void __thiscall std::vector<Turbo>::_Tidy(std::vector<Turbo> *this);
void __thiscall TimeAttack::createAndSaveOverlays(TimeAttack *this);
// TimeEvaluation *__usercall evaluateTimeFromTrackSpline@<eax>(__m128 a1@<xmm3>, __m128 a2@<xmm4>, TimeEvaluation *result, CarAvatar *avatar);
std::wstring *__thiscall Track::getDataFolder(Track *this, std::wstring *result);

void __thiscall TimeAttack::loadOverlaysAndSectors(TimeAttack *this);
void __thiscall std::vector<Overlay>::push_back(std::vector<Overlay> *this, const Overlay *_Val);
void __thiscall std::vector<Turbo>::push_back(std::vector<Turbo> *this, Turbo *_Val);
void __thiscall TimeAttack::renderGameOver(TimeAttack *this, float dt);
void __thiscall TimeAttack::renderGuiCheckpointBreak(TimeAttack *this, float dt, float newPoints, float newSeconds);
void __thiscall TimeAttack::renderGuiPenalties(TimeAttack *this, float dt);
void __thiscall TimeAttack::renderGuiStart(TimeAttack *this, float dt);
void __thiscall TimeAttack::renderGuiStatus(TimeAttack *this, float dt);
void __thiscall TimeAttack::renderHUD(TimeAttack *this, float dt);
void __thiscall TimeAttackGameStatus::reset(TimeAttackGameStatus *this, int numberOfSectors);
void __thiscall TimeAttackTarget::reset(TimeAttackTarget *this, const std::vector<float> *sectorsTime_s);
std::wstring *__cdecl timeToTimeAttackDiffString(std::wstring *result, float t);
std::wstring *__cdecl timeToTimeAttackString(std::wstring *result, float t);
void __thiscall TimeAttack::update(TimeAttack *this, float dt);
void __thiscall TimeAttack::updateGameOver(TimeAttack *this, float dt);
void __thiscall TimeAttack::updatePenalties(TimeAttack *this, float dt);
void __thiscall TimeAttack::updateTimeAttack(TimeAttack *this, float dt);
void __thiscall TimeAttack::verifyConditions(TimeAttack *this);
// void __userpurge TimeLimitedTest::TimeLimitedTest(TimeLimitedTest *this@<ecx>, unsigned int a2@<ebx>, Sim *isim);
TimeLimitedTest *__thiscall TimeLimitedTest::`scalar deleting destructor'(TimeLimitedTest *this, unsigned int a2);
int __thiscall TimeLimitedTest::getMaxRunningTime(TimeLimitedTest *this);
void __thiscall TimeLimitedTest::renderHUD(TimeLimitedTest *this, float deltaT);
void __thiscall TimeLimitedTest::shutdown(TimeLimitedTest *this);
void __thiscall TimeLimitedTest::update(TimeLimitedTest *this, float dt);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<OverlayLeaderboard::DriverName>>>(OverlayLeaderboard::DriverName *_First, OverlayLeaderboard::DriverName *_Last);
OverlayLeaderboard::DriverName *__cdecl std::_Find_if<OverlayLeaderboard::DriverName *,_lambda_c6f1ae9e54357b5dfec37025f30fac03_>(OverlayLeaderboard::DriverName *_First, OverlayLeaderboard::DriverName *_Last, OverlayLeaderboard::filterName::__l6::<lambda_c6f1ae9e54357b5dfec37025f30fac03> _Pred);
OverlayLeaderboard::DriverName *__cdecl std::_Uninit_move<OverlayLeaderboard::DriverName *,OverlayLeaderboard::DriverName *,std::allocator<OverlayLeaderboard::DriverName>,OverlayLeaderboard::DriverName>(OverlayLeaderboard::DriverName *_First, OverlayLeaderboard::DriverName *_Last, OverlayLeaderboard::DriverName *_Dest);
void __thiscall OverlayLeaderboard::OverlayLeaderboard(OverlayLeaderboard *this, Sim *aSim);
void __thiscall std::vector<OverlayLeaderboard::DriverName>::~vector<OverlayLeaderboard::DriverName>(std::vector<OverlayLeaderboard::DriverName> *this);
void __thiscall OverlayLeaderboard::~OverlayLeaderboard(OverlayLeaderboard *this);
OverlayLeaderboard *__thiscall OverlayLeaderboard::`scalar deleting destructor'(OverlayLeaderboard *this, unsigned int a2);
void __thiscall std::vector<OverlayLeaderboard::DriverName>::_Reallocate(std::vector<OverlayLeaderboard::DriverName> *this, unsigned int _Count);
void __thiscall std::vector<OverlayLeaderboard::DriverName>::_Reserve(std::vector<OverlayLeaderboard::DriverName> *this, unsigned int _Count);
void __thiscall OverlayLeaderboard::drawCell(OverlayLeaderboard *this, const LeaderboardEntry *entry, int position, const std::wstring *time, float x, float y, SessionType ses_type);
void __thiscall OverlayLeaderboard::drawVerticalCell(OverlayLeaderboard *this, const LeaderboardEntry *entry, int position, const std::wstring *time, float x, float y, SessionType ses_type);
std::wstring *__thiscall OverlayLeaderboard::filterName(OverlayLeaderboard *this, std::wstring *result, const std::wstring *originalName);
std::wstring *__cdecl filterRemovingFromSequence(std::wstring *result, const std::wstring *word, const std::wstring *seq);
int __thiscall std::wstring::find_first_of(std::wstring *this, const wchar_t *_Ptr, unsigned int _Off, unsigned int _Count);
void __thiscall OverlayLeaderboard::renderHUD(OverlayLeaderboard *this, float dt);
void __thiscall OverlayLeaderboard::shutdown(OverlayLeaderboard *this);
std::wstring *__cdecl timeToDiff_Secs_3Millis(std::wstring *result, int t);
void __thiscall OverlayLeaderboard::update(OverlayLeaderboard *this, float dt);
AudioOccluder *__cdecl std::_Uninit_move<AudioOccluder *,AudioOccluder *,std::allocator<AudioOccluder>,AudioOccluder>(AudioOccluder *_First, AudioOccluder *_Last, AudioOccluder *_Dest);
AudioReverb *__cdecl std::_Uninit_move<AudioReverb *,AudioReverb *,std::allocator<AudioReverb>,AudioReverb>(AudioReverb *_First, AudioReverb *_Last, AudioReverb *_Dest);
void __thiscall TrackAudio::TrackAudio(TrackAudio *this, TrackAvatar *track, Sim *sim);
TrackAudio *__thiscall TrackAudio::`scalar deleting destructor'(TrackAudio *this, unsigned int a2);
void __thiscall std::vector<AudioOccluder>::_Reallocate(std::vector<AudioOccluder> *this, unsigned int _Count);
void __thiscall std::vector<AudioReverb>::_Reallocate(std::vector<AudioReverb> *this, unsigned int _Count);
void __thiscall std::vector<AudioOccluder>::_Reserve(std::vector<AudioOccluder> *this, unsigned int _Count);
void __thiscall std::vector<AudioReverb>::_Reserve(std::vector<AudioReverb> *this, unsigned int _Count);
void __thiscall std::vector<AudioOccluder>::_Tidy(std::vector<AudioOccluder> *this);
void __thiscall std::vector<AudioReverb>::_Tidy(std::vector<AudioReverb> *this);
void __thiscall std::vector<AudioEvent>::push_back(std::vector<AudioEvent> *this, AudioEvent *_Val);
void __thiscall std::vector<AudioOccluder>::push_back(std::vector<AudioOccluder> *this, AudioOccluder *_Val);
void __thiscall std::vector<AudioReverb>::push_back(std::vector<AudioReverb> *this, AudioReverb *_Val);
void __thiscall TrackAudio::render(TrackAudio *this, float deltaT);
std::_Tree_node<std::pair<Node * const,CarAvatar *>,void *> *__thiscall std::_Tree_buy<std::pair<int const,int>>::_Buynode<std::piecewise_construct_t const &,std::tuple<int const &>,std::tuple<>>(std::_Tree_buy<std::pair<Node * const,CarAvatar *>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<Node * const &> *<_Val_1>, std::tuple<> *<_Val_2>);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<TrackAvatar::SectorDescription>>>(SGearRatio *_First, SGearRatio *_Last);
void __thiscall std::_Func_class<void,OnNewSessionEvent const &>::_Do_alloc<std::_Func_impl<std::_Callable_obj<_lambda_164f52c735376574f9762bc4ed55c4eb_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>,_lambda_164f52c735376574f9762bc4ed55c4eb_,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>>(std::_Func_class<void,OnNewSessionEvent const &> *this, TrackAvatar::{ctor}::__l41::<lambda_164f52c735376574f9762bc4ed55c4eb> *_Val, std::allocator<std::_Func_class<void,OnNewSessionEvent const &> > _Ax);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::vector<Node *>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::vector<Node *>>>,0>>::_Insert_at<std::pair<std::wstring const,std::vector<Node *>> &,std::_Tree_node<std::pair<std::wstring const,std::vector<Node *>>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,std::vector<Node *>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::vector<Node *> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::wstring const ,std::vector<Node *> >,void *> *_Wherenode, std::pair<std::wstring const ,std::vector<Node *> > *_Val, std::_Tree_node<std::pair<std::wstring const ,std::vector<Node *> >,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SystemMessageType const ,bool> > > > *__thiscall std::_Tree<std::_Tmap_traits<enum SystemMessageType,bool,std::less<enum SystemMessageType>,std::allocator<std::pair<enum SystemMessageType const,bool>>,0>>::_Insert_hint<std::pair<enum SystemMessageType const,bool> &,std::_Tree_node<std::pair<enum SystemMessageType const,bool>,void *> *>(std::_Tree<std::_Tmap_traits<enum SystemMessageType,bool,std::less<enum SystemMessageType>,std::allocator<std::pair<enum SystemMessageType const ,bool> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SystemMessageType const ,bool> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum SystemMessageType const ,bool> > > > _Where, std::pair<enum SystemMessageType const ,bool> *_Val, std::_Tree_node<std::pair<enum SystemMessageType const ,bool>,void *> *_Newnode);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::vector<Node *>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::vector<Node *>>>,0>>::_Insert_hint<std::pair<std::wstring const,std::vector<Node *>> &,std::_Tree_node<std::pair<std::wstring const,std::vector<Node *>>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,std::vector<Node *>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::vector<Node *> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > > _Where, std::pair<std::wstring const ,std::vector<Node *> > *_Val, std::_Tree_node<std::pair<std::wstring const ,std::vector<Node *> >,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::vector<Node *>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::vector<Node *>>>,0>>::_Insert_nohint<std::pair<std::wstring const,std::vector<Node *>> &,std::_Tree_node<std::pair<std::wstring const,std::vector<Node *>>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,std::vector<Node *>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::vector<Node *> > >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > > _Leftish, std::pair<std::wstring const ,std::vector<Node *> > *_Val, std::_Tree_node<std::pair<std::wstring const ,std::vector<Node *> >,void *> *_Newnode);
TrackAvatar::SectorDescription *__cdecl std::_Uninit_move<TrackAvatar::SectorDescription *,TrackAvatar::SectorDescription *,std::allocator<TrackAvatar::SectorDescription>,TrackAvatar::SectorDescription>(TrackAvatar::SectorDescription *_First, TrackAvatar::SectorDescription *_Last, TrackAvatar::SectorDescription *_Dest);
void __thiscall std::_Wrap_alloc<std::allocator<SGearRatio>>::destroy<SGearRatio>(std::_Wrap_alloc<std::allocator<SGearRatio> > *this, SGearRatio *_Ptr);
std::shared_ptr<Material> *__cdecl std::make_shared<Material,Material *>(std::shared_ptr<Material> *result, Material **<_Args_0>);
// void __userpurge TrackAvatar::TrackAvatar(TrackAvatar *this@<ecx>, __m128 a2@<xmm0>, __m128 a3@<xmm3>, __m128 a4@<xmm4>, Sim *isim, const std::wstring *iunixName, const std::wstring *config);
void __thiscall std::map<std::wstring,std::vector<Node *>>::~map<std::wstring,std::vector<Node *>>(std::map<std::wstring,std::vector<Node *>> *this);
void __thiscall AnimationSet::~AnimationSet(AnimationSet *this);
void __thiscall TrackAvatar::~TrackAvatar(TrackAvatar *this);
void __thiscall TrackPhysicsStats::~TrackPhysicsStats(TrackPhysicsStats *this);
int *__thiscall std::map<int,int>::operator[](std::map<int,int> *this, const int *_Keyval);
std::vector<Node *> *__thiscall std::map<std::wstring,std::vector<Node *>>::operator[](std::map<std::wstring,std::vector<Node *>> *this, std::wstring *_Keyval);
std::vector<Node *> *__thiscall std::map<std::wstring,std::vector<Node *>>::operator[](std::map<std::wstring,std::vector<Node *>> *this, const std::wstring *_Keyval);
void __thiscall lambda_164f52c735376574f9762bc4ed55c4eb_::operator()(TrackAvatar::{ctor}::__l41::<lambda_164f52c735376574f9762bc4ed55c4eb> *this, const OnNewSessionEvent *message);
TrackAvatar *__thiscall TrackAvatar::`scalar deleting destructor'(TrackAvatar *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_164f52c735376574f9762bc4ed55c4eb_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_164f52c735376574f9762bc4ed55c4eb>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2259c22871515b6b451fb08af0faad6d_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_2259c22871515b6b451fb08af0faad6d>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7e7b09d9b93eab6ac981c30ce1130c55_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_7e7b09d9b93eab6ac981c30ce1130c55>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::vector<Node *>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::vector<Node *>>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<std::wstring,std::vector<Node *>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::vector<Node *> > >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,std::vector<Node *> >,void *> *_Newnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_164f52c735376574f9762bc4ed55c4eb_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_164f52c735376574f9762bc4ed55c4eb>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2259c22871515b6b451fb08af0faad6d_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2259c22871515b6b451fb08af0faad6d>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_7e7b09d9b93eab6ac981c30ce1130c55_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_7e7b09d9b93eab6ac981c30ce1130c55>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c4fad89696ecb7c4f1a2aabe83c56fb7_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c4fad89696ecb7c4f1a2aabe83c56fb7>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d35ceb4ae4a47dbde23c91dd18924e8d_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d35ceb4ae4a47dbde23c91dd18924e8d>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::vector<Node *>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::vector<Node *>>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<std::wstring,std::vector<Node *>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::vector<Node *> > >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,std::vector<Node *> >,void *> *_Rootnode);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c4fad89696ecb7c4f1a2aabe83c56fb7_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_c4fad89696ecb7c4f1a2aabe83c56fb7>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d35ceb4ae4a47dbde23c91dd18924e8d_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_d35ceb4ae4a47dbde23c91dd18924e8d>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::vector<MLJoint>::_Reallocate(std::vector<MLJoint> *this, unsigned int _Count);
void __thiscall std::vector<TrackAvatar::SectorDescription>::_Reallocate(std::vector<TrackAvatar::SectorDescription> *this, unsigned int _Count);
void __thiscall std::vector<DynamicTrackObject>::_Reserve(std::vector<MLJoint> *this, unsigned int _Count);
void __thiscall std::vector<TrackAvatar::SectorDescription>::_Reserve(std::vector<TrackAvatar::SectorDescription> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_164f52c735376574f9762bc4ed55c4eb_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_164f52c735376574f9762bc4ed55c4eb>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2259c22871515b6b451fb08af0faad6d_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2259c22871515b6b451fb08af0faad6d>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7e7b09d9b93eab6ac981c30ce1130c55_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_7e7b09d9b93eab6ac981c30ce1130c55>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c4fad89696ecb7c4f1a2aabe83c56fb7_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c4fad89696ecb7c4f1a2aabe83c56fb7>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d35ceb4ae4a47dbde23c91dd18924e8d_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d35ceb4ae4a47dbde23c91dd18924e8d>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
void __thiscall TrackAvatar::addPhysicsMesh(TrackAvatar *this, Mesh *mesh, unsigned int sector_id);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > > *__thiscall std::_Tree<std::_Tmap_traits<enum SystemMessageType,bool,std::less<enum SystemMessageType>,std::allocator<std::pair<enum SystemMessageType const,bool>>,0>>::erase(std::_Tree<std::_Tmap_traits<unsigned int,bool,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,bool> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > > > _Where);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::vector<Node *>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::vector<Node *>>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,std::vector<Node *>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::vector<Node *> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > > _Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::vector<Node *>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::vector<Node *>>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,std::vector<Node *>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::vector<Node *> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<Node *> > > > > _Where);
AISpline *__thiscall TrackAvatar::getAISpline(TrackAvatar *this);
std::wstring *__thiscall TrackAvatar::getConfig(TrackAvatar *this, std::wstring *result);
std::wstring *__thiscall TrackAvatar::getDataFolder(TrackAvatar *this, std::wstring *result);
int __thiscall TrackAvatar::getMaxSlotsAvailable(TrackAvatar *this, const std::wstring *setName);
std::wstring *__thiscall TrackAvatar::getSectorDescription(TrackAvatar *this, std::wstring *result, float normalizedPosition);
mat44f *__thiscall TrackAvatar::getSpawnPosition(TrackAvatar *this, mat44f *result, const std::wstring *setName, unsigned int index);
AISplineRecorder *__thiscall TrackAvatar::getSplineRecorder(TrackAvatar *this);
SurfaceDef *__thiscall TrackAvatar::getSurfaceDescFromMeshName(TrackAvatar *this, SurfaceDef *result, std::wstring meshname);
void __thiscall TrackAvatar::init3D(TrackAvatar *this);
void __thiscall TrackAvatar::initDynamicObjects(TrackAvatar *this);
// void __usercall TrackAvatar::initPhysics(TrackAvatar *this@<ecx>, __m128 a2@<xmm0>, __m128 a3@<xmm3>, __m128 a4@<xmm4>);
void __thiscall TrackAvatar::initPitCrew(TrackAvatar *this);
void __thiscall TrackAvatar::initRespawnPositionSet(TrackAvatar *this, const std::wstring *setName);
void __thiscall TrackAvatar::initTimeLines(TrackAvatar *this);
void __thiscall TrackAvatar::processPhysicsNode(TrackAvatar *this, Node *node);
void __thiscall std::vector<MLJoint>::push_back(std::vector<MLJoint> *this, const MLJoint *_Val);
void __thiscall std::vector<TrackAvatar::SectorDescription>::push_back(std::vector<TrackAvatar::SectorDescription> *this, const TrackAvatar::SectorDescription *_Val);
void __thiscall TrackAvatar::setDynamicGrooveVisibility(TrackAvatar *this, bool visibility);
void __thiscall TrackAvatar::update(TrackAvatar *this, float dt);
void __thiscall TrackAvatar::updateDynamicObjects(TrackAvatar *this, float dt);
CarCollisionBox *__cdecl std::_Uninit_move<CarCollisionBox *,CarCollisionBox *,std::allocator<CarCollisionBox>,CarCollisionBox>(CarCollisionBox *_First, CarCollisionBox *_Last, CarCollisionBox *_Dest);
void __thiscall DynamicTrackManager::DynamicTrackManager(DynamicTrackManager *this, Sim *aSim, const std::wstring *trackDataFolder);
DynamicTrackManager *__thiscall DynamicTrackManager::`scalar deleting destructor'(DynamicTrackManager *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_80dca9b889e744383dc61558ea308d2b_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_80dca9b889e744383dc61558ea308d2b>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bf887b3ce1d0bc636711e9e5dd68400a_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_bf887b3ce1d0bc636711e9e5dd68400a>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_80dca9b889e744383dc61558ea308d2b_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_80dca9b889e744383dc61558ea308d2b>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bf887b3ce1d0bc636711e9e5dd68400a_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_bf887b3ce1d0bc636711e9e5dd68400a>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_80dca9b889e744383dc61558ea308d2b_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_80dca9b889e744383dc61558ea308d2b>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_bf887b3ce1d0bc636711e9e5dd68400a_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_bf887b3ce1d0bc636711e9e5dd68400a>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
void __thiscall DynamicTrackManager::setGrooveMeshVisibility(DynamicTrackManager *this, bool visible);
void __thiscall DynamicTrackManager::update(DynamicTrackManager *this, float dt);
int sprintf_s<32>(char (*_Dest)[32], const char *_Format, ...);
int sprintf_s<64>(char (*_Dest)[64], const char *_Format, ...);
void __thiscall TrackIR::TrackIR(TrackIR *this, HWND__ *hwnd);
void __thiscall TrackIR::~TrackIR(TrackIR *this);
std::string *__cdecl getDllLocation(std::string *result);
void __thiscall TrackIR::getOffsets(TrackIR *this, vec3f *rot, vec3f *pos);
std::string *__cdecl std::operator+<char>(std::string *result, const std::string *_Left, const char *_Right);
int __cdecl NPClient_Init(std::string *csDLLPath);
tagNPResult __stdcall NP_GetData(tagTrackIRData *pTID);
tagNPResult __stdcall NP_QueryVersion(unsigned __int16 *pwVersion);
tagNPResult __stdcall NP_RegisterProgramProfileID(unsigned __int16 wPPID);
tagNPResult __stdcall NP_RegisterWindowHandle(HWND__ *hWnd);
tagNPResult __stdcall NP_RequestData(unsigned __int16 wDataReq);
tagNPResult __stdcall NP_StartDataTransmission();
tagNPResult __stdcall NP_StopCursor();
tagNPResult __stdcall NP_StopDataTransmission();
tagNPResult __stdcall NP_UnregisterWindowHandle();
std::string *__thiscall std::string::append(std::string *this, const std::string *_Right, unsigned int _Roff, unsigned int _Count);
std::string *__thiscall std::string::append(std::string *this, const char *_Ptr, unsigned int _Count);
std::string *__thiscall std::string::replace(std::string *this, unsigned int _Off, unsigned int _N0, const std::string *_Right, unsigned int _Roff, unsigned int _Count);
void __thiscall TrackObject::TrackObject(TrackObject *this, std::wstring iname, Sim *isim, Node *iroot);
void __thiscall Concurrency::concurrent_queue<mat44f,std::allocator<mat44f>>::~concurrent_queue<mat44f,std::allocator<mat44f>>(Concurrency::concurrent_queue<mat44f,std::allocator<mat44f> > *this);
Concurrency::concurrent_queue<mat44f,std::allocator<mat44f> > *__thiscall Concurrency::concurrent_queue<mat44f,std::allocator<mat44f>>::`vector deleting destructor'(Concurrency::concurrent_queue<mat44f,std::allocator<mat44f> > *this, unsigned int a2);
TrackObject *__thiscall TrackObject::`scalar deleting destructor'(TrackObject *this, unsigned int a2);
void __thiscall Concurrency::concurrent_queue<mat44f,std::allocator<mat44f>>::_Assign_and_destroy_item(Concurrency::concurrent_queue<mat44f,std::allocator<mat44f> > *this, void *_Dst, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Src, unsigned int _Index);
void __thiscall Concurrency::concurrent_queue<mat44f,std::allocator<mat44f>>::_Copy_item(Concurrency::concurrent_queue<mat44f,std::allocator<mat44f> > *this, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Dst, unsigned int _Index, void *_Src);
void __thiscall TrackObject::resetOrgMatrix(TrackObject *this);
void __thiscall TrackObject::setMatrix(TrackObject *this, mat44f matrix);
void __thiscall TrackObject::update(TrackObject *this, float deltaT);
void __thiscall TyreBlur::TyreBlur(TyreBlur *this, CarAvatar *acar);
void __thiscall TyreMaterials::TyreMaterials(TyreMaterials *this);
TyreBlur *__thiscall TyreBlur::`scalar deleting destructor'(TyreBlur *this, unsigned int a2);
void __thiscall TyreBlur::initTyreMaterials(TyreBlur *this);
void __thiscall TyreBlur::processNode(TyreBlur *this, Node *node, int tyreIndex);
void __thiscall TyreBlur::update(TyreBlur *this, float deltaT);
void __thiscall TyreSmoke::TyreSmoke(TyreSmoke *this, CarAvatar *a_car, int a_tyreIndex);
void __thiscall TyreSmoke::~TyreSmoke(TyreSmoke *this);
std::_Func_impl<std::_Callable_obj<<lambda_08befdb401e28dbfbc434e667627dbb3>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_7b20f34712fe391a229c201c78115743_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_08befdb401e28dbfbc434e667627dbb3>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, unsigned int a2);
TyreSmoke *__thiscall TyreSmoke::`scalar deleting destructor'(TyreSmoke *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_669f66797dc60e6795c0963c9e981de5_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_669f66797dc60e6795c0963c9e981de5>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_de499c9c1ec8267d3760b58f8357dbd3_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_de499c9c1ec8267d3760b58f8357dbd3>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_669f66797dc60e6795c0963c9e981de5_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_669f66797dc60e6795c0963c9e981de5>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this, const OnNewSessionEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_de499c9c1ec8267d3760b58f8357dbd3_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_de499c9c1ec8267d3760b58f8357dbd3>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cb4c3cfbb5db9f71e6d0829031977ee5_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_cb4c3cfbb5db9f71e6d0829031977ee5>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_669f66797dc60e6795c0963c9e981de5_,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &>>,void,OnNewSessionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_669f66797dc60e6795c0963c9e981de5>,0>,std::allocator<std::_Func_class<void,OnNewSessionEvent const &> >,void,OnNewSessionEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cb4c3cfbb5db9f71e6d0829031977ee5_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_cb4c3cfbb5db9f71e6d0829031977ee5>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_de499c9c1ec8267d3760b58f8357dbd3_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_de499c9c1ec8267d3760b58f8357dbd3>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
void __thiscall TyreSmoke::onReplayStatusChanged(TyreSmoke *this, const OnReplayStatusChanged *message);
void __thiscall TyreSmoke::update(TyreSmoke *this, float deltaT);
void __thiscall std::function<void __cdecl (bool const &)>::function<void __cdecl (bool const &)>(std::function<void __cdecl(bool const &)> *this, UDPCommandListener::update::__l28::<lambda_381add0e37bf178173b8ad19696695e2> *_Func);
void __thiscall std::function<void __cdecl (bool const &)>::function<void __cdecl (bool const &)>(std::function<void __cdecl(bool const &)> *this, UDPCommandListener::update::__l23::<lambda_912136b37263743446bae8b488d9d8ec> *_Func);
void __thiscall UDPCommandListener::UDPCommandListener(UDPCommandListener *this, Sim *a_sim);
UDPCommandListener *__thiscall UDPCommandListener::`scalar deleting destructor'(UDPCommandListener *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0c645c8f62b2e0a797f57343fdc0cac4_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_0c645c8f62b2e0a797f57343fdc0cac4>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3af8efd96a78e1fc4a470c549272da59_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_3af8efd96a78e1fc4a470c549272da59>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0c645c8f62b2e0a797f57343fdc0cac4_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0c645c8f62b2e0a797f57343fdc0cac4>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_381add0e37bf178173b8ad19696695e2_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_381add0e37bf178173b8ad19696695e2>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_3af8efd96a78e1fc4a470c549272da59_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_3af8efd96a78e1fc4a470c549272da59>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5c1f10e5b22fca5993dfaa11ae8b0ddf_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5c1f10e5b22fca5993dfaa11ae8b0ddf>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5cf5a81ef9aba7a6a405b421046456ba_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_5cf5a81ef9aba7a6a405b421046456ba>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_72ee87b325e3dcd28ed3f121a3b115a3_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_72ee87b325e3dcd28ed3f121a3b115a3>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_912136b37263743446bae8b488d9d8ec_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_912136b37263743446bae8b488d9d8ec>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_df73c82f9df2c2244d38459c7bb82623_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_df73c82f9df2c2244d38459c7bb82623>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_381add0e37bf178173b8ad19696695e2_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_381add0e37bf178173b8ad19696695e2>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5c1f10e5b22fca5993dfaa11ae8b0ddf_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_5c1f10e5b22fca5993dfaa11ae8b0ddf>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_5cf5a81ef9aba7a6a405b421046456ba_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_5cf5a81ef9aba7a6a405b421046456ba>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_72ee87b325e3dcd28ed3f121a3b115a3_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_72ee87b325e3dcd28ed3f121a3b115a3>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_912136b37263743446bae8b488d9d8ec_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_912136b37263743446bae8b488d9d8ec>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_df73c82f9df2c2244d38459c7bb82623_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_df73c82f9df2c2244d38459c7bb82623>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0c645c8f62b2e0a797f57343fdc0cac4_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0c645c8f62b2e0a797f57343fdc0cac4>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_381add0e37bf178173b8ad19696695e2_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_381add0e37bf178173b8ad19696695e2>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_3af8efd96a78e1fc4a470c549272da59_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_3af8efd96a78e1fc4a470c549272da59>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5c1f10e5b22fca5993dfaa11ae8b0ddf_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5c1f10e5b22fca5993dfaa11ae8b0ddf>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_5cf5a81ef9aba7a6a405b421046456ba_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_5cf5a81ef9aba7a6a405b421046456ba>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_72ee87b325e3dcd28ed3f121a3b115a3_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_72ee87b325e3dcd28ed3f121a3b115a3>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_912136b37263743446bae8b488d9d8ec_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_912136b37263743446bae8b488d9d8ec>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_df73c82f9df2c2244d38459c7bb82623_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_df73c82f9df2c2244d38459c7bb82623>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
void __thiscall UDPCommandListener::update(UDPCommandListener *this, float dt);
void __thiscall VirtualMirrorRenderer::VirtualMirrorRenderer(VirtualMirrorRenderer *this, Sim *aSim);
VirtualMirrorRenderer *__thiscall VirtualMirrorRenderer::`vector deleting destructor'(VirtualMirrorRenderer *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d97c1dc3acfaa796a0b08d1aa97a84ae_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d97c1dc3acfaa796a0b08d1aa97a84ae>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, const float *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d97c1dc3acfaa796a0b08d1aa97a84ae_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d97c1dc3acfaa796a0b08d1aa97a84ae>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d97c1dc3acfaa796a0b08d1aa97a84ae_,0>,std::allocator<std::_Func_class<void,float const &>>,void,float const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d97c1dc3acfaa796a0b08d1aa97a84ae>,0>,std::allocator<std::_Func_class<void,float const &> >,void,float const &> *this);
void __thiscall VirtualMirrorRenderer::renderVirtualMirror(VirtualMirrorRenderer *this, float dt);
void __thiscall VirtualMirrorRenderer::shutdown(VirtualMirrorRenderer *this);
void __thiscall VirtualMirrorRenderer::update(VirtualMirrorRenderer *this, float dt);
void __thiscall std::function<void __cdecl (SVar *,float)>::function<void __cdecl (SVar *,float)>(std::function<void __cdecl(SVar *,float)> *this, VisualDamageManager::{ctor}::__l60::<lambda_e3ff8306fac25f806bae74fad5e2fa7b> *_Func);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<VisualDamageManager::GlassBreakablePart>>>(VisualDamageManager::GlassBreakablePart *_First, VisualDamageManager::GlassBreakablePart *_Last);
void __cdecl std::_Uninit_def_fill_n<VisualDamageManager::GlassBreakablePart *,unsigned int,std::allocator<VisualDamageManager::GlassBreakablePart>,VisualDamageManager::GlassBreakablePart>(VisualDamageManager::GlassBreakablePart *_First, unsigned int _Count);
VisualDamageManager::BreakablePart *__cdecl std::_Uninit_move<VisualDamageManager::BreakablePart *,VisualDamageManager::BreakablePart *,std::allocator<VisualDamageManager::BreakablePart>,VisualDamageManager::BreakablePart>(VisualDamageManager::BreakablePart *_First, VisualDamageManager::BreakablePart *_Last, VisualDamageManager::BreakablePart *_Dest);
VisualDamageManager::GlassBreakablePart *__cdecl std::_Uninit_move<VisualDamageManager::GlassBreakablePart *,VisualDamageManager::GlassBreakablePart *,std::allocator<VisualDamageManager::GlassBreakablePart>,VisualDamageManager::GlassBreakablePart>(VisualDamageManager::GlassBreakablePart *_First, VisualDamageManager::GlassBreakablePart *_Last, VisualDamageManager::GlassBreakablePart *_Dest);
void __thiscall std::vector<Mesh *>::vector<Mesh *>(std::vector<TyreThermalPatch *> *this, const std::vector<TyreThermalPatch *> *_Right);
void __thiscall VisualDamageManager::BreakablePart::BreakablePart(VisualDamageManager::BreakablePart *this, const VisualDamageManager::BreakablePart *__that);
void __thiscall VisualDamageManager::BreakablePart::BreakablePart(VisualDamageManager::BreakablePart *this);
void __thiscall VisualDamageManager::VisualDamageManager(VisualDamageManager *this, CarAvatar *car);
void __thiscall std::vector<VisualDamageManager::GlassBreakablePart>::_Tidy(std::vector<VisualDamageManager::GlassBreakablePart> *this);
void __thiscall VisualDamageManager::~VisualDamageManager(VisualDamageManager *this);
void __thiscall lambda_e3ff8306fac25f806bae74fad5e2fa7b_::operator()(VisualDamageManager::{ctor}::__l60::<lambda_e3ff8306fac25f806bae74fad5e2fa7b> *this, SVar *v, float value);
char __thiscall lambda_f8ff827a2ba47f6b6eb6c1a263ec6e6d_::operator()(VisualDamageManager::initScratchableParts::__l14::<lambda_f8ff827a2ba47f6b6eb6c1a263ec6e6d> *this, Node *n);
VisualDamageManager *__thiscall VisualDamageManager::`scalar deleting destructor'(VisualDamageManager *this, unsigned int a2);
char __thiscall std::vector<MaterialVar *>::_Buy(std::vector<TyreThermalPatch *> *this, unsigned int _Capacity);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bbbceb35afd77094959811095fb67b0c_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_bbbceb35afd77094959811095fb67b0c>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f8ff827a2ba47f6b6eb6c1a263ec6e6d_,0>,std::allocator<std::_Func_class<bool,Node *>>,bool,Node *>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_f8ff827a2ba47f6b6eb6c1a263ec6e6d>,0>,std::allocator<std::_Func_class<bool,Node *> >,bool,Node *> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_bbbceb35afd77094959811095fb67b0c_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_bbbceb35afd77094959811095fb67b0c>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e3ff8306fac25f806bae74fad5e2fa7b_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e3ff8306fac25f806bae74fad5e2fa7b>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, SVar **<_Args_0>, float *<_Args_1>);
char __thiscall std::_Func_impl<std::_Callable_obj<_lambda_f8ff827a2ba47f6b6eb6c1a263ec6e6d_,0>,std::allocator<std::_Func_class<bool,Node *>>,bool,Node *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_f8ff827a2ba47f6b6eb6c1a263ec6e6d>,0>,std::allocator<std::_Func_class<bool,Node *> >,bool,Node *> *this, Node **<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e3ff8306fac25f806bae74fad5e2fa7b_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e3ff8306fac25f806bae74fad5e2fa7b>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ee97dcae96e2f38d91e7cfb8a2fef3a7_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_ee97dcae96e2f38d91e7cfb8a2fef3a7>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
void __thiscall std::vector<VisualDamageManager::BreakablePart>::_Reallocate(std::vector<VisualDamageManager::BreakablePart> *this, unsigned int _Count);
void __thiscall std::vector<VisualDamageManager::GlassBreakablePart>::_Reallocate(std::vector<VisualDamageManager::GlassBreakablePart> *this, unsigned int _Count);
void __thiscall std::vector<VisualDamageManager::ScratchablePart>::_Reallocate(std::vector<DRSWingConnection> *this, unsigned int _Count);
void __thiscall std::vector<VisualDamageManager::BreakablePart>::_Reserve(std::vector<VisualDamageManager::BreakablePart> *this, unsigned int _Count);
void __thiscall std::vector<VisualDamageManager::GlassBreakablePart>::_Reserve(std::vector<VisualDamageManager::GlassBreakablePart> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_bbbceb35afd77094959811095fb67b0c_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_bbbceb35afd77094959811095fb67b0c>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e3ff8306fac25f806bae74fad5e2fa7b_,0>,std::allocator<std::_Func_class<void,SVar *,float>>,void,SVar *,float>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e3ff8306fac25f806bae74fad5e2fa7b>,0>,std::allocator<std::_Func_class<void,SVar *,float> >,void,SVar *,float> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ee97dcae96e2f38d91e7cfb8a2fef3a7_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ee97dcae96e2f38d91e7cfb8a2fef3a7>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_f8ff827a2ba47f6b6eb6c1a263ec6e6d_,0>,std::allocator<std::_Func_class<bool,Node *>>,bool,Node *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_f8ff827a2ba47f6b6eb6c1a263ec6e6d>,0>,std::allocator<std::_Func_class<bool,Node *> >,bool,Node *> *this);
void __cdecl collectAllMeshes(Node *aNode, std::vector<Mesh *> *meshes);
int __cdecl damageZoneFromString(const std::wstring *zonestring);
void __thiscall VisualDamageManager::initScratchableParts(VisualDamageManager *this, INIReader *ini);
void __thiscall std::vector<VisualDamageManager::BreakablePart>::push_back(std::vector<VisualDamageManager::BreakablePart> *this, const VisualDamageManager::BreakablePart *_Val);
void __thiscall std::vector<VisualDamageManager::ScratchablePart>::push_back(std::vector<VisualDamageManager::ScratchablePart> *this, const VisualDamageManager::ScratchablePart *_Val);
void __thiscall std::vector<VisualDamageManager::GlassBreakablePart>::resize(std::vector<VisualDamageManager::GlassBreakablePart> *this, unsigned int _Newsize);
void __thiscall VisualDamageManager::update(VisualDamageManager *this, float deltaT);
void __thiscall ViveManager::ViveManager(ViveManager *this, Sim *aSim, StereoCameraVive *aStereoCamera);
ViveManager *__thiscall ViveManager::`scalar deleting destructor'(ViveManager *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1031aa408336c756c37781a723b40cd3_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1031aa408336c756c37781a723b40cd3>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1031aa408336c756c37781a723b40cd3_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_1031aa408336c756c37781a723b40cd3>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1031aa408336c756c37781a723b40cd3_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1031aa408336c756c37781a723b40cd3>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
void __thiscall ViveManager::update(ViveManager *this, float dt);
void __cdecl std::_Uninit_def_fill_n<WarningReporter::WarningEvent *,unsigned int,std::allocator<WarningReporter::WarningEvent>,WarningReporter::WarningEvent>(WarningReporter::WarningEvent *_First, unsigned int _Count);
// void __userpurge WarningReporter::WarningReporter(WarningReporter *this@<ecx>, unsigned int a2@<ebx>, Sim *aSim);
void __thiscall WarningReporter::~WarningReporter(WarningReporter *this);
WarningReporter *__thiscall WarningReporter::`scalar deleting destructor'(WarningReporter *this, unsigned int a2);
void __thiscall WarningReporter::checkAverage(WarningReporter *this, WarningReporter::WarningStatistic *wa, float valueNow, float deltaT);
void __thiscall WarningReporter::checkProblems(WarningReporter *this, WarningReporter::WarningStatistic *ws, float valueNow, float deltaT);
void __thiscall std::vector<WarningReporter::WarningEvent>::resize(std::vector<WarningReporter::WarningEvent> *this, unsigned int _Newsize);
void __thiscall WarningReporter::shutdown(WarningReporter *this);
void __thiscall WarningReporter::update(WarningReporter *this, float deltaT);
void __thiscall WeatherManager::WeatherManager(WeatherManager *this, Sim *a_sim);
WeatherManager *__thiscall WeatherManager::`scalar deleting destructor'(WeatherManager *this, unsigned int a2);
void __thiscall WeatherManager::applyCustomWeather(WeatherManager *this, const std::wstring *name);
// void __userpurge WrongWayIndicator::WrongWayIndicator(WrongWayIndicator *this@<ecx>, unsigned int a2@<ebx>, CarAvatar *car);
void __thiscall WrongWayIndicator::~WrongWayIndicator(WrongWayIndicator *this);
WrongWayIndicator *__thiscall WrongWayIndicator::`scalar deleting destructor'(WrongWayIndicator *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_15bee7ef677e544a22a0e0a0d49966b5_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_15bee7ef677e544a22a0e0a0d49966b5>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_15bee7ef677e544a22a0e0a0d49966b5_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_15bee7ef677e544a22a0e0a0d49966b5>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this, const OnReplayStatusChanged *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_15bee7ef677e544a22a0e0a0d49966b5_,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &>>,void,OnReplayStatusChanged const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_15bee7ef677e544a22a0e0a0d49966b5>,0>,std::allocator<std::_Func_class<void,OnReplayStatusChanged const &> >,void,OnReplayStatusChanged const &> *this);
void __thiscall WrongWayIndicator::renderHUD(WrongWayIndicator *this, float deltaT);
void __thiscall WrongWayIndicator::resetMeterCounter(WrongWayIndicator *this);
void __thiscall WrongWayIndicator::update(WrongWayIndicator *this, float deltaT);
void __thiscall JoypadCarControl::JoypadCarControl(JoypadCarControl *this, Car *physicsCar, Joypad *joypad);
void __thiscall SecondaryJoypadButton::SecondaryJoypadButton(SecondaryJoypadButton *this, const JoypadButton button, int keyboardButton, bool keyboardInputAllowed);
JoypadButton *__thiscall std::map<std::wstring,enum JoypadButton>::operator[](std::map<std::wstring,enum JoypadButton> *this, std::wstring *_Keyval);
JoypadCarControl *__thiscall JoypadCarControl::`scalar deleting destructor'(JoypadCarControl *this, unsigned int a2);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,CommandItem,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,CommandItem>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<std::wstring,TyreCompoundStrategy,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TyreCompoundStrategy> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,TyreCompoundStrategy>,void *> *_Newnode);
void __thiscall JoypadCarControl::acquireControls(JoypadCarControl *this, CarControls *controls, float dt, CarControlsInput *input);
bool __thiscall JoypadCarControl::getAction(JoypadCarControl *this, DriverActions anAction);
double __thiscall JoypadCarControl::getAxisValue(JoypadCarControl *this, float raw, float gamma, float deadZone);
double __thiscall KeyboardCarControl::getFFGlobalGain(TyreTester *this);
const char *__thiscall JoypadCarControl::getName(JoypadCarControl *this);
bool __thiscall SecondaryJoypadButton::isPressed(SecondaryJoypadButton *this, unsigned int state, bool keyboardEnabled);
void __thiscall JoypadCarControl::sendFF(JoypadCarControl *this, float ff, float damper, float userGain);
void __thiscall JoypadCarControl::setVibrations(JoypadCarControl *this, const VibrationDef *vibrations);
HMODULE __cdecl OVR_FindLibraryPath(int requestedProductVersion, int requestedMajorVersion, unsigned __int16 *libraryPath, unsigned int libraryPathCapacity);
int __cdecl OVR_LoadSharedLibrary(int requestedProductVersion, int requestedMajorVersion);
HMODULE __cdecl OVR_OpenLibrary(const wchar_t *libraryPath);
HMODULE OVR_UnloadSharedLibrary();
int __cdecl OVR_Win32_SignCheck(unsigned __int16 *fullPath);
int __cdecl ValidateCertificateContents(CertificateEntry_t *chain, _CRYPT_PROVIDER_SGNR *cps);
int __cdecl ovr_CommitTextureSwapChain(struct ovrHmdStruct *session, struct ovrTextureSwapChainData *chain);
int __cdecl ovr_Create(struct ovrHmdStruct **pSession, ovrGraphicsLuid_ *pLuid);
int __cdecl ovr_CreateTextureSwapChainDX(struct ovrHmdStruct *session, IUnknown *d3dPtr, const ovrTextureSwapChainDesc *desc, struct ovrTextureSwapChainData **outTextureSet);
int __cdecl ovr_GetAudioDeviceOutGuidStr(unsigned __int16 *deviceOutStrBuffer);
int __cdecl ovr_GetAudioDeviceOutWaveId(unsigned int *deviceOutId);
ovrSizei_ __cdecl ovr_GetFovTextureSize(struct ovrHmdStruct *session, ovrEyeType_ eye, ovrFovPort_ fov, float pixelsPerDisplayPixel);
ovrHmdDesc_ *__cdecl ovr_GetHmdDesc(ovrHmdDesc_ *result, struct ovrHmdStruct *session);
long double __cdecl ovr_GetPredictedDisplayTime(struct ovrHmdStruct *session, __int64 frameIndex);
ovrEyeRenderDesc_ *__cdecl ovr_GetRenderDesc(ovrEyeRenderDesc_ *result, struct ovrHmdStruct *session, ovrEyeType_ eyeType, ovrFovPort_ fov);
int __cdecl ovr_GetSessionStatus(struct ovrHmdStruct *session, ovrSessionStatus_ *sessionStatus);
int __cdecl ovr_GetTextureSwapChainBufferDX(struct ovrHmdStruct *session, struct ovrTextureSwapChainData *chain, int index, _GUID iid, void **ppObject);
int __cdecl ovr_GetTextureSwapChainCurrentIndex(struct ovrHmdStruct *session, struct ovrTextureSwapChainData *chain, int *currentIndex);
int __cdecl ovr_GetTextureSwapChainLength(struct ovrHmdStruct *session, struct ovrTextureSwapChainData *chain, int *length);
double ovr_GetTimeInSeconds(void); // weak
ovrTrackingState_ *__cdecl ovr_GetTrackingState(ovrTrackingState_ *result);
// int __usercall ovr_Initialize@<eax>(int a1@<ebp>, const ovrInitParams_ *inputParams);
int __cdecl ovr_RecenterTrackingOrigin(struct ovrHmdStruct *session);
HMODULE ovr_Shutdown();
int __cdecl ovr_SubmitFrame(struct ovrHmdStruct *session, __int64 frameIndex, const ovrViewScaleDesc_ *viewScaleDesc, const ovrLayerHeader_ *const *layerPtrList, unsigned int layerCount);
int swprintf(unsigned __int16 *_String, unsigned int _Count, const wchar_t *_Format, ...);
IFSDevice *__cdecl FSDeviceEnumerator::EnumerateInstance(int InstanceIndex);
ULONGLONG __cdecl FWUtil::Common::GetTickCount();
void FWUtil::Common::TraceHeaderShow();
void FWUtil::Common::TraceMessage(unsigned int Level, const char *pszFormat, ...);
int swprintf_0(wchar_t *_String, unsigned int _Count, const wchar_t *_Format, ...);
void __thiscall FWDeviceEnumeratorImpl::FWDeviceEnumeratorImpl(FWDeviceEnumeratorImpl *this);
void __thiscall FWDeviceEnumeratorImpl::~FWDeviceEnumeratorImpl(FWDeviceEnumeratorImpl *this);
char __cdecl FWDeviceEnumeratorImpl::GetInstance(FWDeviceEnumeratorImpl *this, int InstanceID, IFSDevice **ppDevice);
char __thiscall FWDeviceEnumeratorImpl::_GetInstance(FWDeviceEnumeratorImpl *this, int InstanceID, std::wstring *SymbolicLink, IFSDevice **ppDevice);
char __thiscall FWDeviceEnumeratorImpl::_isFanatecDevice(FWDeviceEnumeratorImpl *this, std::wstring hardwareId, bool *bIsWheel);
_FS_WHEEL_RIMTYPE __cdecl FWUtil::Windows::FilterToSdkRimTypeTranslate(unsigned int RimType);
_FS_WHEELTYPE __cdecl FWUtil::Windows::FilterToSdkWheelTypeTranslate(unsigned int WheelType);
char __cdecl FWUtil::Windows::RegistrySettingGet(std::wstring SubKey, std::wstring ValueName, int *dwSetting);
unsigned int __cdecl FWUtil::Windows::RetrieveRegistryDebugLevel();
// void __stdcall HidD_GetHidGuid(LPGUID HidGuid);
void __thiscall DSWinSetupApiDeviceInfoSet::DSWinSetupApiDeviceInfoSet(DSWinSetupApiDeviceInfoSet *this);
void __thiscall DSWinSetupApiDeviceInfoSet::Destroy(DSWinSetupApiDeviceInfoSet *this);
char __thiscall DSWinSetupApiDeviceInfoSet::EnumDevice(DSWinSetupApiDeviceInfoSet *this, unsigned int Instance, std::wstring *hardwareIdOut);
char __thiscall DSWinSetupApiDeviceInfoSet::EnumInterface(DSWinSetupApiDeviceInfoSet *this, unsigned int Instance, std::wstring *symbolicLinkOut);
char __thiscall DSWinSetupApiDeviceInfoSet::Initialize(DSWinSetupApiDeviceInfoSet *this, _GUID *pGuidSetupClass, const wchar_t *BusEnumerator, unsigned int Flags);
int __cdecl FWUtil::Device::GetCountRumbleMotor(unsigned __int16 pid);
int __cdecl FWUtil::Device::GetCountWheelBaseRevLeds(_FS_WHEELTYPE wheelType);
char __cdecl FWUtil::Device::GetDeviceCapsByPID(unsigned __int16 pid, _FS_DEVICE_CAPS *pDevCapsOut);
char __cdecl FWUtil::Device::GetDeviceNameByPID(unsigned __int16 pid, wchar_t *lpDeviceNameOut);
unsigned __int16 __cdecl FWUtil::Device::GetDevicePIDBySymbolicLinkName(wchar_t *m_HidSymbolicLink);
char __cdecl FWUtil::Device::GetDeviceTypeByPID(unsigned __int16 pid, _FS_DEVICE_TYPE *pDevTypeOut);
int __cdecl FWUtil::Device::GetPedalTypeByPID(unsigned __int16 pid);
_FS_PEDALSTYPE __cdecl FWUtil::Device::GetPedalTypeBySystemConfig(int SystemConfig);
void __thiscall FWDeviceWheel::FWDeviceWheel(FWDeviceWheel *this, wchar_t *szSymbolicLinkName, _FS_DEVICE_TYPE ProductId);
FWDeviceWheel *__thiscall FWDeviceWheel::`vector deleting destructor'(FWDeviceWheel *this, unsigned int a2);
bool __cdecl FWDeviceWheel::GetDeviceInfo(FWDeviceWheel *this, _FS_DEVICE_INFO *pDevInfo);
void __thiscall FWDeviceWheel::HostHelloMessageSend(FWDeviceWheel *this, unsigned __int16 usHostId);
void __thiscall FWDeviceAddOn::FWDeviceAddOn(FWDeviceAddOn *this, wchar_t *szSymbolicLinkName, unsigned __int16 ProductId);
FWDeviceAddOn *__thiscall FWDeviceAddOn::`scalar deleting destructor'(FWDeviceAddOn *this, unsigned int a2);
char __thiscall FWDeviceAddOn::FirmwareVersionGet(FWDeviceAddOn *this, _FS_DEVICE_TYPE deviceType, unsigned int *ulMajor, unsigned int *ulMinor);
bool __cdecl FWDeviceAddOn::GetDeviceInfo(FWDeviceAddOn *this, _FS_DEVICE_INFO *pDevInfo);
bool __thiscall FWDeviceAddOn::UsbShifterStateGet(FWDeviceAddOn *this, _FS_SHIFTERSTATE *shifterState);
void __thiscall FWDeviceBaseCommon::FWDeviceBaseCommon(FWDeviceBaseCommon *this, wchar_t *szSymbolicLinkName, int hControllerPort, int userIdPs4, unsigned __int16 ProductId);
void __thiscall FWDeviceBaseCommon::~FWDeviceBaseCommon(FWDeviceBaseCommon *this);
FWDeviceBaseCommon *__thiscall FWDeviceBaseCommon::`scalar deleting destructor'(FWDeviceBaseCommon *this, unsigned int a2);
void __thiscall FWDeviceBaseCommon::AddRef(FWDeviceBaseCommon *this);
unsigned int __thiscall FWDeviceBaseCommon::FFBDeviceGainGet(FWDeviceBaseCommon *this);
void __thiscall FWDeviceBaseCommon::FFBDeviceGainSet(FWDeviceBaseCommon *this, unsigned int dwDeviceGain);
bool __cdecl FWDeviceBaseCommon::GetDeviceCaps(FWDeviceBaseCommon *this, _FS_DEVICE_CAPS *pDevCaps);
unsigned __int16 __thiscall FWDeviceBaseCommon::ProductIdGet(FWDeviceBaseCommon *this);
int __cdecl FWDeviceBaseCommon::QueryInterface(FWDeviceBaseCommon *this, _FS_INTERFACETYPE InterfaceType, void **ppInterfaceOut);
void __thiscall FWDeviceBaseCommon::Release(FWDeviceBaseCommon *this);
void __thiscall FWCriticalSection::Delete(FWCriticalSection *this);
void __thiscall FWCriticalSection::Initialize(FWCriticalSection *this);
void __thiscall FWCriticalSection::Lock(FWCriticalSection *this);
void __thiscall FWCriticalSection::Unlock(FWCriticalSection *this);
void __thiscall FWFFB::FWFFB(FWFFB *this, FWDeviceBaseCommon *pDevice);
void __thiscall FWFFB::~FWFFB(FWFFB *this);
std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *__thiscall std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>::operator+(std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *this, std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *result, int _Off);
FWFFB *__thiscall FWFFB::`scalar deleting destructor'(FWFFB *this, unsigned int a2);
void __cdecl FWFFB::Destroy(FWFFB *this);
int __cdecl FWFFB::DestroyEffect(FWFFB *this, unsigned int dwEffectHandle);
int __cdecl FWFFB::DownloadEffect(FWFFB *this, _FS_FFB_EFFECT_ID EffectId, unsigned int *pdwEffectHandle, _FS_FFB_EFFECT *pFFBEffect, unsigned int Flags);
int __cdecl FWFFB::GetEffectStatus(FWFFB *this, unsigned int dwEffectHandle, unsigned int *pdwStatus);
int __cdecl FWFFB::GetForceFeedbackState(FWFFB *this, unsigned int *pdwState);
FWFFBEffectBase *__thiscall FWFFB::PrivateEffectAllocateCreate(FWFFB *this, _FS_FFB_EFFECT_ID EffectId, unsigned int dwEffectHandle, unsigned int dwLayer);
unsigned int __thiscall FWFFB::PrivateGenerateRTHandle(FWFFB *this);
int __thiscall FWFFB::PrivateGetAvailableLayer(FWFFB *this);
void __thiscall FWFFB::PrivateReset(FWFFB *this);
void __thiscall FWFFB::PrivateStopAllEffects(FWFFB *this);
bool __thiscall FWFFB::PrivateValidateEffectParams(FWFFB *this, _FS_FFB_EFFECT_ID EffectId, _FS_FFB_EFFECT *pFFBEffect);
int __cdecl FWFFB::SendForceFeedbackCommand(FWFFB *this, unsigned int dwCommand);
int __cdecl FWFFB::SetGain(FWFFB *this, unsigned int dwGain);
int __cdecl FWFFB::StartEffect(FWFFB *this, unsigned int dwEffectHandle, unsigned int dwMode, unsigned int dwCount);
int __cdecl FWFFB::StopEffect(FWFFB *this, unsigned int dwEffectHandle);
void __thiscall std::deque<FWFFBEffectBase *>::_Growmap(std::deque<FWFFBEffectBase *> *this, unsigned int _Count);
std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *__thiscall std::deque<FWFFBEffectBase *>::end(std::deque<FWFFBEffectBase *> *this, std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *result);
void __thiscall FSCmdRumbleMotorsWheel::FSCmdRumbleMotorsWheel(FSCmdRumbleMotorsWheel *this, FWDeviceBaseCommon *pDeviceBase);
FSCmdRumbleMotorsWheel *__thiscall FSCmdRumbleMotorsWheel::`vector deleting destructor'(FSCmdRumbleMotorsWheel *this, unsigned int a2);
void __thiscall FSCmdRumbleMotorsPedals::FSCmdRumbleMotorsPedals(FSCmdRumbleMotorsPedals *this, FWDeviceBaseCommon *pDeviceBase);
FSCmdRumbleMotorsPedals *__thiscall FSCmdRumbleMotorsPedals::`vector deleting destructor'(FSCmdRumbleMotorsPedals *this, unsigned int a2);
void __thiscall FSCmdLedRevsWheelRim::FSCmdLedRevsWheelRim(FSCmdLedRevsWheelRim *this, FWDeviceBaseCommon *pDeviceBase, _FS_WHEEL_RIMTYPE rimType);
FSCmdLedRevsWheelRim *__thiscall FSCmdLedRevsWheelRim::`vector deleting destructor'(FSCmdLedRevsWheelRim *this, unsigned int a2);
void __thiscall FSCmdLedRevsWheelBase::FSCmdLedRevsWheelBase(FSCmdLedRevsWheelBase *this, FWDeviceBaseCommon *pDeviceBase, _FS_WHEELTYPE wheelType);
FSCmdLedRevsWheelBase *__thiscall FSCmdLedRevsWheelBase::`vector deleting destructor'(FSCmdLedRevsWheelBase *this, unsigned int a2);
_COMPONENT_LED *__cdecl std::_Uninit_move<_COMPONENT_LED *,_COMPONENT_LED *,std::allocator<_COMPONENT_LED>,_COMPONENT_LED>(_COMPONENT_LED *_First, _COMPONENT_LED *_Last, _COMPONENT_LED *_Dest);
void __thiscall FWCmdLedSevenSegmentDisplayThreeDigits::FWCmdLedSevenSegmentDisplayThreeDigits(FWCmdLedSevenSegmentDisplayThreeDigits *this, FWDeviceBaseCommon *pDeviceBase);
void __thiscall FWCmdLedSevenSegmentDisplayThreeDigits::~FWCmdLedSevenSegmentDisplayThreeDigits(FWCmdLedSevenSegmentDisplayThreeDigits *this);
void __thiscall _COMMAND_LED::~_COMMAND_LED(_COMMAND_LED *this);
FWCmdLedSevenSegmentDisplayThreeDigits *__thiscall FWCmdLedSevenSegmentDisplayThreeDigits::`scalar deleting destructor'(FWCmdLedSevenSegmentDisplayThreeDigits *this, unsigned int a2);
void __cdecl FWCmdLedSevenSegmentDisplayThreeDigits::Destroy(FWCmdLedSevenSegmentDisplayThreeDigits *this);
char __cdecl FWCmdLedSevenSegmentDisplayThreeDigits::DigitSetOff(FWCmdLedSevenSegmentDisplayThreeDigits *this, int SevenSegmentDisplayIndex);
bool __cdecl FWCmdLedSevenSegmentDisplayThreeDigits::DigitSetOn(FWCmdLedSevenSegmentDisplayThreeDigits *this, int SevenSegmentDisplayIndex, int numeric, bool ShowDecimal);
char __cdecl FWCmdLedSevenSegmentDisplayThreeDigits::DigitSetOn(FWCmdLedSevenSegmentDisplayThreeDigits *this, int SevenSegmentDisplayIndex, bool setSegT, bool setSegUR, bool setSegLR, bool setSegB, bool setSegLL, bool setSegUL, bool setSegM, bool showDot);
bool __cdecl FWCmdLedSevenSegmentDisplayThreeDigits::InternalSendCmdLedSevenSegment3digitMapValues(FWCmdLedSevenSegmentDisplayThreeDigits *this);
char __cdecl FWCmdLedSevenSegmentDisplayThreeDigits::InternalSendCmdLeds(FWCmdLedSevenSegmentDisplayThreeDigits *this);
bool __cdecl FWCmdLedSevenSegmentDisplayThreeDigits::ItemSetOff(FWCmdLedSevenSegmentDisplayThreeDigits *this, int ItemIndex);
bool __cdecl FWCmdLedSevenSegmentDisplayThreeDigits::ItemSetOn(FWCmdLedSevenSegmentDisplayThreeDigits *this, int ItemIndex);
char __cdecl FWCmdLedSevenSegmentDisplayThreeDigits::SetNumber(FWCmdLedSevenSegmentDisplayThreeDigits *this, int Max3digit);
char __cdecl FWCmdLedSevenSegmentDisplayThreeDigits::SubmitToDevice(FWCmdLedSevenSegmentDisplayThreeDigits *this);
void __thiscall std::vector<_COMPONENT_LED>::_Reallocate(std::vector<_COMPONENT_LED> *this, unsigned int _Count);
void __thiscall std::vector<_COMPONENT_LED>::_Reserve(std::vector<_COMPONENT_LED> *this, unsigned int _Count);
void __thiscall FWCmdLedRingOfLight::FWCmdLedRingOfLight(FWCmdLedRingOfLight *this, FWDeviceBaseCommon *pDeviceBase);
void __thiscall FWCmdLedRingOfLight::~FWCmdLedRingOfLight(FWCmdLedRingOfLight *this);
FWCmdLedRingOfLight *__thiscall FWCmdLedRingOfLight::`scalar deleting destructor'(FWCmdLedRingOfLight *this, unsigned int a2);
void __cdecl FWCmdLedRingOfLight::Destroy(FWCmdLedRingOfLight *this);
int __cdecl FWCmdLedRingOfLight::GetItemCount(FWCmdLedSevenSegmentDisplayThreeDigits *this);
char __cdecl FWCmdLedRingOfLight::InternalSendCmdLedColorChange(FWCmdLedRingOfLight *this);
bool __cdecl FWCmdLedRingOfLight::ItemSetColor(FWCmdLedRingOfLight *this, int LedIndex, int RedPercentage, int GreenPercentage, int BluePercentage);
bool __cdecl FWCmdLedRingOfLight::ItemSetOff(FWCmdLedRingOfLight *this, int ItemIndex);
bool __cdecl FWCmdLedRingOfLight::ItemSetOn(FWCmdLedRingOfLight *this, int ItemIndex);
char __cdecl FWCmdLedRingOfLight::SubmitToDevice(FWCmdLedRingOfLight *this);
void __thiscall FSCmnCmdWheel::FSCmnCmdWheel(FSCmnCmdWheel *this, FWDeviceBaseCommon *pDeviceBase);
FSCmnCmdWheel *__thiscall FSCmnCmdWheel::`scalar deleting destructor'(FSCmnCmdWheel *this, unsigned int a2);
void __cdecl FSCmnCmdWheel::Destroy(FSCmnCmdWheel *this);
bool __cdecl FSCmnCmdWheel::IsAutocenter(FSCmnCmdWheel *this);
char __cdecl FSCmnCmdWheel::SetAutocenter(FSCmnCmdWheel *this, BOOL on);
bool __cdecl FSCmnCmdWheel::SetWheelAngle(FSCmnCmdWheel *this, int value);
void __thiscall FSWinCmdUsbHid::FSWinCmdUsbHid(FSWinCmdUsbHid *this, FWDeviceBaseCommon *pDeviceBase, wchar_t *szSymbolicLinkName);
void __thiscall FSWinCmdUsbHid::~FSWinCmdUsbHid(FSWinCmdUsbHid *this);
FSWinCmdUsbHid *__thiscall FSWinCmdUsbHid::`scalar deleting destructor'(FSWinCmdUsbHid *this, unsigned int a2);
void __thiscall FSWinCmdUsbHid::Close(FSWinCmdUsbHid *this);
char __thiscall FSWinCmdUsbHid::HidSendCommand(FSWinCmdUsbHid *this, void *Buffer);
bool __thiscall FSWinCmdUsbHid::Open(FSWinCmdUsbHid *this);
int __thiscall FSWinCmdUsbHid::PlatformSpecificInterfaceGet(FSWinCmdUsbHid *this, _FS_INTERFACETYPE InterfaceType, void **ppInterfaceOut);
bool __thiscall FSWinCmdUsbHid::Read(FSWinCmdUsbHid *this, void *Buffer, unsigned int nBytesToRead, unsigned int *cbRead, void *Async);
bool __thiscall FSWinCmdUsbHid::Write(FSWinCmdUsbHid *this, void *Buffer, unsigned int nBytesToWrite, unsigned int *cbWritten, void *Async);
void __thiscall FSWinCmdWheelConfig::FSWinCmdWheelConfig(FSWinCmdWheelConfig *this, FWDeviceBaseCommon *pDeviceBase);
FSWinCmdWheelConfig *__thiscall FSWinCmdWheelConfig::`vector deleting destructor'(FSWinCmdWheelConfig *this, unsigned int a2);
void __thiscall FSWinCmdWheelConfig::Destroy(FSWinCmdWheelConfig *this);
bool __thiscall FSWinCmdWheelConfig::PrivateControlDeviceObjectSet(FSWinCmdWheelConfig *this, bool bAcquire);
bool __thiscall FSWinCmdWheelConfig::PrivateGetRegistryHardwareKeyName(FSWinCmdWheelConfig *this);
_FS_WHEEL_RIMTYPE __thiscall FSWinCmdWheelConfig::RimTypeGet(FSWinCmdWheelConfig *this, _FS_WHEELTYPE WheelType);
bool __thiscall FSWinCmdWheelConfig::SettingAutoCenterGet(FSWinCmdWheelConfig *this);
char __thiscall FSWinCmdWheelConfig::SettingAutoCenterSet(Engine *this, const char *carModel);
int __thiscall FSWinCmdWheelConfig::SettingWheelRotationPreviousGet(FSWinCmdWheelConfig *this);
bool __thiscall FSWinCmdWheelConfig::SettingsGet(FSWinCmdWheelConfig *this, _FS_WHEELTYPE *WheelType, int *FirmwareVersion, int *SystemConfig);
bool __cdecl FWUtil::Effect::GetFFBHidReportConstant(_FS_HID_COMMAND *pCommandOut, bool bStart, unsigned int dwLayer, int lMagnitude);
bool __cdecl FWUtil::Effect::GetFFBHidReportDamper(_FS_HID_COMMAND *pCommandOut, bool bStart, unsigned int dwLayer, int lPosCoefficient, int lNegCoefficient, unsigned int dwSaturation);
bool __cdecl FWUtil::Effect::GetFFBHidReportSpring(_FS_HID_COMMAND *pCommandOut, bool bStart, unsigned int dwLayer, int lDifference, int lSum, int lPosCoefficient, int lNegCoefficient, unsigned int dwSaturation);
bool __cdecl FWUtil::Effect::IsFirmwareEffect(unsigned int EffectId);
void __thiscall FWThreadBase::FWThreadBase(FWThreadBase *this);
void __thiscall FWThreadBase::~FWThreadBase(FWThreadBase *this);
FWThreadBase *__thiscall FWThreadBase::`scalar deleting destructor'(FWThreadBase *this, unsigned int a2);
bool __thiscall FWThreadBase::IsRunning(FWThreadBase *this);
char __thiscall FWThreadBase::Start(FWThreadBase *this);
char __thiscall FWThreadBase::Wait(FWThreadBase *this);
unsigned int __stdcall FWThreadBase::pfnThreadFunction(void *lpvParam);
void __thiscall FWThreadFFBCommand::FWThreadFFBCommand(FWThreadFFBCommand *this, FWDeviceBaseCommon *pDevice, FWFFBListEffects *pListEffects);
void __thiscall FWThreadFFBCommand::~FWThreadFFBCommand(FWThreadFFBCommand *this);
FWThreadFFBCommand *__thiscall FWThreadFFBCommand::`scalar deleting destructor'(FWThreadFFBCommand *this, unsigned int a2);
void __thiscall FWThreadFFBCommand::DestroyEffectEventSet(FWThreadFFBCommand *this);
void __thiscall FWThreadFFBCommand::PrivateCalculateAndSend(FWThreadFFBCommand *this, unsigned int dwCurrentDeviceGain, bool *pAllEffectsStopped);
void __thiscall FWThreadFFBCommand::PrivateDestroyEffects(FWThreadFFBCommand *this);
char __thiscall FWThreadFFBCommand::PrivateIsHWHidCommandRepeated(FWThreadFFBCommand *this, _FS_HID_COMMAND *pCurrentHidCommand, _FS_HID_COMMAND *pPreviousHidCommand);
char __thiscall FWThreadFFBCommand::PrivateIsSWHidCommandRepeated(FWThreadFFBCommand *this, _FS_HID_COMMAND *pCurrentHidCommand, _FS_HID_COMMAND *pPreviousHidCommand);
void __thiscall FWThreadFFBCommand::PrivateTryResetEffects(FWThreadFFBCommand *this);
void __thiscall FWThreadFFBCommand::Run(FWThreadFFBCommand *this);
void __thiscall FWThreadFFBCommand::SetGainEventSet(FWThreadFFBCommand *this);
void __thiscall FWThreadFFBCommand::SetResetFlag(FWThreadFFBCommand *this, bool bIsReset);
char __thiscall FWThreadFFBCommand::Start(FWThreadFFBCommand *this);
void __thiscall FWThreadFFBCommand::StartEffectEventSet(FWThreadFFBCommand *this);
void __thiscall FWThreadFFBCommand::WaitStop(FWThreadFFBCommand *this);
char __thiscall FWThreadFFBCommand::WaitStopSendingEvent(FWThreadFFBCommand *this, unsigned int WaitTimeOutUs);
void __thiscall FWFFBEffectBase::FWFFBEffectBase(FWFFBEffectBase *this, unsigned int dwEffectHandle, unsigned int dwLayer);
void __thiscall FWFFBEffectBase::~FWFFBEffectBase(FWFFBEffectBase *this);
FWFFBEffectBase *__thiscall FWFFBEffectBase::`vector deleting destructor'(FWFFBEffectBase *this, unsigned int a2);
int __thiscall FWFFBEffectBase::ApplyFade(FWFFBEffectBase *this, unsigned int dwFadePos, unsigned int dwFadeTime, unsigned int dwRawFadeLevel, int lRawMagnitude);
bool __thiscall FWFFBEffectBase::CurrentForceValuesGet(FWFFBEffectBase *this, int *plMagnitudeOut, int *plDirectionOut, int *plSumOut, int *plDifferenceOut, int *plPosCoefficient, int *plNegCoefficient, unsigned int *pdwSaturationOut, unsigned int dwOverAllDeviceGain);
bool __thiscall TyreTester::rayCastWithRayCaster(TyreTester *this, const vec3f *org, const vec3f *dir, RayCastResult *result, float length, IRayCaster *rayCaster);
bool __thiscall FWFFBEffectBase::CurrentForceValuesSWGet(FWFFBEffectBase *this, int *plMagnitudeOut, int *plDirectionOut);
void __thiscall FWFFBEffectBase::Destroy(FWFFBEffectBase *this);
bool __thiscall FWFFBEffectBase::InitOrUpdate(FWFFBEffectBase *this, _FS_FFB_EFFECT *pFFBEffect, unsigned int Flags);
char __thiscall FWFFBEffectBase::Start(FWFFBEffectBase *this, unsigned int Count);
_FS_EFFECT_STATUS __thiscall FWFFBEffectBase::StatusGet(FWFFBEffectBase *this);
void __thiscall FWFFBEffectBase::Stop(FWFFBEffectBase *this);
int __thiscall FWFFBEffectBase::UpdateAndGetStatus(FWFFBEffectBase *this, __int64 llCurrentTime);
std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *__cdecl std::_Copy_impl<std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>,std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>>(std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *result, std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _First, std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Last, std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Dest);
std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *__cdecl std::_Move<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>>(std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *result, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _First, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Last, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Dest);
std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *__cdecl std::_Move<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>>(std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *result, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _First, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Last, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Dest);
std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *__cdecl std::_Move_backward<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>>(std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *result, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _First, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Last, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Dest);
std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *__cdecl std::_Move_backward<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>>(std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *result, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _First, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Last, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Dest);
void __cdecl std::_Reverse<std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>>(std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _First, std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Last);
void __cdecl std::_Rotate<std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>,int,FWFFBEffectBase *>(std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _First, std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Mid, std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Last);
std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *__cdecl std::copy<std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>>(std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *result, std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _First, std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Last, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Dest);
std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *__thiscall std::deque<FWFFBEffectBase *>::insert<std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>>(std::deque<FWFFBEffectBase *> *this, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *result, std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Where, std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _First, std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Last);
std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *__cdecl std::rotate<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *>>>>(std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *result, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _First, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Mid, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Last);
void __thiscall FWFFBListEffects::FWFFBListEffects(FWFFBListEffects *this);
void __thiscall FWFFBListEffects::~FWFFBListEffects(FWFFBListEffects *this);
std::deque<FWFFBEffectBase *> *__thiscall std::deque<FWFFBEffectBase *>::operator=(std::deque<FWFFBEffectBase *> *this, const std::deque<FWFFBEffectBase *> *_Right);
std::_Container_proxy *__thiscall FWFFBListEffects::EntryFindByHandle(FWFFBListEffects *this, unsigned int dwEffectHandle, bool bRemove);
bool __thiscall FWFFBListEffects::EntryInsert(FWFFBListEffects *this, FWFFBEffectBase *pEffect);
char __thiscall FWFFBListEffects::IsAllEffectsStopped(FWFFBListEffects *this);
std::deque<FWFFBEffectBase *> *__thiscall FWFFBListEffects::ListCopy(FWFFBListEffects *this, std::deque<FWFFBEffectBase *> *result);
void __thiscall FWFFBListEffects::PrivateClearList(FWFFBListEffects *this);
unsigned int __thiscall FWFFBListEffects::SizeGet(FWFFBListEffects *this);
void __thiscall FWFFBListEffects::StopAll(FWFFBListEffects *this);
std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *__thiscall std::deque<FWFFBEffectBase *>::_Make_iter(std::deque<FWFFBEffectBase *> *this, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *result, std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Where);
std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *__thiscall std::deque<FWFFBEffectBase *>::erase(std::deque<FWFFBEffectBase *> *this, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *result, std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _First_arg, std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Last_arg);
std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *__thiscall std::deque<FWFFBEffectBase *>::erase(std::deque<FWFFBEffectBase *> *this, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > *result, std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<FWFFBEffectBase *> > > _Where);
void __thiscall std::deque<FWFFBEffectBase *>::push_back(std::deque<FWFFBEffectBase *> *this, FWFFBEffectBase *const *_Val);
void __thiscall std::deque<FWFFBEffectBase *>::push_front(std::deque<FWFFBEffectBase *> *this, FWFFBEffectBase *const *_Val);
void __thiscall FWCmdFFBEffectConstant::FWCmdFFBEffectConstant(FWCmdFFBEffectConstant *this, unsigned int dwEffectHandle, unsigned int dwLayer);
FWCmdFFBEffectConstant *__thiscall FWCmdFFBEffectConstant::`vector deleting destructor'(FWCmdFFBEffectConstant *this, unsigned int a2);
bool __thiscall FWCmdFFBEffectConstant::CurrentForceValuesSWGet(FWCmdFFBEffectConstant *this, int *plMagnitudeOut, int *plDirectionOut);
void __thiscall FWCmdFFBEffectConstant::UpdateForceValues(FWCmdFFBEffectConstant *this, unsigned int dwCurrPosTime);
void __thiscall FWCmdFFBEffectConstant::UpdateParams(FWCmdFFBEffectConstant *this, void *pTypeSpecificParams);
void __thiscall FWCmdFFBEffectRamp::FWCmdFFBEffectRamp(FWCmdFFBEffectRamp *this, unsigned int dwEffectHandle, unsigned int dwLayer);
FWCmdFFBEffectRamp *__thiscall FWCmdFFBEffectRamp::`vector deleting destructor'(FWCmdFFBEffectRamp *this, unsigned int a2);
bool __thiscall FWCmdFFBEffectRamp::CurrentForceValuesSWGet(FWCmdFFBEffectRamp *this, int *plMagnitudeOut, int *plDirectionOut);
void __thiscall FWCmdFFBEffectRamp::UpdateForceValues(FWCmdFFBEffectRamp *this, unsigned int dwCurrPosTime);
void __thiscall FWCmdFFBEffectRamp::UpdateParams(FWCmdFFBEffectRamp *this, void *pTypeSpecificParams);
void __thiscall FWCmdFFBEffectPositionSpring::FWCmdFFBEffectPositionSpring(FWCmdFFBEffectPositionSpring *this, unsigned int dwEffectHandle, unsigned int dwLayer);
FWCmdFFBEffectPositionSpring *__thiscall FWCmdFFBEffectPositionSpring::`vector deleting destructor'(FWCmdFFBEffectPositionSpring *this, unsigned int a2);
void __thiscall FWCmdFFBEffectPositionSpring::CalculatePosition(FWCmdFFBEffectPositionSpring *this, int lOffset, int lDeadBand, int *lDifference, int *lSum, int *PositiveCoefficient, int *NegativeCoefficient, unsigned int *PositiveSaturation, unsigned int dwDamperStrength);
void __thiscall FWCmdFFBEffectPositionDamper::FWCmdFFBEffectPositionDamper(FWCmdFFBEffectPositionDamper *this, unsigned int dwEffectHandle, unsigned int dwLayer);
FWCmdFFBEffectPositionDamper *__thiscall FWCmdFFBEffectPositionDamper::`scalar deleting destructor'(FWCmdFFBEffectPositionDamper *this, unsigned int a2);
void __thiscall FWCmdFFBEffectPositionDamper::CalculatePosition(FWCmdFFBEffectPositionDamper *this, int lOffset, int lDeadBand, int *lDifference, int *lSum, int *PositiveCoefficient, int *NegativeCoefficient, unsigned int *PositiveSaturation, unsigned int dwDamperStrength);
int __thiscall FWCmdFFBEffectPositionDamper::EffectIdGet(FWCmdFFBEffectPositionDamper *this);
void __thiscall FWCmdFFBEffectPeriodicSawtoothDown::FWCmdFFBEffectPeriodicSawtoothDown(FWCmdFFBEffectPeriodicSawtoothDown *this, unsigned int dwEffectHandle, unsigned int dwLayer);
FWCmdFFBEffectPeriodicSawtoothDown *__thiscall FWCmdFFBEffectPeriodicSawtoothDown::`scalar deleting destructor'(FWCmdFFBEffectPeriodicSawtoothDown *this, unsigned int a2);
int __thiscall FWCmdFFBEffectPeriodicSawtoothDown::CalculateWaveForce(FWCmdFFBEffectPeriodicSawtoothUp *this, unsigned int dwCurrPos, int lRawMagnitude, unsigned int dwPeriod, long double dPhase, int lOffset);
int __thiscall FWCmdFFBEffectPeriodicSawtoothDown::EffectIdGet(std::codecvt_utf8<wchar_t,1114111,0> *this);
void __thiscall FWCmdFFBEffectPeriodicSawtoothUp::FWCmdFFBEffectPeriodicSawtoothUp(FWCmdFFBEffectPeriodicSawtoothUp *this, unsigned int dwEffectHandle, unsigned int dwLayer);
FWCmdFFBEffectPeriodicSawtoothUp *__thiscall FWCmdFFBEffectPeriodicSawtoothUp::`scalar deleting destructor'(FWCmdFFBEffectPeriodicSawtoothUp *this, unsigned int a2);
int __thiscall FWCmdFFBEffectPeriodicSawtoothUp::EffectIdGet(FWCmdFFBEffectPeriodicSawtoothUp *this);
void __thiscall FWCmdFFBEffectPeriodicSine::FWCmdFFBEffectPeriodicSine(FWCmdFFBEffectPeriodicSine *this, unsigned int dwEffectHandle, unsigned int dwLayer);
FWCmdFFBEffectPeriodicSine *__thiscall FWCmdFFBEffectPeriodicSine::`vector deleting destructor'(FWCmdFFBEffectPeriodicSine *this, unsigned int a2);
int __thiscall FWCmdFFBEffectPeriodicSine::CalculateWaveForce(FWCmdFFBEffectPeriodicSine *this, unsigned int dwCurrPos, int lRawMagnitude, unsigned int dwPeriod, long double dPhase, int lOffset);
void __thiscall FWCmdFFBEffectPeriodicSquare::FWCmdFFBEffectPeriodicSquare(FWCmdFFBEffectPeriodicSquare *this, unsigned int dwEffectHandle, unsigned int dwLayer);
FWCmdFFBEffectPeriodicSquare *__thiscall FWCmdFFBEffectPeriodicSquare::`vector deleting destructor'(FWCmdFFBEffectPeriodicSquare *this, unsigned int a2);
int __thiscall FWCmdFFBEffectPeriodicSquare::CalculateWaveForce(FWCmdFFBEffectPeriodicSquare *this, unsigned int dwCurrPos, int lRawMagnitude, unsigned int dwPeriod, long double dPhase, int lOffset);
int __thiscall FWCmdFFBEffectPeriodicSquare::EffectIdGet(jsonwriter::Value *this);
void __thiscall FWCmdFFBEffectPeriodicTriangle::FWCmdFFBEffectPeriodicTriangle(FWCmdFFBEffectPeriodicTriangle *this, unsigned int dwEffectHandle, unsigned int dwLayer);
FWCmdFFBEffectPeriodicTriangle *__thiscall FWCmdFFBEffectPeriodicTriangle::`vector deleting destructor'(FWCmdFFBEffectPeriodicTriangle *this, unsigned int a2);
unsigned int __thiscall FWCmdFFBEffectPeriodicTriangle::CalculateWaveForce(FWCmdFFBEffectPeriodicTriangle *this, unsigned int dwCurrPos, int lRawMagnitude, unsigned int dwPeriod, long double dPhase, int lOffset);
_COMPONENT_MOTOR *__cdecl std::_Uninit_move<_COMPONENT_MOTOR *,_COMPONENT_MOTOR *,std::allocator<_COMPONENT_MOTOR>,_COMPONENT_MOTOR>(_COMPONENT_MOTOR *_First, _COMPONENT_MOTOR *_Last, _COMPONENT_MOTOR *_Dest);
void __thiscall FSCmdRumbleMotorsBase::FSCmdRumbleMotorsBase(FSCmdRumbleMotorsBase *this, FWDeviceBaseCommon *pDeviceBase);
void __thiscall FSCmdRumbleMotorsBase::~FSCmdRumbleMotorsBase(FSCmdRumbleMotorsBase *this);
FSCmdRumbleMotorsBase *__thiscall FSCmdRumbleMotorsBase::`scalar deleting destructor'(FSCmdRumbleMotorsBase *this, unsigned int a2);
void __thiscall FSCmdRumbleMotorsBase::CommandBaseSet(FSCmdRumbleMotorsBase *this, _COMMAND_BASE deviceCmdBase);
void __thiscall FSCmdRumbleMotorsBase::CspViaWheelBaseRumbleEnable(FSCmdRumbleMotorsBase *this, bool enabled);
void __cdecl FSCmdRumbleMotorsBase::Destroy(FSCmdRumbleMotorsBase *this);
int __cdecl FSCmdRumbleMotorsBase::GetItemCount(FSCmdRumbleMotorsBase *this);
char __cdecl FSCmdRumbleMotorsBase::InternalSendCmdRumbleMotorVibChange(FSCmdRumbleMotorsBase *this);
bool __cdecl FSCmdRumbleMotorsBase::ItemSetOff(FSCmdRumbleMotorsBase *this, int ItemIndex);
bool __cdecl FSCmdRumbleMotorsBase::ItemSetOn(FSCmdRumbleMotorsBase *this, int ItemIndex);
bool __cdecl FSCmdRumbleMotorsBase::SetOn(FSCmdRumbleMotorsBase *this, int index, int percentage);
char __cdecl FSCmdRumbleMotorsBase::SubmitToDevice(FSCmdRumbleMotorsBase *this);
void __thiscall std::vector<_COMPONENT_MOTOR>::_Reallocate(std::vector<_COMPONENT_MOTOR> *this, unsigned int _Count);
void __thiscall std::vector<_COMPONENT_MOTOR>::_Reserve(std::vector<_COMPONENT_MOTOR> *this, unsigned int _Count);
void __thiscall FSCmdLedRevsBase::FSCmdLedRevsBase(FSCmdLedRevsBase *this, FWDeviceBaseCommon *pDeviceBase);
void __thiscall FSCmdLedRevsBase::~FSCmdLedRevsBase(FSCmdLedRevsBase *this);
FSCmdLedRevsBase *__thiscall FSCmdLedRevsBase::`vector deleting destructor'(FSCmdLedRevsBase *this, unsigned int a2);
void __thiscall FSCmdLedRevsBase::CommandBaseSet(FSCmdLedRevsBase *this, _COMMAND_BASE deviceCmdBase, __int16 usLedCount, bool bTranslateLeds);
void __cdecl FSCmdLedRevsBase::Destroy(FSCmdLedRevsBase *this);
void __thiscall FSCmdLedRevsBase::InternalRimToBaseLedCmdTranslate(FSCmdLedRevsBase *this, _FS_HID_COMMAND *pInBuffer, _FS_HID_COMMAND *pOutBuffer);
void __thiscall FSCmdLedRevsBase::InternalRp1LedCmdTranslate(FSCmdLedRevsBase *this, _FS_HID_COMMAND *pInBuffer, _FS_HID_COMMAND *pOutBuffer);
char __thiscall FSCmdLedRevsBase::InternalSendCmdLedColorChange(FSCmdLedRevsBase *this);
bool __thiscall FSCmdLedRevsBase::InternalSendCmdLedRevsWithChanges(FSCmdLedRevsBase *this);
bool __thiscall FSCmdLedRevsBase::InternalSendCmdLeds(FSCmdLedRevsBase *this);
char __cdecl FSCmdLedRevsBase::ItemSetColor(FSCmdLedRevsBase *this, int LedIndex, _FS_LED_COLOR LedColor);
bool __cdecl FSCmdLedRevsBase::ItemSetOff(FSCmdLedRevsBase *this, int ItemIndex);
bool __cdecl FSCmdLedRevsBase::ItemSetOn(FSCmdLedRevsBase *this, int ItemIndex);
char __cdecl FSCmdLedRevsBase::RimToBaseRevLedsMirrorEnable(FSCmdLedRevsBase *this, bool Enabled);
bool __cdecl FSCmdLedRevsBase::SubmitToDevice(FSCmdLedRevsBase *this);
void __thiscall FWThreadOutputHandler::FWThreadOutputHandler(FWThreadOutputHandler *this);
void __thiscall FWThreadOutputHandler::~FWThreadOutputHandler(FWThreadOutputHandler *this);
FWThreadOutputHandler *__thiscall FWThreadOutputHandler::`vector deleting destructor'(FWThreadOutputHandler *this, unsigned int a2);
void __thiscall FWThreadOutputHandler::HidCommandSubmit(FWThreadOutputHandler *this, _FS_HID_COMMAND *pHidCmd);
void __thiscall FWThreadOutputHandler::Run(FWThreadOutputHandler *this);
char __thiscall FWThreadOutputHandler::Start(FWThreadOutputHandler *this, FWDeviceBaseCommon *pDevice, IFSCmdUsbHid *pICmdUsbHid);
void __thiscall FWThreadOutputHandler::WaitStop(FWThreadOutputHandler *this);
int __cdecl FWUtil::Math::ConvertCartesianToPolarDirection(int dXComponent, int dYComponent);
int __cdecl FWUtil::Math::ConvertDamperValueBYTE(int lValue);
int __cdecl FWUtil::Math::ConvertSumOrDifferenceToBYTE(int lValue);
unsigned __int8 __cdecl FWUtil::Math::Convert_LONG_To_BYTE(int lVectorComponent);
unsigned __int8 __cdecl FWUtil::Math::GetByteReversedBits(unsigned __int8 ucByte);
unsigned __int8 __cdecl FWUtil::Math::GetCoefficientBYTE(int lPositiveCoefficient, int lNegativeCoefficient);
bool __cdecl FWUtil::Math::GetDamperSignValueBYTE(int lValue);
int __cdecl FWUtil::Math::GetDirection(int dVectorMagnitude);
int __cdecl FWUtil::Math::GetSaturationBYTE(unsigned int lPositiveSaturation);
unsigned __int8 __cdecl FWUtil::Math::GetSignBYTE(int lPositiveCoefficient, int lNegativeCoefficient);
int __cdecl FWUtil::Math::GetVectorPolarComponentX(int lVectorMagnitude);
void __thiscall FWCmdFFBEffectPositionBase::FWCmdFFBEffectPositionBase(FWCmdFFBEffectPositionBase *this, unsigned int dwEffectHandle, unsigned int dwLayer);
void __thiscall FWCmdFFBEffectPositionBase::~FWCmdFFBEffectPositionBase(FWCmdFFBEffectPositionBase *this);
FWCmdFFBEffectPositionBase *__thiscall FWCmdFFBEffectPositionBase::`scalar deleting destructor'(FWCmdFFBEffectPositionBase *this, unsigned int a2);
bool __thiscall FWCmdFFBEffectPositionBase::CurrentForceValuesHWGet(FWCmdFFBEffectPositionBase *this, int *plSumOut, int *plDifferenceOut, int *plPosCoefficient, int *plNegCoefficient, unsigned int *pdwSaturation);
void __thiscall FWCmdFFBEffectPositionBase::UpdateForceValues(FWCmdFFBEffectPositionBase *this, unsigned int dwCurrPosTime);
void __thiscall FWCmdFFBEffectPositionBase::UpdateParams(FWCmdFFBEffectPositionBase *this, void *pTypeSpecificParams);
void __thiscall FWCmdFFBEffectPeriodicBase::FWCmdFFBEffectPeriodicBase(FWCmdFFBEffectPeriodicBase *this, unsigned int dwEffectHandle, unsigned int dwLayer);
void __thiscall FWCmdFFBEffectPeriodicBase::~FWCmdFFBEffectPeriodicBase(FWCmdFFBEffectPeriodicBase *this);
FWCmdFFBEffectPeriodicBase *__thiscall FWCmdFFBEffectPeriodicBase::`scalar deleting destructor'(FWCmdFFBEffectPeriodicBase *this, unsigned int a2);
bool __thiscall FWCmdFFBEffectPeriodicBase::CurrentForceValuesSWGet(FWCmdFFBEffectPeriodicBase *this, int *plMagnitudeOut, int *plDirectionOut);
void __thiscall FWCmdFFBEffectPeriodicBase::UpdateForceValues(FWCmdFFBEffectPeriodicBase *this, unsigned int dwCurrPosTime);
void __thiscall FWCmdFFBEffectPeriodicBase::UpdateParams(FWCmdFFBEffectPeriodicBase *this, void *pTypeSpecificParams);
void __thiscall FWVectorHidCommands::FWVectorHidCommands(FWVectorHidCommands *this);
void __thiscall std::deque<FWFFBEffectBase *>::~deque<FWFFBEffectBase *>(std::deque<_FS_HID_COMMAND> *this);
void __thiscall FWVectorHidCommands::~FWVectorHidCommands(FWVectorHidCommands *this);
FWVectorHidCommands *__thiscall FWVectorHidCommands::`vector deleting destructor'(FWVectorHidCommands *this, unsigned int a2);
void __thiscall FWVectorHidCommands::EventSubscribe(FWVectorHidCommands *this, void *hEvent);
unsigned int __thiscall FWVectorHidCommands::Insert(FWVectorHidCommands *this, _FS_HID_COMMAND pElement);
char __thiscall FWVectorHidCommands::Remove(FWVectorHidCommands *this, _FS_HID_COMMAND *pElement);
void __thiscall std::deque<_FS_HID_COMMAND>::_Growmap(std::deque<_FS_HID_COMMAND> *this, unsigned int _Count);
void __thiscall std::deque<_FS_HID_COMMAND>::_Tidy(std::deque<IFW1DWriteRenderTarget *> *this);
std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<_FS_HID_COMMAND> > > *__thiscall std::deque<FWFFBEffectBase *>::begin(std::deque<_FS_HID_COMMAND> *this, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<_FS_HID_COMMAND> > > *result);
void __thiscall std::deque<_FS_HID_COMMAND>::push_back(std::deque<_FS_HID_COMMAND> *this, const _FS_HID_COMMAND *_Val);
const ImgDelayDescr *__stdcall PiddFromDllName(const char *szDll);
HRESULT __stdcall __HrLoadAllImportsForDll(const char *szDll);
int (__stdcall *__stdcall __delayLoadHelper2(const ImgDelayDescr *pidd, int (__stdcall **ppfnIATEntry)()))();
void __thiscall ACGL::ACGL(ACGL *this, GLRenderer *glRenderer);
void __thiscall ACGL::~ACGL(ACGL *this);
ACGL *__thiscall ACGL::`scalar deleting destructor'(ACGL *this, unsigned int a2);
void __thiscall ACGL::begin(ACGL *this, acPrimitiveType primitiveType);
void __thiscall ACGL::color4f(ACGL *this, float r, float g, float b, float a);
void __thiscall ACGL::drawTexturedQuad(ACGL *this, float x, float y, float width, float height, IACTexture *texture);
void __thiscall ACGL::end(ACGL *this);
void __thiscall ACGL::setOffset(ACGL *this, vec2f *off);
void __thiscall ACGL::texCoord2f(ACGL *this, float u, float v);
void __thiscall ACGL::vertex2f(ACGL *this, float x, float y);
void __thiscall ACFont::ACFont(ACFont *this, Font *ifont, vec2f *off);
void __thiscall ACFont::~ACFont(ACFont *this);
ACFont *__thiscall ACFont::`scalar deleting destructor'(ACFont *this, unsigned int a2);
void __thiscall ACFont::blitString(ACFont *this, float x, float y, const std::wstring *message, acFontAlign align);
void __thiscall ACFont::setColor(ACFont *this, float r, float g, float b);
void __thiscall ACFont::setScale(ACFont *this, float scale);
void __thiscall ACTexture::ACTexture(ACTexture *this, const std::wstring *filename, GraphicsManager *graphics);
void __thiscall IACTexture::~IACTexture(IACTexture *this);
ACTexture *__thiscall ACTexture::`scalar deleting destructor'(ACTexture *this, unsigned int a2);
IACTexture *__thiscall IACTexture::`vector deleting destructor'(IACTexture *this, unsigned int a2);
void __thiscall ACTexture::apply(ACTexture *this, int slot);
void __thiscall ACControl::ACControl(ACControl *this, ksgui::GUI *igui);
ACControl *__thiscall ACControl::`scalar deleting destructor'(ACControl *this, unsigned int a2);
void *__thiscall ACControl::getTag(ACControl *this);
std::wstring *__thiscall ACControl::getText(char *this);
void __thiscall ACControl::setControlPosition(ACControl *this, float x, float y);
void __thiscall ACControl::setControlSize(ACControl *this, float x, float y);
void __thiscall ACControl::setTag(ACControl *this, void *atag);
void __thiscall ACControl::setText(char *this, const std::wstring *a2);
void __cdecl std::_For_each<std::wstring *,_lambda_de6c9c19f47e4d115a985c1f5e5078c7_>(std::wstring *_First, std::wstring *_Last, ACOperatingSystem::initApps::__l11::<lambda_de6c9c19f47e4d115a985c1f5e5078c7> *_Func);
void __thiscall ACOperatingSystem::ACOperatingSystem(ACOperatingSystem *this, Sim *isim);
void __thiscall ACOperatingSystem::~ACOperatingSystem(ACOperatingSystem *this);
ACOperatingSystem *__thiscall ACOperatingSystem::`vector deleting destructor'(char *this, unsigned int a2);
ACOperatingSystem *__thiscall ACOperatingSystem::`scalar deleting destructor'(ACOperatingSystem *this, unsigned int a2);
void __thiscall std::vector<SVar *>::_Reserve(std::vector<ICollisionObject *> *this, unsigned int _Count);
IACForm *__thiscall ACOperatingSystem::createForm(ACOperatingSystem *this, const std::wstring *name);
IACTexture *__thiscall ACOperatingSystem::createTexture(ACOperatingSystem *this, const std::wstring *filename);
void __thiscall ACOperatingSystem::getCarData(ACOperatingSystem *this, int carIndex, ACCarData *data);
void __thiscall ACOperatingSystem::getCarInfo(ACOperatingSystem *this, int carIndex, ACCarInfo *info);
ACINIReader *__thiscall ACOperatingSystem::getINIReader(ACOperatingSystem *this, const std::wstring *filename);
void __thiscall ACOperatingSystem::getRaceData(ACOperatingSystem *this, ACRaceData *data);
void __thiscall ACOperatingSystem::getTrackData(ACOperatingSystem *this, ACTrackData *data);
void __thiscall ACOperatingSystem::initApps(ACOperatingSystem *this);
void __thiscall ACOperatingSystem::releaseTexture(ACOperatingSystem *this, IACTexture *texture);
void __thiscall ACINIReader::ACINIReader(ACINIReader *this);
void __thiscall ACINIReader::~ACINIReader(ACINIReader *this);
ACINIReader *__thiscall ACINIReader::`scalar deleting destructor'(ACINIReader *this, unsigned int a2);
double __thiscall ACINIReader::getFloat(ACINIReader *this, const std::wstring *section, const std::wstring *key);
int __thiscall ACINIReader::getInt(ACINIReader *this, const std::wstring *section, const std::wstring *key);
unsigned int __thiscall ACINIReader::getString(ACINIReader *this, const std::wstring *section, const std::wstring *key, wchar_t *buffer, int bufferSize);
bool __thiscall ACINIReader::open(ACINIReader *this, std::wstring filename);
void __cdecl std::_For_each<IACFormEventListener * *,_lambda_8684b20ff20a6cfcbb5cb3c5ab956aa1_>(IACFormEventListener **_First, IACFormEventListener **_Last, AppForm::onControlClicked::__l3::<lambda_8684b20ff20a6cfcbb5cb3c5ab956aa1> *_Func);
// void __userpurge AppForm::AppForm(AppForm *this@<ecx>, unsigned int a2@<ebx>, ACOperatingSystem *iacos, std::wstring form_name);
AppForm *__thiscall AppForm::`vector deleting destructor'(AppForm *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_41a459656b9f09f7668adf8c74d4228e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_41a459656b9f09f7668adf8c74d4228e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_41a459656b9f09f7668adf8c74d4228e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_41a459656b9f09f7668adf8c74d4228e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this, const ksgui::OnControlClicked *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_41a459656b9f09f7668adf8c74d4228e_,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &>>,void,ksgui::OnControlClicked const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_41a459656b9f09f7668adf8c74d4228e>,0>,std::allocator<std::_Func_class<void,ksgui::OnControlClicked const &> >,void,ksgui::OnControlClicked const &> *this);
IACControl *__thiscall AppForm::addControl(AppForm *this);
void __thiscall AppForm::addEventListener(KeyboardManager *this, IKeyEventListener *l);
void __thiscall AppForm::render(AppForm *this, float dt);
void __thiscall AppForm::setAutoHideMode(AppForm *this, bool mode);
// void __userpurge AppForm::setIcon(AppForm *this@<ecx>, unsigned int a2@<ebx>, const std::wstring *filename);
void __thiscall AppForm::setWindowSize(AppForm *this, int width, int height);
void __cdecl std::_Adjust_heap<Sim::CarItemCmp *,int,Sim::CarItemCmp,_lambda_6c7e3ba0a265af4ea424899147498d7c_>(ComparablePoint *_First, int _Hole, int _Bottom, ComparablePoint *_Val);
SplinePoint *__cdecl std::_Copy_impl<CubicSpline<float,float>::Element *,CubicSpline<float,float>::Element *>(SplinePoint *_First, SplinePoint *_Last, SplinePoint *_Dest);
void __cdecl std::_For_each<SplinePoint const *,_lambda_b7c327d54d0345e9ac0b908de0735019_>(const SplinePoint *_First, const SplinePoint *_Last, Spline::closestPointIndexWithBounds::__l19::<lambda_b7c327d54d0345e9ac0b908de0735019> *_Func);
void __cdecl std::_Make_heap<Sim::CarItemCmp *,int,Sim::CarItemCmp,_lambda_6c7e3ba0a265af4ea424899147498d7c_>(ComparablePoint *_First, ComparablePoint *_Last);
void __cdecl std::_Reverse<SplinePoint *>(SplinePoint *_First, SplinePoint *_Last);
void __cdecl std::_Sort_heap<ComparablePoint *,std::less<void>>(ComparablePoint *_First, ComparablePoint *_Last);
std::pair<ComparablePoint *,ComparablePoint *> *__cdecl std::_Unguarded_partition<Sim::CarItemCmp *,_lambda_6c7e3ba0a265af4ea424899147498d7c_>(std::pair<ComparablePoint *,ComparablePoint *> *result, ComparablePoint *_First, ComparablePoint *_Last);
Spline::closestPointIndex::__l9::<lambda_161ed80abd734302ca18e728b7dd1192> *__cdecl std::for_each<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SplinePoint>>>,_lambda_161ed80abd734302ca18e728b7dd1192_>(Spline::closestPointIndex::__l9::<lambda_161ed80abd734302ca18e728b7dd1192> *result, std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SplinePoint> > > _First, std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SplinePoint> > > _Last, Spline::closestPointIndex::__l9::<lambda_161ed80abd734302ca18e728b7dd1192> _Func);
void __thiscall std::wifstream::wifstream(std::wifstream *this, const std::wstring *_Str, int _Mode, int _Prot, int a5);
void __thiscall Spline::Spline(Spline *this);
void __thiscall Spline::~Spline(Spline *this);
std::vector<SplinePoint> *__thiscall std::vector<SplinePoint>::operator=(std::vector<SplinePoint> *this, const std::vector<SplinePoint> *_Right);
Spline *__thiscall Spline::`scalar deleting destructor'(Spline *this, unsigned int a2);
char __thiscall std::vector<SplinePoint>::_Buy(std::vector<SplinePoint> *this, unsigned int _Capacity);
void __thiscall std::vector<ComparablePoint>::_Reallocate(std::vector<ComparablePoint> *this, unsigned int _Count);
void __thiscall std::vector<SplinePoint>::_Reallocate(std::vector<SplinePoint> *this, unsigned int _Count);
void __thiscall std::vector<ComparablePoint>::_Reserve(std::vector<ComparablePoint> *this, unsigned int _Count);
void __thiscall std::vector<SplinePoint>::_Reserve(std::vector<SplinePoint> *this, unsigned int _Count);
void __thiscall Spline::addPoint(Spline *this, const vec3f *p, int tag);
void __thiscall Spline::addSplinePoint(Spline *this, const SplinePoint *p);
void __thiscall Spline::applyMatrix(Spline *this, const mat44f *m);
double __thiscall Spline::boundInsideSpline(Spline *this, float value);
void __thiscall Spline::clear(Spline *this);
unsigned int __thiscall Spline::closestPointIndex(Spline *this, const vec3f *point, float *distance);
unsigned int __thiscall Spline::closestPointIndexWithBounds(Spline *this, const vec3f *point, const std::vector<SplineIndexBound> *bounds, float *distance);
std::vector<unsigned int> *__thiscall Spline::closestPointIndicesFlat(Spline *this, std::vector<unsigned int> *result, const vec3f *point, unsigned int numberOfNeigbours, float *distance);
vec3f *__thiscall Spline::getPointSmooth(Spline *this, vec3f *result, float v);
vec3f *__thiscall Spline::getSplineDirection(Spline *this, vec3f *result, const vec3f *point);
bool __thiscall Spline::isClosed(Spline *this);
double __thiscall Spline::length(Spline *this);
void __thiscall Spline::loadFromCSV(Spline *this, std::wstring filename);
vec3f *__thiscall Spline::pointAt(Spline *this, vec3f *result, unsigned int index);
int __thiscall Spline::pointsCount(Spline *this);
void __thiscall std::vector<SplinePoint>::push_back(std::vector<SplinePoint> *this, const SplinePoint *_Val);
void __thiscall Spline::reverse(Spline *this);
void __thiscall Spline::setPointAt(Spline *this, unsigned int index, vec3f point);
SplinePoint *__thiscall Spline::splinePointAt(Spline *this, SplinePoint *result, unsigned int index);
int __thiscall Spline::tagAt(Spline *this, unsigned int index);
int __thiscall Spline::wrapIndex(Spline *this, int index);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<GridElement>>>(GridElement *_First, GridElement *_Last);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::vector<GridElement>>>>(std::vector<GridElement> *_First, std::vector<GridElement> *_Last);
std::vector<GridElement> *__cdecl std::_Uninit_move<std::vector<GridElement> *,std::vector<GridElement> *,std::allocator<std::vector<GridElement>>,std::vector<GridElement>>(std::vector<GridElement> *_First, std::vector<GridElement> *_Last, std::vector<GridElement> *_Dest);
void __thiscall std::_Wrap_alloc<std::allocator<GridElement>>::destroy<GridElement>(std::_Wrap_alloc<std::allocator<GridElement> > *this, GridElement *_Ptr);
void __thiscall std::_Wrap_alloc<std::allocator<std::vector<GridElement>>>::destroy<std::vector<GridElement>>(std::_Wrap_alloc<std::allocator<std::vector<GridElement> > > *this, std::vector<GridElement> *_Ptr);
void __thiscall GridData::GridData(GridData *this);
void __thiscall InterpolatingSpline::InterpolatingSpline(InterpolatingSpline *this);
void __thiscall std::vector<GridElement>::_Tidy(std::vector<GridElement> *this);
void __thiscall InterpolatingSpline::~InterpolatingSpline(InterpolatingSpline *this);
CubicSpline<float,vec3f> *__thiscall CubicSpline<float,vec3f>::`scalar deleting destructor'(CubicSpline<float,vec3f> *this, unsigned int a2);
InterpolatingSpline *__thiscall InterpolatingSpline::`scalar deleting destructor'(InterpolatingSpline *this, unsigned int a2);
double __cdecl BinomialCoefficient_DoublePrecision(unsigned int n, unsigned int k);
void __thiscall std::vector<GridElement>::_Reallocate(std::vector<GridElement> *this, unsigned int _Count);
void __thiscall std::vector<std::vector<GridElement>>::_Reallocate(std::vector<std::vector<GridElement>> *this, unsigned int _Count);
void __thiscall std::vector<CubicSpline<float,vec3f>::Element,std::allocator<CubicSpline<float,vec3f>::Element>>::_Reallocate(std::vector<CubicSpline<float,vec3f>::Element,std::allocator<CubicSpline<float,vec3f>::Element> > *this, unsigned int _Count);
void __thiscall std::vector<GridElement>::_Reserve(std::vector<GridElement> *this, unsigned int _Count);
void __thiscall std::vector<std::vector<GridElement>>::_Reserve(std::vector<std::vector<GridElement>> *this, unsigned int _Count);
void __thiscall std::vector<CubicSpline<float,vec3f>::Element,std::allocator<CubicSpline<float,vec3f>::Element>>::_Reserve(std::vector<CubicSpline<float,vec3f>::Element,std::allocator<CubicSpline<float,vec3f>::Element> > *this, unsigned int _Count);
void __thiscall std::vector<std::vector<GridElement>>::_Tidy(std::vector<std::vector<GridElement>> *this);
void __thiscall InterpolatingSpline::addPoint(InterpolatingSpline *this, const vec3f *p, int tag);
void __thiscall InterpolatingSpline::addSplinePoint(InterpolatingSpline *this, const SplinePoint *p);
void __thiscall InterpolatingSpline::bezierEndopoint(InterpolatingSpline *this);
void __thiscall InterpolatingSpline::buildGrid(InterpolatingSpline *this);
vec3f *__thiscall InterpolatingSpline::calculateCatmullRom(InterpolatingSpline *this, vec3f *result, const float t);
vec3f *__thiscall InterpolatingSpline::calculateCubicBezier(InterpolatingSpline *this, vec3f *result, const float t);
// vec3f *__userpurge InterpolatingSpline::calculateCubicSpline@<eax>(InterpolatingSpline *this@<ecx>, __m128 a2@<xmm0>, vec3f *result, const float pos);
vec3f *__thiscall InterpolatingSpline::calculateLinear(InterpolatingSpline *this, vec3f *result, const float pos);
vec3f *__thiscall InterpolatingSpline::calculateNthBezier(InterpolatingSpline *this, vec3f *result, const float t);
vec3f *__thiscall InterpolatingSpline::calculateUniformBSpline(InterpolatingSpline *this, vec3f *result, const float t);
void __thiscall InterpolatingSpline::clear(InterpolatingSpline *this);
const vec3f *__thiscall InterpolatingSpline::closestPointIndex(InterpolatingSpline *this, const vec3f *point, float *distance);
const vec3f *__thiscall InterpolatingSpline::closestPointIndexGrid(InterpolatingSpline *this, const vec3f *position, float *distance);
// void __userpurge CubicSpline<float,vec3f>::computeCoefficients(CubicSpline<float,vec3f> *this@<ecx>, __m128 a2@<xmm0>, const std::vector<float> *x, const std::vector<vec3f> *y);
// void __usercall InterpolatingSpline::computeSplineCoefficients(InterpolatingSpline *this@<ecx>, __m128 a2@<xmm0>);
void __thiscall InterpolatingSpline::computeSplineLength(InterpolatingSpline *this);
void __thiscall InterpolatingSpline::filterPointsTooClose(InterpolatingSpline *this, float minDistance);
unsigned int __thiscall InterpolatingSpline::getLastIndexFromNorm(InterpolatingSpline *this, float t, float *blendToNext);
double __thiscall InterpolatingSpline::getNormalizedPosition(InterpolatingSpline *this, const unsigned int index);
double __thiscall InterpolatingSpline::getSignedDistanceFromSpline(InterpolatingSpline *this, const vec3f *p, float splinePosition);
bool __thiscall InterpolatingSpline::isGridOn(InterpolatingSpline *this);
vec3f *__thiscall InterpolatingSpline::linearProjection(InterpolatingSpline *this, vec3f *result, const vec3f *point, int closestIndex);
void __thiscall InterpolatingSpline::loadGrid(InterpolatingSpline *this, std::ifstream *in);
void __thiscall InterpolatingSpline::popBack(InterpolatingSpline *this);
void __thiscall std::vector<GridElement>::push_back(std::vector<GridElement> *this, GridElement *_Val);
void __thiscall std::vector<std::vector<GridElement>>::push_back(std::vector<std::vector<GridElement>> *this, std::vector<GridElement> *_Val);
void __thiscall std::vector<CubicSpline<float,vec3f>::Element,std::allocator<CubicSpline<float,vec3f>::Element>>::push_back(std::vector<CubicSpline<float,vec3f>::Element,std::allocator<CubicSpline<float,vec3f>::Element> > *this, CubicSpline<float,vec3f>::Element *_Val);
void __thiscall std::vector<RenderTarget *>::resize(std::vector<RenderTarget *> *this, unsigned int _Newsize);
void __thiscall InterpolatingSpline::saveGrid(InterpolatingSpline *this, std::ofstream *out);
vec3f *__thiscall InterpolatingSpline::splineToWorld(InterpolatingSpline *this, vec3f *result, float pos);
vec3f *__thiscall CubicSpline<float,vec3f>::valueAt(CubicSpline<float,vec3f> *this, vec3f *result, const float *x);
double __thiscall InterpolatingSpline::worldToSpline(InterpolatingSpline *this, const vec3f *pos, int closestIndex);
double __thiscall InterpolatingSpline::wrapPosition(InterpolatingSpline *this, float pos);
std::_List_node<AudioEvent *,void *> *__thiscall std::_List_buy<AudioEvent *>::_Buynode<AudioEvent * const &>(std::_List_buy<AudioEvent *> *this, std::_List_node<AudioEvent *,void *> *_Next, std::_List_node<AudioEvent *,void *> *_Prev, AudioEvent *const *<_Val_0>);
__m128i *__thiscall std::_List_buy<AudioEngine::BankEntry>::_Buynode<AudioEngine::BankEntry const &>(std::_List_buy<AudioEngine::BankEntry> *this, std::_List_node<AudioEngine::BankEntry,void *> *_Next, std::_List_node<AudioEngine::BankEntry,void *> *_Prev, const AudioEngine::BankEntry *<_Val_0>);
std::_Tree_node<std::pair<std::wstring const ,AudioEngine::GUID>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,AudioEngine::GUID>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,AudioEngine::GUID>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring const &> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_List_node<AudioEvent,void *> *__thiscall std::_List_buy<AudioEvent>::_Buynode<AudioEngine * const,std::wstring const &>(std::_List_buy<AudioEvent> *this, std::_List_node<AudioEvent,void *> *_Next, std::_List_node<AudioEvent,void *> *_Prev, AudioEngine *const *<_Val_0>, const std::wstring *<_Val_1>);
void __thiscall std::string::_Construct<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<char>>>>(std::string *this, std::_Vector_iterator<std::_Vector_val<std::_Simple_types<char> > > _First, std::_Vector_iterator<std::_Vector_val<std::_Simple_types<char> > > _Last, std::forward_iterator_tag __formal);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,AudioEngine::GUID> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,AudioEngine::GUID,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,AudioEngine::GUID>>,0>>::_Insert_at<std::pair<std::wstring const,AudioEngine::GUID> &,std::_Tree_node<std::pair<std::wstring const,AudioEngine::GUID>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,AudioEngine::GUID,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,AudioEngine::GUID> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,AudioEngine::GUID> > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::wstring const ,AudioEngine::GUID>,void *> *_Wherenode, std::pair<std::wstring const ,AudioEngine::GUID> *_Val, std::_Tree_node<std::pair<std::wstring const ,AudioEngine::GUID>,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::vector<AudioEvent *>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::vector<AudioEvent *>>>,0>>::_Insert_at<std::pair<std::wstring const,std::vector<AudioEvent *>> &,std::_Tree_node<std::pair<std::wstring const,std::vector<AudioEvent *>>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,std::vector<AudioEvent *>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::vector<AudioEvent *> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::wstring const ,std::vector<AudioEvent *> >,void *> *_Wherenode, std::pair<std::wstring const ,std::vector<AudioEvent *> > *_Val, std::_Tree_node<std::pair<std::wstring const ,std::vector<AudioEvent *> >,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,AudioEngine::GUID> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,AudioEngine::GUID,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,AudioEngine::GUID>>,0>>::_Insert_hint<std::pair<std::wstring const,AudioEngine::GUID> &,std::_Tree_node<std::pair<std::wstring const,AudioEngine::GUID>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,AudioEngine::GUID,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,AudioEngine::GUID> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,AudioEngine::GUID> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,AudioEngine::GUID> > > > _Where, std::pair<std::wstring const ,AudioEngine::GUID> *_Val, std::_Tree_node<std::pair<std::wstring const ,AudioEngine::GUID>,void *> *_Newnode);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::vector<AudioEvent *>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::vector<AudioEvent *>>>,0>>::_Insert_hint<std::pair<std::wstring const,std::vector<AudioEvent *>> &,std::_Tree_node<std::pair<std::wstring const,std::vector<AudioEvent *>>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,std::vector<AudioEvent *>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::vector<AudioEvent *> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > > _Where, std::pair<std::wstring const ,std::vector<AudioEvent *> > *_Val, std::_Tree_node<std::pair<std::wstring const ,std::vector<AudioEvent *> >,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,AudioEngine::GUID> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,AudioEngine::GUID,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,AudioEngine::GUID>>,0>>::_Insert_nohint<std::pair<std::wstring const,AudioEngine::GUID> &,std::_Tree_node<std::pair<std::wstring const,AudioEngine::GUID>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,AudioEngine::GUID,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,AudioEngine::GUID> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,AudioEngine::GUID> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,AudioEngine::GUID> > > > _Leftish, std::pair<std::wstring const ,AudioEngine::GUID> *_Val, std::_Tree_node<std::pair<std::wstring const ,AudioEngine::GUID>,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::vector<AudioEvent *>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::vector<AudioEvent *>>>,0>>::_Insert_nohint<std::pair<std::wstring const,std::vector<AudioEvent *>> &,std::_Tree_node<std::pair<std::wstring const,std::vector<AudioEvent *>>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,std::vector<AudioEvent *>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::vector<AudioEvent *> > >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > > _Leftish, std::pair<std::wstring const ,std::vector<AudioEvent *> > *_Val, std::_Tree_node<std::pair<std::wstring const ,std::vector<AudioEvent *> >,void *> *_Newnode);
// void __usercall AudioEngine::AudioEngine(AudioEngine *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall AudioEvent::AudioEvent(AudioEvent *this, AudioEvent *other);
void __thiscall AudioEvent::AudioEvent(AudioEvent *this, AudioEngine *engine, const std::wstring *path, EventReverbResponse reverbResponse);
void __thiscall AudioOccluder::AudioOccluder(AudioOccluder *this, AudioOccluder *other);
void __thiscall AudioOccluder::AudioOccluder(AudioOccluder *this, AudioEngine *engine, const int maxPolygons, const int maxVertices);
void __thiscall AudioReverb::AudioReverb(AudioReverb *this, AudioReverb *other);
void __thiscall AudioReverb::AudioReverb(AudioReverb *this, AudioEngine *engine);
void __thiscall std::array<std::wstring,8>::~array<std::wstring,8>(std::array<std::wstring,8> *this);
void __thiscall std::list<PPFX::GPUFB_ATTACHMENT>::~list<PPFX::GPUFB_ATTACHMENT>(std::list<AudioEvent *> *this);
void __thiscall std::list<AudioEngine::BankEntry>::~list<AudioEngine::BankEntry>(std::list<AudioEngine::BankEntry> *this);
void __thiscall std::list<AudioEvent>::~list<AudioEvent>(std::list<AudioEvent> *this);
void __thiscall std::map<std::wstring,std::vector<AudioEvent *>>::~map<std::wstring,std::vector<AudioEvent *>>(std::map<std::wstring,std::vector<AudioEvent *>> *this);
void __thiscall AudioEngine::~AudioEngine(AudioEngine *this);
void __thiscall AudioEvent::~AudioEvent(AudioEvent *this);
void __thiscall AudioOccluder::~AudioOccluder(AudioOccluder *this);
void __thiscall AudioReverb::~AudioReverb(AudioReverb *this);
AudioEngine::GUID *__thiscall std::map<std::wstring,AudioEngine::GUID>::operator[](std::map<std::wstring,AudioEngine::GUID> *this, const std::wstring *_Keyval);
std::vector<AudioEvent *> *__thiscall std::map<std::wstring,std::vector<AudioEvent *>>::operator[](std::map<std::wstring,std::vector<AudioEvent *>> *this, const std::wstring *_Keyval);
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<ksgui::Spinner * const,GearDef>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const ,AudioEngine::GUID>> > *this);
void __thiscall std::_List_alloc<0,std::_List_base_types<AudioEvent *>>::_Buynode0(std::_List_alloc<0,std::_List_base_types<AudioEvent *> > *this, std::_List_node<AudioEvent *,void *> *_Next, std::_List_node<AudioEvent *,void *> *_Prev);
void __thiscall std::_List_alloc<0,std::_List_base_types<AudioEngine::BankEntry>>::_Buynode0(std::_List_alloc<0,std::_List_base_types<AudioEvent> > *this, std::_List_node<AudioEvent,void *> *_Next, std::_List_node<AudioEvent,void *> *_Prev);
std::_Tree_node<std::pair<std::wstring const ,AudioEngine::GUID>,void *> **__thiscall std::_Tree_buy<std::pair<ksgui::Spinner * const,GearDef>>::_Buynode0(std::_Tree_buy<std::pair<std::wstring const ,AudioEngine::GUID>> *this);
std::_Tree_node<std::pair<std::wstring const ,std::vector<AudioEvent *> >,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,std::vector<Node *>>>::_Buynode0(std::_Tree_buy<std::pair<std::wstring const ,std::vector<AudioEvent *> >> *this);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::vector<AudioEvent *>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::vector<AudioEvent *>>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<std::wstring,std::vector<AudioEvent *>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::vector<AudioEvent *> > >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,std::vector<AudioEvent *> >,void *> *_Newnode);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::wstring > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::wstring > > > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,AudioEngine::GUID,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,AudioEngine::GUID>>,0>>::_Eqrange(std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::wstring > >,0> > *this, std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::wstring > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::wstring > > > > > *result, const std::wstring *_Keyval);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::vector<AudioEvent *>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::vector<AudioEvent *>>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<std::wstring,std::vector<AudioEvent *>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::vector<AudioEvent *> > >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,std::vector<AudioEvent *> >,void *> *_Rootnode);
void __thiscall AudioEngine::addBankRef(AudioEngine *this, const std::wstring *path);
void __thiscall AudioEngine::addCache(AudioEngine *this, const std::wstring *path);
void __thiscall AudioOccluder::addTriangle(AudioOccluder *this, const vec3f *a, const vec3f *b, const vec3f *c);
void __cdecl audioFmodCallError(const char *file, const int line, const FMOD_RESULT result);
void audioLog(const char *file, const int line, const char *severity, const char *format, ...);
void __cdecl checkOutputSanity(FMOD::System *system);
void __thiscall std::list<AudioEngine::BankEntry>::clear(std::list<AudioEngine::BankEntry> *this);
void __thiscall std::list<AudioEvent>::clear(std::list<AudioEvent> *this);
void __thiscall AudioOccluder::enable(AudioOccluder *this, int isEnabled);
void __thiscall AudioReverb::enable(AudioReverb *this, int isEnabled);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::vector<AudioEvent *>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::vector<AudioEvent *>>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,std::vector<AudioEvent *>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::vector<AudioEvent *> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > > _Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::vector<AudioEvent *>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::vector<AudioEvent *>>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,std::vector<AudioEvent *>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::vector<AudioEvent *> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::vector<AudioEvent *> > > > > _Where);
FMOD_RESULT __stdcall fmodCallback(FMOD_SYSTEM *system, unsigned int type, void *commanddata1, void *commanddata2, void *userdata);
AudioEvent *__thiscall AudioEngine::getCachedEvent(AudioEngine *this, const std::wstring *path);
std::wstring *__thiscall AudioEngine::getDriverInfo(AudioEngine *this, std::wstring *result, int driverIndex);
int __thiscall AudioEngine::getDriverNum(AudioEngine *this);
vec3f *__thiscall AudioEngine::getListenerPosition(AudioEngine *this, vec3f *result);
AudioStats *__thiscall AudioEngine::getPerformanceStats(AudioEngine *this, AudioStats *result);
int __cdecl AudioReverb::getPresetFromName(const std::wstring *name);
double __thiscall AudioEngine::getVolume(AudioEngine *this, const bool target);
bool __thiscall AudioEngine::hasEvent(AudioEngine *this, const std::wstring *path);
double __thiscall AudioReverb::hearValue(AudioReverb *this);

bool __thiscall AudioEvent::isPaused(AudioEvent *this);
bool __thiscall AudioEvent::isPlaying(AudioEvent *this);
BOOL __thiscall AudioEvent::isWithinRange(AudioEvent *this);
void __cdecl listDrivers(FMOD::System *system);
double __thiscall AudioEngine::listenerDistance(AudioEngine *this, vec3f position);
AudioEngine::GUID *__thiscall AudioEngine::lookupGUID(AudioEngine *this, AudioEngine::GUID *result, const std::wstring *path);
void __thiscall AudioEngine::parseGUIDs(AudioEngine *this, const std::wstring *path);
void __thiscall AudioEngine::rampVolume(AudioEngine *this, const float dt);
void __thiscall AudioEngine::releaseCachedEvent(AudioEngine *this, AudioEvent *_event);
void __thiscall std::list<AudioEvent *>::remove(std::list<AudioEvent *> *this, AudioEvent *const *_Val);
void __thiscall AudioEngine::removeBankRef(AudioEngine *this, const std::wstring *path);
void __thiscall AudioEvent::resume(AudioEvent *this, const bool isResumed);
void __thiscall AudioEvent::set3DAttributes(AudioEvent *this, const mat44f *transform, const vec3f *velocity);
void __thiscall AudioEvent::set3DAttributes(AudioEvent *this);
void __thiscall AudioReverb::set3DAttributes(AudioReverb *this, const vec3f *position, const float minDistance, const float maxDistance);
void __thiscall AudioEvent::setBasePitch(AudioEvent *this, const float pitch);
void __thiscall AudioEvent::setBaseVolume(AudioEvent *this, const float volume);
void __thiscall AudioEngine::setDistanceScale(AudioEngine *this, const float scale);
void __thiscall AudioOccluder::setDoubleSided(AudioOccluder *this, const bool doubleSided);
void __thiscall AudioEngine::setDriver(AudioEngine *this, int driverIndex);
void __thiscall AudioEngine::setListener(AudioEngine *this, const mat44f *transform, const vec3f *velocity);
void __thiscall AudioEvent::setParameter(AudioEvent *this, const char *name, const float value);
void __thiscall AudioReverb::setPreset(AudioReverb *this, const AudioReverbPreset preset);
void __thiscall AudioReverb::setProperties(AudioReverb *this, const AudioReverbProperties *properties);
// void __userpurge AudioEngine::setVolume(AudioEngine *this@<ecx>, int a2@<esi>, const float volume);
void __thiscall AudioOccluder::setVolumeOcclusion(AudioOccluder *this, const float volumeOcclusion);
void __thiscall AudioEngine::start(AudioEngine *this);
void __thiscall AudioEvent::start(AudioEvent *this);
void __thiscall AudioEngine::stop(AudioEngine *this);
void __thiscall AudioEvent::stop(AudioEvent *this);
FMOD_3D_ATTRIBUTES *__cdecl toFMOD3DAttribs(FMOD_3D_ATTRIBUTES *result, const mat44f *matrix, const vec3f *velocity);
// void __userpurge AudioEngine::update(AudioEngine *this@<ecx>, int a2@<ebp>, int a3@<edi>, float *a4@<esi>, const float dt);
void __thiscall AudioOccluder::updatePolygonAttributes(AudioOccluder *this);
void __thiscall AudioEngine::updateProperties(AudioEngine *this);
FMOD_RESULT __stdcall FMOD_DistanceFilter_dspcreate(FMOD_DSP_STATE *dsp_state);
FMOD_RESULT __stdcall FMOD_DistanceFilter_dsprelease(FMOD_DSP_STATE *dsp_state);
FMOD_RESULT __stdcall FMOD_DistanceFilter_dspreset(FMOD_DSP_STATE *dsp_state);
FMOD_RESULT __stdcall FMOD_DistanceFilter_dspread(FMOD_DSP_STATE *dsp_state, float *inbuffer, float *outbuffer, unsigned int length, int inchannels, int *__formal);
FMOD_RESULT __stdcall FMOD_DistanceFilter_dspsetparamfloat(FMOD_DSP_STATE *dsp_state, int index, float value);
int __stdcall FMOD_DistanceFilter_dspsetparamdata(FMOD_DSP_STATE *dsp_state, int index, void *data, unsigned int __formal);
int __stdcall FMOD_DistanceFilter_dspgetparamfloat(FMOD_DSP_STATE *dsp_state, int index, float *value, char *valuestr);
int __stdcall FMOD_DistanceFilter_dspgetparamdata(FMOD_DSP_STATE *__formal, int index, void **a3, unsigned int *a4, char *a5);
int __stdcall FMOD_Gain_shouldiprocess(FMOD_DSP_STATE *__formal, int inputsidle, unsigned int a3, unsigned int a4, int a5, FMOD_SPEAKERMODE a6);
FMOD_DSP_DESCRIPTION *__cdecl FMODGetDSPDescription_DistanceFilter();
void __thiscall FMODDistanceFilterState::init(FMODDistanceFilterState *this, FMOD_DSP_STATE *dsp_state);
FMOD_RESULT __thiscall FMODDistanceFilterState::process(FMODDistanceFilterState *this, float *inbuffer, float *outbuffer, unsigned int length, int channels);
void __thiscall FMODDistanceFilterState::updateTimeConstants(FMODDistanceFilterState *this);
int __stdcall FMOD_Gain_dspcreate(FMOD_DSP_STATE *dsp_state);
FMOD_RESULT __stdcall FMOD_Gain_dsprelease(FMOD_DSP_STATE *dsp_state);
FMOD_RESULT __stdcall FMOD_Gain_dspreset(FMOD_DSP_STATE *dsp_state);
// FMOD_RESULT __userpurge FMOD_Gain_dspread@<eax>(__m128 a1@<xmm2>, FMOD_DSP_STATE *dsp_state, float *inbuffer, float *outbuffer, unsigned int length, int inchannels, int *__formal);
FMOD_RESULT __thiscall FMOD_Gain_dspsetparamfloat(void *this, FMOD_DSP_STATE *dsp_state, int index, float value);
int __stdcall FMOD_Gain_dspsetparambool(FMOD_DSP_STATE *dsp_state, int index, int value);
int __stdcall FMOD_Gain_dspgetparamfloat(FMOD_DSP_STATE *dsp_state, int index, float *value, char *valuestr);
int __stdcall FMOD_Gain_dspgetparambool(FMOD_DSP_STATE *dsp_state, int index, int *value, char *valuestr);
FMOD_DSP_DESCRIPTION *__cdecl FMODGetDSPDescription_Gain();
double __thiscall FMODGainState::gain(FMODGainState *this);
// void __userpurge FMODGainState::process(FMODGainState *this@<ecx>, __m128 a2@<xmm2>, float *inbuffer, float *outbuffer, unsigned int length, int channels);
void __thiscall RenderWindow::RenderWindow(RenderWindow *this, std::wstring name, VideoSettings *videoSettings);
void __thiscall RenderWindow::~RenderWindow(RenderWindow *this);
RenderWindow *__thiscall RenderWindow::`scalar deleting destructor'(RenderWindow *this, unsigned int a2);
BOOL __thiscall RenderWindow::hasFocus(RenderWindow *this);
void __cdecl onChar(unsigned int c);
void __cdecl onClose();
void __cdecl onKeyDown(unsigned int c);
void __cdecl onKeyUp(unsigned int c);
void __cdecl onMouseDown(int x, int y, int button);
void __cdecl onMouseMove(int x, int y);
void __cdecl onMouseUp(int x, int y, int button);
void __cdecl onMouseWheel(int x, int y, float v);
void __cdecl onResize(unsigned int width, unsigned int height);
void __thiscall RenderWindow::setFocus(RenderWindow *this);
BOOL __thiscall RenderWindow::step(RenderWindow *this);
void __thiscall Texture::Texture(Texture *this, const std::wstring *filename);
void __thiscall Texture::Texture(Texture *this, const RenderTarget *rt);
void __thiscall Texture::Texture(Texture *this, unsigned __int8 *buffer, unsigned int size);
void __thiscall Texture::Texture(Texture *this, unsigned __int8 *buffer, unsigned int width, unsigned int height, PixelFormat aFormat);
void __thiscall Texture::release(Texture *this);
void __thiscall VertexBuffer<MeshVertex>::VertexBuffer<MeshVertex>(VertexBuffer<MeshVertex> *this, std::vector<MeshVertex> *vertices);
void __thiscall GLRenderer::GLRenderer(GLRenderer *this, GraphicsManager *r, unsigned int maxVertices, bool withFullScreenQuad);
void __thiscall MeshVertex::MeshVertex(MeshVertex *this, const vec3f *ipos, const vec3f *inor, const vec2f *uv);
void __thiscall GLRenderer::~GLRenderer(GLRenderer *this);
VertexBuffer<MeshVertex> *__thiscall VertexBuffer<MeshVertex>::`scalar deleting destructor'(VertexBuffer<MeshVertex> *this, unsigned int a2);
GLRenderer *__thiscall GLRenderer::`vector deleting destructor'(GLRenderer *this, unsigned int a2);
void __thiscall std::vector<ReplayLap>::_Reallocate(std::vector<SplineIndexBound> *this, unsigned int _Count);
void __thiscall std::vector<MeshVertex>::_Reserve(std::vector<MeshVertex> *this, unsigned int _Count);
void __thiscall GLRenderer::begin(GLRenderer *this, eGLPrimitiveType type, Shader *ishader);
void __thiscall GLRenderer::color3f(GLRenderer *this, float r, float g, float b);
void __thiscall GLRenderer::color4f(GLRenderer *this, const vec4f *v);
void __thiscall GLRenderer::color4f(GLRenderer *this, float r, float g, float b, float a);
void __thiscall GLRenderer::end(GLRenderer *this);
void __thiscall GLRenderer::fullScreenQuad(GLRenderer *this, Shader *ishader);
// void __usercall GLRenderer::initFullScreenQuad(GLRenderer *this@<ecx>, int a2@<esi>);
void __thiscall std::vector<std::pair<int,void *>>::push_back(std::vector<std::pair<int,void *>> *this, std::pair<int,void *> *_Val);
void __thiscall std::vector<MeshVertex>::push_back(std::vector<MeshVertex> *this, const MeshVertex *_Val);
void __thiscall GLRenderer::quad(GLRenderer *this, float x, float y, float width, float height, bool textured, Shader *shader);
void __thiscall GLRenderer::quadCentred(GLRenderer *this, float x, float y, float width, float height, bool textured, Shader *shader);
// void __userpurge GLRenderer::quadCentredRotated(GLRenderer *this@<ecx>, int a2@<esi>, float x, float y, float width, float height, float rotationRAD, bool textured, Shader *shader);
void __thiscall GLRenderer::spline(GLRenderer *this, const Spline *spline);
void __thiscall GLRenderer::texCoord2f(GLRenderer *this, float u, float v);
void __thiscall GLRenderer::vertex3fv(GLRenderer *this, const float *v);
void __thiscall GLRenderer::vertex3f(GLRenderer *this, float x, float y, float z);
void __thiscall ResourceStore::ResourceStore(ResourceStore *this, GraphicsManager *rm);
void __thiscall ResourceStore::~ResourceStore(ResourceStore *this);
ResourceStore *__thiscall ResourceStore::`scalar deleting destructor'(ResourceStore *this, unsigned int a2);
Texture *__thiscall ResourceStore::getTexture(ResourceStore *this, Texture *result, const std::wstring *filename, bool onlyExisting);
Texture *__thiscall ResourceStore::getTextureFromBuffer(ResourceStore *this, Texture *result, const std::wstring *name, unsigned __int8 *buffer, int size);
BOOL __thiscall ResourceStore::hasTexture(ResourceStore *this, const std::wstring *name);
void __thiscall Font::Font(Font *this, const std::wstring *fontFamily, eFontType fontType, float size, int italic, int bold);
void __thiscall Font::Font(Font *this, eFontType fontType, float size, int italic, int bold);
void **__thiscall std::map<std::wstring,void *>::operator[](std::map<std::wstring,void *> *this, const std::wstring *_Keyval);
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const,int>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const ,TyreCompoundStrategy>> > *this);
void __thiscall Font::blitString(Font *this, float x, float y, const std::wstring *s, float ascale, eFontAlign align);
void Font::cleanup();
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,void *,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,void *>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,TyreCompoundStrategy,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TyreCompoundStrategy> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > > _Where);
// void *__usercall Font::getFontWrapper@<eax>(int a1@<esi>, std::wstring name, unsigned __int8 italic, unsigned __int8 bold);
void __thiscall Font::setColor(Font *this, const vec4f *cc);
void __thiscall Font::setColor(Font *this, float r, float g, float b, float a);
void __thiscall std::array<PvsProcessor::DrawCall,4096>::array<PvsProcessor::DrawCall,4096>(std::array<PvsProcessor::DrawCall,4096> *this);
// void __userpurge GraphicsManager::GraphicsManager(GraphicsManager *this@<ecx>, __m128 a2@<xmm1>, const VideoSettings *ivideoSettings);
void __thiscall LightingSettings::LightingSettings(LightingSettings *this);
void __thiscall PvsProcessor::PvsProcessor(PvsProcessor *this);
void __thiscall RenderState::RenderState(RenderState *this);
void __thiscall GraphicsManager::~GraphicsManager(GraphicsManager *this);
void __thiscall SystemCBuffers::~SystemCBuffers(SystemCBuffers *this);
GraphicsManager *__thiscall GraphicsManager::`vector deleting destructor'(GraphicsManager *this, unsigned int a2);
void __thiscall GraphicsManager::beginMainRenderPass(GraphicsManager *this);
void __thiscall GraphicsManager::beginScene(GraphicsManager *this);
void __thiscall GraphicsManager::clearRenderTarget(GraphicsManager *this, const vec4f *color);
void __thiscall GraphicsManager::clearRenderTargetDepth(GraphicsManager *this, float value);
void __thiscall GraphicsManager::clearTextureSlot(GraphicsManager *this, int slot);
void __thiscall GraphicsManager::commitShaderChanges(GraphicsManager *this);
void __thiscall GraphicsManager::compile(GraphicsManager *this, Node *root);
GLRenderer *__thiscall GraphicsManager::createGLRenderer(GraphicsManager *this, unsigned int maxVertices);
void __thiscall GraphicsManager::drawPrimitive(GraphicsManager *this, unsigned int indicesCount, unsigned int baseIndex, unsigned int baseVertex, unsigned int numVertices);
void __thiscall GraphicsManager::endMainRenderPass(GraphicsManager *this);
void __thiscall GraphicsManager::endScene(GraphicsManager *this);
SystemCBuffers *__thiscall GraphicsManager::getCBuffer(GraphicsManager *this, const std::wstring *name);
std::vector<std::wstring> *__thiscall GraphicsManager::getErrorStrings(GraphicsManager *this, std::vector<std::wstring> *result);
vec3f *__thiscall GraphicsManager::getLDRColor(GraphicsManager *this, vec3f *result, const vec3f *c);
double __thiscall GraphicsManager::getLDRScale(GraphicsManager *this, const vec3f *c);
mat44f *__thiscall GraphicsManager::getProjectionMatrix(GraphicsManager *this, mat44f *result);
// Shader *__userpurge GraphicsManager::getShader@<eax>(GraphicsManager *this@<ecx>, unsigned int a2@<ebx>, const std::wstring *name);
vec3f *__thiscall GraphicsManager::getShadowMapBias(GraphicsManager *this, vec3f *result);
mat44f *__thiscall GraphicsManager::getViewMatrix(GraphicsManager *this, mat44f *result);
mat44f *__thiscall GraphicsManager::getWorldMatrix(GraphicsManager *this, mat44f *result);
void __thiscall GraphicsManager::initCBuffers(GraphicsManager *this);
void __thiscall GraphicsManager::initRenderFlags(GraphicsManager *this);
void __thiscall GraphicsManager::initSamplerStates(GraphicsManager *this);
void __thiscall GraphicsManager::loadLightingSettings(GraphicsManager *this, const std::wstring *filename);
void __thiscall GraphicsManager::onResize(GraphicsManager *this, int width, int height);
void __thiscall GraphicsManager::overrideSamplerState(GraphicsManager *this, SamplerState sampler);
void __thiscall GraphicsManager::resetRenderStates(GraphicsManager *this);
void __thiscall GraphicsManager::setBlendMode(GraphicsManager *this, BlendMode mode);
void __thiscall GraphicsManager::setCullMode(GraphicsManager *this, CullMode mode);
void __thiscall GraphicsManager::setCustomSunDirection(GraphicsManager *this, vec3f sunDirection);
void __thiscall GraphicsManager::setDepthMode(GraphicsManager *this, DepthMode mode);
void __thiscall GraphicsManager::setDepthTextureRT(GraphicsManager *this, unsigned int slot, RenderTarget *rt);
void __thiscall GraphicsManager::setIB(GraphicsManager *this, IndexBuffer *ib);
void __thiscall GraphicsManager::setProjectionMatrix(GraphicsManager *this, const mat44f *matrix);
void __thiscall GraphicsManager::setRenderTarget(GraphicsManager *this, RenderTarget *rt);
void __thiscall GraphicsManager::setSamplerState(GraphicsManager *this);
void __thiscall GraphicsManager::setScreenRenderTargets(GraphicsManager *this);
void __thiscall GraphicsManager::setScreenSpaceMode(GraphicsManager *this);
void __thiscall GraphicsManager::setShader(GraphicsManager *this, Shader *sh);
void __thiscall GraphicsManager::setShadowMapBias(GraphicsManager *this, float b0, float b1, float b2);
void __thiscall GraphicsManager::setShadowMapMatrix(GraphicsManager *this, int level, const mat44f *matrix);
void __thiscall GraphicsManager::setShadowMapTexture(GraphicsManager *this, int level, RenderTarget *rt);
void __thiscall GraphicsManager::setTexture(GraphicsManager *this, int slot, const Texture *tex);
void __thiscall GraphicsManager::setTextureRT(GraphicsManager *this, unsigned int slot, RenderTarget *rt);
void __thiscall GraphicsManager::setVB(GraphicsManager *this, IVertexBuffer *vb);
void __thiscall GraphicsManager::setViewMatrix(GraphicsManager *this, const mat44f *matrix, Camera *camera);
void __thiscall GraphicsManager::setViewport(GraphicsManager *this, int left, int top, int width, int height);
void __thiscall GraphicsManager::setWorldMatrix(GraphicsManager *this, const mat44f *matrix);
void __thiscall GraphicsManager::updateLightingSetttings(GraphicsManager *this);
const CubicSpline<float,float>::Element *__cdecl std::_Lower_bound<CubicSpline<float,float>::Element const *,CubicSpline<float,float>::Element,int,std::less<void>>(const CubicSpline<float,float>::Element *_First, const CubicSpline<float,float>::Element *_Last, const CubicSpline<float,float>::Element *_Val);
void __thiscall Curve::Curve(Curve *this);
void __thiscall Curve::~Curve(Curve *this);
void __thiscall Curve::addValue(Curve *this, float ref, float val);
void __thiscall CubicSpline<float,float>::computeCoefficients(CubicSpline<float,float> *this, const std::vector<float> *x, const std::vector<float> *y);
int __thiscall Curve::getCount(Curve *this);
double __thiscall Curve::getCubicSplineValue(Curve *this, float ref);
double __thiscall Curve::getMaxReference(Curve *this);
std::pair<float,float> *__thiscall Curve::getPairAtIndex(Curve *this, std::pair<float,float> *result, int index);
double __thiscall Curve::getValue(Curve *this, float ref);
void __thiscall Curve::load(Curve *this, const std::wstring *ifilename);
void __thiscall Curve::loadEncrypted(Curve *this, const std::wstring *ifilename, const std::wstring *dataFile);
void __thiscall Curve::print(Curve *this);
void __thiscall Curve::scale(Curve *this, float v);
void __cdecl std::_Uninit_def_fill_n<mat44f *,unsigned int,std::allocator<mat44f>,mat44f>(mat44f *_First, unsigned int _Count);
void __cdecl std::_Uninit_def_fill_n<quatpos *,unsigned int,std::allocator<quatpos>,quatpos>(quatpos *_First, unsigned int _Count);
void __thiscall std::vector<mat44f>::vector<mat44f>(std::vector<mat44f> *this, unsigned int _Count);
void __thiscall quatpos::quatpos(quatpos *this, const mat44f *matrix);
void __thiscall std::vector<AnimationSet>::_Reallocate(std::vector<AnimationSet> *this, unsigned int _Count);
void __thiscall std::vector<quatpos>::_Reallocate(std::vector<quatpos> *this, unsigned int _Count);
void __thiscall std::vector<AnimationSet>::_Reserve(std::vector<AnimationSet> *this, unsigned int _Count);
void __thiscall std::vector<quatpos>::_Reserve(std::vector<quatpos> *this, unsigned int _Count);
void __thiscall Animation::load(Animation *this, const std::wstring *filename);
void __thiscall std::vector<AnimationSet>::push_back(std::vector<AnimationSet> *this, AnimationSet *_Val);
void __thiscall std::vector<quatpos>::resize(std::vector<quatpos> *this, unsigned int _Newsize);
quatpos *__cdecl std::_Copy_impl<quatpos *,quatpos *>(quatpos *_First, quatpos *_Last, quatpos *_Dest);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<AnimationPlayerSet>>>(AnimationPlayerSet *_First, AnimationPlayerSet *_Last);
// void __usercall std::_For_each<AnimationPlayerSet *,_lambda_72c7f015b21abe199def856aa3c8c7f8_>(__m128i a1@<xmm3>, AnimationPlayerSet *_First, AnimationPlayerSet *_Last, AnimationPlayer::setCurrentPos::__l24::<lambda_72c7f015b21abe199def856aa3c8c7f8> *_Func);
quatpos *__thiscall std::vector<quatpos>::_Ucopy<quatpos *>(std::vector<quatpos> *this, quatpos *_First, quatpos *_Last, quatpos *_Ptr);
quatpos *__cdecl std::_Uninit_move<quatpos *,quatpos *,std::allocator<quatpos>,quatpos>(quatpos *_First, quatpos *_Last, quatpos *_Dest);
AnimationPlayerSet *__cdecl std::_Uninit_move<AnimationPlayerSet *,AnimationPlayerSet *,std::allocator<AnimationPlayerSet>,AnimationPlayerSet>(AnimationPlayerSet *_First, AnimationPlayerSet *_Last, AnimationPlayerSet *_Dest);
void __thiscall std::_Wrap_alloc<std::allocator<StartingTrackSemaphore::LightGroup>>::destroy<StartingTrackSemaphore::LightGroup>(std::_Wrap_alloc<std::allocator<AnimationPlayerSet> > *this, AnimationPlayerSet *_Ptr);
void __thiscall AnimationPlayer::AnimationPlayer(AnimationPlayer *this, Animation *animation, Node *nodeRoot, AnimationPlayer::AnimationAddingMode addmode);
void __thiscall std::vector<AnimationPlayerSet>::~vector<AnimationPlayerSet>(AnimationPlayer *this);
void __thiscall TimeEvaluation::~TimeEvaluation(DRS *this);
std::vector<quatpos> *__thiscall std::vector<quatpos>::operator=(std::vector<quatpos> *this, const std::vector<quatpos> *_Right);
void __thiscall std::vector<AnimationPlayerSet>::_Reallocate(std::vector<AnimationPlayerSet> *this, unsigned int _Count);
void __thiscall std::vector<AnimationPlayerSet>::_Reserve(std::vector<AnimationPlayerSet> *this, unsigned int _Count);
void __thiscall AnimationPlayer::activateNodes(AnimationPlayer *this, Node *root);
void __thiscall AnimationPlayer::activateNodesRec(AnimationPlayer *this, Node *n);
double __thiscall AnimationPlayer::getCurrentPos(AnimationPlayer *this);
AnimationPlayerSet *__thiscall AnimationPlayer::getSetByNode(AnimationPlayer *this, Node *n);
char __thiscall AnimationPlayer::isAnimatingNode(AnimationPlayer *this, Node *node);
void __thiscall AnimationPlayer::setCurrentPos(AnimationPlayer *this, float p, float force);

void __thiscall ShaderVariable::ShaderVariable(ShaderVariable *this, std::wstring iname, CBuffer *cbuffer, int ioffset, int isize);
ShaderVariable *__thiscall ShaderVariable::`vector deleting destructor'(ShaderVariable *this, unsigned int a2);
void __thiscall ShaderVariable::set(ShaderVariable *this, float *value);
MaterialResource *__cdecl std::_Copy_impl<MaterialResource *,MaterialResource *>(MaterialResource *_First, MaterialResource *_Last, MaterialResource *_Dest);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<MaterialResource>>>(MaterialResource *_First, MaterialResource *_Last);
MaterialResource *__thiscall std::vector<MaterialResource>::_Ucopy<MaterialResource *>(std::vector<MaterialResource> *this, MaterialResource *_First, MaterialResource *_Last, MaterialResource *_Ptr);
void __cdecl std::_Uninit_def_fill_n<CBuffer *,unsigned int,std::allocator<CBuffer>,CBuffer>(CBuffer *_First, unsigned int _Count);
CBuffer *__cdecl std::_Uninit_move<DICommand *,DICommand *,std::allocator<DICommand>,DICommand>(CBuffer *_First, CBuffer *_Last, CBuffer *_Dest);
MaterialResource *__cdecl std::_Uninit_move<MaterialResource *,MaterialResource *,std::allocator<MaterialResource>,MaterialResource>(MaterialResource *_First, MaterialResource *_Last, MaterialResource *_Dest);
void __thiscall std::_Wrap_alloc<std::allocator<MaterialResource>>::destroy<MaterialResource>(std::_Wrap_alloc<std::allocator<MaterialResource> > *this, MaterialResource *_Ptr);
void __thiscall std::vector<MaterialResource>::vector<MaterialResource>(std::vector<MaterialResource> *this, const std::vector<MaterialResource> *_Right);
void __thiscall Material::Material(Material *this, const std::wstring *iname, GraphicsManager *graphics);
void __thiscall Material::Material(Material *this, const Material *mat);
void __thiscall MaterialResource::MaterialResource(MaterialResource *this, const MaterialResource *__that);
void __thiscall Material::~Material(Material *this);
void __thiscall MaterialResource::~MaterialResource(MaterialResource *this);
std::vector<MaterialResource> *__thiscall std::vector<MaterialResource>::operator=(std::vector<MaterialResource> *this, const std::vector<MaterialResource> *_Right);
unsigned int __thiscall std::vector<GameMode::ConditionDef>::_Grow_to(std::vector<AxleJoint> *this, unsigned int _Count);
void __thiscall std::vector<CBuffer>::_Reallocate(std::vector<CBuffer> *this, unsigned int _Count);
void __thiscall std::vector<MaterialResource>::_Reallocate(std::vector<MaterialResource> *this, unsigned int _Count);
void __thiscall std::vector<CBuffer>::_Reserve(std::vector<CBuffer> *this, unsigned int _Count);
void __thiscall std::vector<MaterialResource>::_Reserve(std::vector<MaterialResource> *this, unsigned int _Count);
void __thiscall std::vector<CBuffer>::_Tidy(std::vector<CBuffer> *this);
void __thiscall std::vector<MaterialResource>::_Tidy(std::vector<MaterialResource> *this);
void __thiscall Material::apply(Material *this, RenderContext *rc);
void __thiscall Material::createCBuffers(Material *this);
int __thiscall Material::getResourceIndex(Material *this, const std::wstring *name);
MaterialVar *__thiscall Material::getVar(Material *this, const std::wstring *vname);
void __thiscall Material::initShaderVars(Material *this, bool updateOptions);
void __thiscall std::vector<MaterialResource>::push_back(std::vector<MaterialResource> *this, const MaterialResource *_Val);
void __thiscall Material::resetVars(Material *this);
void __thiscall std::vector<CBuffer>::resize(std::vector<CBuffer> *this, unsigned int _Newsize);
// void __userpurge Material::setShader(Material *this@<ecx>, unsigned int a2@<ebx>, const std::wstring *name);
void __thiscall Material::setTexture(Material *this, const std::wstring *rname, const Texture *tex);
void __thiscall Material::setVar(Material *this, const std::wstring *name, const vec3f *value);
void __thiscall Material::setVar(Material *this, const std::wstring *name, const vec4f *value);
void __thiscall Material::setVar(Material *this, const std::wstring *name, float value);
void __thiscall Triangle::Triangle(Triangle *this, const vec3f *p1, const vec3f *p2, const vec3f *p3);
void __thiscall Triangle::~Triangle(Triangle *this);
double __thiscall Triangle::computeArea(Triangle *this);
void __cdecl std::_Uninit_def_fill_n<ShadowMapSettings *,unsigned int,std::allocator<ShadowMapSettings>,ShadowMapSettings>(ShadowMapSettings *_First, unsigned int _Count);
void __thiscall CameraShadowMapped::CameraShadowMapped(CameraShadowMapped *this, const std::wstring *iname, GraphicsManager *gm);
void __thiscall CameraShadowMapped::~CameraShadowMapped(CameraShadowMapped *this);
CameraShadowMapped *__thiscall CameraShadowMapped::`vector deleting destructor'(CameraShadowMapped *this, unsigned int a2);
void __thiscall CameraShadowMapped::beginShadowMapPass(CameraShadowMapped *this, int level, RenderContext *rc, const mat44f *cameraMatrix);

void __thiscall CameraShadowMapped::createShadowMapMatrix(CameraShadowMapped *this, const mat44f *cameraMatrix, float nearp, float farp, vec3f lightDir, float cameraHeight, mat44f *view, mat44f *proj);
void __thiscall CameraShadowMapped::initShadowRenderTargets(CameraShadowMapped *this);
void __thiscall CameraShadowMapped::render(CameraShadowMapped *this, Node *root, float dt);
void __thiscall CameraShadowMapped::renderPass(CameraShadowMapped *this, Node *root, float dt);
void __thiscall std::vector<ShadowMapSettings>::resize(std::vector<ShadowMapSettings> *this, unsigned int _Newsize);
void __thiscall std::vector<mat44f>::resize(std::vector<mat44f> *this, unsigned int _Newsize);
void __thiscall CameraShadowMapped::setShadowMapsSplits(CameraShadowMapped *this, float s1, float s2, float s3, float s4);
// void __userpurge CameraShadowMapped::shadowMapPass(CameraShadowMapped *this@<ecx>, unsigned int a2@<ebx>, Node *root, float dt);
void __cdecl std::_For_each<Node * *,_lambda_055418ee63006fb40e78a095a2416dbb_>(Node **_First, Node **_Last, Node::visit::__l6::<lambda_055418ee63006fb40e78a095a2416dbb> *_Func);
void __thiscall Node::Node(Node *this, const Node *node);
void __thiscall Node::Node(Node *this, const std::wstring *n);
void __thiscall Node::~Node(Node *this);
Node *__thiscall Node::`scalar deleting destructor'(Node *this, unsigned int a2);
void __thiscall Node::addChild(Node *this, Node *n);
void __thiscall Node::compile(Node *this, CompileContext *cc);
Node *__thiscall Node::findChildByName(Node *this, const std::wstring *sname, bool recursive);
void __thiscall Node::findChildrenByName(Node *this, const std::wstring *nname, std::vector<Node *> *result);
void __thiscall Node::findChildrenByPrefix(Node *this, const std::wstring *prefix, std::vector<Node *> *result);
Node *__thiscall Node::getParent(Node *this);
mat44f *__thiscall Node::getWorldMatrix(Node *this, mat44f *result);
vec3f *__thiscall Node::localToWorld(Node *this, vec3f *result, const vec3f *pos);
void __thiscall Node::printTree(Node *this, int ident);
void __thiscall Node::removeChild(Node *this, Node *n);
void __thiscall Node::render(Node *this, RenderContext *rc);
void __thiscall Node::renderAudio(Node *this);
void __thiscall Node::visit(Node *this, std::function<bool __cdecl(Node *)> onVisit, std::function<void __cdecl(Node *)> onPostVisit);
vec3f *__thiscall Node::worldToLocal(Node *this, vec3f *result, const vec3f *pos);
vec3f *__thiscall Node::worldToLocalNormal(Node *this, vec3f *result, const vec3f *pos);
void __thiscall Camera::Camera(Camera *this, const std::wstring *iname, GraphicsManager *rm);
void __thiscall Camera::~Camera(Camera *this);
Camera *__thiscall Camera::`scalar deleting destructor'(Camera *this, unsigned int a2);
void __thiscall Camera::clearBuffers(Camera *this);

mat44f *__thiscall Camera::getFinalWorldMatrix(Camera *this, mat44f *result);
mat44f *__thiscall Camera::getPerspectiveMatrix(Camera *this, mat44f *result);
mat44f *__thiscall Camera::getViewMatrix(Camera *this, mat44f *result);
void __thiscall Camera::moveForward(Camera *this, float d);
void __thiscall Camera::moveRight(Camera *this, float d);
void __thiscall Camera::moveUpWorld(Camera *this, float d);
void __thiscall Camera::render(Camera *this, Node *root, float dt);
void __thiscall Camera::renderAxis(Camera *this, bool useZBuffer);
void __thiscall Camera::renderCamera(Camera *this);
void __thiscall Camera::renderCameraCustomPerspective(Camera *this, float left, float right, float top, float bottom);
// void __userpurge Camera::rotateHeading(Camera *this@<ecx>, int a2@<esi>, float rads);
// void __userpurge Camera::rotateOnAxis(Camera *this@<ecx>, int a2@<edi>, int a3@<esi>, const vec3f *axis, float rads);
// void __userpurge Camera::rotatePitch(Camera *this@<ecx>, int a2@<esi>, float rads);
// void __userpurge Camera::rotateRoll(Camera *this@<ecx>, int a2@<esi>, float rads);
void __thiscall Camera::setClearColor(Camera *this, float r, float g, float b, float a);
void __thiscall CameraMouseControlBase::CameraMouseControlBase(CameraMouseControlBase *this, Camera *camera);
void __thiscall CameraMouseControlBase::~CameraMouseControlBase(CameraMouseControlBase *this);
CameraMouseControlBase *__thiscall CameraMouseControlBase::`scalar deleting destructor'(CameraMouseControlBase *this, unsigned int a2);
// void __userpurge CameraMouseControlBase::mouseLook(CameraMouseControlBase *this@<ecx>, int a2@<esi>, float dt, float speed);
void __thiscall CameraMouseControlBase::stepKeyboard(CameraMouseControlBase *this, float dt, float msp);
void __thiscall CameraMouseControlBase::update(CameraMouseControlBase *this, float deltaT);
void __thiscall StringBlitter3D::StringBlitter3D(StringBlitter3D *this, const std::wstring *name, GraphicsManager *graphics);
void __thiscall StringBlitter3D::~StringBlitter3D(StringBlitter3D *this);
void __thiscall StringBlitter3D::blitString(StringBlitter3D *this, const std::wstring *s, float scale, eFontAlign align, vec3f offset);
void __thiscall StringBlitter3D::blitString(StringBlitter3D *this, const std::wstring *s, mat44f rotationMatrix, float scale, eFontAlign align, vec3f offset);
void __thiscall StringBlitter3D::blitStringV2(StringBlitter3D *this, const std::wstring *s, float scale, eFontAlign align, vec3f offset);
double __thiscall StringBlitter3D::getStringWidth(StringBlitter3D *this, const std::wstring *s);
void __thiscall StringBlitter3D::initCoords(StringBlitter3D *this, const std::wstring *name);
void __thiscall StringBlitter3D::initTexture(StringBlitter3D *this, const std::wstring *name);
void __thiscall StringBlitter3D::setColor(StringBlitter3D *this, const vec4f *a_color);
void __thiscall StringBlitter3D::setScaleConst(StringBlitter3D *this, float s);
// void __userpurge StereoCameraForward::StereoCameraForward(StereoCameraForward *this@<ecx>, unsigned int a2@<ebx>, int a3@<ebp>, const std::wstring *iname, GraphicsManager *graphics, bool auseBlur, bool isYebis);
void __thiscall std::unique_ptr<YebisPP>::~unique_ptr<YebisPP>(std::unique_ptr<YebisPP> *this);
void __thiscall StereoCameraForward::~StereoCameraForward(StereoCameraForward *this);
StereoCameraForward *__thiscall StereoCameraForward::`vector deleting destructor'(StereoCameraForward *this, unsigned int a2);
char __thiscall OculusTexture::Init(OculusTexture *this, struct ovrHmdStruct *session, int sizeW, int sizeH);
// mat44f *__userpurge StereoCameraForward::computeCameraMatrix@<eax>(StereoCameraForward *this@<ecx>, __int128 a2@<xmm2>, __int128 a3@<xmm3>, mat44f *result, int eyeRenderPose, int eyeRenderPose_4, int eyeRenderPose_8, int eyeRenderPose_12, __int128 eyeRenderPose_16);
// void __usercall StereoCameraForward::computeEyePoses(StereoCameraForward *this@<ecx>, int a2@<ebp>);
void __thiscall StereoCameraForward::finishRendering(StereoCameraForward *this);
// mat44f *__userpurge StereoCameraForward::getFinalWorldMatrix@<eax>(StereoCameraForward *this@<ecx>, int a2@<ebp>, __int128 a3@<xmm2>, __int128 a4@<xmm3>, mat44f *result);
mat44f *__thiscall StereoCameraForward::getPerspectiveMatrix(StereoCameraForward *this, mat44f *result);
mat44f *__thiscall StereoCameraForward::getViewMatrix(StereoCameraForward *this, mat44f *result);
// bool __usercall StereoCameraForward::initOculus@<al>(int a1@<ebp>);
void __thiscall StereoCameraForward::normalRendering(StereoCameraForward *this, Node *rootNode, float dt);
// ovrPosef_ *__userpurge StereoCameraForward::oculusRenderPass@<eax>(StereoCameraForward *this@<ecx>, __int128 a2@<xmm2>, __int128 a3@<xmm3>, ovrPosef_ *result, const unsigned int screenIndex, Node *rootNode, float dt);
// void __userpurge StereoCameraForward::render(StereoCameraForward *this@<ecx>, int a2@<ebp>, __int128 a3@<xmm2>, __int128 a4@<xmm3>, Node *blurred, Node *unblurred, Node *shadow, float dt);
void __thiscall StereoCameraForward::renderMirrorTexture(StereoCameraForward *this);
// void __userpurge StereoCameraForward::renderNoPP(StereoCameraForward *this@<ecx>, __int128 a2@<xmm2>, __int128 a3@<xmm3>, Node *node, float dt);
// void __userpurge StereoCameraForward::renderYebis(StereoCameraForward *this@<ecx>, int a2@<esi>, __int128 a3@<xmm2>, __int128 a4@<xmm3>, Node *node, float dt);
void __thiscall StereoCameraForward::resetHeadPosition(StereoCameraForward *this);
std::shared_ptr<Material> *__cdecl std::_Copy_impl<std::shared_ptr<Material> *,std::shared_ptr<Material> *>(std::shared_ptr<Material> *_First, std::shared_ptr<Material> *_Last, std::shared_ptr<Material> *_Dest);
Texture *__cdecl std::_Copy_impl<Texture *,Texture *>(Texture *_First, Texture *_Last, Texture *_Dest);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<BoneSolvePair>>>(BoneSolvePair *_First, BoneSolvePair *_Last);
void __cdecl std::_For_each<BoneSolvePair *,_lambda_ddee55b666c9fe7033ec247e5d5719bd_>(BoneSolvePair *_First, BoneSolvePair *_Last, KN5IO::load::__l27::<lambda_ddee55b666c9fe7033ec247e5d5719bd> *_Func);
std::shared_ptr<Material> *__thiscall std::vector<std::shared_ptr<Material>>::_Ucopy<std::shared_ptr<Material> *>(std::vector<std::shared_ptr<Material>> *this, std::shared_ptr<Material> *_First, std::shared_ptr<Material> *_Last, std::shared_ptr<Material> *_Ptr);
Texture *__thiscall std::vector<Texture>::_Ucopy<Texture *>(std::vector<Texture> *this, Texture *_First, Texture *_Last, Texture *_Ptr);
std::shared_ptr<Material> *__cdecl std::_Uninit_copy<std::shared_ptr<Material> *,std::shared_ptr<Material> *,std::allocator<std::shared_ptr<Material>>>(std::shared_ptr<Material> *_First, std::shared_ptr<Material> *_Last, std::shared_ptr<Material> *_Dest);
void __cdecl std::_Uninit_def_fill_n<MeshVertex *,unsigned int,std::allocator<MeshVertex>,MeshVertex>(MeshVertex *_First, unsigned int _Count);
void __cdecl std::_Uninit_def_fill_n<SkinnedMeshVertex *,unsigned int,std::allocator<SkinnedMeshVertex>,SkinnedMeshVertex>(SkinnedMeshVertex *_First, unsigned int _Count);
BoneSolvePair *__cdecl std::_Uninit_move<BoneSolvePair *,BoneSolvePair *,std::allocator<BoneSolvePair>,BoneSolvePair>(BoneSolvePair *_First, BoneSolvePair *_Last, BoneSolvePair *_Dest);
void __thiscall std::_Wrap_alloc<std::allocator<BoneSolvePair>>::destroy<BoneSolvePair>(std::_Wrap_alloc<std::allocator<BoneSolvePair> > *this, BoneSolvePair *_Ptr);
void __thiscall BoneSolvePair::BoneSolvePair(BoneSolvePair *this, const BoneSolvePair *__that);
void __thiscall KN5IO::KN5IO(KN5IO *this, GraphicsManager *graphics);
void __thiscall SkinnedMeshVertex::SkinnedMeshVertex(SkinnedMeshVertex *this);
void __thiscall KN5IO::~KN5IO(KN5IO *this);
std::vector<std::shared_ptr<Material>> *__thiscall std::vector<std::shared_ptr<Material>>::operator=(std::vector<std::shared_ptr<Material>> *this, const std::vector<std::shared_ptr<Material>> *_Right);
std::vector<Texture> *__thiscall std::vector<Texture>::operator=(std::vector<Texture> *this, const std::vector<Texture> *_Right);
KN5IO *__thiscall KN5IO::`scalar deleting destructor'(KN5IO *this, unsigned int a2);
char __thiscall std::vector<Texture>::_Buy(std::vector<Texture> *this, unsigned int _Capacity);
unsigned int __thiscall std::vector<BoneSolvePair>::_Grow_to(std::vector<SkinnedBone> *this, unsigned int _Count);
void __thiscall std::vector<BoneSolvePair>::_Reallocate(std::vector<BoneSolvePair> *this, unsigned int _Count);
void __thiscall std::vector<BoneSolvePair>::_Reserve(std::vector<BoneSolvePair> *this, unsigned int _Count);
void __thiscall std::vector<SkinnedMeshVertex>::_Reserve(std::vector<SkinnedMeshVertex> *this, unsigned int _Count);
void __cdecl KN5IO::addDLCKey(unsigned int key);
void __thiscall KN5IO::addTextureFolder(KN5IO *this, const std::wstring *folder);
void __thiscall std::vector<Texture>::clear(std::vector<Texture> *this);
std::wstring *__thiscall KN5IO::getSkinOverridenTexturePath(KN5IO *this, std::wstring *result, std::wstring tname);
Node *__thiscall KN5IO::load(KN5IO *this, const std::wstring *filename);
void __thiscall KN5IO::loadBinaryV1(KN5IO *this, std::ifstream *in, Node *n);
void __thiscall KN5IO::loadBinaryV2(KN5IO *this, std::ifstream *in, Node *n);
// void __userpurge KN5IO::loadMaterialsBinary(KN5IO *this@<ecx>, unsigned int a2@<ebx>, std::ifstream *in, std::wstring filename);
std::wstring *__thiscall KN5IO::loadString(KN5IO *this, std::wstring *result, std::ifstream *in);
void __thiscall KN5IO::loadTexture(KN5IO *this, std::ifstream *in);
void __thiscall std::vector<BoneSolvePair>::push_back(std::vector<BoneSolvePair> *this, const BoneSolvePair *_Val);
void __thiscall std::vector<unsigned short>::resize(std::vector<unsigned short> *this, unsigned int _Newsize);
void __thiscall std::vector<MeshVertex>::resize(std::vector<MeshVertex> *this, unsigned int _Newsize);
void __thiscall std::vector<SkinnedMeshVertex>::resize(std::vector<SkinnedMeshVertex> *this, unsigned int _Newsize);
void __cdecl std::_For_each<Node * *,_lambda_f092a279c4c78e614c7e7646e117040c_>(Node **_First, Node **_Last, SceneGraphCloner::cloneNode::__l3::<lambda_f092a279c4c78e614c7e7646e117040c> *_Func);
void __thiscall SceneGraphCloner::SceneGraphCloner(SceneGraphCloner *this);
void __thiscall SceneGraphCloner::~SceneGraphCloner(SceneGraphCloner *this);
SceneGraphCloner *__thiscall SceneGraphCloner::`vector deleting destructor'(SceneGraphCloner *this, unsigned int a2);
Node *__thiscall SceneGraphCloner::cloneGraph(SceneGraphCloner *this, Node *n);
void __thiscall SceneGraphCloner::cloneNode(SceneGraphCloner *this, Node *src, Node *dst);
void __thiscall SceneGraphCloner::getClonedNode(SceneGraphCloner *this, Node *src);
void __thiscall Model::Model(Model *this, std::wstring name);
Model *__thiscall Model::`vector deleting destructor'(Model *this, unsigned int a2);
void __thiscall Model::load(Model *this, const std::wstring *filename, GraphicsManager *graphics, IModelImporter *importer);
void __thiscall std::locale::locale(std::locale *this, const std::locale *_Loc, const std::codecvt_utf8<wchar_t,1114111,0> *_Facptr);
void __thiscall DebugLog::DebugLog(DebugLog *this);
void __thiscall std::codecvt_utf8<wchar_t,1114111,0>::~codecvt_utf8<wchar_t,1114111,0>(std::codecvt_utf8<wchar_t,1114111,0> *this);
void __thiscall DebugLog::~DebugLog(DebugLog *this);
std::codecvt_utf8<wchar_t,1114111,0> *__thiscall std::codecvt_utf8<wchar_t,1114111,0>::`vector deleting destructor'(std::codecvt_utf8<wchar_t,1114111,0> *this, unsigned int a2);
DebugLog *__thiscall DebugLog::`scalar deleting destructor'(DebugLog *this, unsigned int a2);
int __thiscall std::codecvt_utf8<wchar_t,1114111,0>::do_in(std::codecvt_utf8<wchar_t,1114111,0> *this, int *_State, const char *_First1, const char *_Last1, const char **_Mid1, wchar_t *_First2, wchar_t *_Last2, wchar_t **_Mid2);
const char *__thiscall std::codecvt_utf8<wchar_t,1114111,0>::do_length(std::codecvt_utf8<wchar_t,1114111,0> *this, int *_State, const char *_First1, const char *_Last1, unsigned int _Count);
BOOL __thiscall std::codecvt_utf8<wchar_t,1114111,0>::do_out(std::codecvt_utf8<wchar_t,1114111,0> *this, int *_State, const wchar_t *_First1, const wchar_t *_Last1, const wchar_t **_Mid1, char *_First2, char *_Last2, char **_Mid2);
int __thiscall std::codecvt_utf8<wchar_t,1114111,0>::do_unshift(std::codecvt_utf8<wchar_t,1114111,0> *this, int *__formal, char *_First2, char *__formal, char **_Mid2);
// void __userpurge CrashGuard::CrashGuard(CrashGuard *this@<ecx>, unsigned int a2@<ebx>, const std::wstring *pdbName);
void __thiscall CrashGuard::~CrashGuard(CrashGuard *this);
CrashGuard *__thiscall CrashGuard::`scalar deleting destructor'(CrashGuard *this, unsigned int a2);
void __thiscall SinSignalGenerator::SinSignalGenerator(SinSignalGenerator *this);
void __thiscall SinSignalGenerator::~SinSignalGenerator(SinSignalGenerator *this);
SinSignalGenerator *__thiscall SinSignalGenerator::`scalar deleting destructor'(SinSignalGenerator *this, unsigned int a2);
double __thiscall SinSignalGenerator::getValue(SinSignalGenerator *this);
void __cdecl std::_For_each<Node * *,_lambda_3270fa600fff0b7b11de11848bf89cb4_>(Node **_First, Node **_Last, NodeBoundingSphere::applyNoCull::__l9::<lambda_3270fa600fff0b7b11de11848bf89cb4> *_Func);
void __thiscall NodeBoundingSphere::NodeBoundingSphere(NodeBoundingSphere *this, std::wstring name, float radius);
NodeBoundingSphere *__thiscall NodeBoundingSphere::`vector deleting destructor'(NodeBoundingSphere *this, unsigned int a2);
void __thiscall NodeBoundingSphere::applyNoCull(NodeBoundingSphere *this, Node *n);
void __thiscall NodeBoundingSphere::render(NodeBoundingSphere *this, RenderContext *rc);
sphere *__thiscall sphere::transform(sphere *this, sphere *result, const mat44f *matrix);
ModelBoundariesCoordinates *__cdecl ModelBoundaries::computeAAModelBoundaries(ModelBoundariesCoordinates *result, Node *base);
void __cdecl ModelBoundaries::computeAAModelBoundariesRecursive(Node *base, ModelBoundariesCoordinates *mb, mat44f currentMatrix);
void __thiscall DebugTimer::DebugTimer(DebugTimer *this, const std::wstring *iname);
void __thiscall DebugTimer::~DebugTimer(DebugTimer *this);
DebugTimer *__thiscall DebugTimer::`vector deleting destructor'(DebugTimer *this, unsigned int a2);
void __thiscall ShapeRenderer::ShapeRenderer(ShapeRenderer *this, GLRenderer *agl);
void __thiscall ShapeRenderer::~ShapeRenderer(ShapeRenderer *this);
ShapeRenderer *__thiscall ShapeRenderer::`vector deleting destructor'(ShapeRenderer *this, unsigned int a2);
void __thiscall ShapeRenderer::renderBox(ShapeRenderer *this, const vec3f *centre, const vec3f *size);
void __thiscall CBuffer::CBuffer(CBuffer *this, int islot, int isize);
void __thiscall CBuffer::CBuffer(CBuffer *this);
void __thiscall CBuffer::commit(CBuffer *this);
void __thiscall CBuffer::get(CBuffer *this, float *value, int offset, int size);
void __thiscall CBuffer::init(CBuffer *this, int islot, int isize);
void __thiscall CBuffer::map(CBuffer *this, void *bdata, int bsize);
void __thiscall CBuffer::release(CBuffer *this);
void __thiscall CBuffer::set(CBuffer *this, float *value, int offset, int size);
void __thiscall CBuffer::touch(CBuffer *this);
void __thiscall CameraMeshFilter::CameraMeshFilter(CameraMeshFilter *this, Camera *icamera, RenderPassID passid, int amaxLayer);
void __thiscall CameraMeshFilter::~CameraMeshFilter(CameraMeshFilter *this);
IMeshRenderFilter *__thiscall CameraMeshFilter::`scalar deleting destructor'(IMeshRenderFilter *this, unsigned int a2);
char __thiscall CameraMeshFilter::isVisible(CameraMeshFilter *this, Renderable *mesh, const mat44f *currentMatrix);
void __thiscall MaterialFilter::MaterialFilter(MaterialFilter *this);
void __thiscall MaterialFilter::~MaterialFilter(MaterialFilter *this);
MaterialFilter *__thiscall MaterialFilter::`scalar deleting destructor'(MaterialFilter *this, unsigned int a2);
void __thiscall MaterialFilter::apply(MaterialFilter *this, const std::shared_ptr<Material> *material, RenderContext *rc);
void __thiscall Shader::Shader(Shader *this, GraphicsManager *graphics, const std::wstring *ifilename);
void __thiscall Shader::~Shader(Shader *this);
Shader *__thiscall Shader::`vector deleting destructor'(Shader *this, unsigned int a2);
void __thiscall Shader::apply(Shader *this);
ShaderVariable *__thiscall Shader::getVar(Shader *this, const std::wstring *name);
char __thiscall Shader::initShaderBinary(Shader *this);
void __thiscall Shader::reflectVars(Shader *this);
void __thiscall WorldMatrixTraverser::traverse(WorldMatrixTraverser *this, Node *node);
void __thiscall TextNode::TextNode(TextNode *this, std::wstring a_name, StringBlitter3D *a_blitter);
TextNode *__thiscall TextNode::`vector deleting destructor'(TextNode *this, unsigned int a2);
void __thiscall TextNode::render(TextNode *this, RenderContext *rc);
void __cdecl std::_For_each<Node * *,_lambda_8d05f414990f2ed894ce6d17ef89418b_>(Node **_First, Node **_Last, AnimationBlender::blendAnimations::__l8::<lambda_8d05f414990f2ed894ce6d17ef89418b> *_Func);
void __thiscall AnimationBlender::addTargetNode(AnimationBlender *this, Node *n, bool recursive);
void __thiscall AnimationBlender::blendAnimations(AnimationBlender *this, AnimationPlayer *a0, AnimationPlayer *a1, float blend);
MeshVertex *__cdecl std::_Copy_impl<MeshVertex *,MeshVertex *>(MeshVertex *_First, MeshVertex *_Last, MeshVertex *_Dest);
MeshVertex *__thiscall std::vector<MeshVertex>::_Ucopy<MeshVertex *>(std::vector<MeshVertex> *this, MeshVertex *_First, MeshVertex *_Last, MeshVertex *_Ptr);
void __thiscall SplineStripBuilder::SplineStripBuilder(SplineStripBuilder *this, GraphicsManager *graphics);
void __thiscall SplineStripBuilder::~SplineStripBuilder(SplineStripBuilder *this);
std::vector<unsigned short> *__thiscall std::vector<unsigned short>::operator=(std::vector<unsigned short> *this, const std::vector<unsigned short> *_Right);
std::vector<MeshVertex> *__thiscall std::vector<MeshVertex>::operator=(std::vector<MeshVertex> *this, const std::vector<MeshVertex> *_Right);
char __thiscall std::vector<wchar_t>::_Buy(std::vector<unsigned short> *this, unsigned int _Capacity);
char __thiscall std::vector<MeshVertex>::_Buy(std::vector<MeshVertex> *this, unsigned int _Capacity);
void __thiscall SplineStripBuilder::addPoint(SplineStripBuilder *this, const vec3f *p, const vec3f *normal, const vec3f *color, float alpha);
void __thiscall SplineStripBuilder::addVertex(SplineStripBuilder *this, const vec3f *v1, const vec3f *normal, const vec2f *tex, float alpha);
Mesh *__thiscall SplineStripBuilder::buildMesh(SplineStripBuilder *this);
void __thiscall CameraMirror::CameraMirror(CameraMirror *this, const std::wstring *name, GraphicsManager *graphics);
CameraMirror *__thiscall CameraMirror::`vector deleting destructor'(CameraMirror *this, unsigned int a2);
void __thiscall CameraMirror::renderOpaque(CameraMirror *this, Node *node, float dt);
void __thiscall CameraMirror::renderTransparent(CameraMirror *this, Node *node, float dt);
void __thiscall RenderTarget::RenderTarget(RenderTarget *this, GraphicsManager *graphics, eRenderTargetFormat fmt, unsigned int iwidth, unsigned int iheight, bool hasColor, bool hasDepth, int mips);
void __thiscall RenderTarget::~RenderTarget(RenderTarget *this);
RenderTarget *__thiscall RenderTarget::`scalar deleting destructor'(RenderTarget *this, unsigned int a2);
void __thiscall RenderTarget::clear(RenderTarget *this);
void __thiscall Renderable::Renderable(Renderable *this, std::wstring iname);
void __thiscall Renderable::~Renderable(Renderable *this);
Renderable *__thiscall Renderable::`scalar deleting destructor'(Renderable *this, unsigned int a2);
void __thiscall DynamicBuffer::DynamicBuffer(DynamicBuffer *this, unsigned int isize);
void __thiscall DynamicBuffer::~DynamicBuffer(DynamicBuffer *this);
DynamicBuffer *__thiscall DynamicBuffer::`scalar deleting destructor'(DynamicBuffer *this, unsigned int a2);
void __thiscall DynamicBuffer::commit(DynamicBuffer *this, int numberOfVerticesToCommit);
void __thiscall DynamicBuffer::render(DynamicBuffer *this, unsigned int startIndex, unsigned int vertexCount);
void __thiscall std::_Ref_count_obj<Material>::_Ref_count_obj<Material>(std::_Ref_count_obj<Material> *this, const wchar_t (*<_Args_0>)[16], GraphicsManager **<_Args_1>);
SkyBox::CloudBillboard *__cdecl std::_Uninit_move<SkyBox::CloudBillboard *,SkyBox::CloudBillboard *,std::allocator<SkyBox::CloudBillboard>,SkyBox::CloudBillboard>(SkyBox::CloudBillboard *_First, SkyBox::CloudBillboard *_Last, SkyBox::CloudBillboard *_Dest);
std::shared_ptr<Material> *__cdecl std::make_shared<Material,wchar_t const (&)[19],GraphicsManager * &>(std::shared_ptr<Material> *result, const wchar_t (*<_Args_0>)[16], GraphicsManager **<_Args_1>);
// void __userpurge SkyBox::SkyBox(SkyBox *this@<ecx>, unsigned int a2@<ebx>, GraphicsManager *graphics);
void __thiscall SkyBox::CloudBillboard::~CloudBillboard(SkyBox::CloudBillboard *this);
SkyBox *__thiscall SkyBox::`vector deleting destructor'(SkyBox *this, unsigned int a2);
void __thiscall std::vector<SkyBox::CloudBillboard>::_Reallocate(std::vector<SkyBox::CloudBillboard> *this, unsigned int _Count);
void __thiscall std::vector<SkyBox::CloudBillboard>::_Reserve(std::vector<SkyBox::CloudBillboard> *this, unsigned int _Count);
void __thiscall std::vector<SkyBox::CloudBillboard>::_Tidy(std::vector<SkyBox::CloudBillboard> *this);
void __thiscall SkyBox::render(SkyBox *this, RenderContext *rc);
void __thiscall SkyBox::renderClouds(SkyBox *this, RenderContext *rc);
void __thiscall SkyBox::updateCloudsAnimation(SkyBox *this, float dt);
void __thiscall SkyBox::updateCloudsGeneration(SkyBox *this, const std::wstring *weatherName);
void __thiscall NodeEvent::NodeEvent(NodeEvent *this, std::wstring n);
NodeEvent *__thiscall NodeEvent::`vector deleting destructor'(NodeEvent *this, unsigned int a2);
void __thiscall NodeEvent::render(NodeEvent *this, RenderContext *rc);
void __thiscall CubeMapRenderer::CubeMapRenderer(CubeMapRenderer *this, GraphicsManager *graphics);
void __thiscall CubeMapRenderer::~CubeMapRenderer(CubeMapRenderer *this);
CubeMapRenderer *__thiscall CubeMapRenderer::`scalar deleting destructor'(CubeMapRenderer *this, unsigned int a2);
void __thiscall CubeMapRenderer::render(CubeMapRenderer *this, CubeMap *cubeMap, Node *root, Camera *sceneCamera);
void __thiscall CubeMapRenderer::setCameraNearFarPlanes(CubeMapRenderer *this, float nearp, float farp);
void __thiscall CameraForward::CameraForward(CameraForward *this, const std::wstring *iname, GraphicsManager *graphics, bool auseBlur);
void __thiscall CameraForward::~CameraForward(CameraForward *this);
std::_Func_impl<std::_Callable_obj<<lambda_22f845e23d0702e2524ec6ebab0229fb>,0>,std::allocator<std::_Func_class<void,OnWindowResize const &> >,void,OnWindowResize const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_22f845e23d0702e2524ec6ebab0229fb_,0>,std::allocator<std::_Func_class<void,OnWindowResize const &>>,void,OnWindowResize const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_22f845e23d0702e2524ec6ebab0229fb>,0>,std::allocator<std::_Func_class<void,OnWindowResize const &> >,void,OnWindowResize const &> *this, unsigned int a2);
CameraForward *__thiscall CameraForward::`vector deleting destructor'(CameraForward *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_22f845e23d0702e2524ec6ebab0229fb_,0>,std::allocator<std::_Func_class<void,OnWindowResize const &>>,void,OnWindowResize const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_22f845e23d0702e2524ec6ebab0229fb>,0>,std::allocator<std::_Func_class<void,OnWindowResize const &> >,void,OnWindowResize const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_22f845e23d0702e2524ec6ebab0229fb_,0>,std::allocator<std::_Func_class<void,OnWindowResize const &>>,void,OnWindowResize const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_22f845e23d0702e2524ec6ebab0229fb>,0>,std::allocator<std::_Func_class<void,OnWindowResize const &> >,void,OnWindowResize const &> *this, const OnWindowResize *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_22f845e23d0702e2524ec6ebab0229fb_,0>,std::allocator<std::_Func_class<void,OnWindowResize const &>>,void,OnWindowResize const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_22f845e23d0702e2524ec6ebab0229fb>,0>,std::allocator<std::_Func_class<void,OnWindowResize const &> >,void,OnWindowResize const &> *this);
// void __userpurge CameraForward::onResize(CameraForward *this@<ecx>, unsigned int a2@<ebx>, const OnWindowResize *message);
void __thiscall CameraForward::preparePostRenderTargets(CameraForward *this);
void __thiscall CameraForward::render(CameraForward *this, Node *blurred, Node *unblurred, Node *shadow, float dt);
void __thiscall CameraForward::renderBlurred(CameraForward *this, Node *blurred, Node *unblurred, Node *transparent, float dt);
void __thiscall CameraForward::resetHDR(CameraForward *this);
void __thiscall CameraForward::setBloomBaseLevel(CameraForward *this, float bl);
void __thiscall CameraForward::setBloomLevel(CameraForward *this, float bl);
void __thiscall CameraForward::setCubemapSize(CameraForward *this, unsigned int size);
void __thiscall CameraForward::setHighPassThreshold(CameraForward *this, float t);
void __thiscall CameraForward::setSolveBlurRenderTarget(CameraForward *this);
void __thiscall CameraForward::solveBlur(CameraForward *this, float dt);
// void __userpurge StereoCameraVive::StereoCameraVive(StereoCameraVive *this@<ecx>, unsigned int a2@<ebx>, const std::wstring *iname, GraphicsManager *graphics, bool auseBlur, bool vrRoom);
void __thiscall StereoCameraVive::~StereoCameraVive(StereoCameraVive *this);
StereoCameraVive *__thiscall StereoCameraVive::`vector deleting destructor'(StereoCameraVive *this, unsigned int a2);
void __thiscall vr::COpenVRContext::CheckClear(vr::COpenVRContext *this);
void __thiscall StereoCameraVive::UpdateHMDMatrixPose(StereoCameraVive *this);
vr::IVRSystem *__cdecl vr::VR_Init(vr::EVRInitError *peError, vr::EVRApplicationType eApplicationType);
mat44f *__thiscall StereoCameraVive::computeCameraMatrix(StereoCameraVive *this, mat44f *result, mat44f eyeRenderPose, vec3f *aViewAdjust);
void __thiscall StereoCameraVive::computeEyePoses(StereoCameraVive *this);
// char __usercall StereoCameraVive::configureOpenVR@<al>(StereoCameraVive *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall StereoCameraVive::finishRendering(StereoCameraVive *this);
double __thiscall StereoCameraVive::getEyesDistance(StereoCameraVive *this);
double __thiscall StereoCameraVive::getEyesDistanceRef(StereoCameraVive *this);
mat44f *__thiscall StereoCameraVive::getFinalWorldMatrix(StereoCameraVive *this, mat44f *result);
mat44f *__thiscall StereoCameraVive::getPerspectiveMatrix(StereoCameraVive *this, mat44f *result);
void __thiscall StereoCameraVive::getRenderMultiplier(StereoCameraVive *this);
mat44f *__thiscall StereoCameraVive::getViewMatrix(StereoCameraVive *this, mat44f *result);
bool __cdecl StereoCameraVive::initOpenVR();
void __thiscall StereoCameraVive::normalRendering(StereoCameraVive *this, Node *rootNode, float dt);
void __thiscall StereoCameraVive::render(StereoCameraVive *this, Node *blurred, Node *unblurred, Node *shadow, float dt);
void __thiscall StereoCameraVive::renderMirrorTexture(StereoCameraVive *this);
void __thiscall StereoCameraVive::renderNoPP(StereoCameraVive *this, Node *node, float dt);
void __thiscall StereoCameraVive::renderYebis(StereoCameraVive *this, Node *node, float dt);
void __thiscall StereoCameraVive::resetHeadPosition(StereoCameraVive *this);
// void __userpurge StereoCameraVive::setEyesDistance(StereoCameraVive *this@<ecx>, float value, char a3);
double __thiscall StereoCameraVive::setRenderMultiplier(StereoCameraVive *this, const char *str, float value, bool printMessage);
void __thiscall StereoCameraVive::setRenderMultiplier(StereoCameraVive *this, float value);
void __thiscall StereoCameraVive::shutdown(StereoCameraVive *this);
void __thiscall StereoCameraVive::viveRenderPass(StereoCameraVive *this, const unsigned int screenIndex, Node *rootNode, float dt);
void __thiscall CameraTripleScreen::CameraTripleScreen(CameraTripleScreen *this, const std::wstring *name, GraphicsManager *graphics, int numberOfParticleManagers);
void __thiscall TripleScreenData::TripleScreenData(TripleScreenData *this);
CameraTripleScreen *__fastcall CameraTripleScreen::`vector deleting destructor'(CameraTripleScreen *this, PPFX::CTextureUtil *a2, unsigned int a3);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0f4951729d63fd321729e1045e37a043_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_0f4951729d63fd321729e1045e37a043>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, const bool *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_0f4951729d63fd321729e1045e37a043_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_0f4951729d63fd321729e1045e37a043>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_0f4951729d63fd321729e1045e37a043_,0>,std::allocator<std::_Func_class<void,bool const &>>,void,bool const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_0f4951729d63fd321729e1045e37a043>,0>,std::allocator<std::_Func_class<void,bool const &> >,void,bool const &> *this);
void __thiscall CameraTripleScreen::beginVirtualScreenPass(CameraTripleScreen *this, int cameraIndex);
void __thiscall CameraTripleScreen::renderPass(CameraTripleScreen *this, Node *root, float dt);
void __thiscall Mesh::Mesh(Mesh *this, const Mesh *mesh);
void __thiscall Mesh::Mesh(Mesh *this, std::wstring name);
void __thiscall Renderable::Renderable(Renderable *this, const Renderable *__that);
void __thiscall Mesh::~Mesh(Mesh *this);
Mesh *__thiscall Mesh::`scalar deleting destructor'(Mesh *this, unsigned int a2);
void __thiscall Mesh::addChild(Mesh *this, Node *n);
void __thiscall Mesh::compile(Mesh *this, CompileContext *cc);
Triangle *__thiscall Mesh::getTriangle(Mesh *this, Triangle *result, int index);
void __thiscall Mesh::render(Mesh *this, RenderContext *rc);
// void __usercall Mesh::updateBoundingSphere(Mesh *this@<ecx>, __m128 a2@<xmm0>);
Mesh *__cdecl ShapeBuilder::buildHemiSphere(float radius, int subs, std::wstring name);
// vec3f *__usercall ShapeBuilder::getSpherePos@<eax>(int a1@<esi>, vec3f *result);
char __cdecl WeatherGenerator::loadPreset(const std::wstring *name, GraphicsManager *graphics, float pp_off_mult);
void __thiscall IndexBuffer::IndexBuffer(IndexBuffer *this, std::vector<unsigned short> *indices);
IndexBuffer *__thiscall IndexBuffer::`vector deleting destructor'(IndexBuffer *this, unsigned int a2);
Shader **__cdecl std::_Find_if<Shader * *,_lambda_c088d720ac5d7f25c7517eee00002c73_>(Shader **_First, Shader **_Last, ShaderManager::getShader::__l3::<lambda_c088d720ac5d7f25c7517eee00002c73> _Pred);
void __thiscall ShaderManager::ShaderManager(ShaderManager *this, GraphicsManager *graphics);
void __thiscall ShaderManager::~ShaderManager(ShaderManager *this);
ShaderManager *__thiscall ShaderManager::`vector deleting destructor'(ShaderManager *this, unsigned int a2);
void __thiscall ShaderManager::cleanup(ShaderManager *this);
// Shader *__userpurge ShaderManager::getShader@<eax>(ShaderManager *this@<ecx>, unsigned int a2@<ebx>, const std::wstring *name);
QueryData *__cdecl std::_Uninit_copy<QueryData const *,QueryData *,std::allocator<QueryData>>(QueryData *_First, QueryData *_Last, QueryData *_Dest);
void __thiscall std::vector<QueryData>::vector<QueryData>(std::vector<QueryData> *this, const std::vector<QueryData> *_Right);
void __thiscall GPUProfiler::GPUProfiler(GPUProfiler *this, GraphicsManager *gm);
void __thiscall GPUProfiler::~GPUProfiler(GPUProfiler *this);
void __thiscall std::vector<QueryData>::_Reallocate(std::vector<QueryData> *this, unsigned int _Count);
void __thiscall std::vector<QueryData>::_Reserve(std::vector<QueryData> *this, unsigned int _Count);
void __thiscall GPUProfiler::beginFrame(GPUProfiler *this);
void __thiscall GPUProfiler::endFrame(GPUProfiler *this);
void __thiscall GPUProfiler::fetchResults(GPUProfiler *this);
QueryData *__thiscall GPUProfiler::getQuery(GPUProfiler *this, QueryData *result, const std::wstring *name);
std::vector<QueryData> *__thiscall GPUProfiler::getResults(GPUProfiler *this, std::vector<QueryData> *result);
char __thiscall GPUProfiler::hasQuery(GPUProfiler *this, const std::wstring *name);
void __thiscall std::vector<QueryData>::push_back(std::vector<QueryData> *this, const QueryData *_Val);
void __thiscall GPUProfiler::setActive(GPUProfiler *this, bool mode);
void __thiscall GPUProfiler::triggerQuery(GPUProfiler *this, const std::wstring *name);
void __thiscall BoundingFrustum::BoundingFrustum(BoundingFrustum *this, const mat44f *iviewProj);
void __thiscall BoundingFrustum::~BoundingFrustum(BoundingFrustum *this);
BoundingFrustum *__thiscall BoundingFrustum::`vector deleting destructor'(BoundingFrustum *this, unsigned int a2);
void __thiscall BoundingFrustum::getCorners(BoundingFrustum *this, std::vector<vec3f> *corners);
char __thiscall BoundingFrustum::intersect(BoundingFrustum *this, const sphere *s);
void __thiscall BoundingFrustum::setMatrix(BoundingFrustum *this, const mat44f *value);
// void __userpurge MaterialFilterSM::MaterialFilterSM(MaterialFilterSM *this@<ecx>, unsigned int a2@<ebx>, GraphicsManager *graphics);
void __thiscall MaterialFilterSM::~MaterialFilterSM(MaterialFilterSM *this);
MaterialFilterSM *__thiscall MaterialFilterSM::`scalar deleting destructor'(MaterialFilterSM *this, unsigned int a2);
void __thiscall MaterialFilterSM::apply(MaterialFilterSM *this, const std::shared_ptr<Material> *material, RenderContext *rc);
void __cdecl std::_Adjust_heap<PvsProcessor::DrawCall *,int,PvsProcessor::DrawCall,bool (__cdecl *)(PvsProcessor::DrawCall const &,PvsProcessor::DrawCall const &)>(PvsProcessor::DrawCall *_First, int _Hole, int _Bottom, PvsProcessor::DrawCall *_Val, bool (__cdecl *_Pred)(const PvsProcessor::DrawCall *, const PvsProcessor::DrawCall *));
void __cdecl std::_Insertion_sort1<PvsProcessor::DrawCall *,bool (__cdecl *)(PvsProcessor::DrawCall const &,PvsProcessor::DrawCall const &),PvsProcessor::DrawCall>(PvsProcessor::DrawCall *_First, PvsProcessor::DrawCall *_Last, bool (__cdecl *_Pred)(const PvsProcessor::DrawCall *, const PvsProcessor::DrawCall *));
void __cdecl std::_Make_heap<PvsProcessor::DrawCall *,int,PvsProcessor::DrawCall,bool (__cdecl *)(PvsProcessor::DrawCall const &,PvsProcessor::DrawCall const &)>(PvsProcessor::DrawCall *_First, PvsProcessor::DrawCall *_Last, bool (__cdecl *_Pred)(const PvsProcessor::DrawCall *, const PvsProcessor::DrawCall *));
void __cdecl std::_Median<PvsProcessor::DrawCall *,bool (__cdecl *)(PvsProcessor::DrawCall const &,PvsProcessor::DrawCall const &)>(PvsProcessor::DrawCall *_First, PvsProcessor::DrawCall *_Mid, PvsProcessor::DrawCall *_Last, bool (__cdecl *_Pred)(const PvsProcessor::DrawCall *, const PvsProcessor::DrawCall *));
void __cdecl std::_Pop_heap_0<PvsProcessor::DrawCall *,PvsProcessor::DrawCall,bool (__cdecl *)(PvsProcessor::DrawCall const &,PvsProcessor::DrawCall const &)>(PvsProcessor::DrawCall *_First, PvsProcessor::DrawCall *_Last, bool (__cdecl *_Pred)(const PvsProcessor::DrawCall *, const PvsProcessor::DrawCall *));
void __cdecl std::_Sort<PvsProcessor::DrawCall *,int,bool (__cdecl *)(PvsProcessor::DrawCall const &,PvsProcessor::DrawCall const &)>(PvsProcessor::DrawCall *_First, PvsProcessor::DrawCall *_Last, int _Ideal, bool (__cdecl *_Pred)(const PvsProcessor::DrawCall *, const PvsProcessor::DrawCall *));
void __cdecl std::_Sort_heap<PvsProcessor::DrawCall *,bool (__cdecl *)(PvsProcessor::DrawCall const &,PvsProcessor::DrawCall const &)>(PvsProcessor::DrawCall *_First, PvsProcessor::DrawCall *_Last, bool (__cdecl *_Pred)(const PvsProcessor::DrawCall *, const PvsProcessor::DrawCall *));
std::pair<PvsProcessor::DrawCall *,PvsProcessor::DrawCall *> *__cdecl std::_Unguarded_partition<PvsProcessor::DrawCall *,bool (__cdecl *)(PvsProcessor::DrawCall const &,PvsProcessor::DrawCall const &)>(std::pair<PvsProcessor::DrawCall *,PvsProcessor::DrawCall *> *result, PvsProcessor::DrawCall *_First, PvsProcessor::DrawCall *_Last, bool (__cdecl *_Pred)(const PvsProcessor::DrawCall *, const PvsProcessor::DrawCall *));
void __cdecl std::swap<PvsProcessor::DrawCall>(PvsProcessor::DrawCall *_Left, PvsProcessor::DrawCall *_Right);
void __thiscall PvsProcessor::begin(PvsProcessor *this, RenderContext *rc, const PvsRenderMode renderMode, std::vector<RenderTarget *> *shadowMaps, CubeMap *cubeMap);
bool __cdecl PvsProcessor::compareDrawCalls(const PvsProcessor::DrawCall *a, const PvsProcessor::DrawCall *b);
void __thiscall PvsProcessor::doDistanceAndLod(PvsProcessor *this);
void __thiscall PvsProcessor::doExclusion(PvsProcessor *this);
void __thiscall PvsProcessor::doFrustumCulling(PvsProcessor *this);
void __thiscall PvsProcessor::doRenderCalls(PvsProcessor *this);
void __thiscall PvsProcessor::doRenderClassic(PvsProcessor *this);
void __thiscall PvsProcessor::end(PvsProcessor *this);
void __thiscall PvsProcessor::prepareDrawCallsDefault(PvsProcessor *this);
void __thiscall CubeMap::CubeMap(CubeMap *this, unsigned int size, unsigned int format, unsigned int mips);
CubeMap *__thiscall CubeMap::`vector deleting destructor'(CubeMap *this, unsigned int a2);
void __thiscall CubeMap::apply(CubeMap *this, int slot);
void __thiscall CubeMap::beginFace(CubeMap *this, int index);
void __thiscall CubeMap::endFace(CubeMap *this);
void __thiscall CubeMap::generateMips(CubeMap *this, int face);
Texture *__cdecl std::_Find_if<Texture *,_lambda_14a9fb379b2fcf61985a07182e02a074_>(Texture *_First, Texture *_Last, MaterialList::getTextureFromName::__l3::<lambda_14a9fb379b2fcf61985a07182e02a074> _Pred);
void __thiscall MaterialList::MaterialList(MaterialList *this);
void __thiscall MaterialList::~MaterialList(MaterialList *this);
MaterialList *__thiscall MaterialList::`vector deleting destructor'(MaterialList *this, unsigned int a2);
Texture *__thiscall MaterialList::getTextureFromName(MaterialList *this, Texture *result, const std::wstring *name);
SkinnedBone *__cdecl std::_Copy_impl<SkinnedBone *,SkinnedBone *>(SkinnedBone *_First, SkinnedBone *_Last, SkinnedBone *_Dest);
SkinnedMeshVertex *__cdecl std::_Copy_impl<SkinnedMeshVertex *,SkinnedMeshVertex *>(SkinnedMeshVertex *_First, SkinnedMeshVertex *_Last, SkinnedMeshVertex *_Dest);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<SkinnedBone>>>(SkinnedBone *_First, SkinnedBone *_Last);
void __cdecl std::_For_each<SkinnedBone *,_lambda_f7f3c0a4587723a565451995b885d16d_>(SkinnedBone *_First, SkinnedBone *_Last, SkinnedMesh::updateBonesBuffer::__l3::<lambda_f7f3c0a4587723a565451995b885d16d> *_Func);
SkinnedBone *__thiscall std::vector<SkinnedBone>::_Ucopy<SkinnedBone *>(std::vector<SkinnedBone> *this, SkinnedBone *_First, SkinnedBone *_Last, SkinnedBone *_Ptr);
SkinnedMeshVertex *__thiscall std::vector<SkinnedMeshVertex>::_Ucopy<SkinnedMeshVertex *>(std::vector<SkinnedMeshVertex> *this, SkinnedMeshVertex *_First, SkinnedMeshVertex *_Last, SkinnedMeshVertex *_Ptr);
SkinnedBone *__cdecl std::_Uninit_move<SkinnedBone *,SkinnedBone *,std::allocator<SkinnedBone>,SkinnedBone>(SkinnedBone *_First, SkinnedBone *_Last, SkinnedBone *_Dest);
SkinnedMeshVertex *__cdecl std::_Uninit_copy<SkinnedMeshVertex *,SkinnedMeshVertex *,std::allocator<SkinnedMeshVertex>>(SkinnedMeshVertex *_First, SkinnedMeshVertex *_Last, SkinnedMeshVertex *_Dest);
void __thiscall std::_Wrap_alloc<std::allocator<SkinnedBone>>::destroy<SkinnedBone>(std::_Wrap_alloc<std::allocator<SkinnedBone> > *this, SkinnedBone *_Ptr);
void __thiscall SkinnedBone::SkinnedBone(SkinnedBone *this, const SkinnedBone *__that);
void __thiscall SkinnedBone::SkinnedBone(SkinnedBone *this, Node *b, mat44f *m);
void __thiscall SkinnedMesh::SkinnedMesh(SkinnedMesh *this, const SkinnedMesh *mesh);
void __thiscall SkinnedMesh::SkinnedMesh(SkinnedMesh *this, std::wstring aname);
void __thiscall SkinnedBone::~SkinnedBone(SkinnedBone *this);
void __thiscall SkinnedMesh::~SkinnedMesh(SkinnedMesh *this);
std::vector<SkinnedBone> *__thiscall std::vector<SkinnedBone>::operator=(std::vector<SkinnedBone> *this, const std::vector<SkinnedBone> *_Right);
std::vector<SkinnedMeshVertex> *__thiscall std::vector<SkinnedMeshVertex>::operator=(std::vector<SkinnedMeshVertex> *this, const std::vector<SkinnedMeshVertex> *_Right);
VertexBuffer<SkinnedMeshVertex> *__thiscall VertexBuffer<SkinnedMeshVertex>::`vector deleting destructor'(VertexBuffer<SkinnedMeshVertex> *this, unsigned int a2);
SkinnedMesh *__thiscall SkinnedMesh::`vector deleting destructor'(SkinnedMesh *this, unsigned int a2);
char __thiscall std::vector<SkinnedBone>::_Buy(std::vector<SkinnedBone> *this, unsigned int _Capacity);
char __thiscall std::vector<SkinnedMeshVertex>::_Buy(std::vector<SkinnedMeshVertex> *this, unsigned int _Capacity);
void __thiscall std::vector<SkinnedBone>::_Reallocate(std::vector<SkinnedBone> *this, unsigned int _Count);
void __thiscall std::vector<SkinnedBone>::_Reserve(std::vector<SkinnedBone> *this, unsigned int _Count);
void __thiscall std::vector<SkinnedBone>::_Tidy(std::vector<SkinnedBone> *this);
void __thiscall SkinnedMesh::addBone(SkinnedMesh *this, Node *node, mat44f offsetMatrix);
// void __userpurge SkinnedMesh::compile(SkinnedMesh *this@<ecx>, __m128 a2@<xmm0>, CompileContext *cc);
void __thiscall SkinnedMesh::initBonesBuffer(SkinnedMesh *this, GraphicsManager *graphics);
void __thiscall std::vector<SkinnedBone>::push_back(std::vector<SkinnedBone> *this, SkinnedBone *_Val);
void __thiscall SkinnedMesh::render(SkinnedMesh *this, RenderContext *rc);
void __thiscall SkinnedMesh::updateBonesBuffer(SkinnedMesh *this, RenderContext *rc);
// void __usercall SkinnedMesh::updateBoundingSphere(SkinnedMesh *this@<ecx>, __m128 a2@<xmm0>);
LPTOP_LEVEL_EXCEPTION_FILTER InstallFaultHandler();
int __cdecl Win32FaultHandler(_EXCEPTION_POINTERS *ExInfo);
void __thiscall SignalGenerator::SignalGenerator(SignalGenerator *this);
void __thiscall SignalGenerator::~SignalGenerator(SignalGenerator *this);
SignalGenerator *__thiscall SignalGenerator::`scalar deleting destructor'(SignalGenerator *this, unsigned int a2);
double __cdecl ksSawToothWave(float value, float period);
double __cdecl ksSquareWave();
void __thiscall SignalGenerator::step(SignalGenerator *this, float dt);
void __thiscall ShaderResource::ShaderResource(ShaderResource *this, std::wstring iname, int islot);
ShaderResource *__thiscall ShaderResource::`vector deleting destructor'(ShaderResource *this, unsigned int a2);
// void __userpurge HDR::HDR(HDR *this@<ecx>, unsigned int a2@<ebx>, GraphicsManager *graphics);
void __thiscall HDR::~HDR(HDR *this);
HDR *__thiscall HDR::`vector deleting destructor'(HDR *this, unsigned int a2);
void __thiscall HDR::begin(HDR *this);
void __thiscall HDR::reset(HDR *this);
int _snprintf_s<1024>(char (*_Dest)[1024], unsigned int _MaxCount, const char *_Format, ...);
void __thiscall StackWalker::StackWalker(StackWalker *this, int options, const char *szSymPath, unsigned int dwProcessId, void *hProcess);
void __thiscall StackWalkerInternal::StackWalkerInternal(StackWalkerInternal *this, StackWalker *parent, void *hProcess);
void __thiscall StackWalker::~StackWalker(StackWalker *this);
StackWalker *__thiscall StackWalker::`vector deleting destructor'(StackWalker *this, unsigned int a2);
int __thiscall StackWalkerInternal::GetModuleInfo(StackWalkerInternal *this, void *hProcess, unsigned __int64 baseAddr, StackWalkerInternal::IMAGEHLP_MODULE64_V3 *pModuleInfo);
HMODULE __thiscall StackWalkerInternal::GetModuleListPSAPI(StackWalkerInternal *this, void *hProcess);
BOOL __thiscall StackWalkerInternal::GetModuleListTH32(StackWalkerInternal *this, void *hProcess, unsigned int pid);
// int __userpurge StackWalkerInternal::Init@<eax>(StackWalkerInternal *this@<ecx>, int a2@<ebp>, int a3@<esi>, const char *szSymPath);
DWORD __thiscall StackWalkerInternal::LoadModule(StackWalkerInternal *this, void *hProcess, const char *img, const char *mod, unsigned __int64 baseAddr, unsigned int size);
// int __usercall StackWalker::LoadModules@<eax>(StackWalker *this@<ecx>, int a2@<ebp>);
void __cdecl MyStrCpy(char *szDest, unsigned int nMaxDestSize, const char *szSrc);
void __thiscall StackWalker::OnCallstackEntry(StackWalker *this, StackWalker::CallstackEntryType eType, StackWalker::CallstackEntry *entry);
void __thiscall StackWalker::OnDbgHelpErr(StackWalker *this, const char *szFuncName, unsigned int gle, unsigned __int64 addr);
void __thiscall StackWalker::OnLoadModule(StackWalker *this, const char *img, const char *mod, unsigned __int64 baseAddr, unsigned int size, unsigned int result, const char *symType, const char *pdbName, unsigned __int64 fileVersion);
void __thiscall StackWalker::OnOutput(StackWalker *this, const char *buffer);
void __thiscall StackWalker::OnSymInit(StackWalker *this, const char *szSearchPath, unsigned int symOptions, const char *szUserName);
int __thiscall StackWalker::ShowCallstack(StackWalker *this, void *hThread, const _CONTEXT *context, int (__stdcall *readMemoryFunction)(void *, unsigned __int64, void *, unsigned int, unsigned int *, void *), void *pUserData);
int __stdcall StackWalker::myReadProcMem(void *hProcess, unsigned __int64 qwBaseAddress, void *lpBuffer, unsigned int nSize, unsigned int *lpNumberOfBytesRead);
void __thiscall std::string::_Construct<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>(std::string *this, std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > _First, std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > _Last, std::forward_iterator_tag __formal);
std::wstring *__thiscall std::wstring::replace<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>(std::wstring *this, std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > _First, std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > _Last, std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > > _First2, std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > > _Last2);
std::string *__thiscall std::string::replace<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>(std::string *this, std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > > _First, std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > > _Last, std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > _First2, std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > _Last2);
void __cdecl Path::createFolder(const std::wstring *folder);
void __cdecl Path::deleteFile(const std::wstring *path);
char __cdecl Path::doesFilenameContainsIllegalChar(const std::wstring *filenameToCheck);
// char __usercall Path::fileExists@<al>(unsigned int a1@<ebx>, const std::wstring *path, bool only_real_file);
bool __cdecl Path::folderExists(const std::wstring *folder);
std::wstring *__cdecl Path::getDocumentPath(std::wstring *result);
std::wstring *__cdecl Path::getFileName(std::wstring *result, const std::wstring *s);
std::wstring *__cdecl Path::getFileNameWithoutExtension(std::wstring *result, const std::wstring *path);
std::vector<std::wstring> *__cdecl Path::getFiles(std::vector<std::wstring> *result, const std::wstring *filter);
std::vector<std::wstring> *__cdecl Path::getFolders(std::vector<std::wstring> *result, const std::wstring *folder);
_FILETIME __cdecl Path::getLastModificationTime(const std::wstring *path);
std::wstring *__cdecl Path::getPath(std::wstring *result, const std::wstring *s);
std::wstring *__cdecl Path::getPlatformSpecificPath(std::wstring *result, const std::wstring *path);
std::wstring *__cdecl Path::readAllText(std::wstring *result, const std::wstring *filename);
std::wstring *__cdecl string2wstring(std::wstring *result, const std::string *s);
std::string *__cdecl wstring2string(std::string *result, const std::wstring *ws);
std::_Tree_node<std::pair<std::wstring const ,std::map<std::wstring,INISection> >,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,INISection>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,INISection>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring const &> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_node<std::pair<std::wstring const ,std::wstring >,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,std::wstring>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,std::wstring >> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring const &> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_node<std::pair<std::wstring const ,std::map<std::wstring,INISection> >,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,std::map<std::wstring,INISection>>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,std::map<std::wstring,INISection> >> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring const &> *<_Val_1>, std::tuple<> *<_Val_2>);
std::wstring *__cdecl std::_Find<std::wstring *,std::wstring>(std::wstring *_First, std::wstring *_Last, const std::wstring *_Val);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,INISection>>,0>>::_Insert_at<std::pair<std::wstring const,INISection> &,std::_Tree_node<std::pair<std::wstring const,INISection>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,INISection> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::wstring const ,INISection>,void *> *_Wherenode, std::pair<std::wstring const ,INISection> *_Val, std::_Tree_node<std::pair<std::wstring const ,INISection>,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::wstring > > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::wstring>>,0>>::_Insert_at<std::pair<std::wstring const,std::wstring> &,std::_Tree_node<std::pair<std::wstring const,std::wstring>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::wstring > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::wstring > > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::wstring const ,std::wstring >,void *> *_Wherenode, std::pair<std::wstring const ,std::wstring > *_Val, std::_Tree_node<std::pair<std::wstring const ,std::wstring >,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > > *__thiscall ____Insert_at_AAU__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std__PAU___Tree_node_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std__PAX_2_____Tree_V___Tmap_traits_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2_U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std___2__0A__std___std__IAE_AV___Tree_iterator_V___Tree_val_U___Tree_simple_types_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std___std___std___1__NPAU___Tree_node_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std__PAX_1_AAU__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__1_1_Z(std::_Tree<std::_Tmap_traits<std::wstring,std::map<std::wstring,INISection>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::map<std::wstring,INISection> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::wstring const ,std::map<std::wstring,INISection> >,void *> *_Wherenode, std::pair<std::wstring const ,std::map<std::wstring,INISection> > *_Val, std::_Tree_node<std::pair<std::wstring const ,std::map<std::wstring,INISection> >,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,INISection>>,0>>::_Insert_hint<std::pair<std::wstring const,INISection> &,std::_Tree_node<std::pair<std::wstring const,INISection>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,INISection> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > > _Where, std::pair<std::wstring const ,INISection> *_Val, std::_Tree_node<std::pair<std::wstring const ,INISection>,void *> *_Newnode);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::wstring > > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::wstring>>,0>>::_Insert_hint<std::pair<std::wstring const,std::wstring> &,std::_Tree_node<std::pair<std::wstring const,std::wstring>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::wstring > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::wstring > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::wstring > > > > _Where, std::pair<std::wstring const ,std::wstring > *_Val, std::_Tree_node<std::pair<std::wstring const ,std::wstring >,void *> *_Newnode);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > > *__thiscall ____Insert_hint_AAU__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std__PAU___Tree_node_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std__PAX_2_____Tree_V___Tmap_traits_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2_U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std___2__0A__std___std__IAE_AV___Tree_iterator_V___Tree_val_U___Tree_simple_types_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std___std___std___1_V___Tree_const_iterator_V___Tree_val_U___Tree_simple_types_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std___std___std___1_AAU__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__1_PAU___Tree_node_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std__PAX_1__Z(std::_Tree<std::_Tmap_traits<std::wstring,std::map<std::wstring,INISection>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::map<std::wstring,INISection> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > > _Where, std::pair<std::wstring const ,std::map<std::wstring,INISection> > *_Val, std::_Tree_node<std::pair<std::wstring const ,std::map<std::wstring,INISection> >,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,INISection>>,0>>::_Insert_nohint<std::pair<std::wstring const,INISection> &,std::_Tree_node<std::pair<std::wstring const,INISection>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,INISection> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,INISection> > > > _Leftish, std::pair<std::wstring const ,INISection> *_Val, std::_Tree_node<std::pair<std::wstring const ,INISection>,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::wstring > > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::wstring>>,0>>::_Insert_nohint<std::pair<std::wstring const,std::wstring> &,std::_Tree_node<std::pair<std::wstring const,std::wstring>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::wstring > >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::wstring > > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::wstring > > > > _Leftish, std::pair<std::wstring const ,std::wstring > *_Val, std::_Tree_node<std::pair<std::wstring const ,std::wstring >,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > >,bool> *__thiscall ____Insert_nohint_AAU__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std__PAU___Tree_node_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std__PAX_2_____Tree_V___Tmap_traits_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2_U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std___2__0A__std___std__IAE_AU__pair_V___Tree_iterator_V___Tree_val_U___Tree_simple_types_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std___std___std___std___N_1__NAAU__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__1_PAU___Tree_node_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__V__map_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection__U__less_V__basic_string__WU__char_traits__W_std__V__allocator__W_2__std___2_V__allocator_U__pair___CBV__basic_string__WU__char_traits__W_std__V__allocator__W_2__std__UINISection___std___2__2__std__PAX_1__Z(std::_Tree<std::_Tmap_traits<std::wstring,std::map<std::wstring,INISection>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::map<std::wstring,INISection> > >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > > _Leftish, std::pair<std::wstring const ,std::map<std::wstring,INISection> > *_Val, std::_Tree_node<std::pair<std::wstring const ,std::map<std::wstring,INISection> >,void *> *_Newnode);
void __thiscall INIReader::INIReader(INIReader *this);
void __thiscall INIReader::INIReader(INIReader *this, const std::wstring *ifilename);
void __thiscall INIReader::INIReader(INIReader *this, const std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *stream);
void __thiscall INIReader::~INIReader(INIReader *this);
INISection *__thiscall std::map<std::wstring,INISection>::operator[](std::map<std::wstring,INISection> *this, const std::wstring *_Keyval);
std::wstring *__thiscall std::map<std::wstring,std::wstring>::operator[](std::map<std::wstring,std::wstring> *this, const std::wstring *_Keyval);
std::map<std::wstring,INISection> *__thiscall std::map<std::wstring,std::map<std::wstring,INISection>>::operator[](std::map<std::wstring,std::map<std::wstring,INISection>> *this, const std::wstring *_Keyval);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,INISection>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<std::wstring,INISection,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,INISection> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,INISection>,void *> *_Newnode);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::map<std::wstring,INISection>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::map<std::wstring,INISection>>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<std::wstring,std::map<std::wstring,INISection>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::map<std::wstring,INISection> > >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,std::map<std::wstring,INISection> >,void *> *_Newnode);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::map<std::wstring,INISection>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::map<std::wstring,INISection>>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<std::wstring,std::map<std::wstring,INISection>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::map<std::wstring,INISection> > >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,std::map<std::wstring,INISection> >,void *> *_Rootnode);
std::_Tree_node<std::pair<std::wstring const ,std::map<std::wstring,INISection> >,void *> *INIReader::clearCache();
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::map<std::wstring,INISection>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::map<std::wstring,INISection>>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,std::map<std::wstring,INISection>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::map<std::wstring,INISection> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > > _Last);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::map<std::wstring,INISection>,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::map<std::wstring,INISection>>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,std::map<std::wstring,INISection>,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,std::map<std::wstring,INISection> > >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::map<std::wstring,INISection> > > > > _Where);
void __thiscall INIReader::errorReport(INIReader *this, std::wstring message);
int __thiscall std::wstring::find_last_not_of(std::wstring *this, const wchar_t *_Ptr, unsigned int _Off, unsigned int _Count);
Curve *__thiscall INIReader::getCurve(INIReader *this, Curve *result, const std::wstring *section, const std::wstring *key);
vec2f *__thiscall INIReader::getFloat2(INIReader *this, vec2f *result, const std::wstring *section, const std::wstring *key);
vec3f *__thiscall INIReader::getFloat3(INIReader *this, vec3f *result, const std::wstring *section, const std::wstring *key);
vec4f *__thiscall INIReader::getFloat4(INIReader *this, vec4f *result, const std::wstring *section, const std::wstring *key);
double __thiscall INIReader::getFloat(INIReader *this, const std::wstring *section, const std::wstring *key);
int __thiscall INIReader::getHex(INIReader *this, const std::wstring *section, const std::wstring *key);
int __thiscall INIReader::getInt(INIReader *this, const std::wstring *section, const std::wstring *key);
void __thiscall INIReader::getKeyes(INIReader *this, std::wstring section, std::vector<std::wstring> *keyes);
void __thiscall INIReader::getSections(INIReader *this, std::vector<std::wstring> *outSections);
std::wstring *__thiscall INIReader::getString(INIReader *this, std::wstring *result, const std::wstring *section, const std::wstring *key);
void __thiscall INIReader::getVector2(INIReader *this, const std::wstring *section, const std::wstring *key, float *x, float *y);
void __thiscall INIReader::getVector3(INIReader *this, const std::wstring *section, const std::wstring *key, float *x, float *y, float *z);
bool __thiscall INIReader::getVector4(INIReader *this, const std::wstring *section, const std::wstring *key, float *x, float *y, float *z, float *w);
char __thiscall INIReader::hasKey(INIReader *this, const std::wstring *section, const std::wstring *key);
BOOL __thiscall INISection::hasKey(INISection *this, const std::wstring *k);
BOOL __thiscall INIReader::hasSection(INIReader *this, const std::wstring *section);
std::ios_base *__cdecl std::hex(std::ios_base *_Iosbase);
void __thiscall INIReader::load(INIReader *this, const std::wstring *filename);
void __thiscall INIReader::loadEncrypt(INIReader *this, const std::wstring *filename, const std::wstring *dataFile);
void __thiscall INIReader::parse(INIReader *this);
void __thiscall INIReader::printCode(INIReader *this);
void __thiscall INIReader::setVerboseMode(INIReader *this, bool mode);
void __cdecl trim2(std::wstring *str);
// void __userpurge INIReaderDocuments::INIReaderDocuments(INIReaderDocuments *this@<ecx>, unsigned int a2@<ebx>, std::wstring iniName, bool createFile);
void __thiscall INIReaderDocuments::~INIReaderDocuments(INIReaderDocuments *this);
double __cdecl ksGetQPTTime();
double __cdecl ksGetSystemTime();
double __cdecl ksGetTime();
DWORD ksInitTimer();
MMRESULT ksShutdownTimer();
void __cdecl ksSleep(const int milliseconds);
bool __cdecl ksTimeSyncAndCheck();
void __cdecl ksTimerForceTGT(bool mode);
void __thiscall std::vector<char>::_Construct<char *>(std::vector<char> *this, char *_First, char *_Last, std::forward_iterator_tag __formal);
void __thiscall std::wstring::_Construct<wchar_t *>(std::wstring *this, wchar_t *_First, wchar_t *_Last, std::forward_iterator_tag __formal);
int __thiscall std::wstring::find_first_not_of(std::wstring *this, const wchar_t *_Ptr, unsigned int _Off, unsigned int _Count);
std::wstring *__cdecl ksDecodeUtf8(std::wstring *result, const std::vector<char> *binary);
std::wstring *__cdecl ksDecodeUtf8(std::wstring *result, const char *binary, const int binarySize);
std::vector<char> *__cdecl ksEncodeUtf8(std::vector<char> *result, const std::wstring *str);
std::vector<char> *__cdecl ksEncodeUtf8(std::vector<char> *result, const wchar_t *str, const int strSize);
std::wstring *__cdecl ksEscapeJsonDoubleQuotesAndBackslash(std::wstring *result, const std::wstring *s);
std::wstring *__cdecl ksReplaceStringW(std::wstring *result, std::wstring subject, const std::wstring *search, const std::wstring *replace);
std::vector<std::wstring> *__cdecl ksSplitString(std::vector<std::wstring> *result, const std::wstring *s, const std::wstring *splitter);
std::wstring *__cdecl ksTrim(std::wstring *result, const std::wstring *s);
void __thiscall Speed::Speed(Speed *this, float v);
Speed *__cdecl Speed::fromKMH(Speed *result, float ms);
Speed *__cdecl Speed::fromMPH(Speed *result, float ms);
Speed *__cdecl Speed::fromMS(Speed *result, float ms);
void __cdecl ksGenerateCrash(std::wstring logMessageBeforeCrash);
void ksGenerateCrash();
unsigned int __cdecl ksGetNumberOfProcessors();
std::wstring *__cdecl ksGetOSVersionString(std::wstring *result);
void __cdecl ksSetCurrentThreadAffinityMask(const unsigned __int64 mask);
void __thiscall std::vector<unsigned char>::_Construct<unsigned char *>(std::vector<unsigned char> *this, unsigned __int8 *_First, unsigned __int8 *_Last, std::forward_iterator_tag __formal);
void __thiscall std::vector<char>::_Insert<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<char>>>>(std::vector<char> *this, std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > > _Where, std::_Vector_iterator<std::_Vector_val<std::_Simple_types<char> > > _First, std::_Vector_iterator<std::_Vector_val<std::_Simple_types<char> > > _Last, std::forward_iterator_tag __formal);
void __cdecl std::_Rotate<char *,int,char>(char *_First, char *_Mid, char *_Last);
MD5CheckSum *__thiscall MD5CheckSum::finalize(MD5CheckSum *this);
std::wstring *__thiscall MD5CheckSum::hexdigest(MD5CheckSum *this, std::wstring *result);
MD5Result *__cdecl md5(MD5Result *result, const std::vector<char> *binary);
std::vector<unsigned char> *__cdecl md5(std::vector<unsigned char> *result, const std::wstring *filePath);
std::vector<unsigned char> *__cdecl md5Folder(std::vector<unsigned char> *result, const std::wstring *folderPath);
void __thiscall MD5CheckSum::transform(MD5CheckSum *this, const unsigned __int8 *block);
void __thiscall MD5CheckSum::update(MD5CheckSum *this, const unsigned __int8 *buf, unsigned int size);
int swprintf_1(wchar_t *_String, unsigned int _Count, const wchar_t *_Format, ...);
void __thiscall Trigger::Trigger(Trigger *this);
bool __thiscall Trigger::ignoreSubsequentTrue(Trigger *this, bool value);
bool __thiscall Trigger::keepSteady(Trigger *this, float dt, bool value);
void __thiscall FileChangeObserver::FileChangeObserver(FileChangeObserver *this, const std::wstring *a_filename);
char __thiscall FileChangeObserver::hasChanged(FileChangeObserver *this);
void __thiscall FileChangeObserver::observe(FileChangeObserver *this, const std::wstring *a_filename);
void __thiscall FileChangeObserver::reset(FileChangeObserver *this);
void __thiscall std::vector<char>::vector<char>(std::vector<char> *this, std::vector<char> *_Right);
void __thiscall std::vector<int>::vector<int>(std::vector<int> *this, unsigned int _Count);
// std::vector<char> *__usercall SimpleFileEncrypter::decryptFile@<eax>(unsigned int a1@<edi>, std::vector<char> *result, const std::wstring *filename, const std::wstring *password);
void __thiscall std::vector<char>::push_back(std::vector<char> *this, char *_Val);
void __thiscall ErrorBlob::ErrorBlob(ErrorBlob *this);
void __thiscall ErrorBlob::~ErrorBlob(ErrorBlob *this);
ErrorBlob *__thiscall ErrorBlob::`vector deleting destructor'(ErrorBlob *this, unsigned int a2);
void __thiscall FolderEncrypter::check(FolderEncrypter *this, const std::wstring *dataFile, const std::wstring *filename, const std::wstring *real_file);
char __thiscall FolderEncrypter::checkKey(FolderEncrypter *this, std::ifstream *file);
std::vector<char> *__thiscall FolderEncrypter::decryptFile(FolderEncrypter *this, std::vector<char> *result, const std::wstring *dataFile, const std::wstring *filename);
// char __userpurge FolderEncrypter::fileExists@<al>(FolderEncrypter *this@<ecx>, unsigned int a2@<ebx>, const std::wstring *dataFile, const std::wstring *filename);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<std::wstring,jsonwriter::Node *>>>>(std::pair<std::wstring,jsonwriter::Node *> *_First, std::pair<std::wstring,jsonwriter::Node *> *_Last);
std::pair<std::wstring,jsonwriter::Node *> *__cdecl std::_Uninit_move<std::pair<std::wstring,jsonwriter::Node *> *,std::pair<std::wstring,jsonwriter::Node *> *,std::allocator<std::pair<std::wstring,jsonwriter::Node *>>,std::pair<std::wstring,jsonwriter::Node *>>(std::pair<std::wstring,jsonwriter::Node *> *_First, std::pair<std::wstring,jsonwriter::Node *> *_Last, std::pair<std::wstring,jsonwriter::Node *> *_Dest);
std::pair<std::wstring,jsonwriter::Value *> *__cdecl std::make_pair<std::wstring const &,jsonwriter::Value *>(std::pair<std::wstring,jsonwriter::Value *> *result, const std::wstring *_Val1, jsonwriter::Value **_Val2);
void __thiscall std::wfstream::wfstream(std::wfstream *this, const wchar_t *_Filename, int _Mode, int _Prot, int a5);
void __thiscall jsonwriter::Array::Array(jsonwriter::Array *this, const jsonwriter::Array *other);
void __thiscall jsonwriter::Array::Array(jsonwriter::Array *this);
void __thiscall jsonwriter::Object::Object(jsonwriter::Object *this, const jsonwriter::Object *other);
void __thiscall jsonwriter::Object::Object(jsonwriter::Object *this);
void __thiscall jsonwriter::Value::Value(jsonwriter::Value *this, const std::wstring *value);
void __thiscall jsonwriter::Value::Value(jsonwriter::Value *this, const int value);
void __thiscall jsonwriter::Value::Value(jsonwriter::Value *this, const float value);
void __thiscall jsonwriter::Value::Value(jsonwriter::Value *this, const wchar_t *value);
void __thiscall std::wfstream::~wfstream<wchar_t,std::char_traits<wchar_t>>(std::wfstream *this);
void __thiscall std::vector<std::pair<std::wstring,jsonwriter::Node *>>::~vector<std::pair<std::wstring,jsonwriter::Node *>>(std::vector<std::pair<std::wstring,jsonwriter::Node *>> *this);
void __thiscall jsonwriter::Array::~Array(jsonwriter::Array *this);
void __thiscall jsonwriter::Node::~Node(jsonwriter::Node *this);
void __thiscall jsonwriter::Object::~Object(jsonwriter::Object *this);
void __thiscall jsonwriter::Value::~Value(jsonwriter::Value *this);
const std::pair<std::wstring,jsonwriter::Node &> *__thiscall jsonwriter::Object::const_iterator::operator*(jsonwriter::Object::const_iterator *this, const std::pair<std::wstring,jsonwriter::Node &> *result);
void __thiscall std::wfstream::`vbase destructor(std::wfstream *this);
char *__thiscall std::wfstream::`vector deleting destructor'(_DWORD *this, unsigned int a2);
char *__thiscall std::wfstream::`scalar deleting destructor'(std::wfstream *this, unsigned int a2);
jsonwriter::Array *__thiscall jsonwriter::Array::`scalar deleting destructor'(jsonwriter::Array *this, unsigned int a2);
jsonwriter::Node *__thiscall jsonwriter::Node::`vector deleting destructor'(jsonwriter::Node *this, unsigned int a2);
jsonwriter::Object *__thiscall jsonwriter::Object::`vector deleting destructor'(jsonwriter::Object *this, unsigned int a2);
jsonwriter::Value *__thiscall jsonwriter::Value::`scalar deleting destructor'(jsonwriter::Value *this, unsigned int a2);
void __thiscall jsonwriter::Array::Add(jsonwriter::Array *this, jsonwriter::Node *node);
void __thiscall jsonwriter::Array::Add(jsonwriter::Array *this, jsonwriter::Value node);
void __thiscall jsonwriter::Object::Add(jsonwriter::Object *this, const std::wstring *name, jsonwriter::Node *node);
void __thiscall jsonwriter::Object::Add(jsonwriter::Object *this, const std::wstring *name, jsonwriter::Value node);
void __thiscall jsonwriter::Object::Clear(jsonwriter::Object *this);
void __thiscall jsonwriter::Array::GetCopy(jsonwriter::Array *this);
void __thiscall jsonwriter::Object::GetCopy(jsonwriter::Object *this);
jsonwriter::Value *__thiscall jsonwriter::Value::GetCopy(jsonwriter::Value *this);
int __thiscall jsonwriter::Array::GetCount(jsonwriter::Array *this);
BOOL __thiscall jsonwriter::Value::IsNull(jsonwriter::Value *this);
BOOL __thiscall jsonwriter::Value::Iswstring(jsonwriter::Value *this);
void __thiscall jsonwriter::Value::Set(jsonwriter::Value *this, const int value);
void __thiscall jsonwriter::Value::Set(jsonwriter::Value *this, const float value);
std::wstring *__thiscall jsonwriter::Value::Towstring(jsonwriter::Value *this, std::wstring *result);
void __thiscall jsonwriter::FileWriter::Write(jsonwriter::FileWriter *this, const jsonwriter::Node *root);
void __cdecl jsonwriter::FileWriter::WriteFile(const std::wstring *filename, const jsonwriter::Node *root);
void __thiscall std::vector<jsonwriter::Node *>::_Reallocate(std::vector<jsonwriter::Node *> *this, unsigned int _Count);
void __thiscall std::vector<std::pair<std::wstring,jsonwriter::Node *>>::_Reallocate(std::vector<std::pair<std::wstring,jsonwriter::Node *>> *this, unsigned int _Count);
void __thiscall std::vector<AudioEvent *>::_Reserve(std::vector<jsonwriter::Node *> *this, unsigned int _Count);
void __thiscall std::vector<std::pair<std::wstring,jsonwriter::Node *>>::_Reserve(std::vector<std::pair<std::wstring,jsonwriter::Node *>> *this, unsigned int _Count);
void __thiscall std::vector<AudioEvent *>::push_back(std::vector<jsonwriter::Node *> *this, jsonwriter::Node **_Val);
void __thiscall std::vector<std::pair<std::wstring,jsonwriter::Node *>>::push_back(std::vector<std::pair<std::wstring,jsonwriter::Node *>> *this, std::pair<std::wstring,jsonwriter::Node *> *_Val);
void __thiscall jsonwriter::Writer::writeArray(jsonwriter::Writer *this, const jsonwriter::Array *node, unsigned int level);
void __thiscall jsonwriter::Writer::writeNode(jsonwriter::Writer *this, const jsonwriter::Node *node, unsigned int level);
void __thiscall jsonwriter::Writer::writeObject(jsonwriter::Writer *this, const jsonwriter::Object *node, unsigned int level);
void __thiscall jsonwriter::Writer::writeValue(jsonwriter::Writer *this, const jsonwriter::Value *node);
void __thiscall GameObject::GameObject(GameObject *this, std::wstring iname, Game *igame);
void __thiscall GameObject::~GameObject(GameObject *this);
GameObject *__thiscall GameObject::getParent(GameObject *this);
void __thiscall CameraMouseControl::CameraMouseControl(CameraMouseControl *this, std::wstring name, Camera *camera, Game *igame);
CameraMouseControl *__thiscall CameraMouseControl::`scalar deleting destructor'(CameraMouseControl *this, unsigned int a2);
void __thiscall CameraMouseControl::setAudioDistanceScale(CameraMouseControl *this);
void __thiscall CameraMouseControl::update(CameraMouseControl *this, float deltaT);
void __cdecl std::_Distance2<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const,AudioEngine::GUID>>>>,unsigned int>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::wstring > > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,std::wstring > > > > _Last, unsigned int *_Off);
std::wstring *__cdecl acLocaleGetCurrentLocale(std::wstring *result);
std::wstring *__cdecl acLocaleGetSetupHelpText(std::wstring *result, const std::wstring *id);
std::wstring *__cdecl acLocaleGetString(std::wstring *result, const std::wstring *id);
void __cdecl acLocaleSaveDefault(const std::wstring *filename);
void __cdecl acLocaleSaveTemplate(const std::wstring *filename);
char __cdecl acLocaleSetLocale(const std::wstring *locale);
std::wstring *__cdecl acTranslate(std::wstring *result, const std::wstring *text);
bool __cdecl loadMainINI(INIReader *ini);
char __cdecl loadSetupINI(INIReader *ini);
void __cdecl replaceAll(std::wstring *str, const std::wstring *from, const std::wstring *to);
// void __userpurge Game::Game(Game *this@<ecx>, __m128 a2@<xmm1>, std::wstring name, VideoSettings *videoSettings);
void __thiscall Game::~Game(Game *this);
void __thiscall JoypadManager::~JoypadManager(JoypadManager *this);
std::_Func_impl<std::_Callable_obj<<lambda_1538a204a34bca24117e69238147887a>,0>,std::allocator<std::_Func_class<void,OnWindowClosedEvent const &> >,void,OnWindowClosedEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1538a204a34bca24117e69238147887a_,0>,std::allocator<std::_Func_class<void,OnWindowClosedEvent const &>>,void,OnWindowClosedEvent const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_1538a204a34bca24117e69238147887a>,0>,std::allocator<std::_Func_class<void,OnWindowClosedEvent const &> >,void,OnWindowClosedEvent const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_18a35724c70df2be12f164aa2efd390e>,0>,std::allocator<std::_Func_class<void,OnWindowResizeEvent const &> >,void,OnWindowResizeEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_18a35724c70df2be12f164aa2efd390e_,0>,std::allocator<std::_Func_class<void,OnWindowResizeEvent const &>>,void,OnWindowResizeEvent const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_18a35724c70df2be12f164aa2efd390e>,0>,std::allocator<std::_Func_class<void,OnWindowResizeEvent const &> >,void,OnWindowResizeEvent const &> *this, unsigned int a2);
Game *__thiscall Game::`vector deleting destructor'(Game *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1538a204a34bca24117e69238147887a_,0>,std::allocator<std::_Func_class<void,OnWindowClosedEvent const &>>,void,OnWindowClosedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_1538a204a34bca24117e69238147887a>,0>,std::allocator<std::_Func_class<void,OnWindowClosedEvent const &> >,void,OnWindowClosedEvent const &> *this, const OnWindowClosedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_18a35724c70df2be12f164aa2efd390e_,0>,std::allocator<std::_Func_class<void,OnWindowResizeEvent const &>>,void,OnWindowResizeEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_18a35724c70df2be12f164aa2efd390e>,0>,std::allocator<std::_Func_class<void,OnWindowResizeEvent const &> >,void,OnWindowResizeEvent const &> *this, const OnWindowResizeEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_1538a204a34bca24117e69238147887a_,0>,std::allocator<std::_Func_class<void,OnWindowClosedEvent const &>>,void,OnWindowClosedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_1538a204a34bca24117e69238147887a>,0>,std::allocator<std::_Func_class<void,OnWindowClosedEvent const &> >,void,OnWindowClosedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_18a35724c70df2be12f164aa2efd390e_,0>,std::allocator<std::_Func_class<void,OnWindowResizeEvent const &>>,void,OnWindowResizeEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_18a35724c70df2be12f164aa2efd390e>,0>,std::allocator<std::_Func_class<void,OnWindowResizeEvent const &> >,void,OnWindowResizeEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_1538a204a34bca24117e69238147887a_,0>,std::allocator<std::_Func_class<void,OnWindowClosedEvent const &>>,void,OnWindowClosedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_1538a204a34bca24117e69238147887a>,0>,std::allocator<std::_Func_class<void,OnWindowClosedEvent const &> >,void,OnWindowClosedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_18a35724c70df2be12f164aa2efd390e_,0>,std::allocator<std::_Func_class<void,OnWindowResizeEvent const &>>,void,OnWindowResizeEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_18a35724c70df2be12f164aa2efd390e>,0>,std::allocator<std::_Func_class<void,OnWindowResizeEvent const &> >,void,OnWindowResizeEvent const &> *this);
void __thiscall Game::deleteGameObjectRec(Game *this, GameObject *go);
void __thiscall Game::onIdle(Game *this);
void __thiscall Game::render(Game *this, GameObject *o, float dt);
void __thiscall Game::renderAudio(Game *this, GameObject *o, float dt);
void __thiscall Game::renderHUD(Game *this, GameObject *o, float dt);
void __thiscall Game::renderHUDOnDemand(Game *this, float dt);
void __thiscall Game::run(Game *this);
void __thiscall Game::shutdown(Game *this);
void __thiscall Game::shutdownObject(Game *this, GameObject *o);
void __thiscall Game::update(Game *this, GameObject *o, float dt);
void __thiscall KeyboardManager::KeyboardManager(KeyboardManager *this, RenderWindow *arenderWindow);
void __thiscall KeyboardManager::~KeyboardManager(KeyboardManager *this);
std::_Func_impl<std::_Callable_obj<<lambda_48a7d9d50f1bb3d51f3bd346885a7e5c>,0>,std::allocator<std::_Func_class<void,OnKeyCharEvent const &> >,void,OnKeyCharEvent const &> *__thiscall std::_Func_base<void,OnKeyCharEvent const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_48a7d9d50f1bb3d51f3bd346885a7e5c>,0>,std::allocator<std::_Func_class<void,OnKeyCharEvent const &> >,void,OnKeyCharEvent const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_41758ac50f95efa4714a120fd0a1f20a>,0>,std::allocator<std::_Func_class<void,OnKeyEvent const &> >,void,OnKeyEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_41758ac50f95efa4714a120fd0a1f20a_,0>,std::allocator<std::_Func_class<void,OnKeyEvent const &>>,void,OnKeyEvent const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_41758ac50f95efa4714a120fd0a1f20a>,0>,std::allocator<std::_Func_class<void,OnKeyEvent const &> >,void,OnKeyEvent const &> *this, unsigned int a2);
KeyboardManager *__thiscall KeyboardManager::`scalar deleting destructor'(KeyboardManager *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_41758ac50f95efa4714a120fd0a1f20a_,0>,std::allocator<std::_Func_class<void,OnKeyEvent const &>>,void,OnKeyEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_41758ac50f95efa4714a120fd0a1f20a>,0>,std::allocator<std::_Func_class<void,OnKeyEvent const &> >,void,OnKeyEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_48a7d9d50f1bb3d51f3bd346885a7e5c_,0>,std::allocator<std::_Func_class<void,OnKeyCharEvent const &>>,void,OnKeyCharEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_48a7d9d50f1bb3d51f3bd346885a7e5c>,0>,std::allocator<std::_Func_class<void,OnKeyCharEvent const &> >,void,OnKeyCharEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_41758ac50f95efa4714a120fd0a1f20a_,0>,std::allocator<std::_Func_class<void,OnKeyEvent const &>>,void,OnKeyEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_41758ac50f95efa4714a120fd0a1f20a>,0>,std::allocator<std::_Func_class<void,OnKeyEvent const &> >,void,OnKeyEvent const &> *this, const OnKeyEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_48a7d9d50f1bb3d51f3bd346885a7e5c_,0>,std::allocator<std::_Func_class<void,OnKeyCharEvent const &>>,void,OnKeyCharEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_48a7d9d50f1bb3d51f3bd346885a7e5c>,0>,std::allocator<std::_Func_class<void,OnKeyCharEvent const &> >,void,OnKeyCharEvent const &> *this, const OnKeyCharEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_41758ac50f95efa4714a120fd0a1f20a_,0>,std::allocator<std::_Func_class<void,OnKeyEvent const &>>,void,OnKeyEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_41758ac50f95efa4714a120fd0a1f20a>,0>,std::allocator<std::_Func_class<void,OnKeyEvent const &> >,void,OnKeyEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_48a7d9d50f1bb3d51f3bd346885a7e5c_,0>,std::allocator<std::_Func_class<void,OnKeyCharEvent const &>>,void,OnKeyCharEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_48a7d9d50f1bb3d51f3bd346885a7e5c>,0>,std::allocator<std::_Func_class<void,OnKeyCharEvent const &> >,void,OnKeyCharEvent const &> *this);
void __thiscall KeyboardManager::onKeyPressEvent(KeyboardManager *this, const OnKeyCharEvent *message);
void __thiscall KeyboardManager::releaseFocus(KeyboardManager *this, IKeyEventListener *l);
void __thiscall JoypadManager::JoypadManager(JoypadManager *this);
void __thiscall X360Joypad::acquire(X360Joypad *this);
int __thiscall X360Joypad::getButtonMask(X360Joypad *this);
vec2f *__thiscall X360Joypad::getLeftStick(X360Joypad *this, vec2f *result);
double __thiscall X360Joypad::getLeftTrigger(X360Joypad *this);
vec2f *__thiscall X360Joypad::getRightStick(X360Joypad *this, vec2f *result);
double __thiscall X360Joypad::getRightTrigger(X360Joypad *this);
void __thiscall X360Joypad::setVibrations(X360Joypad *this, const float left, const float right);
void __cdecl std::_Uninit_def_fill_n<CarPhysicsState *,unsigned int,std::allocator<CarPhysicsState>,CarPhysicsState>(CarPhysicsState *_First, unsigned int _Count);
void __cdecl std::_Uninit_def_fill_n<vec3f *,unsigned int,std::allocator<vec3f>,vec3f>(std::vector<WingState> *_First, unsigned int _Count);
void __cdecl std::_Uninit_def_fill_n<Task *,unsigned int,std::allocator<Task>,Task>(Task *_First, unsigned int _Count);
CarPhysicsState *__cdecl std::_Uninit_copy<CarPhysicsState *,CarPhysicsState *,std::allocator<CarPhysicsState>>(CarPhysicsState *_First, CarPhysicsState *_Last, CarPhysicsState *_Dest);
std::vector<WingState> *__cdecl std::_Uninit_move<std::vector<LeaderboardEntry> *,std::vector<LeaderboardEntry> *,std::allocator<std::vector<LeaderboardEntry>>,std::vector<LeaderboardEntry>>(std::vector<WingState> *_First, std::vector<WingState> *_Last, std::vector<WingState> *_Dest);
Task *__cdecl std::_Uninit_move<Task *,Task *,std::allocator<Task>,Task>(Task *_First, Task *_Last, Task *_Dest);
void __thiscall PhysicsEngine::PhysicsEngine(PhysicsEngine *this);
void __thiscall Concurrency::concurrent_queue<ACPhysicsEvent,std::allocator<ACPhysicsEvent>>::~concurrent_queue<ACPhysicsEvent,std::allocator<ACPhysicsEvent>>(Concurrency::concurrent_queue<ACPhysicsEvent,std::allocator<ACPhysicsEvent> > *this);
void __thiscall ICollisionCallback::~ICollisionCallback(ICollisionCallback *this);
void __thiscall PhysicsEngine::~PhysicsEngine(PhysicsEngine *this);
Speed *__thiscall Speed::operator*(Speed *this, Speed *result, const float v2);
std::_Func_impl<std::_Callable_obj<<lambda_2e324f348e95b5616652a80a52abd18d>,0>,std::allocator<std::_Func_class<void,int> >,void,int> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2e324f348e95b5616652a80a52abd18d_,0>,std::allocator<std::_Func_class<void,int>>,void,int>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_2e324f348e95b5616652a80a52abd18d>,0>,std::allocator<std::_Func_class<void,int> >,void,int> *this, unsigned int a2);
Concurrency::concurrent_queue<ACPhysicsEvent,std::allocator<ACPhysicsEvent> > *__thiscall Concurrency::concurrent_queue<ACPhysicsEvent,std::allocator<ACPhysicsEvent>>::`vector deleting destructor'(Concurrency::concurrent_queue<ACPhysicsEvent,std::allocator<ACPhysicsEvent> > *this, unsigned int a2);
ICollisionCallback *__thiscall ICollisionCallback::`scalar deleting destructor'(ICollisionCallback *this, unsigned int a2);
PhysicsEngine *__thiscall PhysicsEngine::`scalar deleting destructor'(PhysicsEngine *this, unsigned int a2);
void __thiscall Concurrency::concurrent_queue<ACPhysicsEvent,std::allocator<ACPhysicsEvent>>::_Assign_and_destroy_item(Concurrency::concurrent_queue<ACPhysicsEvent,std::allocator<ACPhysicsEvent> > *this, void *_Dst, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Src, unsigned int _Index);
void __thiscall Concurrency::concurrent_queue<ACPhysicsEvent,std::allocator<ACPhysicsEvent>>::_Move_item(Concurrency::concurrent_queue<ACPhysicsEvent,std::allocator<ACPhysicsEvent> > *this, Concurrency::details::_Concurrent_queue_base_v4::_Page *_Dst, unsigned int _Index, void *_Src);
// void __usercall std::_Func_impl<std::_Callable_obj<_lambda_044fc942b21b790926a874e6db5381f1_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_044fc942b21b790926a874e6db5381f1>,0>,std::allocator<std::_Func_class<void> >,void> *this@<ecx>, int a2@<esi>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2e324f348e95b5616652a80a52abd18d_,0>,std::allocator<std::_Func_class<void,int>>,void,int>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_2e324f348e95b5616652a80a52abd18d>,0>,std::allocator<std::_Func_class<void,int> >,void,int> *this, int *<_Args_0>);
unsigned int __thiscall std::vector<CarPhysicsState>::_Grow_to(std::vector<CarPhysicsState> *this, unsigned int _Count);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_044fc942b21b790926a874e6db5381f1_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_044fc942b21b790926a874e6db5381f1>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_2e324f348e95b5616652a80a52abd18d_,0>,std::allocator<std::_Func_class<void,int>>,void,int>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_2e324f348e95b5616652a80a52abd18d>,0>,std::allocator<std::_Func_class<void,int> >,void,int> *this, void *_Where);
void __thiscall std::vector<CarPhysicsState>::_Reallocate(std::vector<CarPhysicsState> *this, unsigned int _Count);
void __thiscall std::vector<std::vector<ReplayFrameWingStatus>>::_Reallocate(std::vector<std::vector<WingState>> *this, unsigned int _Count);
void __thiscall std::vector<Task>::_Reallocate(std::vector<Task> *this, unsigned int _Count);
void __thiscall std::vector<CarPhysicsState>::_Reserve(std::vector<CarPhysicsState> *this, unsigned int _Count);
void __thiscall std::vector<Task>::_Reserve(std::vector<Task> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_044fc942b21b790926a874e6db5381f1_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_044fc942b21b790926a874e6db5381f1>,0>,std::allocator<std::_Func_class<void> >,void> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_2e324f348e95b5616652a80a52abd18d_,0>,std::allocator<std::_Func_class<void,int>>,void,int>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_2e324f348e95b5616652a80a52abd18d>,0>,std::allocator<std::_Func_class<void,int> >,void,int> *this);
void __thiscall Event<OnNewCarLoadedEvent>::~Event<OnNewCarLoadedEvent>(std::vector<Task> *this);
void __thiscall PhysicsEngine::addAdditionalPhysicsProvider(PhysicsEngine *this, ICarPhysicsStateProvider *p);
void __thiscall PhysicsEngine::addLegalTyre(PhysicsEngine *this, const std::wstring *short_name);
double __thiscall PhysicsEngine::getAirDensity(PhysicsEngine *this);
IPhysicsCore *__thiscall PhysicsEngine::getCore(PhysicsEngine *this);
double __thiscall PhysicsEngine::getOddTimeOffset(PhysicsEngine *this);
void __thiscall PhysicsEngine::getPhysicsStates(PhysicsEngine *this, std::vector<CarPhysicsState> *states, std::vector<std::vector<WingState>> *wingStates);
BOOL __thiscall PhysicsEngine::hasSessionStarted(PhysicsEngine *this, long double lag);
void __thiscall PhysicsEngine::initLowSpeedFF(PhysicsEngine *this);
char __thiscall PhysicsEngine::isTyreLegal(PhysicsEngine *this, const std::wstring *short_name);
void __thiscall PhysicsEngine::onCollisionCallBack(PhysicsEngine *this, void *userData0, void *shape0, void *userData1, void *shape1, vec3f normal, vec3f pos, float depth);
void __thiscall PhysicsEngine::removeCar(PhysicsEngine *this, Car *c);
void __thiscall std::vector<CarPhysicsState>::resize(std::vector<CarPhysicsState> *this, unsigned int _Newsize);
void __thiscall std::vector<std::vector<LeaderboardEntry>>::resize(std::vector<std::vector<WingState>> *this, unsigned int _Newsize);
void __thiscall std::vector<Task>::resize(std::vector<Task> *this, unsigned int _Newsize);
void __thiscall PhysicsEngine::setCurrentSessionStartTime(PhysicsEngine *this, const long double new_start_time);
void __thiscall PhysicsEngine::setSessionInfo(PhysicsEngine *this, const SessionInfo *info);
void __thiscall PhysicsEngine::setWind(PhysicsEngine *this, Speed speed, float directionDEG);
void __thiscall PhysicsEngine::step(PhysicsEngine *this, float dt, long double currentTime, long double gt);
void __thiscall PhysicsEngine::stepPaused(PhysicsEngine *this);
void __thiscall PhysicsEngine::stepWind(PhysicsEngine *this, float dt);
std::wstring *__cdecl std::to_wstring(std::wstring *result, long double _Val);
void __thiscall PhysicsEngine::writeTestResult(PhysicsEngine *this, const std::wstring *result);
void __thiscall PenaltyManager::~PenaltyManager(PenaltyManager *this);
void __thiscall std::vector<PitStopStrategy>::_Reallocate(std::vector<TimeLineStatus> *this, unsigned int _Count);
void __thiscall std::vector<RealTimeCarDesc>::_Reserve(std::vector<TimeLineStatus> *this, unsigned int _Count);
void __thiscall PenaltyManager::addJumpStartPenalty(PenaltyManager *this);
bool __thiscall PenaltyManager::checkBlackFlag(PenaltyManager *this);
void __thiscall PenaltyManager::decreasePitPenaltyLaps(PenaltyManager *this, bool isValidLap);
void __thiscall PenaltyManager::init(PenaltyManager *this, Car *car);
void __thiscall std::vector<PitStopStrategy>::push_back(std::vector<PenaltyRecord> *this, PenaltyRecord *_Val);
void __thiscall PenaltyManager::reset(PenaltyManager *this);
void __thiscall PenaltyManager::resetPenalty(PenaltyManager *this);
void __thiscall PenaltyManager::step(PenaltyManager *this, float dt);
SGearRatio *__cdecl std::_Uninit_move<SGearRatio *,SGearRatio *,std::allocator<SGearRatio>,SGearRatio>(SGearRatio *_First, SGearRatio *_Last, SGearRatio *_Dest);
void __thiscall std::vector<SGearRatio>::~vector<SGearRatio>(std::vector<SGearRatio> *this);
void __thiscall Drivetrain::~Drivetrain(Drivetrain *this);
void __thiscall DrivetrainControllers::~DrivetrainControllers(DrivetrainControllers *this);
void __thiscall std::vector<SGearRatio>::_Reallocate(std::vector<SGearRatio> *this, unsigned int _Count);
void __thiscall std::vector<SGearRatio>::_Reserve(std::vector<SGearRatio> *this, unsigned int _Count);
void __thiscall Drivetrain::addGear(Drivetrain *this, std::wstring name, long double ratio);
char __thiscall Drivetrain::gearDown(Drivetrain *this);
char __thiscall Drivetrain::gearUp(Drivetrain *this);
SGearRatio *__thiscall Drivetrain::getCurrentGear(Drivetrain *this, SGearRatio *result);
long double __thiscall Drivetrain::getDrivetrainSpeed(Drivetrain *this);
double __thiscall Drivetrain::getEngineRPM(Drivetrain *this);
long double __thiscall Drivetrain::getInertiaFromEngine(Drivetrain *this);
long double __thiscall Drivetrain::getInertiaFromWheels(Drivetrain *this);
long double __thiscall Drivetrain::getRpmWindowStatus(Drivetrain *this);
bool __thiscall Drivetrain::hasDynamicControllers(Drivetrain *this);
void __thiscall Drivetrain::init(Drivetrain *this, Car *car);
// void __usercall Drivetrain::initControllers(Drivetrain *this@<ecx>, unsigned int a2@<ebx>);
BOOL __thiscall Drivetrain::isChangingGear(Drivetrain *this);
bool __thiscall Drivetrain::isGearboxLocked(Drivetrain *this);
void __thiscall Drivetrain::loadINI(Drivetrain *this, const std::wstring *dataPath);
double __thiscall Drivetrain::projectRPMAtDownshift(Drivetrain *this);
void __thiscall std::vector<SGearRatio>::push_back(std::vector<SGearRatio> *this, SGearRatio *_Val);
void __thiscall Drivetrain::reallignSpeeds(Drivetrain *this, float dt);
void __thiscall std::unique_ptr<DynamicController>::reset(std::unique_ptr<DynamicController> *this, DynamicController *_Ptr);
void __thiscall Drivetrain::reset(Drivetrain *this);
void __thiscall Drivetrain::setCurrentGear(Drivetrain *this, int index, bool force);
void __thiscall Drivetrain::setGearRatio(Drivetrain *this, int index, float value);
void __thiscall Drivetrain::step2WD(Drivetrain *this, float dt);
void __thiscall Drivetrain::step4WD(Drivetrain *this, float dt);
void __thiscall Drivetrain::step4WD_new(Drivetrain *this, float dt);
void __thiscall Drivetrain::step(Drivetrain *this, float dt);
void __thiscall Drivetrain::stepControllers(Drivetrain *this, float dt);
PerformancePair *__cdecl std::_Copy_impl<PerformancePair *,PerformancePair *>(PerformancePair *_First, PerformancePair *_Last, PerformancePair *_Dest);
SplineIndexBound *__thiscall std::vector<PerformancePair>::_Ucopy<PerformancePair *>(std::vector<PerformancePair> *this, PerformancePair *_First, PerformancePair *_Last, PerformancePair *_Ptr);
SplineIndexBound *__cdecl std::_Uninit_move<BestSector *,BestSector *,std::allocator<BestSector>,BestSector>(SplineIndexBound *_First, SplineIndexBound *_Last, SplineIndexBound *_Dest);
void __thiscall PerformanceMeter::~PerformanceMeter(PerformanceMeter *this);
std::vector<PerformancePair> *__thiscall std::vector<PerformancePair>::operator=(std::vector<PerformancePair> *this, const std::vector<PerformancePair> *_Right);
PerformanceSplit *__thiscall PerformanceMeter::getCurrentSplit(PerformanceMeter *this, PerformanceSplit *result);
BOOL __thiscall PerformanceMeter::hasData(PerformanceMeter *this);
void __thiscall PerformanceMeter::init(PerformanceMeter *this, Car *car);
void __thiscall PerformanceMeter::reset(PerformanceMeter *this);
void __thiscall PerformanceMeter::step(PerformanceMeter *this, float dt);
DynamicControllerStage *__cdecl std::_Copy_impl<DynamicControllerStage *,DynamicControllerStage *>(DynamicControllerStage *_First, DynamicControllerStage *_Last, DynamicControllerStage *_Dest);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<TyreThermalPatch>>>(TyreThermalPatch *_First, TyreThermalPatch *_Last);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<TelemetryChannel>>>(TelemetryChannel *_First, TelemetryChannel *_Last);
DynamicControllerStage *__thiscall std::vector<DynamicControllerStage>::_Ucopy<DynamicControllerStage *>(std::vector<DynamicControllerStage> *this, DynamicControllerStage *_First, DynamicControllerStage *_Last, DynamicControllerStage *_Ptr);
void __thiscall std::_Wrap_alloc<std::allocator<TelemetryChannel>>::destroy<TelemetryChannel>(std::_Wrap_alloc<std::allocator<TelemetryChannel> > *this, TelemetryChannel *_Ptr);
void __thiscall AeroMap::AeroMap(AeroMap *this);
void __thiscall AntirollBar::AntirollBar(AntirollBar *this);
void __thiscall Autoclutch::Autoclutch(Autoclutch *this);
void __thiscall BrakeDisc::BrakeDisc(BrakeDisc *this);
void __thiscall BrakeSystem::BrakeSystem(BrakeSystem *this);
// void __userpurge Car::Car(Car *this@<ecx>, __m128 a2@<xmm3>, __m128 a3@<xmm4>, PhysicsEngine *iengine, const std::wstring *iunixName, const std::wstring *config);
void __thiscall CarColliderManager::CarColliderManager(CarColliderManager *this);
void __thiscall Drivetrain::Drivetrain(Drivetrain *this);
void __thiscall HeaveSpring::HeaveSpring(HeaveSpring *this);
void __thiscall Kers::Kers(Kers *this);
void __thiscall OnCollisionEvent::OnCollisionEvent(OnCollisionEvent *this);
void __thiscall Telemetry::Telemetry(Telemetry *this);
void __thiscall TimeTransponder::TimeTransponder(TimeTransponder *this);
void __thiscall Tyre::Tyre(Tyre *this);
void __thiscall TyreData::TyreData(TyreData *this);
void __thiscall TyreModelData::TyreModelData(TyreModelData *this);
void __thiscall TyreStatus::TyreStatus(TyreStatus *this);
void __thiscall TyreThermalModel::TyreThermalModel(TyreThermalModel *this);
void __thiscall std::vector<TyreCompoundDef>::~vector<TyreCompoundDef>(std::vector<TyreCompoundDef> *this);
void __thiscall std::vector<TyreThermalPatch>::_Tidy(std::vector<TyreThermalPatch> *this);
void __thiscall std::vector<TelemetryChannel>::~vector<TelemetryChannel>(std::vector<TelemetryChannel> *this);
void __thiscall BrakeDisc::~BrakeDisc(BrakeDisc *this);
void __thiscall BrakeSystem::~BrakeSystem(BrakeSystem *this);
void __thiscall Car::~Car(Car *this);
void __thiscall ActiveActuator::~ActiveActuator(CarControlsInput *this);
void __thiscall DynamicControllerStage::~DynamicControllerStage(DynamicControllerStage *this);
void __thiscall ITorqueGenerator::~ITorqueGenerator(ITorqueGenerator *this);
void __thiscall TelemetryChannel::~TelemetryChannel(TelemetryChannel *this);
void __thiscall TyreCompoundDef::~TyreCompoundDef(TyreCompoundDef *this);
void __thiscall TyreModelData::~TyreModelData(TyreModelData *this);
void __thiscall TyreThermalModel::~TyreThermalModel(TyreThermalModel *this);
std::vector<DynamicControllerStage> *__thiscall std::vector<DynamicControllerStage>::operator=(std::vector<DynamicControllerStage> *this, const std::vector<DynamicControllerStage> *_Right);
DynamicController *__thiscall DynamicController::operator=(DynamicController *this, const DynamicController *__that);
std::_Vector_iterator<std::_Vector_val<std::_Simple_types<TyreCompoundDef> > > *__thiscall std::_Vector_iterator<std::_Vector_val<std::_Simple_types<TyreCompoundDef>>>::operator++(std::_Vector_iterator<std::_Vector_val<std::_Simple_types<TyreCompoundDef> > > *this);
Car *__thiscall Car::`vector deleting destructor'(Car *this, unsigned int a2);
ITorqueGenerator *__thiscall ITorqueGenerator::`scalar deleting destructor'(ITorqueGenerator *this, unsigned int a2);
Kers *__thiscall Kers::`vector deleting destructor'(Kers *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4cec3139fbe4904c3edc6b11bdde67b4_,0>,std::allocator<std::_Func_class<void,SessionInfo const &>>,void,SessionInfo const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_4cec3139fbe4904c3edc6b11bdde67b4>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_88fc3e94da5f4b0c80945ac999a9b9a8_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_88fc3e94da5f4b0c80945ac999a9b9a8>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, void *_Where);
void __thiscall std::vector<DynamicControllerStage>::_Destroy(std::vector<DynamicControllerStage> *this, DynamicControllerStage *_First, DynamicControllerStage *_Last);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4cec3139fbe4904c3edc6b11bdde67b4_,0>,std::allocator<std::_Func_class<void,SessionInfo const &>>,void,SessionInfo const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4cec3139fbe4904c3edc6b11bdde67b4>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this, const SessionInfo *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_88fc3e94da5f4b0c80945ac999a9b9a8_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_88fc3e94da5f4b0c80945ac999a9b9a8>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, const long double *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_98ef5105ea1ca57f0a44e8ebc6e062bd_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_98ef5105ea1ca57f0a44e8ebc6e062bd>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_98ef5105ea1ca57f0a44e8ebc6e062bd_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_98ef5105ea1ca57f0a44e8ebc6e062bd>,0>,std::allocator<std::_Func_class<void> >,void> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4cec3139fbe4904c3edc6b11bdde67b4_,0>,std::allocator<std::_Func_class<void,SessionInfo const &>>,void,SessionInfo const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4cec3139fbe4904c3edc6b11bdde67b4>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_88fc3e94da5f4b0c80945ac999a9b9a8_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_88fc3e94da5f4b0c80945ac999a9b9a8>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_98ef5105ea1ca57f0a44e8ebc6e062bd_,0>,std::allocator<std::_Func_class<void,>>,void,>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_98ef5105ea1ca57f0a44e8ebc6e062bd>,0>,std::allocator<std::_Func_class<void> >,void> *this);
void __thiscall std::vector<DynamicControllerStage>::_Tidy(std::vector<DynamicControllerStage> *this);
void __thiscall std::vector<TyreCompoundDef>::_Tidy(std::vector<TyreCompoundDef> *this);
void __thiscall std::vector<SetupItem>::_Tidy(std::vector<SetupItem> *this);
void __thiscall std::vector<Wing>::_Tidy(std::vector<Wing> *this);
void __thiscall Car::addPenalty(Car *this, long double ptime);
// void __usercall Car::buildARBS(Car *this@<ecx>, unsigned int a2@<ebx>);
double __thiscall Car::calcBodyMass(Car *this);
void __thiscall std::vector<DynamicControllerStage>::clear(std::vector<DynamicControllerStage> *this);
void __thiscall Car::clearPenalty(Car *this);
void __thiscall Car::forcePosition(Car *this, const vec3f *pos, bool invalidateTransponder);
void __thiscall Car::forceRotation(Car *this, const vec3f *ihed);
void __thiscall Car::getAIState(Car *this, AIState *state);
double __thiscall Car::getBackDistanceFromCar(Car *this, Car *car);
double __thiscall Car::getCGHeight(Car *this);
std::wstring *__thiscall Car::getConfigPath(Car *this, std::wstring *result, const std::wstring *filename);
ICarControlsProvider *__thiscall Car::getControlsProvider(Car *this);
void __thiscall Car::getEngagement(Car *this, const float engagement_length, float *left, float *right);
double __thiscall Car::getFinalFF(Car *this);
double __thiscall Car::getFrontWheelAngle(Car *this);
double __thiscall Car::getFuelPerLap(Car *this);
plane4f *__thiscall Car::getGroundPlane(Car *this, plane4f *result);
vec3f *__thiscall Car::getGroundWindVector(Car *this, vec3f *result);
vec3f *__thiscall Car::getLocalAngularVelocity(Car *this, vec3f *result);
vec3f *__thiscall Car::getLocalVelocity(Car *this, vec3f *result);
long double __thiscall Car::getPenaltyTime(Car *this);
void __thiscall Car::getPhysicsState(Car *this, CarPhysicsState *state);
PitStopTime *__thiscall Car::getPitstopTime(Car *this, PitStopTime *result, float fuel_to_add, bool changeTyres, bool repairBody, bool repairEngine, bool repairSus, bool useRandomizer);
float __thiscall Car::getRestrictor(Car *this);
Speed *__thiscall Car::getSpeed(Car *this, Speed *result);
double __thiscall Car::getSteerFF(Car *this);
mat44f *__thiscall Car::getSuspensionMatrix(Car *this, mat44f *result, unsigned int index);
long double __thiscall Car::getTotalKM(Car *this);
double __thiscall Car::getTotalMass(Car *this, bool withFuel);
mat44f *__thiscall Car::getTyreMatrix(Car *this, mat44f *result, int index);
void __thiscall Car::getTyreThermalState(Car *this, int index, TyreThermalState *state);
vec3f *__thiscall Car::getVelocity(Car *this, vec3f *result);
double __thiscall Car::getWheelSterAngleDEG(Car *this, int index);
void __thiscall Car::getWingState(Car *this, std::vector<WingState> *ws);
void __thiscall Car::initAeroMap(Car *this);
void __thiscall Car::initCarData(Car *this);
void __thiscall Car::initCarDataPath(Car *this);
void __thiscall Car::initColliderMesh(Car *this, Mesh *mesh, mat44f *bodyMatrix);
void __thiscall Car::initHeaveSprings(Car *this);
void __thiscall Car::initPitstopTimings(Car *this);
char __thiscall Car::isInPitLane(Car *this);
BOOL __thiscall Car::isInPits(Car *this);
bool __thiscall Car::isMinSpeedPenaltyClearDisabled(Car *this);
BOOL __thiscall Car::isSleeping(Car *this);
void __thiscall Car::lockControls(Car *this, bool lock);
void __thiscall Car::lockControlsUntil(Car *this, long double time, long double start);
// void __userpurge Car::onCollisionCallBack(Car *this@<ecx>, int a2@<edi>, void *userData0, void *shape0, void *userData1, void *shape1, vec3f normal, __int128 pos, int a9);
void __thiscall Car::onNewSession(Car *this, const SessionInfo *si);
void __thiscall Car::onTyresStepCompleted(Car *this);
void __thiscall Car::pollControls(Car *this, float dt);
void __thiscall Car::postStep(Car *this, float dt);
void __thiscall Car::reset(Car *this);
void __thiscall Car::resetSplineLocator(Car *this);
void __thiscall Car::resetSuspensionDamageLevel(Car *this);
void __thiscall Car::setBallastKG(Car *this, float kg);
void __thiscall Car::setBlackFlag(Car *this, bool isflagged, PenaltyDescription type);
void __thiscall Car::setControllerProvider(Car *this, ICarControlsProvider *cp);
void __thiscall Car::setDamageLevel(Car *this, float v);
void __thiscall Car::setDamageLevel(Car *this, float v, int index);
int __thiscall Car::setFuelForLaps(Car *this, int laps, float mult);
void __thiscall Car::setRequestedFuel(Car *this, float value, bool changeValue);
void __thiscall Car::setRestrictor(Car *this, float value);
void __thiscall Car::setSlipStreamEffects(Car *this, float receive, float generationSpeedFactor);
// void __userpurge Car::step(Car *this@<ecx>, int a2@<esi>, float dt);
void __thiscall Car::stepComponents(Car *this, float dt);
void __thiscall Car::stepJumpStart(Car *this, float dt);
void __thiscall Car::stepPreCacheValues(Car *this, float dt);
void __thiscall Car::stepThermalObjects(Car *this, float dt);
void __thiscall Car::updateAirPressure(Car *this);
// void __usercall Car::updateBodyMass(Car *this@<ecx>, int a2@<esi>);
void __thiscall Car::updateColliderStatus(Car *this, float dt);
TimeLine *__cdecl std::_Uninit_move<TimeLine *,TimeLine *,std::allocator<TimeLine>,TimeLine>(TimeLine *_First, TimeLine *_Last, TimeLine *_Dest);
void __thiscall Track::Track(Track *this, PhysicsEngine *pe, const std::wstring *iname, const std::wstring *config);
void __thiscall std::unique_ptr<DRSManager>::~unique_ptr<DRSManager>(std::unique_ptr<DRSManager> *this);
void __thiscall IRayTrackCollisionProvider::~IRayTrackCollisionProvider(IRayTrackCollisionProvider *this);
void __thiscall Track::~Track(Track *this);
void __thiscall lambda_77ca9348bb85863f3ac03214213671f3_::operator()(Track::initDynamicTrack::__l22::<lambda_77ca9348bb85863f3ac03214213671f3> *this, const SessionInfo *si);
std::_Func_impl<std::_Callable_obj<<lambda_77ca9348bb85863f3ac03214213671f3>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4cec3139fbe4904c3edc6b11bdde67b4_,0>,std::allocator<std::_Func_class<void,SessionInfo const &>>,void,SessionInfo const &>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_77ca9348bb85863f3ac03214213671f3>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this, unsigned int a2);
IRayTrackCollisionProvider *__thiscall IRayTrackCollisionProvider::`scalar deleting destructor'(IRayTrackCollisionProvider *this, unsigned int a2);
TimeLine *__thiscall TimeLine::`vector deleting destructor'(TimeLine *this, unsigned int a2);
Track *__thiscall Track::`scalar deleting destructor'(Track *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_77ca9348bb85863f3ac03214213671f3_,0>,std::allocator<std::_Func_class<void,SessionInfo const &>>,void,SessionInfo const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_77ca9348bb85863f3ac03214213671f3>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this, const SessionInfo *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_77ca9348bb85863f3ac03214213671f3_,0>,std::allocator<std::_Func_class<void,SessionInfo const &>>,void,SessionInfo const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_77ca9348bb85863f3ac03214213671f3>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this, void *_Where);
void __thiscall std::vector<TimeLine>::_Reallocate(std::vector<TimeLine> *this, unsigned int _Count);
void __thiscall std::vector<DriverNameDisplayer::CarDistandeOrder>::_Reserve(std::vector<SplineIndexBound> *this, unsigned int _Count);
void __thiscall std::vector<TimeLine>::_Reserve(std::vector<TimeLine> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_77ca9348bb85863f3ac03214213671f3_,0>,std::allocator<std::_Func_class<void,SessionInfo const &>>,void,SessionInfo const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_77ca9348bb85863f3ac03214213671f3>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this);
void __thiscall std::vector<TimeLine>::_Tidy(std::vector<TimeLine> *this);
unsigned int __thiscall Track::addSurface(Track *this, const std::wstring *iname, float *vertices, int numVertices, unsigned __int16 *indices, int indexCount, const SurfaceDef *surfaceDef, unsigned int sector_id);
void __thiscall Track::addTimeLine(Track *this, const vec3f *p1, const vec3f *p2, TimeLineType type);
IRayCaster *__thiscall Track::createRayCaster(Track *this, float length);
int __thiscall Track::getSector(Track *this, float normalizedPosition);
// void __usercall Track::initAISpline(Track *this@<ecx>, __m128 a2@<xmm0>, __m128 a3@<xmm3>, __m128 a4@<xmm4>);
void __thiscall Track::initDynamicTrack(Track *this);
void __thiscall Track::initStartingBounds(Track *this);
void __thiscall std::vector<TimeLine>::push_back(std::vector<TimeLine> *this, TimeLine *_Val);
bool __thiscall Track::rayCast(Track *this, const vec3f *org, const vec3f *dir, RayCastResult *result, float length);
bool __thiscall Track::rayCastWithRayCaster(Track *this, const vec3f *org, const vec3f *dir, RayCastResult *result, float length, IRayCaster *rayCaster);
void __thiscall Track::setGripLevelExternal(Track *this, float grip);
void __thiscall Track::step(Track *this, float dt);
TimeLineStatus *__thiscall std::vector<DRSZone>::_Ucopy<DRSZone *>(std::vector<AIStraightData> *this, AIStraightData *_First, AIStraightData *_Last, AIStraightData *_Ptr);
void __thiscall DRSManager::DRSManager(DRSManager *this, PhysicsEngine *engine);
void __thiscall DRSManager::~DRSManager(DRSManager *this);
std::vector<DRSZone> *__thiscall std::vector<DRSZone>::operator=(std::vector<DRSZone> *this, const std::vector<DRSZone> *_Right);
char __thiscall DRSManager::isDRSAvailable(DRSManager *this, const Car *car);
void __thiscall DRSManager::setZones(DRSManager *this, std::vector<DRSZone> *zv);
char __thiscall DRSManager::wasRaceSwitchedOn(DRSManager *this, const Car *car);
// void __usercall FFPostProcessor::FFPostProcessor(FFPostProcessor *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall FFPostProcessor::~FFPostProcessor(FFPostProcessor *this);
double __thiscall FFPostProcessor::getProcessedFF(FFPostProcessor *this, float v);
Turbo *__cdecl std::_Copy_impl<Turbo *,Turbo *>(Turbo *_First, Turbo *_Last, Turbo *_Dest);
Turbo *__thiscall std::vector<Turbo>::_Ucopy<Turbo *>(std::vector<Turbo> *this, Turbo *_First, Turbo *_Last, Turbo *_Ptr);
Turbo *__cdecl std::_Uninit_copy<Turbo *,Turbo *,std::allocator<Turbo>>(Turbo *_First, Turbo *_Last, Turbo *_Dest);
void __thiscall RaceEngineer::RaceEngineer(RaceEngineer *this, Car *icar);
void __thiscall RaceEngineer::~RaceEngineer(RaceEngineer *this);
std::vector<Turbo> *__thiscall std::vector<Turbo>::operator=(std::vector<Turbo> *this, const std::vector<Turbo> *_Right);
RaceEngineer *__thiscall RaceEngineer::`vector deleting destructor'(RaceEngineer *this, unsigned int a2);
void __thiscall std::vector<Turbo>::clear(std::vector<Turbo> *this);
double __thiscall RaceEngineer::evalAvailableBrake(RaceEngineer *this, float speed, float latg, float weight);
double __thiscall RaceEngineer::evalFrontRideHeight(RaceEngineer *this);
double __thiscall RaceEngineer::evalLateralGFromLoads(RaceEngineer *this, const float speed, const float aeroRatio, const float mass, const float *loads);
double __thiscall RaceEngineer::evalLateralGrip(RaceEngineer *this, float speed, float mass, float aeroModifier, float *in_loads, float current_lift_kg);
double __thiscall RaceEngineer::evalRearRideHeight(RaceEngineer *this);
double __thiscall RaceEngineer::evalRideHeight(RaceEngineer *this, int index);
WheelValues *__thiscall RaceEngineer::evalTyreLoad(RaceEngineer *this, WheelValues *result, float speedMS, float latg, float longg);
// double __usercall RaceEngineer::evaluateFuelPerLapFromTrackSpline@<st0>(RaceEngineer *this@<ecx>, unsigned int a2@<ebx>, __m128 a3@<xmm3>, __m128 a4@<xmm4>);
int __thiscall RaceEngineer::findTyreCompound(RaceEngineer *this, FindTyreCompoundLogic logic);
float *__thiscall RaceEngineer::getAccelerationProfile(RaceEngineer *this, float *a2);
double __thiscall RaceEngineer::getAntiSquat(RaceEngineer *this);
double __thiscall RaceEngineer::getBaseCarHeight(RaceEngineer *this);
double __thiscall RaceEngineer::getBetaRAD(RaceEngineer *this);
double __thiscall RaceEngineer::getCasterRAD(RaceEngineer *this, ISuspension *isus);
double __cdecl RaceEngineer::getCompoundDY(const TyreCompoundDef *def, float load);
double __thiscall RaceEngineer::getDrivingTyresSlip(RaceEngineer *this);
double __thiscall RaceEngineer::getDynamicIndex(RaceEngineer *this);
double __thiscall RaceEngineer::getFrontCasterRAD(RaceEngineer *this);
std::tuple<float,float> *__thiscall RaceEngineer::getFrontDampingRatio(RaceEngineer *this, std::tuple<float,float> *result);
double __thiscall RaceEngineer::getFrontNaturalFrequencyHZ(RaceEngineer *this);
double __thiscall RaceEngineer::getFrontTrack(RaceEngineer *this);
KPI *__thiscall RaceEngineer::getKPI_RAD(RaceEngineer *this, KPI *result, int index);
Car *__thiscall RaceEngineer::getLeftDrivenTyre(RaceEngineer *this);
double __thiscall RaceEngineer::getMaxBrakingForce(RaceEngineer *this);
Speed *__thiscall RaceEngineer::getMaxSpeedFromGear(RaceEngineer *this, Speed *result, unsigned int relativeCarIndex);
double __thiscall RaceEngineer::getOptimalBrake(RaceEngineer *this);
double __thiscall RaceEngineer::getPointFrontShare(RaceEngineer *this, vec3f *p);
double __thiscall RaceEngineer::getPointGroundHeight(RaceEngineer *this, const vec3f *p);
std::tuple<float,float> *__thiscall RaceEngineer::getRearDampingRatio(RaceEngineer *this, std::tuple<float,float> *result);
double __thiscall RaceEngineer::getRearNaturalFrequencyHZ(RaceEngineer *this);
double __thiscall RaceEngineer::getRearTrack(RaceEngineer *this);
Car *__thiscall RaceEngineer::getRightDrivenTyre(RaceEngineer *this);
double __thiscall RaceEngineer::getTorqueToGripRatio(RaceEngineer *this);
double __thiscall RaceEngineer::projectCarForwardForceAtGas(RaceEngineer *this, const float gas);
double __thiscall RaceEngineer::projectWingsDrag(RaceEngineer *this, float speed);
double __thiscall RaceEngineer::projectWingsLift(RaceEngineer *this, float speed);
TyreCompoundDef *__cdecl std::_Uninit_move<TyreCompoundDef *,TyreCompoundDef *,std::allocator<TyreCompoundDef>,TyreCompoundDef>(TyreCompoundDef *_First, TyreCompoundDef *_Last, TyreCompoundDef *_Dest);
bool __cdecl isfinite<double>(long double _X);
void __thiscall TyreCompoundDef::TyreCompoundDef(TyreCompoundDef *this, const TyreCompoundDef *__that);
void __thiscall TyreCompoundDef::TyreCompoundDef(TyreCompoundDef *this);
void __thiscall TyreModelData::TyreModelData(TyreModelData *this, const TyreModelData *__that);
void __thiscall Tyre::~Tyre(Tyre *this);
BrushSlipProvider *__thiscall BrushSlipProvider::operator=(BrushSlipProvider *this, const BrushSlipProvider *__that);
TyreModelData *__thiscall TyreModelData::operator=(TyreModelData *this, const TyreModelData *__that);
unsigned int __thiscall std::vector<TyreCompoundDef>::_Grow_to(std::vector<TyreCompoundDef> *this, unsigned int _Count);
void __thiscall std::vector<TyreCompoundDef>::_Reallocate(std::vector<TyreCompoundDef> *this, unsigned int _Count);
void __thiscall std::vector<TyreCompoundDef>::_Reserve(std::vector<TyreCompoundDef> *this, unsigned int _Count);
void __thiscall Tyre::addGroundContact(Tyre *this, const vec3f *pos, const vec3f *normal);
void __thiscall Tyre::addTyreForceToHub(Tyre *this, const vec3f *pos, const vec3f *force);
void __thiscall Tyre::addTyreForces(Tyre *this, const vec3f *pos, const vec3f *normal, SurfaceDef *surfaceDef, float dt);
// void __userpurge Tyre::addTyreForcesV10(Tyre *this@<ecx>, int a2@<edi>, const vec3f *pos, const vec3f *normal, SurfaceDef *surfaceDef, float dt, float a7);
TyreCompoundDef *__thiscall std::vector<TyreCompoundDef>::back(std::vector<TyreCompoundDef> *this);
char __thiscall Tyre::generateCompoundNames(Tyre *this);
double __thiscall Tyre::getCamberedDy(Tyre *this, float camberRAD, float dy);
std::wstring *__cdecl getConfigPath(std::wstring *result, const std::wstring *path, Car *car);
double __thiscall Tyre::getCorrectedD(Tyre *this, float d, float *wear_mult);
double __thiscall Tyre::getDX(Tyre *this, float load);
double __thiscall Tyre::getDY(Tyre *this, float load);
double __thiscall Tyre::getDynamicK(Tyre *this);
mat44f *__thiscall Tyre::getFinalTyreRotation(Tyre *this, mat44f *result);
vec3f *__thiscall Tyre::getWorldPosition(Tyre *this, vec3f *result);
void __thiscall Tyre::init(Tyre *this, ISuspension *ihub, IRayTrackCollisionProvider *rcp, std::wstring dataPath, int index, int carID, Car *car);
void __thiscall Tyre::initCompounds(Tyre *this, const std::wstring *dataPath, int index);
double __cdecl Tyre::loadSensExpD(const float exp, const float mult, const float load);
double __cdecl Tyre::loadSensLinearD(const float d0, const float d1, const float load);
void __thiscall std::vector<TyreCompoundDef>::push_back(std::vector<TyreCompoundDef> *this, const TyreCompoundDef *_Val);
void __thiscall Tyre::rayCast(Tyre *this, const vec3f *org, const vec3f *dir, RayCastResult *res);
void __thiscall Tyre::reset(Tyre *this);
char __thiscall Tyre::setCompound(Tyre *this, int cindex);
// void __userpurge Tyre::step(Tyre *this@<ecx>, float a2@<edi>, float dt);
void __thiscall Tyre::stepDirtyLevel(Tyre *this, float dt, const float hubSpeed);
void __thiscall Tyre::stepFlatSpot(Tyre *this, float dt, float hubVelocity);
void __thiscall Tyre::stepGrainBlister(Tyre *this, float dt, float hubVelocity);
void __thiscall Tyre::stepRelaxationLength(Tyre *this, float svx, float svy, float hubVelocity, float dt);
void __thiscall Tyre::stepRotationMatrix(Tyre *this, float dt);
void __thiscall Tyre::stepThermalModel(Tyre *this, float dt);
void __thiscall Tyre::stepTyreBlankets(Tyre *this, float dt);
void __thiscall Tyre::updateAngularSpeed(Tyre *this, float dt);
DynamicControllerStage *__cdecl std::_Uninit_copy<DynamicControllerStage *,DynamicControllerStage *,std::allocator<DynamicControllerStage>>(DynamicControllerStage *_First, DynamicControllerStage *_Last, DynamicControllerStage *_Dest);
TurboDynamicController *__cdecl std::_Uninit_move<TurboDynamicController *,TurboDynamicController *,std::allocator<TurboDynamicController>,TurboDynamicController>(TurboDynamicController *_First, TurboDynamicController *_Last, TurboDynamicController *_Dest);
void __thiscall std::vector<DynamicControllerStage>::vector<DynamicControllerStage>(std::vector<DynamicControllerStage> *this, const std::vector<DynamicControllerStage> *_Right);
void __thiscall Engine::Engine(Engine *this);
void __thiscall TurboDynamicController::TurboDynamicController(TurboDynamicController *this);
void __thiscall acEngineData::acEngineData(acEngineData *this);
void __thiscall Engine::~Engine(Engine *this);
void __thiscall SteerBrake::~SteerBrake(SteerBrake *this);
void __thiscall acEngineData::~acEngineData(acEngineData *this);
Turbo *__thiscall std::vector<Turbo>::operator[](std::vector<Turbo> *this, unsigned int _Pos);
void __thiscall std::vector<TurboDynamicController>::_Reallocate(std::vector<TurboDynamicController> *this, unsigned int _Count);
void __thiscall std::vector<TurboDynamicController>::_Reserve(std::vector<TurboDynamicController> *this, unsigned int _Count);
void __thiscall std::vector<TurboDynamicController>::_Tidy(std::vector<TurboDynamicController> *this);
void __thiscall Engine::addTorqueGenerator(Engine *this, ITorqueGenerator *generator);
void __thiscall Engine::blowUp(Engine *this);
int __thiscall Engine::getLimiterRPM(Engine *this);
double __thiscall Engine::getMaxPowerRPM(Engine *this);
double __thiscall Engine::getMaxPowerW(Engine *this);
double __thiscall Engine::getMaxTorqueNM(Engine *this);
double __thiscall Engine::getMaxTorqueRPM(Engine *this);
double __thiscall Engine::getMaxTurboBoost(Engine *this, bool with_wastegate);
double __thiscall Engine::getSafeTurboLevel(Engine *this);
double __thiscall Engine::getThrottleResponseGas(Engine *this, const float gas, const float rpm);
double __thiscall Engine::getTorqueAtRPM(Engine *this, float rpm, float gas);
double __thiscall Engine::getTurboBoostLevel(Engine *this);
double __thiscall Turbo::getWastegate(Turbo *this);
void __thiscall Engine::init(Engine *this, Car *car);
BOOL __thiscall Engine::isLimiterOn(Engine *this);
INIReader *__thiscall Engine::loadCoastSettings(Engine *this, INIReader *r, const std::wstring *section, std::wstring *a4);
void __thiscall Engine::loadINI(Engine *this);
void __thiscall Engine::precalculatePowerAndTorque(Engine *this);
void __thiscall std::vector<TurboDynamicController>::push_back(std::vector<TurboDynamicController> *this, const TurboDynamicController *_Val);
void __thiscall Engine::reset(Engine *this);
void __thiscall Engine::setCoastSettings(Engine *this, int s);
void __thiscall Engine::setTurboBoostLevel(Engine *this, float value);
void __thiscall Engine::step(Engine *this, SACEngineInput *input, float dt);
void __thiscall Engine::stepP2P(Engine *this, float dt);
void __thiscall Engine::stepTurbos(Engine *this);
void __cdecl std::_For_each<SetupItem *,_lambda_8990424759d146c5289371a5e8fa8e68_>(SetupItem *_First, SetupItem *_Last, SetupManager::step::__l9::<lambda_8990424759d146c5289371a5e8fa8e68> *_Func);
SetupItem *__cdecl std::_Uninit_move<SetupItem *,SetupItem *,std::allocator<SetupItem>,SetupItem>(SetupItem *_First, SetupItem *_Last, SetupItem *_Dest);
void __thiscall SetupItem::SetupItem(SetupItem *this, const SetupItem *__that);
void __thiscall SetupManager::~SetupManager(SetupManager *this);
std::_Func_impl<std::_Callable_obj<<lambda_e679b03f85efbc9b2d13b039819b645b>,0>,std::allocator<std::_Func_class<void,SetupItem *> >,void,SetupItem *> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e679b03f85efbc9b2d13b039819b645b_,0>,std::allocator<std::_Func_class<void,SetupItem *>>,void,SetupItem *>::`vector deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_e679b03f85efbc9b2d13b039819b645b>,0>,std::allocator<std::_Func_class<void,SetupItem *> >,void,SetupItem *> *this, unsigned int a2);
SetupItem *__thiscall SetupItem::`scalar deleting destructor'(SetupItem *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e679b03f85efbc9b2d13b039819b645b_,0>,std::allocator<std::_Func_class<void,SetupItem *>>,void,SetupItem *>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_e679b03f85efbc9b2d13b039819b645b>,0>,std::allocator<std::_Func_class<void,SetupItem *> >,void,SetupItem *> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_829818c412f79d133a0bd8f7ed74bf7f_,0>,std::allocator<std::_Func_class<void,SetupItem *>>,void,SetupItem *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_829818c412f79d133a0bd8f7ed74bf7f>,0>,std::allocator<std::_Func_class<void,SetupItem *> >,void,SetupItem *> *this, SetupItem **<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ac215f37f6f1ac6a05cc355676d028ae_,0>,std::allocator<std::_Func_class<void,SetupItem *>>,void,SetupItem *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ac215f37f6f1ac6a05cc355676d028ae>,0>,std::allocator<std::_Func_class<void,SetupItem *> >,void,SetupItem *> *this, SetupItem **<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e679b03f85efbc9b2d13b039819b645b_,0>,std::allocator<std::_Func_class<void,SetupItem *>>,void,SetupItem *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e679b03f85efbc9b2d13b039819b645b>,0>,std::allocator<std::_Func_class<void,SetupItem *> >,void,SetupItem *> *this, SetupItem **<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_829818c412f79d133a0bd8f7ed74bf7f_,0>,std::allocator<std::_Func_class<void,SetupItem *>>,void,SetupItem *>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_829818c412f79d133a0bd8f7ed74bf7f>,0>,std::allocator<std::_Func_class<void,SetupItem *> >,void,SetupItem *> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ac215f37f6f1ac6a05cc355676d028ae_,0>,std::allocator<std::_Func_class<void,SetupItem *>>,void,SetupItem *>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_ac215f37f6f1ac6a05cc355676d028ae>,0>,std::allocator<std::_Func_class<void,SetupItem *> >,void,SetupItem *> *this, void *_Where);
void __thiscall std::vector<SetupItem>::_Reallocate(std::vector<SetupItem> *this, unsigned int _Count);
void __thiscall std::vector<SetupItem>::_Reserve(std::vector<SetupItem> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_829818c412f79d133a0bd8f7ed74bf7f_,0>,std::allocator<std::_Func_class<void,SetupItem *>>,void,SetupItem *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_829818c412f79d133a0bd8f7ed74bf7f>,0>,std::allocator<std::_Func_class<void,SetupItem *> >,void,SetupItem *> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ac215f37f6f1ac6a05cc355676d028ae_,0>,std::allocator<std::_Func_class<void,SetupItem *>>,void,SetupItem *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ac215f37f6f1ac6a05cc355676d028ae>,0>,std::allocator<std::_Func_class<void,SetupItem *> >,void,SetupItem *> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e679b03f85efbc9b2d13b039819b645b_,0>,std::allocator<std::_Func_class<void,SetupItem *>>,void,SetupItem *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e679b03f85efbc9b2d13b039819b645b>,0>,std::allocator<std::_Func_class<void,SetupItem *> >,void,SetupItem *> *this);
SetupItem *__thiscall SetupManager::getSetupItem(SetupManager *this, const std::wstring *name);
void __thiscall SetupManager::init(SetupManager *this, Car *acar);
void __thiscall SetupManager::initItems(SetupManager *this, bool attached);
char __thiscall SetupManager::isSetupRespectingRules(SetupManager *this);
void __thiscall SetupManager::load(SetupManager *this, const std::wstring *filename);
void __thiscall std::vector<SetupItem>::push_back(std::vector<SetupItem> *this, SetupItem *_Val);
void __thiscall SetupManager::step(SetupManager *this, float dt);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4a879c77ef71faeb7e217cda83a00b58_,0>,std::allocator<std::_Func_class<void,SessionInfo const &>>,void,SessionInfo const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_4a879c77ef71faeb7e217cda83a00b58>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this, const SessionInfo *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cfb5c74fb229346d1f4509bd482d289b_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_cfb5c74fb229346d1f4509bd482d289b>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_4a879c77ef71faeb7e217cda83a00b58_,0>,std::allocator<std::_Func_class<void,SessionInfo const &>>,void,SessionInfo const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_4a879c77ef71faeb7e217cda83a00b58>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_cfb5c74fb229346d1f4509bd482d289b_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_cfb5c74fb229346d1f4509bd482d289b>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_4a879c77ef71faeb7e217cda83a00b58_,0>,std::allocator<std::_Func_class<void,SessionInfo const &>>,void,SessionInfo const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_4a879c77ef71faeb7e217cda83a00b58>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_cfb5c74fb229346d1f4509bd482d289b_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_cfb5c74fb229346d1f4509bd482d289b>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
long double __thiscall FuelLapEvaluator::getFuelLaps(FuelLapEvaluator *this);
long double __thiscall FuelLapEvaluator::getFuelPerLap(FuelLapEvaluator *this);
void __thiscall FuelLapEvaluator::init(FuelLapEvaluator *this, Car *icar);
void __thiscall FuelLapEvaluator::setIgnoreLap(FuelLapEvaluator *this, bool value);
void __thiscall FuelLapEvaluator::step(FuelLapEvaluator *this, float dt);
void __thiscall BrakeSystem::activateTempRunFile(BrakeSystem *this, bool mode);
double __thiscall BrakeSystem::getBrakePower(BrakeSystem *this);
double __thiscall BrakeSystem::getFrontBias(BrakeSystem *this);
std::wstring *__thiscall Track::getName(Track *this, std::wstring *result);
// void __userpurge BrakeSystem::init(BrakeSystem *this@<ecx>, unsigned int a2@<ebx>, Car *car);
void __thiscall BrakeSystem::loadINI(BrakeSystem *this, std::wstring dataPath);
void __thiscall BrakeSystem::reset(BrakeSystem *this);
void __thiscall BrakeSystem::saveTempsRunFame(BrakeSystem *this);
void __thiscall BrakeSystem::setManualFrontBias(BrakeSystem *this, int value);
void __thiscall BrakeSystem::step(BrakeSystem *this, float dt);
void __thiscall BrakeSystem::stepTemps(BrakeSystem *this, float dt);
void __thiscall ABS::~ABS(ABS *this);
void __thiscall ABS::cycleMode(ABS *this, int value);
std::pair<unsigned int,unsigned int> *__thiscall ABS::getCurrentMode(ABS *this, std::pair<unsigned int,unsigned int> *result);
void __thiscall ABS::init(ABS *this, Car *acar);
bool __thiscall ABS::isInAction(ABS *this);
void __thiscall ABS::step(ABS *this, float td);
void __thiscall TractionControl::~TractionControl(TractionControl *this);
void __thiscall TractionControl::cycleMode(TractionControl *this, int value);
std::pair<unsigned int,unsigned int> *__thiscall TractionControl::getCurrentMode(TractionControl *this, std::pair<unsigned int,unsigned int> *result);
void __thiscall TractionControl::init(TractionControl *this, Car *acar);
void __thiscall TractionControl::step(TractionControl *this, float dt);
void __cdecl std::_Uninit_def_fill_n<TimeLineStatus *,unsigned int,std::allocator<TimeLineStatus>,TimeLineStatus>(TimeLineStatus *_First, unsigned int _Count);
void __thiscall TimeTransponder::~TimeTransponder(TimeTransponder *this);
void __thiscall TimeTransponder::addCut(TimeTransponder *this);
void __thiscall TimeTransponder::armFirstLap(TimeTransponder *this);
int __thiscall TimeTransponder::getCuts(TimeTransponder *this);
std::vector<unsigned int> *__thiscall TimeTransponder::getLastLapSplits(TimeTransponder *this, std::vector<unsigned int> *result);
TimeLineStatus *__thiscall TimeTransponder::getStatus(TimeTransponder *this, int index);
void __thiscall TimeTransponder::init(TimeTransponder *this, Car *car);
void __thiscall TimeTransponder::invalidate(TimeTransponder *this);
bool __thiscall TimeTransponder::isInOpenTrackTransition(TimeTransponder *this);
char __thiscall TimeTransponder::isValid(TimeTransponder *this);
void __thiscall TimeTransponder::lap(TimeTransponder *this, bool valid);
void __thiscall TimeTransponder::onTimeLinePassed(TimeTransponder *this, int index, bool isFinishLine);
void __thiscall TimeTransponder::reset(TimeTransponder *this);
void __thiscall std::vector<unsigned int>::resize(std::vector<unsigned int> *this, unsigned int _Newsize, const unsigned int *_Val);
void __thiscall std::vector<TimeLineStatus>::resize(std::vector<TimeLineStatus> *this, unsigned int _Newsize);
void __thiscall TimeTransponder::split(TimeTransponder *this, int sectorIndex);
void __thiscall TimeTransponder::step(TimeTransponder *this, float dt);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<ERSPowerController>>>(ERSPowerController *_First, ERSPowerController *_Last);
ERSPowerController *__cdecl std::_Uninit_move<ERSPowerController *,ERSPowerController *,std::allocator<ERSPowerController>,ERSPowerController>(ERSPowerController *_First, ERSPowerController *_Last, ERSPowerController *_Dest);
void __thiscall std::_Wrap_alloc<std::allocator<ERSPowerController>>::construct<ERSPowerController,ERSPowerController &>(std::_Wrap_alloc<std::allocator<ERSPowerController> > *this, ERSPowerController *_Ptr, const ERSPowerController *<_Args_0>);
void __thiscall std::_Wrap_alloc<std::allocator<ERSPowerController>>::destroy<ERSPowerController>(std::_Wrap_alloc<std::allocator<ERSPowerController> > *this, ERSPowerController *_Ptr);
void __thiscall ERS::ERS(ERS *this);
void __thiscall std::vector<ERSPowerController>::~vector<ERSPowerController>(std::vector<ERSPowerController> *this);
void __thiscall ERS::~ERS(ERS *this);
void __thiscall ERSPowerController::~ERSPowerController(ERSPowerController *this);
void __thiscall ICoastGenerator::~ICoastGenerator(ICoastGenerator *this);
ERS *__thiscall ERS::`vector deleting destructor'(char *this, unsigned int a2);
ERS *__thiscall ERS::`scalar deleting destructor'(ERS *this, unsigned int a2);
ICoastGenerator *__thiscall ICoastGenerator::`scalar deleting destructor'(ICoastGenerator *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fb4451d7c810bd09b68377dd26c19dcb_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_fb4451d7c810bd09b68377dd26c19dcb>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_fb4451d7c810bd09b68377dd26c19dcb_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_fb4451d7c810bd09b68377dd26c19dcb>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
void __thiscall std::vector<ERSPowerController>::_Reallocate(std::vector<ERSPowerController> *this, unsigned int _Count);
void __thiscall std::vector<ERSPowerController>::_Reserve(std::vector<ERSPowerController> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_fb4451d7c810bd09b68377dd26c19dcb_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_fb4451d7c810bd09b68377dd26c19dcb>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
double __thiscall ERS::getCoastTorque(ERS *this);
double __thiscall ERS::getOutputTorque(ERS *this);
void __thiscall ERS::init(ERS *this, Car *car);
void __thiscall std::vector<ERSPowerController>::push_back(std::vector<ERSPowerController> *this, const ERSPowerController *_Val);
void __thiscall ERS::reset(ERS *this);
void __thiscall ERS::setPowerController(ERS *this, int index);
void __thiscall ERS::step(ERS *this, float dt);
AISplinePayload *__cdecl std::_Copy_impl<AISplinePayload *,AISplinePayload *>(AISplinePayload *_First, AISplinePayload *_Last, AISplinePayload *_Dest);
AIStraightData *__cdecl std::_Copy_impl<DRSZone *,DRSZone *>(AIStraightData *_First, AIStraightData *_Last, AIStraightData *_Dest);
GridElement *__cdecl std::_Copy_impl<GridElement *,GridElement *>(GridElement *_First, GridElement *_Last, GridElement *_Dest);
std::vector<GridElement> *__cdecl std::_Copy_impl<std::vector<GridElement> *,std::vector<GridElement> *>(std::vector<GridElement> *_First, std::vector<GridElement> *_Last, std::vector<GridElement> *_Dest);
CubicSpline<float,vec3f>::Element *__cdecl std::_Copy_impl<CubicSpline<float,vec3f>::Element *,CubicSpline<float,vec3f>::Element *>(CubicSpline<float,vec3f>::Element *_First, CubicSpline<float,vec3f>::Element *_Last, CubicSpline<float,vec3f>::Element *_Dest);
AISplinePayload *__thiscall std::vector<AISplinePayload>::_Ucopy<AISplinePayload *>(std::vector<AISplinePayload> *this, AISplinePayload *_First, AISplinePayload *_Last, AISplinePayload *_Ptr);
GridElement *__thiscall std::vector<GridElement>::_Ucopy<GridElement *>(std::vector<GridElement> *this, GridElement *_First, GridElement *_Last, GridElement *_Ptr);
std::vector<GridElement> *__thiscall std::vector<std::vector<GridElement>>::_Ucopy<std::vector<GridElement> *>(std::vector<std::vector<GridElement>> *this, std::vector<GridElement> *_First, std::vector<GridElement> *_Last, std::vector<GridElement> *_Ptr);
MLJoint *__thiscall std::vector<CubicSpline<float,vec3f>::Element,std::allocator<CubicSpline<float,vec3f>::Element>>::_Ucopy<CubicSpline<float,vec3f>::Element *>(std::vector<CubicSpline<float,vec3f>::Element,std::allocator<CubicSpline<float,vec3f>::Element> > *this, CubicSpline<float,vec3f>::Element *_First, CubicSpline<float,vec3f>::Element *_Last, CubicSpline<float,vec3f>::Element *_Ptr);
AISplinePayload *__cdecl std::_Uninit_move<AISplinePayload *,AISplinePayload *,std::allocator<AISplinePayload>,AISplinePayload>(AISplinePayload *_First, AISplinePayload *_Last, AISplinePayload *_Dest);
GridElement *__cdecl std::_Uninit_copy<GridElement const *,GridElement *,std::allocator<GridElement>>(const GridElement *_First, const GridElement *_Last, GridElement *_Dest);
std::vector<GridElement> *__cdecl std::_Uninit_copy<std::vector<GridElement> *,std::vector<GridElement> *,std::allocator<std::vector<GridElement>>>(std::vector<GridElement> *_First, std::vector<GridElement> *_Last, std::vector<GridElement> *_Dest);
void __cdecl std::_Uninit_def_fill_n<DriverNameDisplayer::CarDistandeOrder *,unsigned int,std::allocator<DriverNameDisplayer::CarDistandeOrder>,DriverNameDisplayer::CarDistandeOrder>(std::thread *_First, unsigned int _Count);
void __thiscall std::vector<GridElement>::vector<GridElement>(std::vector<GridElement> *this, const std::vector<GridElement> *_Right);
void __thiscall std::vector<std::thread>::vector<std::thread>(std::vector<std::thread> *this, unsigned int _Count);
void __thiscall AISplinePayload::AISplinePayload(AISplinePayload *this);
// void __userpurge AISplineRecorder::AISplineRecorder(AISplineRecorder *this@<ecx>, __m128 a2@<xmm0>, __m128 a3@<xmm3>, __m128 a4@<xmm4>, PhysicsEngine *pe, Track *track);
// void __usercall AISplineRecorder::~AISplineRecorder(AISplineRecorder *this@<ecx>, __m128 a2@<xmm0>);
std::vector<AISplinePayload> *__thiscall std::vector<AISplinePayload>::operator=(std::vector<AISplinePayload> *this, const std::vector<AISplinePayload> *_Right);
std::vector<AIStraightData> *__thiscall std::vector<AIStraightData>::operator=(std::vector<AIStraightData> *this, const std::vector<AIStraightData> *_Right);
std::vector<GridElement> *__thiscall std::vector<GridElement>::operator=(std::vector<GridElement> *this, const std::vector<GridElement> *_Right);
std::vector<std::vector<GridElement>> *__thiscall std::vector<std::vector<GridElement>>::operator=(std::vector<std::vector<GridElement>> *this, const std::vector<std::vector<GridElement>> *_Right);
std::vector<CubicSpline<float,vec3f>::Element,std::allocator<CubicSpline<float,vec3f>::Element> > *__thiscall std::vector<CubicSpline<float,vec3f>::Element,std::allocator<CubicSpline<float,vec3f>::Element>>::operator=(std::vector<CubicSpline<float,vec3f>::Element,std::allocator<CubicSpline<float,vec3f>::Element> > *this, const std::vector<CubicSpline<float,vec3f>::Element,std::allocator<CubicSpline<float,vec3f>::Element> > *_Right);
AISpline *__thiscall AISpline::operator=(AISpline *this, const AISpline *__that);
void __thiscall lambda_7ddde326f03d9f826f37875905f4ba7d_::operator()(AISplineRecorder::recomputeSidesFromCsv::__l7::<lambda_7ddde326f03d9f826f37875905f4ba7d> *this);
// AISplineRecorder *__userpurge AISplineRecorder::`scalar deleting destructor'@<eax>(AISplineRecorder *this@<ecx>, __m128 a2@<xmm0>, unsigned int a3);
char __thiscall std::vector<AISplinePayload>::_Buy(std::vector<AISplinePayload> *this, unsigned int _Capacity);
char __thiscall std::vector<CubicSpline<float,vec3f>::Element,std::allocator<CubicSpline<float,vec3f>::Element>>::_Buy(std::vector<CubicSpline<float,vec3f>::Element,std::allocator<CubicSpline<float,vec3f>::Element> > *this, unsigned int _Capacity);
char __thiscall std::vector<ReplayLap>::_Buy(std::vector<PerformancePair> *this, unsigned int _Capacity);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ee9681f74593d010f75da26732cea64a_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_ee9681f74593d010f75da26732cea64a>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_ee9681f74593d010f75da26732cea64a_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_ee9681f74593d010f75da26732cea64a>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
unsigned int __thiscall std::_LaunchPad<std::_Bind<0,void,_lambda_7ddde326f03d9f826f37875905f4ba7d_,>>::_Go(std::_LaunchPad<std::_Bind<0,void,<lambda_7ddde326f03d9f826f37875905f4ba7d> > > *this);
void __thiscall std::vector<AIWingSetup>::_Reallocate(std::vector<AISplineDanger> *this, unsigned int _Count);
void __thiscall std::vector<AISplineHint>::_Reallocate(std::vector<AISplineHint> *this, unsigned int _Count);
void __thiscall std::vector<AIStraightData>::_Reserve(std::vector<AISplineHint> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_ee9681f74593d010f75da26732cea64a_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_ee9681f74593d010f75da26732cea64a>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
void __thiscall AISplineRecorder::beginPitLaneSpline(AISplineRecorder *this);
void __thiscall AISplineRecorder::endPitLaneSpline(AISplineRecorder *this);
AISpline *__thiscall AISplineRecorder::getBestLapSpline(AISplineRecorder *this);
double __thiscall AISplineRecorder::getBrakeHintAtSplinePos(AISplineRecorder *this, float normalizedPos);
bool __thiscall AISplineRecorder::getDangerAtSplinePos(AISplineRecorder *this, float normalizedPos, float *left, float *right);
double __thiscall AISplineRecorder::getHintAtSplinePos(AISplineRecorder *this, float normalizedPos);
double __thiscall AISplineRecorder::getMaxSpeedHintAtSplinePos(AISplineRecorder *this, float normalizedPos);
AISpline *__thiscall AISplineRecorder::getPitLaneSpline(AISplineRecorder *this);
// void __usercall AISplineRecorder::load(AISplineRecorder *this@<ecx>, __m128 a2@<xmm0>, __m128 a3@<xmm3>, __m128 a4@<xmm4>);
void __thiscall AISplineRecorder::loadHints(AISplineRecorder *this);
// void __usercall AISplineRecorder::loadPitLaneSpline(AISplineRecorder *this@<ecx>, unsigned int a2@<ebx>, __m128 a3@<xmm3>, __m128 a4@<xmm4>);
void __thiscall AISplineRecorder::loadSideSpline(AISplineRecorder *this, InterpolatingSpline *is, std::wstring filename);
void __thiscall AISplineRecorder::onLapCompleted(AISplineRecorder *this, const OnLapCompletedEvent *message);
void __thiscall std::vector<AISplineHint>::push_back(std::vector<AISplineHint> *this, const AISplineHint *_Val);
void __thiscall AISplineRecorder::recomputeSidesFromCsv(AISplineRecorder *this);
// void __userpurge AISplineRecorder::save(AISplineRecorder *this@<ecx>, __m128 a2@<xmm0>, bool updateFile);
int __thiscall std::vector<AIStraightData>::size(std::vector<AIStraightData> *this);
void __thiscall AISplineRecorder::startRecording(AISplineRecorder *this);
void __thiscall AISplineRecorder::step(AISplineRecorder *this, float dt);
void __thiscall std::function<void __cdecl (OnCollisionEvent const &)>::function<void __cdecl (OnCollisionEvent const &)>(std::function<void __cdecl(OnCollisionEvent const &)> *this, AIDriver::{ctor}::__l69::<lambda_d2f07653d40c3c1f2fc5b2b0a3b01c4a> *_Func);
void __cdecl std::_Adjust_heap<AIOpponentData *,int,AIOpponentData,_lambda_00b575d47c1d4b385daca99a01dfbd27_>(AIOpponentData *_First, int _Hole, int _Bottom, AIOpponentData *_Val);
std::_Tree_node<std::pair<std::wstring const ,TyreCompoundStrategy>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,TyreCompoundStrategy>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,TyreCompoundStrategy>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring const &> *<_Val_1>, std::tuple<> *<_Val_2>);
void __thiscall std::_Func_class<void,SessionInfo const &>::_Do_alloc<std::_Func_impl<std::_Callable_obj<_lambda_b1b5a2018750bb2261f39e860a2780a3_,0>,std::allocator<std::_Func_class<void,SessionInfo const &>>,void,SessionInfo const &>,_lambda_b1b5a2018750bb2261f39e860a2780a3_,std::allocator<std::_Func_class<void,SessionInfo const &>>>(std::_Func_class<void,SessionInfo const &> *this, AIDriver::{ctor}::__l57::<lambda_b1b5a2018750bb2261f39e860a2780a3> *_Val, std::allocator<std::_Func_class<void,SessionInfo const &> > _Ax);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,enum DynamicControllerInput,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,enum DynamicControllerInput>>,0>>::_Insert_at<std::pair<std::wstring const,enum DynamicControllerInput> &,std::_Tree_node<std::pair<std::wstring const,enum DynamicControllerInput>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,TyreCompoundStrategy,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TyreCompoundStrategy> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::wstring const ,TyreCompoundStrategy>,void *> *_Wherenode, std::pair<std::wstring const ,TyreCompoundStrategy> *_Val, std::_Tree_node<std::pair<std::wstring const ,TyreCompoundStrategy>,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,enum DynamicControllerInput,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,enum DynamicControllerInput>>,0>>::_Insert_hint<std::pair<std::wstring const,enum DynamicControllerInput> &,std::_Tree_node<std::pair<std::wstring const,enum DynamicControllerInput>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,TyreCompoundStrategy,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TyreCompoundStrategy> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > > _Where, std::pair<std::wstring const ,TyreCompoundStrategy> *_Val, std::_Tree_node<std::pair<std::wstring const ,TyreCompoundStrategy>,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,TyreCompoundStrategy,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TyreCompoundStrategy>>,0>>::_Insert_nohint<std::pair<std::wstring const,TyreCompoundStrategy> &,std::_Tree_node<std::pair<std::wstring const,TyreCompoundStrategy>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,TyreCompoundStrategy,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TyreCompoundStrategy> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > > _Leftish, std::pair<std::wstring const ,TyreCompoundStrategy> *_Val, std::_Tree_node<std::pair<std::wstring const ,TyreCompoundStrategy>,void *> *_Newnode);
void __cdecl std::_Insertion_sort1<AIOpponentData *,_lambda_00b575d47c1d4b385daca99a01dfbd27_,AIOpponentData>(AIOpponentData *_First, AIOpponentData *_Last);
void __cdecl std::_Make_heap<AIOpponentData *,int,AIOpponentData,_lambda_00b575d47c1d4b385daca99a01dfbd27_>(AIOpponentData *_First, AIOpponentData *_Last);
void __cdecl std::_Median<AIOpponentData *,_lambda_00b575d47c1d4b385daca99a01dfbd27_>(AIOpponentData *_First, AIOpponentData *_Mid, AIOpponentData *_Last);
AIOpponentData *__cdecl std::_Move_backward<AIOpponentData *,AIOpponentData *>(AIOpponentData *_First, AIOpponentData *_Last, AIOpponentData *_Dest);
void __cdecl std::_Pop_heap_0<AIOpponentData *,AIOpponentData,_lambda_00b575d47c1d4b385daca99a01dfbd27_>(AIOpponentData *_First, AIOpponentData *_Last);
void __cdecl std::_Push_heap<AIOpponentData *,int,AIOpponentData,_lambda_00b575d47c1d4b385daca99a01dfbd27_>(AIOpponentData *_First, int _Hole, int _Top, AIOpponentData *_Val);
void __cdecl std::_Sort<AIOpponentData *,int,_lambda_00b575d47c1d4b385daca99a01dfbd27_>(AIOpponentData *_First, AIOpponentData *_Last, int _Ideal, AIDriver::stepCarsAwareness2::__l66::<lambda_00b575d47c1d4b385daca99a01dfbd27> _Pred);
void __cdecl std::_Sort_heap<AIOpponentData *,_lambda_00b575d47c1d4b385daca99a01dfbd27_>(AIOpponentData *_First, AIOpponentData *_Last);
std::pair<AIOpponentData *,AIOpponentData *> *__cdecl std::_Unguarded_partition<AIOpponentData *,_lambda_00b575d47c1d4b385daca99a01dfbd27_>(std::pair<AIOpponentData *,AIOpponentData *> *result, AIOpponentData *_First, AIOpponentData *_Last);
void __cdecl std::_Uninit_def_fill_n<AIOpponentData *,unsigned int,std::allocator<AIOpponentData>,AIOpponentData>(AIOpponentData *_First, unsigned int _Count);
std::pair<void *,std::function<void __cdecl(SessionInfo const &)> > *__cdecl std::_Uninit_move<std::pair<void *,std::function<void __cdecl (ksgui::OnSliderInteraction const &)>> *,std::pair<void *,std::function<void __cdecl (ksgui::OnSliderInteraction const &)>> *,std::allocator<std::pair<void *,std::function<void __cdecl (ksgui::OnSliderInteraction const &)>>>,std::pair<void *,std::function<void __cdecl (ksgui::OnSliderInteraction const &)>>>(std::pair<void *,std::function<void __cdecl(SessionInfo const &)> > *_First, std::pair<void *,std::function<void __cdecl(SessionInfo const &)> > *_Last, std::pair<void *,std::function<void __cdecl(SessionInfo const &)> > *_Dest);
AIOpponentData *__cdecl std::_Uninit_move<AIOpponentData *,AIOpponentData *,std::allocator<AIOpponentData>,AIOpponentData>(AIOpponentData *_First, AIOpponentData *_Last, AIOpponentData *_Dest);
void __cdecl std::swap<AIOpponentData>(AIOpponentData *_Left, AIOpponentData *_Right);
void __thiscall AIDriver::AIDriver(AIDriver *this, Car *icar);
void __thiscall AIOpponentData::AIOpponentData(AIOpponentData *this);
void __thiscall AIWingSetup::AIWingSetup(AIWingSetup *this);
void __thiscall AIBrakeProfiler::~AIBrakeProfiler(AIBrakeProfiler *this);
void __thiscall AIDriver::~AIDriver(AIDriver *this);
void __thiscall AISetup::~AISetup(AISetup *this);
std::vector<float> *__thiscall std::vector<float>::operator=(std::vector<float> *this, std::vector<float> *_Right);
TyreCompoundStrategy *__thiscall std::map<std::wstring,TyreCompoundStrategy>::operator[](std::map<std::wstring,TyreCompoundStrategy> *this, const std::wstring *_Keyval);
AIStraightData *__thiscall std::vector<AIStraightData>::operator[](std::vector<AIStraightData> *this, unsigned int _Pos);
std::_Vector_iterator<std::_Vector_val<std::_Simple_types<AIKersArea> > > *__thiscall std::_Vector_iterator<std::_Vector_val<std::_Simple_types<AIKersArea>>>::operator++(std::_Vector_iterator<std::_Vector_val<std::_Simple_types<AIKersArea> > > *this);
std::_Vector_iterator<std::_Vector_val<std::_Simple_types<AIStraightData> > > *__thiscall std::_Vector_iterator<std::_Vector_val<std::_Simple_types<AIStraightData>>>::operator++(std::_Vector_iterator<std::_Vector_val<std::_Simple_types<AIStraightData> > > *this);
std::_Func_impl<std::_Callable_obj<<lambda_c68e5ae7a467f872cbd5cba48930e040>,0>,std::allocator<std::_Func_class<void,vec3f const &> >,void,vec3f const &> *__thiscall std::_Func_base<void,vec3f const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_c68e5ae7a467f872cbd5cba48930e040>,0>,std::allocator<std::_Func_class<void,vec3f const &> >,void,vec3f const &> *this, unsigned int a2);
std::_Func_impl<std::_Callable_obj<<lambda_d2f07653d40c3c1f2fc5b2b0a3b01c4a>,0>,std::allocator<std::_Func_class<void,OnCollisionEvent const &> >,void,OnCollisionEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d2f07653d40c3c1f2fc5b2b0a3b01c4a_,0>,std::allocator<std::_Func_class<void,OnCollisionEvent const &>>,void,OnCollisionEvent const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_d2f07653d40c3c1f2fc5b2b0a3b01c4a>,0>,std::allocator<std::_Func_class<void,OnCollisionEvent const &> >,void,OnCollisionEvent const &> *this, unsigned int a2);
AIDriver *__thiscall AIDriver::`scalar deleting destructor'(AIDriver *this, unsigned int a2);
std::_Tree_node<std::pair<std::wstring const ,TyreCompoundStrategy>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,TyreCompoundStrategy>>::_Buynode0(std::_Tree_buy<std::pair<std::wstring const ,TyreCompoundStrategy>> *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c68e5ae7a467f872cbd5cba48930e040_,0>,std::allocator<std::_Func_class<void,vec3f const &>>,void,vec3f const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_c68e5ae7a467f872cbd5cba48930e040>,0>,std::allocator<std::_Func_class<void,vec3f const &> >,void,vec3f const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b1b5a2018750bb2261f39e860a2780a3_,0>,std::allocator<std::_Func_class<void,SessionInfo const &>>,void,SessionInfo const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_b1b5a2018750bb2261f39e860a2780a3>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this, const SessionInfo *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c63e5c2c5fcdba473b5343f692790cb7_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c63e5c2c5fcdba473b5343f692790cb7>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c68e5ae7a467f872cbd5cba48930e040_,0>,std::allocator<std::_Func_class<void,vec3f const &>>,void,vec3f const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_c68e5ae7a467f872cbd5cba48930e040>,0>,std::allocator<std::_Func_class<void,vec3f const &> >,void,vec3f const &> *this, const vec3f *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_b1b5a2018750bb2261f39e860a2780a3_,0>,std::allocator<std::_Func_class<void,SessionInfo const &>>,void,SessionInfo const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_b1b5a2018750bb2261f39e860a2780a3>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_c63e5c2c5fcdba473b5343f692790cb7_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_c63e5c2c5fcdba473b5343f692790cb7>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d2f07653d40c3c1f2fc5b2b0a3b01c4a_,0>,std::allocator<std::_Func_class<void,OnCollisionEvent const &>>,void,OnCollisionEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_d2f07653d40c3c1f2fc5b2b0a3b01c4a>,0>,std::allocator<std::_Func_class<void,OnCollisionEvent const &> >,void,OnCollisionEvent const &> *this, void *_Where);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (vec3f const &)>>>::_Reallocate(std::vector<std::pair<void *,std::function<void __cdecl(vec3f const &)> >> *this, unsigned int _Count);
void __thiscall std::vector<AIOpponentData>::_Reallocate(std::vector<AIOpponentData> *this, unsigned int _Count);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (vec3f const &)>>>::_Reserve(std::vector<std::pair<void *,std::function<void __cdecl(vec3f const &)> >> *this, unsigned int _Count);
void __thiscall std::vector<AISplineDanger>::_Reserve(std::vector<AISplineDanger> *this, unsigned int _Count);
void __thiscall std::vector<AIOpponentData>::_Reserve(std::vector<AIOpponentData> *this, unsigned int _Count);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_b1b5a2018750bb2261f39e860a2780a3_,0>,std::allocator<std::_Func_class<void,SessionInfo const &>>,void,SessionInfo const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_b1b5a2018750bb2261f39e860a2780a3>,0>,std::allocator<std::_Func_class<void,SessionInfo const &> >,void,SessionInfo const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c63e5c2c5fcdba473b5343f692790cb7_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c63e5c2c5fcdba473b5343f692790cb7>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_c68e5ae7a467f872cbd5cba48930e040_,0>,std::allocator<std::_Func_class<void,vec3f const &>>,void,vec3f const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_c68e5ae7a467f872cbd5cba48930e040>,0>,std::allocator<std::_Func_class<void,vec3f const &> >,void,vec3f const &> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d2f07653d40c3c1f2fc5b2b0a3b01c4a_,0>,std::allocator<std::_Func_class<void,OnCollisionEvent const &>>,void,OnCollisionEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d2f07653d40c3c1f2fc5b2b0a3b01c4a>,0>,std::allocator<std::_Func_class<void,OnCollisionEvent const &> >,void,OnCollisionEvent const &> *this);
void __thiscall std::vector<AIStraightData>::_Tidy(std::vector<AIStraightData> *this);
void __thiscall AIDriver::acquireControls(AIDriver *this, CarControls *controls, float dt, CarControlsInput *input);
void __thiscall Event<vec3f>::addHandler(Event<vec3f> *this, std::function<void __cdecl(vec3f const &)> h, void *owner);
void __thiscall AIDriver::calcMinForwardSides(AIDriver *this, float forwardDistance);
void __thiscall std::allocator<std::pair<void *,std::function<void __cdecl (OnKeyEvent const &)>>>::construct(std::allocator<std::pair<void *,std::function<void __cdecl(SessionInfo const &)> > > *this, std::pair<void *,std::function<void __cdecl(SessionInfo const &)> > *_Ptr, const std::pair<void *,std::function<void __cdecl(SessionInfo const &)> > *_Val);
int __thiscall AIDriver::findTyreForQualify(AIDriver *this);
void __thiscall AIDriver::generatePitStopStrategy(AIDriver *this, int laps);
void __thiscall AIDriver::generatePitlaneWait(AIDriver *this);
double __thiscall AIDriver::getBrakeTargetSpeed(AIDriver *this);
double __thiscall AIDriver::getClosestFollowingCarTTI(AIDriver *this);
double __thiscall AIDriver::getDistanceToApex(AIDriver *this, float offset, float resolution);
double __thiscall AIDriver::getDistanceToNextCorner(AIDriver *this, float resolution);
double __thiscall Autoclutch::getDownshiftSequenceDuration(Autoclutch *this);
double __thiscall AIDriver::getEngagedDesiredOffset(AIDriver *this, float left, float right, float lateral, float *tti, float sideL, float sideR, float eng_speedL, float eng_speedR);
long double __thiscall Drivetrain::getGearDnTime(Drivetrain *this);
double __thiscall AIDriver::getLABraking(AIDriver *this);
double __thiscall AIDriver::getLateralPush(AIDriver *this);
double __thiscall AIDriver::getLookAhead(AIDriver *this, const float factor, const float speed);
const char *__thiscall AIDriver::getName(AIDriver *this);
double __thiscall AIDriver::getOutsideOffset(AIDriver *this);
double __thiscall AIDriver::getSteerAtDistance(AIDriver *this, float distance, AISpline *spline, AISplinePayload *payload, float dt);
double __thiscall AIDriver::getUltraGrip(AIDriver *this);
double __cdecl getVKMForMult(Curve *curve, float target);
// void __usercall AIDriver::initSetup(AIDriver *this@<ecx>, unsigned int a2@<ebx>);
void __thiscall AIDriver::initTyreStrategies(AIDriver *this);
std::vector<float> *__cdecl loadGearRatiosFromFile(std::vector<float> *result, const std::wstring *filename, Car *car);
void __thiscall AIDriver::onNewSession(AIDriver *this, SessionInfo si);
void __thiscall std::vector<std::pair<void *,std::function<void __cdecl (vec3f const &)>>>::push_back(std::vector<std::pair<void *,std::function<void __cdecl(vec3f const &)> >> *this, const std::pair<void *,std::function<void __cdecl(vec3f const &)> > *_Val);
void __thiscall std::vector<AIKersArea>::push_back(std::vector<AIWingSetup> *this, const AIWingSetup *_Val);
void __thiscall std::vector<AIOpponentData>::push_back(std::vector<AIOpponentData> *this, const AIOpponentData *_Val);
void __thiscall std::vector<AIOpponentData>::resize(std::vector<AIOpponentData> *this, unsigned int _Newsize);
void __thiscall AIDriver::selectTimeStartTime(AIDriver *this);
void __thiscall Autoclutch::setDownshiftProfile(Autoclutch *this, Curve *dp);
void __thiscall AIDriver::setUltraGrip(AIDriver *this, float value);
void __thiscall AIDriver::stepCarsAwareness2(AIDriver *this, float dt);
void __thiscall AIDriver::stepDRS(AIDriver *this, CarControls *controls, float dt);
void __thiscall AIDriver::stepGasBrake(AIDriver *this, float dt);
void __thiscall AIDriver::stepGasBrakeStart(AIDriver *this);
void __thiscall AIDriver::stepGears(AIDriver *this, float dt, CarControls *controls);
void __thiscall AIDriver::stepHumanizer(AIDriver *this, float dt);
void __thiscall AIDriver::stepP2P(AIDriver *this, float dt);
void __thiscall AIDriver::stepPitLaneMode(AIDriver *this, float dt);
void __thiscall AIDriver::stepPushVariations(AIDriver *this, float dt);
void __thiscall AIDriver::stepSetup(AIDriver *this, float dt);
void __thiscall AIDriver::stepSplineSelection(AIDriver *this, float dt);
void __thiscall AIDriver::stepSteer(AIDriver *this, float dt);
void __thiscall AIDriver::stepSuperhuman(AIDriver *this, CarControls *controls, float dt);
void __thiscall AIDriver::stepTurbo(AIDriver *this, float dt);
void __thiscall AIDriver::updateCurrentSplinePos(AIDriver *this);
void __thiscall AIDriver::updateTyres(AIDriver *this);
void __thiscall CarColliderManager::~CarColliderManager(CarColliderManager *this);
// CarCollisionBox *__userpurge CarColliderManager::getBox@<eax>(CarColliderManager *this@<ecx>, __m128 a2@<xmm0>, CarCollisionBox *result, int index);
void __thiscall CarColliderManager::init(CarColliderManager *this, Car *acar);
void __thiscall CarColliderManager::loadINI(CarColliderManager *this);
void __thiscall CarColliderManager::step(CarColliderManager *this, float dt);
void __cdecl std::_Adjust_heap<AIStraightData *,int,AIStraightData,_lambda_4068cce6dab9ae348091e8b6d830e82f_>(AIStraightData *_First, int _Hole, int _Bottom, AIStraightData *_Val);
void __cdecl std::_Insertion_sort1<AIStraightData *,_lambda_4068cce6dab9ae348091e8b6d830e82f_,AIStraightData>(AIStraightData *_First, AIStraightData *_Last);
void __cdecl std::_Make_heap<AIStraightData *,int,AIStraightData,_lambda_4068cce6dab9ae348091e8b6d830e82f_>(AIStraightData *_First, AIStraightData *_Last);
void __cdecl std::_Med3<AIStraightData *,_lambda_4068cce6dab9ae348091e8b6d830e82f_>(AIStraightData *_First, AIStraightData *_Mid, AIStraightData *_Last);
void __cdecl std::_Median<AIStraightData *,_lambda_4068cce6dab9ae348091e8b6d830e82f_>(AIStraightData *_First, AIStraightData *_Mid, AIStraightData *_Last);
void __cdecl std::_Sort<AIStraightData *,int,_lambda_4068cce6dab9ae348091e8b6d830e82f_>(AIStraightData *_First, AIStraightData *_Last, int _Ideal, AISpline::initStraights::__l21::<lambda_4068cce6dab9ae348091e8b6d830e82f> _Pred);
void __cdecl std::_Sort_heap<AIStraightData *,_lambda_4068cce6dab9ae348091e8b6d830e82f_>(AIStraightData *_First, AIStraightData *_Last);
std::pair<AIStraightData *,AIStraightData *> *__cdecl std::_Unguarded_partition<AIStraightData *,_lambda_4068cce6dab9ae348091e8b6d830e82f_>(std::pair<AIStraightData *,AIStraightData *> *result, AIStraightData *_First, AIStraightData *_Last);
void __thiscall AISpline::AISpline(AISpline *this);
void __thiscall std::map<enum DWRITE_RENDERING_MODE,IDWriteRenderingParams *>::~map<enum DWRITE_RENDERING_MODE,IDWriteRenderingParams *>(std::map<unsigned int,bool> *this);
void __thiscall AISpline::~AISpline(AISpline *this);
bool *__thiscall std::map<unsigned int,bool>::operator[](std::map<unsigned int,bool> *this, const unsigned int *_Keyval);
AISpline *__thiscall AISpline::`scalar deleting destructor'(AISpline *this, unsigned int a2);
void __thiscall std::vector<AISplinePayload>::_Reallocate(std::vector<AISplinePayload> *this, unsigned int _Count);
void __thiscall std::vector<AISplinePayload>::_Reserve(std::vector<AISplinePayload> *this, unsigned int _Count);
void __thiscall AISpline::addPoint(AISpline *this, const vec3f *point, const AISplinePayload *payload);
void __thiscall AISpline::adjustPayloadEndpoint(AISpline *this, const int numberOfPoints);
void __thiscall AISpline::buildGrid(AISpline *this);
// void __userpurge AISpline::buildSides(AISpline *this@<ecx>, __m128 a2@<xmm0>, IRayTrackCollisionProvider *track);
// void __userpurge AISpline::calculateNormals(AISpline *this@<ecx>, __m128 a2@<xmm0>, IRayTrackCollisionProvider *track);
void __thiscall AISpline::calculateRadius(AISpline *this, int range);
void __thiscall AISpline::cleanSpline(AISpline *this);
void __thiscall AISpline::clear(AISpline *this);
void __thiscall AISpline::closeSmooth(AISpline *this);
double __thiscall AISpline::getCornerRadiusAt(AISpline *this, float normalizedPosition, float distance, float lateralOffset, float carWidth);
double __thiscall AISpline::getDistToCornerFwd(AISpline *this, float thresholdRadius, float normalizedSplinePosition, float resolution);
double __thiscall AISpline::getDistToCornerRev(AISpline *this, float thresholdRadius, float normalizedSplinePosition, float resolution);
vec3f *__thiscall AISpline::getLastPoint(AISpline *this, vec3f *result);
void __thiscall AISpline::getPayloadIndices(AISpline *this, float pos, unsigned int *i0, unsigned int *i1, float *blend);
vec3f *__thiscall AISpline::getPointWithOffset(AISpline *this, vec3f *result, float pos, float lateralOffset, float carHalfWidth);
vec3f *__thiscall AISpline::getPointWithOffset(AISpline *this, vec3f *result, float pos, float lateralOffset, float carHalfWidth, const AISplinePayload *pl);
void __thiscall AISpline::getSidesAtPos(AISpline *this, float pos, float *sides, unsigned int use_blend);
void __thiscall AISpline::getSlimPayloadAt(AISpline *this, float pos, AISplineSlimPayload *pl);
char __thiscall AISpline::getStraightDataFromIndex(AISpline *this, int index, AIStraightData *data, float radiusThreshold);
double __thiscall AISpline::getStraightFactor(AISpline *this);
void __thiscall AISpline::initPitlane(AISpline *this, IRayTrackCollisionProvider *track);
void __thiscall AISpline::initStraights(AISpline *this, float radiusThreshold);
int __thiscall AISpline::isInStraight(AISpline *this, float normalizedPos);
// void __userpurge AISpline::load(AISpline *this@<ecx>, __m128 a2@<xmm3>, __m128 a3@<xmm4>, const std::wstring *a_filename);
// void __userpurge AISpline::loadFast(AISpline *this@<ecx>, __m128 a2@<xmm3>, __m128 a3@<xmm4>, const std::wstring *a_filename);
// void __userpurge AISpline::loadVersion6(AISpline *this@<ecx>, __m128 a2@<xmm3>, std::ifstream *in);
// void __userpurge AISpline::loadVersion7(AISpline *this@<ecx>, __m128 a2@<xmm3>, __m128 a3@<xmm4>, std::ifstream *in);
AISplinePayload *__thiscall AISpline::payloadAtPosition(AISpline *this, AISplinePayload *result, float pos);
AISplinePayload *__thiscall AISpline::payloadAtSplineIndex(AISpline *this, AISplinePayload *result, const unsigned int index);
int __thiscall AISpline::pointsCount(AISpline *this);
void __thiscall std::vector<AISplinePayload>::push_back(std::vector<AISplinePayload> *this, const AISplinePayload *_Val);
void __thiscall AISpline::save(AISpline *this, std::wstring filen);
void __thiscall AISpline::setPayloadAtSplineIndex(AISpline *this, const unsigned int index, AISplinePayload pl);
void __thiscall DynamicWingController::DynamicWingController(DynamicWingController *this, Car *car, INIReader *ini, const std::wstring *section);
void __thiscall DynamicWingController::DynamicWingController(DynamicWingController *this, const CarPhysicsState *state, const std::wstring *carUnixName, INIReader *ini, const std::wstring *section);
double __thiscall DynamicWingController::getInput(DynamicWingController *this);
void __thiscall DynamicWingController::initCommon(DynamicWingController *this, const std::wstring *carUnixName, INIReader *ini, const std::wstring *section);
void __thiscall DynamicWingController::step(DynamicWingController *this);
void __thiscall SlipStream::~SlipStream(SlipStream *this);
double __thiscall SlipStream::getSlipEffect(SlipStream *this, const vec3f *p);
void __thiscall SlipStream::init(SlipStream *this, PhysicsEngine *pe);
void __thiscall SlipStream::setPosition(SlipStream *this, const vec3f *pos, const vec3f *vel);
void __thiscall SplineLocator::getSides(SplineLocator *this, float *sides, float nsplinepos);
void __thiscall SplineLocator::init(SplineLocator *this, Car *car);
double __cdecl SplineLocator::locateOnSpline(AISpline *spline, const vec3f *pos, int *index);
double __cdecl SplineLocator::locateOnSplineWithBounds(AISpline *spline, const vec3f *pos, const std::vector<SplineIndexBound> *bounds, int *index);
void __thiscall SplineLocator::reset(SplineLocator *this);
void __thiscall SplineLocator::resetToClosestPoint(SplineLocator *this);
void __thiscall SplineLocator::step(SplineLocator *this, float dt);
void __thiscall AIDriverDrag::AIDriverDrag(AIDriverDrag *this, Car *icar);
void __thiscall lambda_54699e72027b16b9484512c8c28fa944_::operator()(AIDriverDrag::{ctor}::__l5::<lambda_54699e72027b16b9484512c8c28fa944> *this, const vec3f *pos);
AIDriverDrag *__thiscall AIDriverDrag::`scalar deleting destructor'(AIDriverDrag *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_54699e72027b16b9484512c8c28fa944_,0>,std::allocator<std::_Func_class<void,vec3f const &>>,void,vec3f const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_54699e72027b16b9484512c8c28fa944>,0>,std::allocator<std::_Func_class<void,vec3f const &> >,void,vec3f const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_54699e72027b16b9484512c8c28fa944_,0>,std::allocator<std::_Func_class<void,vec3f const &>>,void,vec3f const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_54699e72027b16b9484512c8c28fa944>,0>,std::allocator<std::_Func_class<void,vec3f const &> >,void,vec3f const &> *this, const vec3f *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_54699e72027b16b9484512c8c28fa944_,0>,std::allocator<std::_Func_class<void,vec3f const &>>,void,vec3f const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_54699e72027b16b9484512c8c28fa944>,0>,std::allocator<std::_Func_class<void,vec3f const &> >,void,vec3f const &> *this);
void __thiscall AIDriverDrag::acquireControls(AIDriverDrag *this, CarControls *controls, float dt, CarControlsInput *input);
const char *__thiscall AIDriverDrag::getName(AIDriverDrag *this);
void __thiscall AIDriverDrag::setStartTime(AIDriverDrag *this, long double startTime);
void __thiscall AIDriverDrag::stepGasBrake(AIDriverDrag *this, float dt);
void __thiscall AIDriverDrag::stepGasBrakeStart(AIDriverDrag *this);
void __thiscall AIDriverDrag::stepGears(AIDriverDrag *this, float dt, CarControls *controls);
void __thiscall AIDriverDrag::stepSteer(AIDriverDrag *this, float dt);
void __thiscall PhysicsObject::PhysicsObject(PhysicsObject *this, PhysicsEngine *pe, PhysicsObjectDesc *desc, BufferedChannel<mat44f> *chOut);
PhysicsObject *__thiscall PhysicsObject::`vector deleting destructor'(PhysicsObject *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d346950f61913737636a1cb1d10c31ee_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d346950f61913737636a1cb1d10c31ee>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, const long double *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d346950f61913737636a1cb1d10c31ee_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_d346950f61913737636a1cb1d10c31ee>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d346950f61913737636a1cb1d10c31ee_,0>,std::allocator<std::_Func_class<void,double const &>>,void,double const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d346950f61913737636a1cb1d10c31ee>,0>,std::allocator<std::_Func_class<void,double const &> >,void,double const &> *this);
mat44f *__thiscall PhysicsObject::getWorldMatrix(PhysicsObject *this, mat44f *result);
void __thiscall PhysicsObject::setWorldMatrix(PhysicsObject *this, const mat44f *worldMatrix);
void __cdecl std::_Uninit_def_fill_n<TyreThermalPatch *,unsigned int,std::allocator<TyreThermalPatch>,TyreThermalPatch>(TyreThermalPatch *_First, unsigned int _Count);
TyreThermalPatch *__cdecl std::_Uninit_move<TyreThermalPatch *,TyreThermalPatch *,std::allocator<TyreThermalPatch>,TyreThermalPatch>(TyreThermalPatch *_First, TyreThermalPatch *_Last, TyreThermalPatch *_Dest);
void __thiscall std::vector<ID3D11ShaderResourceView *>::_Reallocate(std::vector<TyreThermalPatch *> *this, unsigned int _Count);
void __thiscall std::vector<TyreThermalPatch>::_Reallocate(std::vector<TyreThermalPatch> *this, unsigned int _Count);
void __thiscall std::vector<TyreThermalPatch>::_Reserve(std::vector<TyreThermalPatch> *this, unsigned int _Count);
void __thiscall TyreThermalModel::addThermalCoreInput(TyreThermalModel *this, float temp);
void __thiscall TyreThermalModel::addThermalInput(TyreThermalModel *this, float xpos, float pressureRel, float temp);
void __thiscall TyreThermalModel::buildTyre(TyreThermalModel *this);
double __thiscall TyreThermalModel::getAvgSurfaceTemp(TyreThermalModel *this);
double __thiscall TyreThermalModel::getCorrectedD(TyreThermalModel *this, float d, float camberRAD);
double __thiscall TyreThermalModel::getCurrentCPTemp(TyreThermalModel *this, float camber);
void __thiscall TyreThermalModel::getIMO(TyreThermalModel *this, float *out);
TyreThermalPatch *__thiscall TyreThermalModel::getPatchAt(TyreThermalModel *this, int x, int y);
double __thiscall TyreThermalModel::getPracticalTemp(TyreThermalModel *this, float camberRAD);
void __thiscall TyreThermalModel::init(TyreThermalModel *this, int a_elements, int a_stripes, Car *car);
void __thiscall TyreThermalModel::reset(TyreThermalModel *this);
void __thiscall std::vector<TyreThermalPatch>::resize(std::vector<TyreThermalPatch> *this, unsigned int _Newsize);
void __thiscall TyreThermalModel::setTemperature(TyreThermalModel *this, float optimumTemp);
void __thiscall TyreThermalModel::step(TyreThermalModel *this, float dt, float angularSpeed, float camberRAD);
void __thiscall Turbo::Turbo(Turbo *this, TurboDef *data);
double __thiscall Turbo::getBoost(Turbo *this);
void __thiscall MaterialFilter::resetMaterialCache(Turbo *this);
void __thiscall Turbo::setTurboBoostLevel(Turbo *this, float value);
void __thiscall Turbo::step(Turbo *this, float gas, float rpms, float dt);
std::_Tree_node<std::pair<std::wstring const ,enum DynamicControllerInput>,void *> *__thiscall std::_Tree_buy<std::pair<std::wstring const,enum JoypadButton>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring &&>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,enum DynamicControllerInput>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring &&> *<_Val_1>, std::tuple<> *<_Val_2>);
void __thiscall std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const,enum DynamicControllerInput>>>,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const,enum DynamicControllerInput>>>,std::_Iterator_base0>(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,enum DynamicControllerInput> > >,std::_Iterator_base0> *this, std::_Tree_node<std::pair<std::wstring const ,enum DynamicControllerInput>,void *> *_Pnode, const std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,enum DynamicControllerInput> > > *_Plist);
void __thiscall DynamicController::DynamicController(DynamicController *this, Car *car, const std::wstring *filename);
void __thiscall DynamicController::DynamicController(DynamicController *this);
void __thiscall std::map<std::wstring,AudioEngine::GUID>::~map<std::wstring,AudioEngine::GUID>(std::map<std::wstring,TyreCompoundStrategy> *this);
void __thiscall DynamicController::~DynamicController(DynamicController *this);
DynamicControllerInput *__thiscall std::map<std::wstring,enum DynamicControllerInput>::operator[](std::map<std::wstring,enum DynamicControllerInput> *this, std::wstring *_Keyval);
DynamicControllerInput *__thiscall std::map<std::wstring,enum DynamicControllerInput>::operator[](std::map<std::wstring,enum DynamicControllerInput> *this, const std::wstring *_Keyval);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,CommandItem,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,CommandItem>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<std::wstring,TyreCompoundStrategy,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TyreCompoundStrategy> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,TyreCompoundStrategy>,void *> *_Rootnode);
void __thiscall std::vector<DynamicControllerStage>::_Reallocate(std::vector<DynamicControllerStage> *this, unsigned int _Count);
void __thiscall std::vector<DynamicControllerStage>::_Reserve(std::vector<DynamicControllerStage> *this, unsigned int _Count);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,int,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,int>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,TyreCompoundStrategy,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TyreCompoundStrategy> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TyreCompoundStrategy> > > > _Last);
double __thiscall DynamicController::eval(DynamicController *this);
double __thiscall DynamicController::getInput(DynamicController *this, DynamicControllerInput input);
double __cdecl DynamicController::getOversteerFactor(Car *car);
double __cdecl DynamicController::getRearSpeedRatio(Car *car);
void __thiscall std::vector<DynamicControllerStage>::push_back(std::vector<DynamicControllerStage> *this, const DynamicControllerStage *_Val);
void __thiscall Wing::Wing(Wing *this, Car *a_car, INIReader *ini, int index, bool isVertical);
void __thiscall WingData::WingData(WingData *this);
void __thiscall Wing::~Wing(Wing *this);
void __thiscall std::vector<DynamicWingController>::_Tidy(std::vector<DynamicWingController> *this);
void __thiscall Wing::addDrag(Wing *this, vec3f *lv);
void __thiscall Wing::addLift(Wing *this, vec3f *lv);
void __thiscall Wing::clearOverrides(Wing *this);
double __thiscall Wing::getCurrentModifiedAngle(Wing *this);
void __thiscall Wing::setOverrideAngle(Wing *this, float iangle);
void __thiscall Wing::step(Wing *this, float dt);
void __thiscall Wing::stepDynamicControllers(Wing *this, float dt);
void __thiscall ThermalObject::ThermalObject(ThermalObject *this);
void __thiscall ThermalObject::~ThermalObject(ThermalObject *this);
ThermalObject *__thiscall ThermalObject::`scalar deleting destructor'(ThermalObject *this, unsigned int a2);
void __thiscall ThermalObject::addHeadSource(ThermalObject *this, float heat);
void __thiscall ThermalObject::step(ThermalObject *this, const float dt, const float ambientTemp, const Speed *speed);
void __thiscall BrushSlipProvider::BrushSlipProvider(BrushSlipProvider *this, float maxAngle, float xu, float flex);
void __thiscall BrushSlipProvider::BrushSlipProvider(BrushSlipProvider *this);
void __thiscall BrushSlipProvider::~BrushSlipProvider(BrushSlipProvider *this);
void __thiscall BrushSlipProvider::calcMaximum(BrushSlipProvider *this, float load, float *maximum, float *max_slip);
const TyreSlipInput *__thiscall BrushSlipProvider::getSlipForce(BrushSlipProvider *this, const TyreSlipInput *input, const TyreSlipInput *useasy, bool useasya);
void __thiscall BrushSlipProvider::recomputeMaximum(BrushSlipProvider *this);
void __thiscall Damper::Damper(Damper *this);
double __thiscall Damper::getForce(Damper *this, float v);
void __thiscall HeaveSpring::~HeaveSpring(HeaveSpring *this);
void __thiscall HeaveSpring::init(HeaveSpring *this, Car *car, Suspension *s0, Suspension *s1, bool isFront);
void __thiscall HeaveSpring::initData(HeaveSpring *this);
void __thiscall HeaveSpring::step(HeaveSpring *this, float dt);
void __thiscall DRS::init(DRS *this, Car *car);
void __thiscall DRS::step(DRS *this, float dt);
DynamicWingController *__cdecl std::_Uninit_copy<DynamicWingController const *,DynamicWingController *,std::allocator<DynamicWingController>>(DynamicWingController *_First, DynamicWingController *_Last, DynamicWingController *_Dest);
Wing *__cdecl std::_Uninit_move<Wing *,Wing *,std::allocator<Wing>,Wing>(Wing *_First, Wing *_Last, Wing *_Dest);
void __thiscall std::_Wrap_alloc<std::allocator<DynamicWingController>>::construct<DynamicWingController,DynamicWingController>(std::_Wrap_alloc<std::allocator<DynamicWingController> > *this, DynamicWingController *_Ptr, DynamicWingController *<_Args_0>);
void __thiscall std::vector<DynamicWingController>::vector<DynamicWingController>(std::vector<DynamicWingController> *this, const std::vector<DynamicWingController> *_Right);
void __thiscall Wing::Wing(Wing *this, const Wing *__that);
void __thiscall AeroMap::~AeroMap(AeroMap *this);
char __thiscall std::vector<DynamicWingController>::_Buy(std::vector<DynamicWingController> *this, unsigned int _Capacity);
void __thiscall std::vector<DynamicWingController>::_Reallocate(std::vector<DynamicWingController> *this, unsigned int _Count);
void __thiscall std::vector<Wing>::_Reallocate(std::vector<Wing> *this, unsigned int _Count);
void __thiscall std::vector<DynamicWingController>::_Reserve(std::vector<DynamicWingController> *this, unsigned int _Count);
void __thiscall std::vector<Wing>::_Reserve(std::vector<Wing> *this, unsigned int _Count);
void __thiscall AeroMap::addDrag(AeroMap *this, const vec3f *lv);
void __thiscall AeroMap::addLift(AeroMap *this, const vec3f *localVelocity);
double __thiscall AeroMap::getCurrentDragKG(AeroMap *this);
double __thiscall AeroMap::getCurrentLiftKG(AeroMap *this);
std::vector<WingState> *__thiscall AeroMap::getWingStatus(AeroMap *this, std::vector<WingState> *result);
void __thiscall AeroMap::init(AeroMap *this, Car *a_car, const vec3f *frontAP, const vec3f *rearAP, std::wstring dataPath);
void __thiscall AeroMap::loadINI(AeroMap *this, const std::wstring *dataPath);
void __thiscall std::vector<DynamicWingController>::push_back(std::vector<DynamicWingController> *this, DynamicWingController *_Val);
void __thiscall std::vector<Wing>::push_back(std::vector<Wing> *this, Wing *_Val);
void __thiscall AeroMap::step(AeroMap *this, float dt);
void __thiscall Kers::~Kers(Kers *this);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d361f6b318de1ab2f7ed810b0ea4e32b_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_d361f6b318de1ab2f7ed810b0ea4e32b>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d361f6b318de1ab2f7ed810b0ea4e32b_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d361f6b318de1ab2f7ed810b0ea4e32b>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this, const OnLapCompletedEvent *<_Args_0>);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d361f6b318de1ab2f7ed810b0ea4e32b_,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &>>,void,OnLapCompletedEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d361f6b318de1ab2f7ed810b0ea4e32b>,0>,std::allocator<std::_Func_class<void,OnLapCompletedEvent const &> >,void,OnLapCompletedEvent const &> *this);
double __thiscall Kers::getDischargeTimeS(Kers *this);
double __thiscall Kers::getOutputTorque(Kers *this);
void __thiscall Kers::init(Kers *this, Car *car);
void __thiscall Kers::reset(Kers *this);
void __thiscall Kers::step(Kers *this, float dt);
// void __userpurge SteeringSystem::init(SteeringSystem *this@<ecx>, unsigned int a2@<ebx>, Car *car);
void __thiscall SteeringSystem::step(SteeringSystem *this, float dt);
void __thiscall ClutchSequence::ClutchSequence(ClutchSequence *this, Curve *c);
void __thiscall Autoclutch::~Autoclutch(Autoclutch *this);
ClutchSequence *__thiscall ClutchSequence::operator=(ClutchSequence *this, const ClutchSequence *__that);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e1bed8e0568154e3fae5d19ba4df8d87_,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &>>,void,OnGearRequestEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_e1bed8e0568154e3fae5d19ba4df8d87>,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &> >,void,OnGearRequestEvent const &> *this, const OnGearRequestEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_e1bed8e0568154e3fae5d19ba4df8d87_,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &>>,void,OnGearRequestEvent const &>::_Copy(std::_Func_impl<std::_Callable_obj<<lambda_e1bed8e0568154e3fae5d19ba4df8d87>,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &> >,void,OnGearRequestEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e1bed8e0568154e3fae5d19ba4df8d87_,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &>>,void,OnGearRequestEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_e1bed8e0568154e3fae5d19ba4df8d87>,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &> >,void,OnGearRequestEvent const &> *this);
void __thiscall Autoclutch::init(Autoclutch *this, Car *car);
void __thiscall Autoclutch::loadINI(Autoclutch *this, std::wstring carModel);
void __thiscall Autoclutch::onGearRequest(Autoclutch *this, const OnGearRequestEvent *ev);
void __thiscall Autoclutch::step(Autoclutch *this, float dt);
void __thiscall Autoclutch::stepSequence(Autoclutch *this, float dt);
std::_Func_impl<std::_Callable_obj<<lambda_e1bed8e0568154e3fae5d19ba4df8d87>,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &> >,void,OnGearRequestEvent const &> *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_e1bed8e0568154e3fae5d19ba4df8d87_,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &>>,void,OnGearRequestEvent const &>::`scalar deleting destructor'(std::_Func_impl<std::_Callable_obj<<lambda_e1bed8e0568154e3fae5d19ba4df8d87>,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &> >,void,OnGearRequestEvent const &> *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_459db49854199dd1a98d3500d7edae84_,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &>>,void,OnGearRequestEvent const &>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_459db49854199dd1a98d3500d7edae84>,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &> >,void,OnGearRequestEvent const &> *this, const OnGearRequestEvent *<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_459db49854199dd1a98d3500d7edae84_,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &>>,void,OnGearRequestEvent const &>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_459db49854199dd1a98d3500d7edae84>,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &> >,void,OnGearRequestEvent const &> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_459db49854199dd1a98d3500d7edae84_,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &>>,void,OnGearRequestEvent const &>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_459db49854199dd1a98d3500d7edae84>,0>,std::allocator<std::_Func_class<void,OnGearRequestEvent const &> >,void,OnGearRequestEvent const &> *this);
void __thiscall AutoBlip::init(AutoBlip *this, Car *acar);
void __thiscall AutoBlip::loadINI(AutoBlip *this, std::wstring carModel);
void __thiscall AutoBlip::step(AutoBlip *this, float dt);
void __thiscall AutoShifter::init(AutoShifter *this, Car *car);
void __thiscall AutoShifter::loadINI(AutoShifter *this);
void __thiscall AutoShifter::step(AutoShifter *this, float dt);
void __thiscall GearChanger::init(GearChanger *this, Car *car);
void __thiscall GearChanger::step(GearChanger *this, float dt);
void __thiscall EDL::init(EDL *this, Car *a_car);
void __thiscall EDL::step(EDL *this, float td);
void __thiscall AntirollBar::~AntirollBar(SteeringSystem *this);
void __thiscall AntirollBar::init(AntirollBar *this, IRigidBody *cb, ISuspension **sus);
void __thiscall AntirollBar::step(AntirollBar *this, float dt);
void __thiscall SpeedLimiter::init(SpeedLimiter *this, Car *car);
void __thiscall SpeedLimiter::step(SpeedLimiter *this, float dt);
std::string *__cdecl std::operator+<char>(std::string *result, const char *_Left, std::string *_Right);
void __cdecl std::_For_each<TelemetryChannel *,_lambda_6285e9abfaf719bb651f976d9ca47e10_>(TelemetryChannel *_First, TelemetryChannel *_Last, Telemetry::step::__l25::<lambda_6285e9abfaf719bb651f976d9ca47e10> *_Func);
TelemetryChannel *__cdecl std::_Uninit_move<TelemetryChannel *,TelemetryChannel *,std::allocator<TelemetryChannel>,TelemetryChannel>(TelemetryChannel *_First, TelemetryChannel *_Last, TelemetryChannel *_Dest);
void __thiscall TelemetryChannel::TelemetryChannel(TelemetryChannel *this, const TelemetryChannel *__that);
void __thiscall TelemetryChannel::TelemetryChannel(TelemetryChannel *this, const std::string *name, float *adataSource, TelemetryUnits units, int frequency, float scale);
void __thiscall Telemetry::~Telemetry(Telemetry *this);
void __thiscall std::vector<TelemetryChannel>::_Reallocate(std::vector<TelemetryChannel> *this, unsigned int _Count);
void __thiscall std::vector<TelemetryChannel>::_Reserve(std::vector<TelemetryChannel> *this, unsigned int _Count);
void __thiscall Telemetry::init(Telemetry *this, Car *car);
std::string *__thiscall std::string::insert(std::string *this, unsigned int _Off, const std::string *_Right, unsigned int _Roff, unsigned int _Count);
std::string *__thiscall std::string::insert(std::string *this, unsigned int _Off, const char *_Ptr, unsigned int _Count);
BOOL __thiscall BrakeSystem::isUsingEBB(BrakeSystem *this);
void __thiscall std::vector<TelemetryChannel>::push_back(std::vector<TelemetryChannel> *this, TelemetryChannel *_Val);
void __thiscall Telemetry::save(Telemetry *this, std::wstring filename);
void __thiscall Telemetry::step(Telemetry *this, float td);
std::string *__cdecl std::to_string(std::string *result, int _Val);
void __thiscall StabilityControl::init(StabilityControl *this, Car *car);
void __thiscall StabilityControl::step(StabilityControl *this, float dt);
BOOL __thiscall DriftModeComponent::checkExtremeDrifting(DriftModeComponent *this);
void __thiscall DriftModeComponent::init(DriftModeComponent *this, Car *car);
void __thiscall DriftModeComponent::step(DriftModeComponent *this, float dt);
void __thiscall DriftModeComponent::validateDrift(DriftModeComponent *this);
void __thiscall LapInvalidator::init(LapInvalidator *this, Car *car);
void __thiscall LapInvalidator::onEnterPenaltyZone(LapInvalidator *this, int tyre_count, float black_flag_time);
void __thiscall LapInvalidator::step(LapInvalidator *this, float dt);
void __thiscall DebugLine::DebugLine(DebugLine *this, const vec3f *ip0, const vec3f *ip1, const vec4f *ic, float iseconds);
void __thiscall SDWSuspensionData::SDWSuspensionData(SDWSuspensionData *this);
// void __userpurge Suspension::Suspension(Suspension *this@<ecx>, int a2@<ebx>, int a3@<ebp>, Car *car, int index);
void __thiscall ISuspension::~ISuspension(ISuspension *this);
ISuspension *__thiscall ISuspension::`vector deleting destructor'(ISuspension *this, unsigned int a2);
Suspension *__thiscall Suspension::`scalar deleting destructor'(Suspension *this, unsigned int a2);
void __thiscall Suspension::addForceAtPos(Suspension *this, const vec3f *force, const vec3f *pos, bool driven, bool addToSteerTorque);
void __thiscall Suspension::addLocalForceAndTorque(Suspension *this, const vec3f *force, const vec3f *torque, const vec3f *driveTorque);
void __thiscall Suspension::addTorque(Suspension *this, const vec3f *torque);
// void __usercall Suspension::attach(Suspension *this@<ecx>, int a2@<ebx>, int a3@<ebp>, int a4@<esi>);
double __thiscall Suspension::getDamage(Suspension *this);
Damper *__thiscall Suspension::getDamper(Suspension *this);
std::vector<DebugLine> *__thiscall Suspension::getDebugLines(Suspension *this, std::vector<DebugLine> *result, const mat44f *bodyMatrix, const mat44f *hubMatrix);
vec3f *__thiscall Suspension::getHubAngularVelocity(SuspensionStrut *this, vec3f *result);
mat44f *__thiscall SuspensionStrut::getHubWorldMatrix(SuspensionStrut *this, mat44f *result);
double __thiscall SuspensionStrut::getPackerRange(SuspensionStrut *this);
vec3f *__thiscall Suspension::getPointVelocity(SuspensionStrut *this, vec3f *result, const vec3f *p);
SuspensionStatus *__thiscall Suspension::getStatus(Suspension *this);
// void __userpurge Suspension::getSteerBasis(Suspension *this@<ecx>, __m128 a2@<xmm6>, vec3f *centre, vec3f *axis);
double __thiscall Suspension::getSteerTorque(Suspension *this);
vec3f *__thiscall SuspensionStrut::getVelocity(SuspensionStrut *this, vec3f *result);
// void __userpurge Suspension::loadINI(Suspension *this@<ecx>, __m128 a2@<xmm0>, int index);
void __thiscall Suspension::resetDamage(Suspension *this);
void __thiscall Suspension::setDamage(Suspension *this, float amount);
void __thiscall Suspension::setERPCFM(Suspension *this, float erp, float cfm);
void __thiscall Suspension::setSteerLengthOffset(Suspension *this, float o);
void __thiscall Suspension::step(Suspension *this, float dt);
void __thiscall SStrutSuspensionData::SStrutSuspensionData(SStrutSuspensionData *this);
// void __userpurge SuspensionStrut::SuspensionStrut(SuspensionStrut *this@<ecx>, int a2@<ebx>, int a3@<ebp>, int a4@<edi>, Car *car, int index);
SuspensionStrut *__thiscall SuspensionStrut::`scalar deleting destructor'(SuspensionStrut *this, unsigned int a2);
void __thiscall SuspensionStrut::addForceAtPos(SuspensionStrut *this, const vec3f *force, const vec3f *pos, bool driven, bool addToSteerTorque);
void __thiscall SuspensionStrut::addLocalForceAndTorque(SuspensionStrut *this, const vec3f *force, const vec3f *torque, const vec3f *driveTorque);
void __thiscall SuspensionStrut::addTorque(SuspensionStrut *this, const vec3f *torque);
// void __usercall SuspensionStrut::attach(SuspensionStrut *this@<ecx>, int a2@<ebx>, int a3@<ebp>, int a4@<edi>);
vec3f *__thiscall SuspensionStrut::getBasePosition(SuspensionStrut *this, vec3f *result);
double __thiscall SuspensionStrut::getDamage(SuspensionStrut *this);
Damper *__thiscall SuspensionStrut::getDamper(SuspensionStrut *this);
std::vector<DebugLine> *__thiscall SuspensionStrut::getDebugLines(SuspensionStrut *this, std::vector<DebugLine> *result, const mat44f *bodyMatrix, const mat44f *hubMatrix);
double __thiscall Suspension::getK(SuspensionStrut *this);
void __thiscall SuspensionStrut::getMass(SuspensionStrut *this);
SuspensionStatus *__thiscall SuspensionStrut::getStatus(SuspensionStrut *this);
// void __userpurge SuspensionStrut::getSteerBasis(SuspensionStrut *this@<ecx>, __m128 a2@<xmm6>, vec3f *center, vec3f *axis);
double __thiscall SuspensionStrut::getSteerTorque(SuspensionStrut *this);
// void __userpurge SuspensionStrut::loadINI(SuspensionStrut *this@<ecx>, __m128 a2@<xmm0>, int index);
void __thiscall SuspensionStrut::resetDamage(SuspensionStrut *this);
void __thiscall SuspensionStrut::setDamage(SuspensionStrut *this, float amount);
void __thiscall SuspensionStrut::setERPCFM(SuspensionStrut *this, float erp, float cfm);
void __thiscall SuspensionStrut::setPositions(SuspensionStrut *this);
void __thiscall SuspensionStrut::setSteerLengthOffset(SuspensionStrut *this, float o);
void __thiscall SuspensionStrut::step(SuspensionStrut *this, float dt);
void __thiscall Suspension::stop(SuspensionStrut *this);
void __thiscall AxleJoint::AxleJoint(AxleJoint *this);
void __thiscall SuspensionAxle::SuspensionAxle(SuspensionAxle *this, Car *car, RigidAxleSide side, const std::wstring *carDataPath);
SuspensionAxle *__thiscall SuspensionAxle::`scalar deleting destructor'(SuspensionAxle *this, unsigned int a2);
void __thiscall SuspensionAxle::addForceAtPos(SuspensionAxle *this, const vec3f *force, const vec3f *pos, bool driven, bool addToSteerTorque);
void __thiscall SuspensionAxle::addLocalForceAndTorque(SuspensionAxle *this, const vec3f *force, const vec3f *torque, const vec3f *driveTorque);
void __thiscall SuspensionAxle::addTorque(SuspensionAxle *this, const vec3f *torque);
vec3f *__thiscall SuspensionAxle::getBasePosition(SuspensionAxle *this, vec3f *result);
SuspensionStatus *__thiscall SuspensionML::getStatus(SuspensionML *this);
std::vector<DebugLine> *__thiscall SuspensionAxle::getDebugLines(SuspensionAxle *this, std::vector<DebugLine> *result, const mat44f *bodyMatrix, const mat44f *hubMatrix);
vec3f *__thiscall SuspensionAxle::getHubAngularVelocity(SuspensionAxle *this, vec3f *result);
mat44f *__thiscall SuspensionAxle::getHubWorldMatrix(SuspensionAxle *this, mat44f *result);
double __thiscall SuspensionAxle::getMass(SuspensionAxle *this);
double __thiscall TyreTester::getK(TyreTester *this);
vec3f *__thiscall SuspensionAxle::getPointVelocity(SuspensionAxle *this, vec3f *result, const vec3f *p);
SuspensionStatus *__thiscall SuspensionAxle::getStatus(SuspensionAxle *this);
void __thiscall SuspensionAxle::getSteerBasis(SuspensionAxle *this, vec3f *center, vec3f *axis);
vec3f *__thiscall SuspensionAxle::getVelocity(SuspensionAxle *this, vec3f *result);
void __thiscall SuspensionAxle::printRollCenter(SuspensionAxle *this, float tyreRadius);
void __thiscall SuspensionAxle::setERPCFM(SuspensionAxle *this, float erp, float cfm);
void __thiscall SuspensionAxle::setPositions(SuspensionAxle *this);
void __thiscall SuspensionAxle::step(SuspensionAxle *this, float dt);
void __thiscall SuspensionAxle::stop(SuspensionAxle *this);
MLJoint *__cdecl std::_Uninit_move<DynamicTrackObject *,DynamicTrackObject *,std::allocator<DynamicTrackObject>,DynamicTrackObject>(MLJoint *_First, MLJoint *_Last, MLJoint *_Dest);
void __thiscall MLJoint::MLJoint(MLJoint *this);
void __thiscall SuspensionML::SuspensionML(SuspensionML *this, Car *car, int index);
SuspensionML *__thiscall SuspensionML::`vector deleting destructor'(SuspensionML *this, unsigned int a2);
void __thiscall SuspensionML::addForceAtPos(SuspensionML *this, const vec3f *force, const vec3f *pos, bool driven, bool addToSteerTorque);
void __thiscall SuspensionML::addLocalForceAndTorque(SuspensionML *this, const vec3f *force, const vec3f *torque, const vec3f *driveTorque);
void __thiscall SuspensionML::addTorque(SuspensionML *this, const vec3f *torque);
vec3f *__thiscall SuspensionML::getBasePosition(SuspensionML *this, vec3f *result);
double __thiscall SuspensionML::getDamage(SuspensionML *this);
Damper *__thiscall SuspensionML::getDamper(SuspensionML *this);
std::vector<DebugLine> *__thiscall SuspensionML::getDebugLines(SuspensionML *this, std::vector<DebugLine> *result, const mat44f *bodyMatrix, const mat44f *hubMatrix);
vec3f *__thiscall SuspensionML::getHubAngularVelocity(SuspensionML *this, vec3f *result);
mat44f *__thiscall SuspensionML::getHubWorldMatrix(SuspensionML *this, mat44f *result);
void __thiscall SuspensionML::getMass(SuspensionML *this);
vec3f *__thiscall SuspensionML::getPointVelocity(SuspensionML *this, vec3f *result, const vec3f *p);
// void __userpurge SuspensionML::getSteerBasis(SuspensionML *this@<ecx>, __m128 a2@<xmm6>, vec3f *center, vec3f *axis);
double __thiscall SuspensionML::getSteerTorque(SuspensionML *this);
vec3f *__thiscall SuspensionML::getVelocity(SuspensionML *this, vec3f *result);
// void __userpurge SuspensionML::loadINI(SuspensionML *this@<ecx>, __m128 a2@<xmm0>, int index);
void __thiscall SuspensionML::resetDamage(SuspensionML *this);
void __thiscall SuspensionML::setDamage(SuspensionML *this, float amount);
void __thiscall SuspensionML::attach(SuspensionML *this);
void __thiscall SuspensionML::setSteerLengthOffset(SuspensionML *this, float o);
void __thiscall SuspensionML::step(SuspensionML *this, float dt);
void __thiscall SuspensionML::stop(SuspensionML *this);
void __thiscall TimeLine::TimeLine(TimeLine *this, const vec3f *p1, const vec3f *p2, int iid, TimeLineType type);
void __thiscall TimeLine::~TimeLine(TimeLine *this);
int __thiscall TimeLine::check(TimeLine *this, const vec3f *p);
double __cdecl ksCalcCamberRAD(const vec3f *roadNormal, const mat44f *susMatrix);
double __cdecl ksCalcContactPatchLength(float radius, float deflection);
double __cdecl ksCalcSlipAngleRAD(float vy, float vx);
double __cdecl ksGFromRadius(float radius, float speedMS);
double __cdecl ksSpeedFromRadius(float radius, float latg);
void __thiscall SetupItem::SetupItem(SetupItem *this, std::wstring aname, float *aconnectedFloat, std::wstring units, bool isAttached, float multiplier, float labelMult);
void __thiscall SetupItem::~SetupItem(SetupItem *this);
void __thiscall BrushTyreModel::BrushTyreModel(BrushTyreModel *this);
double __thiscall BrushTyreModel::getCFFromSlipAngle(BrushTyreModel *this, float angle);
BrushOutput *__thiscall BrushTyreModel::solve(BrushTyreModel *this, BrushOutput *result, float slip, float friction, float load, float cf1_mix, float asy);
BrushOutput *__thiscall BrushTyreModel::solveV5(BrushTyreModel *this, BrushOutput *result, float slip, float load, float asy);
void __thiscall ActiveActuator::ActiveActuator(ActiveActuator *this);
double __thiscall ActiveActuator::eval(ActiveActuator *this, float dt, float currentTravel);
void __thiscall ksSecurity::ksSecurity(ksSecurity *this);
void __thiscall ksSecurity::~ksSecurity(ksSecurity *this);
ksSecurity *__thiscall ksSecurity::`vector deleting destructor'(ksSecurity *this, unsigned int a2);
std::wstring *__thiscall ksSecurity::getMacAddress(ksSecurity *this, std::wstring *result, bool printDebugInfos);
std::wstring *__thiscall ksSecurity::getRequestCode(ksSecurity *this, std::wstring *result, bool printDebugInfos);
std::wstring *__thiscall ksSecurity::keyFromString(ksSecurity *this, std::wstring *result, std::wstring is);
char __thiscall ksSecurity::validate(ksSecurity *this, std::wstring sfx, int version);
int __cdecl operator new[](unsigned int count);
void __thiscall std::_Fac_node::~_Fac_node(std::_Fac_node *this);
void __thiscall std::_Fac_tidy_reg_t::~_Fac_tidy_reg_t(std::_Fac_tidy_reg_t *this);
void __cdecl std::_Facet_Register(std::_Facet_base *_This);
void __stdcall `eh vector destructor iterator'(void *ptr, unsigned int size, int count, void (__thiscall *pDtor)(void *));
void __stdcall __ArrayUnwind(void *ptr, unsigned int size, int count, void (__thiscall *pDtor)(void *));
// int __cdecl operator new(_DWORD); weak
// int __cdecl operator delete(_DWORD); weak
int __cdecl __atonexitinit();
_onexit_t __cdecl _onexit(int (__cdecl *func)());
int __cdecl atexit(void (__cdecl *func)());
// void __fastcall __security_check_cookie(uintptr_t StackCookie);
// void __stdcall __noreturn _CxxThrowException(void *pExceptionObject, _ThrowInfo *pThrowInfo);
// void *__cdecl memcpy(void *, const void *Src, size_t Size);
void *__thiscall type_info::`vector deleting destructor'(type_info *this, unsigned int);
// int __cdecl operator delete[](_DWORD); weak
// int __cdecl __RTDynamicCast(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD); weak
// __m128 __libm_sse2_asinf(void); weak
// __m128 __cdecl __libm_sse2_log10f();
// __m128 __thiscall __libm_sse2_powf(_DWORD); weak
// int __usercall _ftol3_NaN@<eax>(__m128i a1@<xmm0>);
// int __usercall _ftol3_work@<eax>(__int64 a1@<xmm0>, char a2@<al>, int a3@<ecx>, double a4@<xmm5>);
// int __usercall _ftol3_common@<eax>(__int64 a1@<xmm0>, __m128i a2@<xmm1>);
// unsigned __int64 __usercall _ftol3_arg_error@<edx:eax>(__int64 a1@<xmm0>);
// void __usercall _ftol3_except(int a1@<edx>, __int64 a2@<xmm0>);
// int __usercall _dtol3_NaN@<eax>(__m128i a1@<xmm0>);
// int __usercall _dtol3_work@<eax>(__int64 a1@<xmm0>, char a2@<al>, int a3@<ecx>, double a4@<xmm5>);
// int __usercall _ftol2_pentium4@<eax>(double a1@<st0>);
// int __usercall _ftol2_sse_excpt@<eax>(double a1@<st0>);
// signed __int64 __usercall _ftol2@<edx:eax>(double@<st0>); weak
// void *__cdecl memset(void *, int Val, size_t Size);
// __m128 __stdcall __libm_sse2_cosf(_DWORD, _DWORD); weak
// __m128 __thiscall __libm_sse2_sinf(_DWORD); weak
void __stdcall `eh vector constructor iterator'(void *ptr, unsigned int size, int count, void (__thiscall *pCtor)(void *), void (__thiscall *pDtor)(void *));
// __m128 __libm_sse2_acosf(void); weak
// __m128 __libm_sse2_acos(void); weak
// __m128 __libm_sse2_asin(void); weak
// __m128 __libm_sse2_cos(void); weak
// __m128 __libm_sse2_sin(void); weak
// __m128 __libm_sse2_tan(void); weak
// __m128 __thiscall __libm_sse2_tanf(_DWORD); weak
// double __cdecl ceil(double X);
// __m128 __libm_sse2_expf(void); weak
// void __cdecl terminate(); weak
// int __cdecl _vswprintf_c_l(wchar_t *const Buffer, const size_t BufferCount, const wchar_t *const Format, const _locale_t Locale, va_list ArgList);
void __stdcall `eh vector copy constructor iterator'(void *dst, void *src, unsigned int size, int count, void (__thiscall *pCopyCtor)(void *, void *), void (__thiscall *pDtor)(void *));
int __cdecl pre_c_init();
int pre_cpp_init();
// int __usercall _tmainCRTStartup@<eax>(__m128 a1@<xmm1>);
// int __usercall wWinMainCRTStartup@<eax>(__m128 a1@<xmm1>);
// char *__cdecl getenv(const char *VarName);
void __cdecl __raise_securityfailure(_EXCEPTION_POINTERS *ExceptionPointers);
void __cdecl __noreturn __report_gsfailure();
// void __usercall __report_rangecheckfailure(unsigned int a1@<ebx>, unsigned int a2@<edi>, unsigned int a3@<esi>);
// void __usercall __report_securityfailure(unsigned int a1@<ebx>, unsigned int a2@<edi>, unsigned int a3@<esi>, unsigned int FailureCode);
// __m128 _libm_sse2_sin_precise(void); weak
// __m128 __stdcall _libm_sse2_atan_precise(_DWORD); weak
// __m128 __stdcall _libm_sse2_cos_precise(_DWORD); weak
// __m128 __libm_sse2_pow(void); weak
// __m128 __cdecl __libm_sse2_atanf();
int __cdecl _except_handler4(_EXCEPTION_RECORD *ExceptionRecord, _EXCEPTION_REGISTRATION_RECORD *EstablisherFrame, _CONTEXT *ContextRecord, void *DispatcherContext);
// int __cdecl _lock(_DWORD); weak
// int __stdcall _unlock(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD); weak
// int __stdcall __dllonexit(_DWORD); weak
// void __thiscall type_info::~type_info(void *); idb
// double __cdecl _except1(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD); weak
int __isa_available_init();
int __stdcall __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *pPtrs);
int __cdecl __CxxSetUnhandledExceptionFilter();
// int __cdecl _amsg_exit(_DWORD); weak
_IMAGE_SECTION_HEADER *__cdecl _FindPESection(unsigned __int8 *pImageBase, unsigned int rva);
BOOL __cdecl _IsNonwritableInCurrentImage(unsigned __int8 *pTarget);
bool __cdecl _ValidateImageBase(unsigned __int8 *pImageBase);
void __cdecl __security_init_cookie();
void __cdecl _RTC_Initialize();
void __cdecl _RTC_Terminate();
errno_t _setdefaultprecision();
// int __cdecl _initterm_e(_PIFV *First, _PIFV *Last);
// void __cdecl _initterm(_PVFV *First, _PVFV *Last);
// int __cdecl _crt_debugger_hook(_DWORD); weak
// int __cdecl __crtUnhandledException(_DWORD); weak
// int __cdecl __crtTerminateProcess(_DWORD); weak
// int __cdecl _except_handler4_common(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD); weak
// int __cdecl __crtSetUnhandledExceptionFilter(_DWORD); weak
// void __cdecl __noreturn _invoke_watson(const wchar_t *Expression, const wchar_t *FunctionName, const wchar_t *FileName, unsigned int LineNo, uintptr_t Reserved);
// errno_t __cdecl _controlfp_s(unsigned int *CurrentState, unsigned int NewValue, unsigned int Mask);
int __fastcall load__PyObject_GetAttrString(int a1, int a2);
// int __usercall _tailMerge_python33_dll@<eax>(int (__stdcall **a1)()@<eax>, int a2@<edx>, int a3@<ecx>);
int __fastcall load__PyObject_GetAttr(int a1, int a2);
int __fastcall load__PyMem_Free(int a1, int a2);
int __fastcall load__PyBytes_AsString(int a1, int a2);
int __fastcall load__PyUnicode_FromWideChar(int a1, int a2);
int __fastcall load__PyUnicode_AsWideCharString(int a1, int a2);
int __fastcall load__PyUnicode_AsUTF8String(int a1, int a2);
int __fastcall load__PyErr_Fetch(int a1, int a2);
int __fastcall load__PyErr_Print(int a1, int a2);
int __fastcall load__PyObject_CallFunction(int a1, int a2);
int __fastcall load__PyUnicode_FromUnicode(int a1, int a2);
int __fastcall load__PyUnicode_AsUnicodeAndSize(int a1, int a2);
int __fastcall load__PyLong_FromLong(int a1, int a2);
int __fastcall load__PyBool_FromLong(int a1, int a2);
int __fastcall load__PyFloat_FromDouble(int a1, int a2);
int __fastcall load__PyTuple_New(int a1, int a2);
int __fastcall load__PyTuple_SetItem(int a1, int a2);
int __fastcall load__PyList_New(int a1, int a2);
int __fastcall load__PyArg_ParseTuple(int a1, int a2);
int __fastcall load__PyRun_SimpleStringFlags(int a1, int a2);
int __fastcall load__PyModule_Create2(int a1, int a2);
int __fastcall load__PyImport_AppendInittab(int a1, int a2);
int __fastcall load__Py_Initialize(int a1, int a2);
int __fastcall load__Py_IsInitialized(int a1, int a2);
int __fastcall load__Py_Finalize(int a1, int a2);
int __fastcall load__PyImport_Import(int a1, int a2);
int __fastcall load__PyErr_Occurred(int a1, int a2);
int __fastcall load__PyErr_Clear(int a1, int a2);
// DWORD __stdcall GetFileVersionInfoSizeA(LPCSTR lptstrFilename, LPDWORD lpdwHandle);
// BOOL __stdcall GetFileVersionInfoA(LPCSTR lptstrFilename, DWORD dwHandle, DWORD dwLen, LPVOID lpData);
// BOOL __stdcall VerQueryValueW(LPCVOID pBlock, LPCWSTR lpSubBlock, LPVOID *lplpBuffer, PUINT puLen);
_DWORD *PPFX::IPfxBaseContext::Instantiate();
int PPFX::IPfxBaseContext::GetMaxGlareQuality(void); // weak
__int64 PPFX::IPfxBaseContext::GetMaxDepthOfFieldQuality(void); // weak
struct PPFX::PFX_INITPARAM *__stdcall PPFX::IPfxBaseContext::GetQualityParameters(struct PPFX::PFX_INITPARAM *a1, int a2, int a3, int a4);
int __fastcall PPFX::IPfxBaseContext::Initialize(int a1, PPFX::CTextureUtil *a2, PPFX::IPfxBaseContext *this, const struct PPFX::PFX_DEVICEPARAM *a4, PPFX *a5, int a6, __int64 a7);
int __stdcall PPFX::IPfxBaseContext::GetState(PPFX::IPfxBaseContext *this);
// GPUUTIL *__userpurge PPFX::IPfxBaseContext::Uninitialize@<eax>(PPFX::CTextureUtil *a1@<edx>, const char *a2@<esi>, PPFX::IPfxBaseContext *this);
GPUUTIL *__fastcall PPFX::IPfxBaseContext::UninitializeDeviceResources(int a1, PPFX::CTextureUtil *a2, PPFX::IPfxBaseContext *this);
char __stdcall PPFX::IPfxBaseContext::GetDepthTextureAvailability(PPFX::IPfxBaseContext *this);
bool __stdcall PPFX::IPfxBaseContext::GetRenderTargetStability(PPFX::IPfxBaseContext *__hidden this); // weak
bool __stdcall PPFX::IPfxBaseContext::GetRenderSceneSurfaceStability(PPFX::IPfxBaseContext *__hidden this); // weak
bool __stdcall PPFX::IPfxBaseContext::GetRenderSceneDepthStencilStability(PPFX::IPfxBaseContext *__hidden this); // weak
char __stdcall PPFX::IPfxBaseContext::GetRestoreStateAvailability(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetRenderSceneTexture(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetGpuDepthStencilSurface(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetGpuDepthStencilTexture(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetMotionBlurInternalVelocityTexture(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetActiveView(PPFX::IPfxBaseContext *this, int a2);
int __stdcall PPFX::IPfxBaseContext::GetActiveView(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetNumEffectViews(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetMultisampleMode(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MULTISAMPLEMODE a2);
int __stdcall PPFX::IPfxBaseContext::GetMultisampleMode(PPFX::IPfxBaseContext *this, bool a2);
int __stdcall PPFX::IPfxBaseContext::SetMultisampleDownsampleFilter(PPFX::IPfxBaseContext *this, unsigned int a2);
int __stdcall PPFX::IPfxBaseContext::GetMultisampleDownsampleFilter(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetMultisampleNumSamples(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetMultisampleQuality(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::InitializePersistentEffects(PPFX::IPfxBaseContext *this, int a2);
int __stdcall PPFX::IPfxBaseContext::InitializeContinuousEffects(PPFX::IPfxBaseContext *this, int a2);
int __stdcall PPFX::IPfxBaseContext::InitializeAfterimage(PPFX::IPfxBaseContext *this, int a2);
int __stdcall PPFX::IPfxBaseContext::InitializeFeedback(PPFX::IPfxBaseContext *this, int a2);
int __stdcall PPFX::IPfxBaseContext::BeginPostEffectScene(PPFX::IPfxBaseContext *this, int a2, const __m128i *a3, __int64 a4, int a5);
// GPUUTIL *__userpurge PPFX::IPfxBaseContext::EndPostEffectScene@<eax>(_DWORD *a1@<ebx>, PPFX::IPfxBaseContext *this, PPFX::CTextureUtil *a3, int a4);
// int __userpurge PPFX::IPfxBaseContext::ApplyEffects@<eax>(_DWORD *a1@<ebx>, PPFX::IPfxBaseContext *this, PPFX::CTextureUtil *a3);
// int __userpurge PPFX::IPfxBaseContext::ApplyGaussianBlurFilter@<eax>(int a1@<ebx>, int a2@<edi>, int a3, float *a4, int a5, __int64 a6, __int64 a7, bool a8);
int __stdcall PPFX::IPfxBaseContext::ApplyApertureFilter(PPFX::IPfxBaseContext *this, __int64 a2, char a3, unsigned int a4, __int64 a5);
int __stdcall PPFX::IPfxBaseContext::ApplyDepthOfFieldFilter(PPFX::IPfxBaseContext *this, int a2, int a3, PPFX::CTextureUtil *a4, __int64 a5, bool a6);
int __stdcall PPFX::IPfxBaseContext::SetFramebuffer(PPFX::IPfxBaseContext *this, const struct PPFX::IPfxBaseRenderToTexture *a2, int a3, const __m128i *a4);
int __stdcall PPFX::IPfxBaseContext::ResolveFramebuffer(PPFX::IPfxBaseContext *this, int a2, char a3);
// int __userpurge PPFX::IPfxBaseContext::SetRenderSceneParameters@<eax>(int a1@<esi>, PPFX::IPfxBaseContext *this, __int64 a3, float a4, float a5, float a6);
// int __userpurge PPFX::IPfxBaseContext::SetRenderScenePerspective@<eax>(int a1@<esi>, PPFX::IPfxBaseContext *this, __int64 a3, float a4);
int __stdcall PPFX::IPfxBaseContext::SetRenderScenePerspectiveByFrustum(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4, float a5);
// int __userpurge PPFX::IPfxBaseContext::SetRenderScenePreviousPerspective@<eax>(int a1@<esi>, PPFX::IPfxBaseContext *this, __int64 a3, float a4);
int __stdcall PPFX::IPfxBaseContext::SetRenderScenePreviousPerspectiveByFrustum(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4, float a5);
void __stdcall PPFX::IPfxBaseContext::GetRenderSceneNear(PPFX::IPfxBaseContext *this);
void __stdcall PPFX::IPfxBaseContext::GetRenderSceneFar(PPFX::IPfxBaseContext *this);
void __stdcall PPFX::IPfxBaseContext::GetRenderSceneVerticalFov(PPFX::IPfxBaseContext *this);
void __stdcall PPFX::IPfxBaseContext::GetRenderScenePreviousNear(PPFX::IPfxBaseContext *this);
void __stdcall PPFX::IPfxBaseContext::GetRenderScenePreviousFar(PPFX::IPfxBaseContext *this);
void __stdcall PPFX::IPfxBaseContext::GetRenderScenePreviousVerticalFov(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetRenderSceneCameraMatrix(PPFX::IPfxBaseContext *this, const float *a2, bool a3);
int __stdcall PPFX::IPfxBaseContext::SetRenderSceneViewMatrix(PPFX::IPfxBaseContext *this, const __m128i *a2, bool a3);
int __stdcall PPFX::IPfxBaseContext::SetRenderScenePreviousCameraMatrix(PPFX::IPfxBaseContext *this, const float *a2, bool a3);
int __stdcall PPFX::IPfxBaseContext::SetRenderScenePreviousViewMatrix(PPFX::IPfxBaseContext *this, const __m128i *a2, bool a3);
int __stdcall PPFX::IPfxBaseContext::SetRenderSceneElapsedTime(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetRenderSceneLuminanceScale(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetRemapCompressionLuminanceScale(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetGlareParameters(PPFX::IPfxBaseContext *this, __int64 a2, enum PPFX::EPFX_GLAREBRIGHTPASS a3, float a4);
int __stdcall PPFX::IPfxBaseContext::SetGlareShape(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_GLARESHAPE a2);
int __stdcall PPFX::IPfxBaseContext::SetGlareShape(PPFX::IPfxBaseContext *this, const __m128i *a2);
struct PPFX::PFX_GLARESHAPEDEF *__stdcall PPFX::IPfxBaseContext::GetGlareShapeDefinition(PPFX::IPfxBaseContext *this, struct PPFX::PFX_GLARESHAPEDEF *a2, unsigned int a3);
int __stdcall PPFX::IPfxBaseContext::SetGlareThresholdSpace(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_DYNAMICRANGESPACE a2);
int __stdcall PPFX::IPfxBaseContext::SetLightShaftEnable(PPFX::IPfxBaseContext *this, bool a2);
char __stdcall PPFX::IPfxBaseContext::GetLightShaftEnable(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetLightShaftParameters(int a1, const __m128i *a2, __int64 a3, int a4, int a5, int a6, int a7, int a8);
int __stdcall PPFX::IPfxBaseContext::SetLightShaftDiffractionRing(int a1, __int64 a2, int a3, int a4, const __m128i *a5);
int __stdcall PPFX::IPfxBaseContext::SetLightShaftPosition(PPFX::IPfxBaseContext *this, __int64 a2);
int __stdcall PPFX::IPfxBaseContext::SetManualMultisampleDownsampleSpace(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_DYNAMICRANGESPACE a2);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldEnable(PPFX::IPfxBaseContext *this, bool a2);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldParameters(PPFX::IPfxBaseContext *this, __int64 a2, enum PPFX::EPFX_DOFAPERTUREPARAM a3, float a4, float a5, float a6);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldByFnumber(PPFX::IPfxBaseContext *this, __int64 a2, float a3);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldByFnumberAdaptive(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldByDiameter(PPFX::IPfxBaseContext *this, __int64 a2, float a3);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldByCoc(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldByBokeh(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldFocusDistance(PPFX::IPfxBaseContext *this, float a2);
// __m128i *__userpurge PPFX::IPfxBaseContext::GetDepthOfFieldFactorScaleOffset@<eax>(char a1@<efl>, int a2, __m128i *a3);
// int __userpurge PPFX::IPfxBaseContext::GetDepthOfFieldFactorScaleOffset@<eax>(char a1@<efl>, PPFX::IPfxBaseContext *this, __m128i *a3);
// __m128i *__userpurge PPFX::IPfxBaseContext::GetDepthFactorScaleOffset@<eax>(char a1@<efl>, int a2, __m128i *a3);
// int __userpurge PPFX::IPfxBaseContext::GetDepthFactorScaleOffset@<eax>(char a1@<efl>, PPFX::IPfxBaseContext *this, __m128i *a3);
// void __userpurge PPFX::IPfxBaseContext::GetDepthFactorBaseDistance(char a1@<efl>, PPFX::IPfxBaseContext *this);
// __m128i *__userpurge PPFX::IPfxBaseContext::GetDepthConversionFactor@<eax>(char a1@<efl>, PPFX::IPfxBaseContext *a2, __m128i *a3, float a4, float a5);
// int __userpurge PPFX::IPfxBaseContext::GetDepthConversionFactor@<eax>(char a1@<efl>, PPFX::IPfxBaseContext *this, __m128i *a3, float a4, float a5);
// double __userpurge PPFX::IPfxBaseContext::GetDepthConversionValue@<st0>(char a1@<efl>, PPFX::IPfxBaseContext *this, float a3, unsigned int a4, float a5);
// int __userpurge PPFX::IPfxBaseContext::GetDepthOfFieldParameters@<eax>(char a1@<efl>, int a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, _DWORD *a7, _DWORD *a8, _DWORD *a9, __m128i *a10);
// void __userpurge PPFX::IPfxBaseContext::GetFocusDistance(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetFocalLength(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetImageSensorHeight(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetApertureFnumber(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetApertureDiameter(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetCircleOfConfusionAtInfinity(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetCircleOfConfusionToScreenRatioAtInfinity(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetCircleOfConfusion(char a1@<efl>, PPFX::IPfxBaseContext *this, float a3);
// void __userpurge PPFX::IPfxBaseContext::GetCircleOfConfusionToScreenRatio(char a1@<efl>, PPFX::IPfxBaseContext *this, float a3);
// void __userpurge PPFX::IPfxBaseContext::GetPermissibleCircleOfConfusion(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetPermissibleCircleOfConfusionToScreenRatio(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetHyperfocalDistance(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetNearFocusDistance(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetFarFocusDistance(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetFrontDepthOfField(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetRearDepthOfField(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetHalfDepthOfFocus(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetImageDistance(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetMagnificationRatio(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetEffectiveFnumber(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetNumericalAperture(char a1@<efl>, PPFX::IPfxBaseContext *this, float a3);
// void __userpurge PPFX::IPfxBaseContext::GetMaximumApertureFnumber(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetApertureOpeningRatio(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetApertureBokehCircularity(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetAiryDiscDiameter(char a1@<efl>, PPFX::IPfxBaseContext *this, __int64 a3);
// void __userpurge PPFX::IPfxBaseContext::GetAiryDiscDiameterToScreenRatio(char a1@<efl>, PPFX::IPfxBaseContext *this, __int64 a3);
// void __userpurge PPFX::IPfxBaseContext::GetLensBarrelObstructionDiameter(char a1@<efl>, PPFX::IPfxBaseContext *this);
// void __userpurge PPFX::IPfxBaseContext::GetLensBarrelObstructionDistance(char a1@<efl>, PPFX::IPfxBaseContext *this);
bool __stdcall PPFX::IPfxBaseContext::GetAsyncDeviceFeedbackAvailability(PPFX::IPfxBaseContext *__hidden this); // weak
int __stdcall PPFX::IPfxBaseContext::InitializeAutoExposure(PPFX::IPfxBaseContext *this, int a2, __int64 a3);
int __stdcall PPFX::IPfxBaseContext::SetAutoExposureAdjustmentReset(PPFX::IPfxBaseContext *this, int a2);
int __stdcall PPFX::IPfxBaseContext::SetAutoExposureEnable(PPFX::IPfxBaseContext *this, int a2, bool a3);
char __stdcall PPFX::IPfxBaseContext::GetAutoExposureEnable(PPFX::IPfxBaseContext *this, int a2);
double __stdcall PPFX::IPfxBaseContext::GetAutoExposureAdjusted(PPFX::IPfxBaseContext *this, int a2);
void __stdcall PPFX::IPfxBaseContext::GetAutoExposureMeteringResult(PPFX::IPfxBaseContext *this, int a2);
int __stdcall PPFX::IPfxBaseContext::SetAutoExposureRange(PPFX::IPfxBaseContext *this, int a2, __int64 a3);
int __stdcall PPFX::IPfxBaseContext::SetAutoExposureMiddleGray(PPFX::IPfxBaseContext *this, int a2, __int64 a3);
int __stdcall PPFX::IPfxBaseContext::SetAutoExposureDelay(PPFX::IPfxBaseContext *this, int a2, enum PPFX::EPFX_AUTOADJUSTDELAYMODE a3, float a4);
int __stdcall PPFX::IPfxBaseContext::SetAutoExposureAdjustment(PPFX::IPfxBaseContext *this, int a2, __int64 a3, float a4, float a5, float a6, float a7, float a8);
int __stdcall PPFX::IPfxBaseContext::SetAutoExposureMeteringArea(PPFX::IPfxBaseContext *this, int a2, __int64 a3, float a4, float a5);
int __stdcall PPFX::IPfxBaseContext::InitializeAutoFocus(PPFX::IPfxBaseContext *this, int a2, unsigned int a3);
int __stdcall PPFX::IPfxBaseContext::SetAutoFocusAdjustmentReset(PPFX::IPfxBaseContext *this, int a2);
int __stdcall PPFX::IPfxBaseContext::SetAutoFocusEnable(PPFX::IPfxBaseContext *this, int a2, bool a3);
char __stdcall PPFX::IPfxBaseContext::GetAutoFocusEnable(PPFX::IPfxBaseContext *this, int a2);
double __stdcall PPFX::IPfxBaseContext::GetAutoFocusDistanceAdjusted(PPFX::IPfxBaseContext *this, int a2);
void __stdcall PPFX::IPfxBaseContext::GetAutoFocusScreenDistance(PPFX::IPfxBaseContext *this, int a2);
int __stdcall PPFX::IPfxBaseContext::SetAutoFocusDistanceRange(PPFX::IPfxBaseContext *this, int a2, __int64 a3);
int __stdcall PPFX::IPfxBaseContext::SetAutoFocusDelay(PPFX::IPfxBaseContext *this, int a2, enum PPFX::EPFX_AUTOADJUSTDELAYMODE a3, float a4);
int __stdcall PPFX::IPfxBaseContext::SetAutoFocusAdjustment(PPFX::IPfxBaseContext *this, int a2, bool a3, __int64 a4);
int __stdcall PPFX::IPfxBaseContext::SetAutoFocusPosition(PPFX::IPfxBaseContext *this, int a2, __int64 a3);
int __stdcall PPFX::IPfxBaseContext::SetFeedbackEnable(PPFX::IPfxBaseContext *this, bool a2);
BOOL __stdcall PPFX::IPfxBaseContext::SetFeedbackWeight(PPFX::IPfxBaseContext *this, __int64 a2, float a3);
int __stdcall PPFX::IPfxBaseContext::SetFeedbackMatrixAspectRatio(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetTonemapResampleFilter(PPFX::IPfxBaseContext *this, unsigned int a2, float a3);
int __stdcall PPFX::IPfxBaseContext::SetDiaphragmRotate(PPFX::IPfxBaseContext *this, __int64 a2, enum PPFX::EPFX_DIAPHRAGMROTATE a3);
int __stdcall PPFX::IPfxBaseContext::SetTonemapParameters(PPFX::IPfxBaseContext *this, __int64 a2, enum PPFX::EPFX_TONEMAP a3, float a4, float a5);
int __stdcall PPFX::IPfxBaseContext::SetTonemapExposure(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetTonemapFunction(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_TONEMAP a2, float a3);
int __stdcall PPFX::IPfxBaseContext::SetTonemapBackend(PPFX::IPfxBaseContext *this, __int64 a2);
int __stdcall PPFX::IPfxBaseContext::SetTonemapImageSensorSensitivity(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4, float a5, float a6, float a7, float a8, unsigned int a9);
int __stdcall PPFX::IPfxBaseContext::SetRenderSceneColorSpace(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_COLORSPACE a2);
int __stdcall PPFX::IPfxBaseContext::SetTonemapColorSpace(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_COLORSPACE a2);
int __stdcall PPFX::IPfxBaseContext::SetTonemapAlphaScale(PPFX::IPfxBaseContext *this, int a2);
int __stdcall PPFX::IPfxBaseContext::SetTonemapAlphaFactor(PPFX::IPfxBaseContext *this, __int64 a2, __int64 a3);
int __stdcall PPFX::IPfxBaseContext::SetColorGradingLutEnable(PPFX::IPfxBaseContext *this, bool a2);
char __stdcall PPFX::IPfxBaseContext::GetColorGradingLutEnable(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetColorGradingLutSource(PPFX::IPfxBaseContext *this, struct ID3D11ShaderResourceView *a2, unsigned int a3, enum DXGI_FORMAT a4);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldDepthRemapLutEnable(PPFX::IPfxBaseContext *this, bool a2);
char __stdcall PPFX::IPfxBaseContext::GetDepthOfFieldRemapLutEnable(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldDepthRemapLutSource(PPFX::IPfxBaseContext *this, const struct PPFX::IPfxBaseRenderToTexture *a2);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldDepthRemapLutSource(PPFX::IPfxBaseContext *this, struct ID3D11ShaderResourceView *a2, unsigned int a3, unsigned int a4, GPUUTIL *a5);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldDepthRemapLutParameters(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_DEPTHFACTORFORMAT a2, enum PPFX::EPFX_DEPTHFACTORFORMAT a3, enum PPFX::EPFX_DEPTHFACTORSOURCE a4, float a5);
int __stdcall PPFX::IPfxBaseContext::SetCharacteristicCurveParameters(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetVignetteParameters(PPFX::IPfxBaseContext *this, __int64 a2);
int __stdcall PPFX::IPfxBaseContext::SetVignetteByOptics(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4, float a5, bool a6, bool a7);
int __stdcall PPFX::IPfxBaseContext::SetVignetteByViewport(PPFX::IPfxBaseContext *this, __int64 a2, float a3);
int __stdcall PPFX::IPfxBaseContext::SetLensDistortionEnable(PPFX::IPfxBaseContext *this, bool a2);
char __stdcall PPFX::IPfxBaseContext::GetLensDistortionEnable(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetLensDistortionParametersUniformFov(PPFX::IPfxBaseContext *this, __int64 a2);
int __stdcall PPFX::IPfxBaseContext::SetLensDistortionParametersAdaptive(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetLensDistortionParametersAdaptiveBarrelPincushion(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4, float a5);
int __stdcall PPFX::IPfxBaseContext::SetLensDistortionFovBase(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_DISTORTIONFOVBASE a2, float a3);
int __stdcall PPFX::IPfxBaseContext::SetLensDistortionEdge(PPFX::IPfxBaseContext *this, __int64 a2);
int __stdcall PPFX::IPfxBaseContext::SetImageSensorNoiseEnable(PPFX::IPfxBaseContext *this, bool a2);
char __stdcall PPFX::IPfxBaseContext::GetImageSensorNoiseEnable(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetImageSensorNoiseParameters(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4, float a5);
int __stdcall PPFX::IPfxBaseContext::SetChromaticAberrationEnable(PPFX::IPfxBaseContext *this, bool a2);
char __stdcall PPFX::IPfxBaseContext::GetChromaticAberrationEnable(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetChromaticAberrationParameters(int a1, int a2, _DWORD *a3, _DWORD *a4);
int __stdcall PPFX::IPfxBaseContext::SetApertureAiryDiscEnable(PPFX::IPfxBaseContext *this, bool a2);
char __stdcall PPFX::IPfxBaseContext::GetApertureAiryDiscEnable(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetApertureAiryDiscParameters(PPFX::IPfxBaseContext *this, __int64 a2);
int __stdcall PPFX::IPfxBaseContext::SetAntialiasEnable(PPFX::IPfxBaseContext *this, bool a2);
char __stdcall PPFX::IPfxBaseContext::GetAntialiasEnable(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetAntialiasFalloffDistance(PPFX::IPfxBaseContext *this, __int64 a2);
int __stdcall PPFX::IPfxBaseContext::SetGaussianBlurEnable(PPFX::IPfxBaseContext *this, bool a2);
char __stdcall PPFX::IPfxBaseContext::GetGaussianBlurEnable(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetGaussianBlurParameters(int a1, const __m128i *a2, int a3);
int __stdcall PPFX::IPfxBaseContext::SetGaussianBlurWrapMode(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_SAMPLEWRAPMODE a2);
int __stdcall PPFX::IPfxBaseContext::SetMotionBlurEnable(PPFX::IPfxBaseContext *this, bool a2);
char __stdcall PPFX::IPfxBaseContext::GetMotionBlurEnable(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetMotionBlurMode(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MOTIONBLURMODE a2);
int __stdcall PPFX::IPfxBaseContext::GetMotionBlurMode(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetMotionBlurBidirectionalBlurPermission(PPFX::IPfxBaseContext *this, bool a2);
char __stdcall PPFX::IPfxBaseContext::GetMotionBlurBidirectionalBlurPermission(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetMotionBlurParameters(PPFX::IPfxBaseContext *this, __int64 a2, int a3, int a4, float a5);
int __stdcall PPFX::IPfxBaseContext::SetMotionBlurFalloffDistance(PPFX::IPfxBaseContext *this, __int64 a2);
int __stdcall PPFX::IPfxBaseContext::SetMotionBlurThreshold(PPFX::IPfxBaseContext *this, __int64 a2, bool a3);
int __stdcall PPFX::IPfxBaseContext::SetMotionBlurVelocitySource(int a1, int a2, PPFX::IPfxInterface *a3, int a4, _DWORD *a5, char a6);
int __stdcall PPFX::IPfxBaseContext::SetMotionBlurVelocitySource(int a1, int a2, struct ID3D11ShaderResourceView *a3, unsigned int a4, unsigned int a5, GPUUTIL *a6, int a7, _DWORD *a8, char a9);
int __stdcall PPFX::IPfxBaseContext::SetMotionBlurVelocityMaskThreshold(PPFX::IPfxBaseContext *this, __int64 a2, float a3);
int __stdcall PPFX::IPfxBaseContext::SetAmbientOcclusionEnable(PPFX::IPfxBaseContext *this, bool a2);
char __stdcall PPFX::IPfxBaseContext::GetAmbientOcclusionEnable(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetAmbientOcclusionParameters(PPFX::IPfxBaseContext *this, int a2, __int64 a3, float a4, float a5, float a6);
int __stdcall PPFX::IPfxBaseContext::SetPostBilateralParameters(PPFX::IPfxBaseContext *this, __int64 a2, float a3, int a4);
int __stdcall PPFX::IPfxBaseContext::SetNormalSource(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_NORMALSOURCE a2, const struct PPFX::IPfxBaseRenderToTexture *a3, enum PPFX::EPFX_NORMALFORMAT a4, bool a5);
int __stdcall PPFX::IPfxBaseContext::SetNormalSource(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_NORMALSOURCE a2, struct ID3D11ShaderResourceView *a3, unsigned int a4, unsigned int a5, GPUUTIL *a6, enum PPFX::EPFX_NORMALFORMAT a7, bool a8);
int __stdcall PPFX::IPfxBaseContext::SetHeatShimmerParticleEnable(PPFX::IPfxBaseContext *this, bool a2);
char __stdcall PPFX::IPfxBaseContext::GetHeatShimmerParticleEnable(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetHeatShimmerParticleArray(PPFX::IPfxBaseContext *this, int a2, const struct PPFX::PFX_PARTICLE_HEATSHIMMER *a3, bool a4);
int __stdcall PPFX::IPfxBaseContext::SetHeatShimmerParticleParameters(int a1, int a2, int a3, const __m128i *a4, _DWORD *a5, int a6);
int __stdcall PPFX::IPfxBaseContext::SetHeatShimmerParticleFractalOctave(PPFX::IPfxBaseContext *this, int a2, float a3, float a4);
int __stdcall PPFX::IPfxBaseContext::SetHeatShimmerParticleFalloffDistance(PPFX::IPfxBaseContext *this, __int64 a2, bool a3);
int __stdcall PPFX::IPfxBaseContext::SetHeatShimmerParticleColor(PPFX::IPfxBaseContext *this, float a2, float a3, float a4);
int __stdcall PPFX::IPfxBaseContext::SetHeatShimmerParticleBlend(PPFX::IPfxBaseContext *this, bool a2, float a3);
int __stdcall PPFX::IPfxBaseContext::SetDepthFactorRange(PPFX::IPfxBaseContext *this, __int64 a2);
int __stdcall PPFX::IPfxBaseContext::SetDepthFactorRangeFloatOptimizeEnable(PPFX::IPfxBaseContext *this, bool a2);
int __stdcall PPFX::IPfxBaseContext::GetDeviceContext(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetDeviceFramebufferWidth(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetDeviceFramebufferHeight(PPFX::IPfxBaseContext *this);
// int __userpurge PPFX::IPfxBaseContext::SetRenderSceneViewportScale@<eax>(int a1@<ebx>, PPFX::IPfxBaseContext *this, __int64 a3, float a4, float a5);
int __stdcall PPFX::IPfxBaseContext::GetRenderSceneWidth(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetRenderSceneHeight(PPFX::IPfxBaseContext *this);
void __stdcall PPFX::IPfxBaseContext::GetAspectRatio(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetTonemapViewportScale(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4);
int __stdcall PPFX::IPfxBaseContext::SetTonemapDestination(PPFX::IPfxBaseContext *this, const struct PPFX::IPfxBaseRenderToTexture *a2);
int __stdcall PPFX::IPfxBaseContext::SetTonemapDestination(PPFX::IPfxBaseContext *this, struct ID3D11View *a2, unsigned int a3, unsigned int a4, enum DXGI_FORMAT a5, int a6, int a7);
int __stdcall PPFX::IPfxBaseContext::SetDestination(PPFX::IPfxBaseContext *this, struct ID3D11View *a2, unsigned int a3, unsigned int a4, enum DXGI_FORMAT a5, int a6, int a7);
int __stdcall PPFX::IPfxBaseContext::SetTonemapBlend(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_BLENDMODE a2);
int __stdcall PPFX::IPfxBaseContext::SetEffectSource(PPFX::IPfxBaseContext *this, const struct PPFX::IPfxBaseRenderToTexture *a2);
int __stdcall PPFX::IPfxBaseContext::SetEffectSource(PPFX::IPfxBaseContext *this, struct ID3D11ShaderResourceView *a2, unsigned int a3, unsigned int a4, GPUUTIL *a5);
int __stdcall PPFX::IPfxBaseContext::SetSource(PPFX::IPfxBaseContext *this, struct ID3D11ShaderResourceView *a2, unsigned int a3, unsigned int a4, GPUUTIL *a5);
int __stdcall PPFX::IPfxBaseContext::SetDepthFactorSource(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_DEPTHFACTORSOURCE a2, const struct PPFX::IPfxBaseRenderToTexture *a3, enum PPFX::EPFX_DEPTHFACTORFORMAT a4, __int64 a5);
int __stdcall PPFX::IPfxBaseContext::SetDepthFactorSource(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_DEPTHFACTORSOURCE a2, struct ID3D11ShaderResourceView *a3, unsigned int a4, unsigned int a5, GPUUTIL *a6, enum PPFX::EPFX_DEPTHFACTORFORMAT a7, __int64 a8);
int __stdcall PPFX::IPfxBaseContext::SetDepthSource(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_DEPTHFACTORSOURCE a2, struct ID3D11ShaderResourceView *a3, unsigned int a4, unsigned int a5, GPUUTIL *a6, enum PPFX::EPFX_DEPTHFACTORFORMAT a7, __int64 a8);
unsigned int __stdcall PPFX::IPfxBaseContext::SetGlareModulatorSource(PPFX::IPfxBaseContext *this, unsigned int a2, const struct PPFX::IPfxBaseRenderToTexture *a3);
int __stdcall PPFX::IPfxBaseContext::SetGlareModulatorSource(PPFX::IPfxBaseContext *this, unsigned int a2, struct ID3D11ShaderResourceView *a3, unsigned int a4, unsigned int a5, GPUUTIL *a6);
unsigned int __stdcall PPFX::IPfxBaseContext::SetEffectMaskColorSource(PPFX::IPfxBaseContext *this, unsigned int a2, const struct PPFX::IPfxBaseRenderToTexture *a3);
int __stdcall PPFX::IPfxBaseContext::SetEffectMaskColorSource(PPFX::IPfxBaseContext *this, unsigned int a2, struct ID3D11ShaderResourceView *a3, unsigned int a4, unsigned int a5, GPUUTIL *a6);
unsigned int __stdcall PPFX::IPfxBaseContext::SetEffectMaskAlphaSource(PPFX::IPfxBaseContext *this, unsigned int a2, const struct PPFX::IPfxBaseRenderToTexture *a3);
int __stdcall PPFX::IPfxBaseContext::SetEffectMaskAlphaSource(PPFX::IPfxBaseContext *this, unsigned int a2, struct ID3D11ShaderResourceView *a3, unsigned int a4, unsigned int a5, GPUUTIL *a6);
int __stdcall PPFX::IPfxBaseContext::SetAlphaOutputParameters(PPFX::IPfxBaseContext *this, enum PPFX::EPFXALPHAOUTPUT a2, float a3);
int __stdcall PPFX::IPfxBaseContext::SetStaticSceneSource(PPFX::IPfxBaseContext *this, unsigned int a2, unsigned int a3, enum DXGI_FORMAT a4, struct PPFX::IGPUTexture *a5);
// int __userpurge PPFX::IPfxBaseContext::ApplyStaticSceneEffects@<eax>(int a1@<ebx>, int a2@<edi>, PPFX::IPfxBaseContext *this, float a4, __int64 a5, bool a6, PPFX::CTextureUtil *a7);
int __stdcall PPFX::IPfxBaseContext::UnregisterDeviceSurface(PPFX::IPfxBaseContext *this, struct ID3D11View *a2);
int __stdcall PPFX::IPfxBaseContext::UnregisterDeviceTexture(PPFX::IPfxBaseContext *this, struct ID3D11ShaderResourceView *a2);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldBackgroundMaskThreshold(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldRemap(PPFX::IPfxBaseContext *this, float a2);
double __stdcall PPFX::IPfxBaseContext::GetDepthOfFieldRemap(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetApertureFilterLevelVisualize(PPFX::IPfxBaseContext *this, bool a2);
int __stdcall PPFX::IPfxBaseContext::SetApertureFilterResultBlur(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldApertureNumLevels(PPFX::IPfxBaseContext *this, int a2, int a3);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldApertureDistanceRange(PPFX::IPfxBaseContext *this, __int64 a2);
int __stdcall PPFX::IPfxBaseContext::SetApertureStopUnit(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetMaximumAperture(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetMaximumApertureAdaptive(PPFX::IPfxBaseContext *this, __int64 a2, float a3);
int __stdcall PPFX::IPfxBaseContext::SetMaximumApertureAdaptiveByFocalLength(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4, float a5, float a6);
int __stdcall PPFX::IPfxBaseContext::SetMaximumApertureAdaptiveByFov(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4, float a5, float a6);
int __stdcall PPFX::IPfxBaseContext::SetMaximumApertureLimitationEnable(PPFX::IPfxBaseContext *this, bool a2);
int __stdcall PPFX::IPfxBaseContext::SetApertureBokehShape(PPFX::IPfxBaseContext *this, int a2, __int64 a3);
int __stdcall PPFX::IPfxBaseContext::SetApertureBokehAberration(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_BOKEHABERRATIONTYPE a2, __int64 a3, float a4, float a5);
int __stdcall PPFX::IPfxBaseContext::SetApertureBokehAnamorphicFocusEnable(PPFX::IPfxBaseContext *this, bool a2);
int __stdcall PPFX::IPfxBaseContext::SetApertureBokehAnamorphicFocusParameters(PPFX::IPfxBaseContext *this, float a2);
bool __stdcall PPFX::IPfxBaseContext::GetGlareResultBlurAvailability(PPFX::IPfxBaseContext *__hidden this); // weak
int __stdcall PPFX::IPfxBaseContext::SetGlareResultBlur(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetGlareBloomNumLevels(PPFX::IPfxBaseContext *this, int a2);
int __stdcall PPFX::IPfxBaseContext::SetGlareGenerationRangeScale(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetGlareBloomLuminanceGamma(PPFX::IPfxBaseContext *this, float a2);
BOOL __stdcall PPFX::IPfxBaseContext::SetGlareStarSoftness(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetGlareStarLengthFovDependence(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetGlareBloomGaussianRadiusScale(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetGlareBloomFilterThreshold(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetGlareStarFilterThreshold(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::SetRenderSceneDepthReverse(PPFX::IPfxBaseContext *this, bool a2, bool a3);
int __stdcall PPFX::IPfxBaseContext::SetGlareAnamorphicLensFlareEnable(PPFX::IPfxBaseContext *this, bool a2);
char __stdcall PPFX::IPfxBaseContext::GetGlareAnamorphicLensFlareEnable(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetGlareAnamorphicLensFlareParameters(PPFX::IPfxBaseContext *this, __int64 a2);
int __stdcall PPFX::IPfxBaseContext::SetGlareAnamorphicLensFlareColor(int a1, const __m128i *a2, const __m128i *a3);
int __stdcall PPFX::IPfxBaseContext::SetGlareGhostConcentricDistortion(PPFX::IPfxBaseContext *this, float a2);
void __stdcall PPFX::IPfxBaseContext::GetGlareGhostConcentricDistortion(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::InitializeColorMatrix(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::SetColorMatrix(PPFX::IPfxBaseContext *this, const __m128i *a2);
int __stdcall PPFX::IPfxBaseContext::GetColorMatrix(PPFX::IPfxBaseContext *this, __m128i *a2);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrix(PPFX::IPfxBaseContext *this, float *a2);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixHue(PPFX::IPfxBaseContext *this, int a2);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixGrayscale(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixNegative(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixSaturation(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixSaturation(PPFX::IPfxBaseContext *this, __int64 a2, float a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixBrightness(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixModulation(PPFX::IPfxBaseContext *this, __int64 a2, float a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixContrast(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixContrast(PPFX::IPfxBaseContext *this, __int64 a2, float a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixBias(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixBias(PPFX::IPfxBaseContext *this, __int64 a2, float a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixHsb(PPFX::IPfxBaseContext *this, __int64 a2, float a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixMonotone(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixMonotone(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4, float a5);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixSepiaTone(PPFX::IPfxBaseContext *this, float a2);
int __stdcall PPFX::IPfxBaseContext::MultiplyColorMatrixFadeColor(PPFX::IPfxBaseContext *this, __int64 a2, float a3, float a4);
int __stdcall PPFX::IPfxBaseContext::InitializeMatrix(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2);
int __stdcall PPFX::IPfxBaseContext::SetMatrix(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, const __m128i *a3);
int __stdcall PPFX::IPfxBaseContext::GetMatrix(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __m128i *a3);
__m128i *__stdcall PPFX::IPfxBaseContext::GetMatrix(int a1, __m128i *a2, int a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrix(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, float *a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorHue(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorGrayscale(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorNegative(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorSaturation(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorSaturation(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, float a4);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorBrightness(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorModulation(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, float a4);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorModulationHue(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, float a4, float a5);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorContrast(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorContrast(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, float a4);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorBias(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorBias(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, float a4);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorBiasHsi(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, float a4, float a5);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorHsb(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, float a4, float a5);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorMonotone(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, int a4, float a5);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorMonotone(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, int a4, float a5, float a6);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorMonotoneHue(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, __int64 a4);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorMonotoneHue(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, float a4, float a5, char a6);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorSepiaTone(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorFade(PPFX::IPfxBaseContext *this, float a2, __int64 a3, float a4, float a5);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorTemperature(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixColorWhiteBalance(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3);
// int __userpurge PPFX::IPfxBaseContext::MultiplyMatrixRotationX@<eax>(int a1@<edi>, PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a3, float a4);
// int __userpurge PPFX::IPfxBaseContext::MultiplyMatrixRotationY@<eax>(int a1@<edi>, PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a3, float a4);
// int __userpurge PPFX::IPfxBaseContext::MultiplyMatrixRotationZ@<eax>(int a1@<edi>, PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a3, float a4);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixRotationAxis(int a1, int a2, int a3, int a4);
// int __userpurge PPFX::IPfxBaseContext::MultiplyMatrixRotationAxis@<eax>(int a1@<edi>, PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a3, __int64 a4, float a5, float a6);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixScaling(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixScaling(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, float a4);
int __stdcall PPFX::IPfxBaseContext::MultiplyMatrixTranslation(PPFX::IPfxBaseContext *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, float a4);
int __stdcall PPFX::IPfxBaseContext::GetDynamicRangeMode(PPFX::IPfxBaseContext *this);
BOOL __stdcall PPFX::IPfxBaseContext::GetDynamicRangeModeEnable(PPFX::IPfxBaseContext *this, unsigned __int16 a2);
int __stdcall PPFX::IPfxBaseContext::GetGlarePrecisionMode(PPFX::IPfxBaseContext *this);
BOOL __stdcall PPFX::IPfxBaseContext::GetGlarePrecisionModeEnable(PPFX::IPfxBaseContext *this, unsigned __int8 a2);
int __stdcall PPFX::IPfxBaseContext::SetDepthOfFieldEdgeQuality(PPFX::IPfxBaseContext *this, const char *a2);
char __stdcall PPFX::IPfxBaseContext::GetDepthOfFieldEdgeQualityAvailability(PPFX::IPfxBaseContext *this, const char *a2);
int __stdcall PPFX::IPfxBaseContext::GetDepthOfFieldEdgeQuality(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetInitialDepthOfFieldEdgeQuality(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetApertureShape(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetEffectBufferFormat(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetRenderSceneFormat(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetDepthStencilFormat(PPFX::IPfxBaseContext *this);
BOOL __stdcall PPFX::IPfxBaseContext::GetTilingEnable(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetTilingNumRects(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetTilingRectArray(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetTilingFramebufferWidth(PPFX::IPfxBaseContext *this);
int __stdcall PPFX::IPfxBaseContext::GetTilingFramebufferHeight(PPFX::IPfxBaseContext *this);
PPFX::IPfxBaseContext *__thiscall PPFX::IPfxBaseContext::IPfxBaseContext(PPFX::IPfxBaseContext *this);
void __fastcall PPFX::IPfxBaseContext::~IPfxBaseContext(PPFX::IPfxBaseContext *this, PPFX::CTextureUtil *a2);
// char __usercall PPFX::ppfxInitialize@<al>(PPFX::CTextureUtil *a1@<edx>, int a2@<ecx>, int a3@<ebx>, const struct PPFX::PFX_DEVICEPARAM *this, __int64 a5, __int64 a6);
char __fastcall PPFX::ppfxUninitialize(int a1, PPFX::CTextureUtil *a2);
char __cdecl PPFX::ppfxBindFramebuffer(PPFX *this, const __m128i *a2, __int64 a3);
// char __usercall PPFX::ppfxApplyEffects@<al>(_DWORD *a1@<ebx>);
// char __usercall PPFX::ppfxSetPerspectiveState@<al>(int a1@<esi>, __int64 this, float a3);
char __cdecl PPFX::ppfxSetOpticalState(__int64 this, float a2);
char __cdecl PPFX::ppfxSetTonemappingState(PPFX *this, char a2, float a3, enum PPFX::EPFX_TONEMAP a4, float a5, float a6, __int64 a7, char a8);
char __cdecl PPFX::ppfxSetGlareState(__int64 this);
_DWORD *PPFX::IPfxContext_Dx11::Instantiate();
int __stdcall PPFX::IPfxContext_Dx11::SetDeviceContext_Dx11(PPFX::IPfxContext_Dx11 *this, struct ID3D11DeviceContext *a2);
int __stdcall PPFX::IPfxContext_Dx11::GetMultisampleCount_Dx11(PPFX::IPfxContext_Dx11 *this);
int __stdcall PPFX::IPfxContext_Dx11::GetMultisampleQuality_Dx11(PPFX::IPfxContext_Dx11 *this);
PPFX::IPfxContext_Dx11 *__thiscall PPFX::IPfxContext_Dx11::IPfxContext_Dx11(PPFX::IPfxContext_Dx11 *this);
void __fastcall PPFX::IPfxContext_Dx11::~IPfxContext_Dx11(PPFX::IPfxContext_Dx11 *this, PPFX::CTextureUtil *a2);
// double __userpurge PPFX::UTIL::GetOpticalEffectiveFov@<st0>(PPFX::UTIL *this, float a2, float a3, float a4, float a5);
// double __userpurge PPFX::UTIL::GetOpticalEffectiveTangentFovScale@<st0>(PPFX::UTIL *this, float a2, float a3, float a4, float a5);
// void __userpurge PPFX::UTIL::GetExposureFnumberShutterSpeed(PPFX::UTIL *this, float *a2, float *a3, float a4, enum PPFX::EPFX_AUTOEXPOSUREMODE a5, float a6, float a7, float a8, float a9, float a10, float a11, float a12);
// float **__userpurge PPFX::UTIL::GetExposureApertureTimeValue@<eax>(float **this, float **a2, float *a3, int a4, enum PPFX::EPFX_AUTOEXPOSUREMODE a5, float a6, float a7, float a8, float a9, float a10, float a11, float a12);
// float *__userpurge PPFX::UTIL::GetMatrixFrustumNearFarFov@<eax>(PPFX::UTIL *this, const float *a2, _DWORD *a3, float *a4, float *a5, float *a6);
// float *__userpurge PPFX::UTIL::GetMatrixFrustumNearFarTangent@<eax>(PPFX::UTIL *this, const float *a2, float *a3, float *a4, float *a5, float *a6, float *a7, float *a8, float *a9);
// PPFX *__userpurge PPFX::SetCallbackConsoleOutputter@<eax>(PPFX *this, void (__stdcall *a2)(const char *));
int PPFX::GetDevice();
int __thiscall PPFX::GetDeviceBackBuffer(void *ecx0);
int PPFX::GetPostEffect();
int PPFX::GetRenderBuffer();
int PPFX::GetRenderGlare();
int PPFX::GetDepthOfField();
int PPFX::ppfxPrintf(PPFX *this, const char *ArgList, ...);
int PPFX::GetStaticPostEffect();
void *PPFX::UTIL::__GetUsedTechniqueNames();
int PPFX::UTIL::__GetNumUsedTechniques();
void *PPFX::UTIL::__GetUsedVertexProgramNames();
int PPFX::UTIL::__GetNumUsedVertexPrograms();
void *PPFX::UTIL::__GetUsedFragmentProgramNames();
int PPFX::UTIL::__GetNumUsedFragmentPrograms();
int PPFX::ppfxSnprintf(PPFX *this, size_t BufferCount, char *Format, const char *ArgList, ...);
double __cdecl PPFX::Clamp<float>(int a1, int a2, int a3);
float **__cdecl PPFX::GPUMath_ApertureTimeValueFromExposureValue<float>(float **a1, float **a2, float *a3, int a4, float *a5, float *a6, float *a7, float *a8, float *a9, float *a10, float *a11);
void __cdecl PPFX::GPUMath_FnumberShutterSpeedFromExposure<float>(float *a1, float *a2, float a3, float a4, int a5, float *a6, float *a7, float a8, float a9, int a10, int a11);
double __cdecl PPFX::GPUMath_LensFocalLengthFromFov<float>(int a1, float *a2, float *a3);
_DWORD *__thiscall PPFX::COLORT4<float>::COLORT4<float>(_DWORD *this, _DWORD *a2, _DWORD *a3, _DWORD *a4);
PPFX::IPfxBaseContext *__fastcall PPFX::IPfxBaseContext::`vector deleting destructor'(PPFX::IPfxBaseContext *this, PPFX::CTextureUtil *a2, char a3);
PPFX::IPfxContext_Dx11 *__fastcall PPFX::IPfxContext_Dx11::`scalar deleting destructor'(PPFX::IPfxContext_Dx11 *this, PPFX::CTextureUtil *a2, char a3);
__m128i *__thiscall PPFX::CPostEffect::GetEffectiveUserDepthFactorStoreScaleOffset(int this, __m128i *a2);
bool __thiscall PPFX::CPostEffect::IsDepthFactorSourceUserTexture(PPFX::CPostEffect *__hidden this); // weak
int __thiscall PPFX::CPostEffect::SetHeatShimmerParticleArray(PPFX::CPostEffect *this, int a2, const struct PPFX::PFX_PARTICLE_HEATSHIMMER *a3, bool a4);
int __thiscall PPFX::CPostEffect::SetHeatShimmerParticleParameters(int this, int a2, int a3, const __m128i *a4, _DWORD *a5, int a6);
__int16 __cdecl PPFX::HALF::float_GPUMath_HALF_UINT16(int a1);
unsigned int __stdcall PPFX::IPfxInterface::AddRef(PPFX::IPfxInterface *__hidden this); // weak
unsigned int __stdcall PPFX::IPfxInterface::Release(PPFX::IPfxInterface *__hidden this); // weak
unsigned int __stdcall PPFX::IPfxInterface::GetRefCount(PPFX::IPfxInterface *__hidden this); // weak
BOOL __stdcall PPFX::IPfxInterface::GetState(PPFX::IPfxInterface *this);
bool __stdcall PPFX::IPfxInterface::GetStateAvailability(PPFX::IPfxInterface *__hidden this); // weak
void **__stdcall PPFX::IPfxInterface::RefInstance(PPFX::IPfxInterface *__hidden this); // weak
void **__stdcall PPFX::IPfxInterface::RefInstance(PPFX::IPfxInterface *this);
PPFX::IPfxInterface *__thiscall PPFX::IPfxInterface::IPfxInterface(PPFX::IPfxInterface *this);
void __thiscall PPFX::IPfxInterface::~IPfxInterface(PPFX::IPfxInterface *__hidden this); // weak
int __stdcall PPFX::IPfxInterface::Uninstantiate(struct PPFX::IPfxInterface *a1);
PPFX::IPfxInterface *__thiscall PPFX::IPfxInterface::`vector deleting destructor'(PPFX::IPfxInterface *this, char a2);
_DWORD *PPFX::IPfxBaseRenderToTexture::Instantiate();
int __stdcall PPFX::IPfxBaseRenderToTexture::Initialize(PPFX::IPfxBaseRenderToTexture *this, PPFX::IPfxInterface *a2, __int64 a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9);
int __stdcall PPFX::IPfxBaseRenderToTexture::Uninitialize(PPFX::IPfxBaseRenderToTexture *this);
bool __stdcall PPFX::IPfxBaseRenderToTexture::GetRenderSurfaceStability(PPFX::IPfxBaseRenderToTexture *__hidden this); // weak
int __stdcall PPFX::IPfxBaseRenderToTexture::GetWidth(PPFX::IPfxBaseRenderToTexture *this);
int __stdcall PPFX::IPfxBaseRenderToTexture::GetHeight(PPFX::IPfxBaseRenderToTexture *this);
int __stdcall PPFX::IPfxBaseRenderToTexture::GetFormat(PPFX::IPfxBaseRenderToTexture *this);
int __stdcall PPFX::IPfxBaseRenderToTexture::GetRenderTargetFormat(PPFX::IPfxBaseRenderToTexture *this);
int __stdcall PPFX::IPfxBaseRenderToTexture::GetGpuWidth(PPFX::IPfxBaseRenderToTexture *this);
int __stdcall PPFX::IPfxBaseRenderToTexture::GetGpuHeight(PPFX::IPfxBaseRenderToTexture *this);
int __stdcall PPFX::IPfxBaseRenderToTexture::GetMultisampleNumSamples(PPFX::IPfxBaseRenderToTexture *this);
PPFX::IPfxBaseRenderToTexture *__stdcall PPFX::IPfxBaseRenderToTexture::GetMultisampleQuality(PPFX::IPfxBaseRenderToTexture *this);
int __stdcall PPFX::IPfxBaseRenderToTexture::GetGpuTexture(PPFX::IPfxBaseRenderToTexture *this);
int __stdcall PPFX::IPfxBaseRenderToTexture::GetGpuTextureSurface(PPFX::IPfxBaseRenderToTexture *this);
int __stdcall PPFX::IPfxBaseRenderToTexture::GetGpuRenderSurface(PPFX::IPfxBaseRenderToTexture *this);
double __stdcall PPFX::IPfxBaseRenderToTexture::GetTextureCoordU(PPFX::IPfxBaseRenderToTexture *this, float a2);
double __stdcall PPFX::IPfxBaseRenderToTexture::GetTextureCoordV(PPFX::IPfxBaseRenderToTexture *this, float a2);
double __stdcall PPFX::IPfxBaseRenderToTexture::GetTextureCoordByNormalizedU(PPFX::IPfxBaseRenderToTexture *this, float a2);
double __stdcall PPFX::IPfxBaseRenderToTexture::GetTextureCoordByNormalizedV(PPFX::IPfxBaseRenderToTexture *this, float a2);
BOOL __stdcall PPFX::IPfxBaseRenderToTexture::GetTilingEnable(PPFX::IPfxBaseRenderToTexture *this);
int __stdcall PPFX::IPfxBaseRenderToTexture::GetTilingNumRects(PPFX::IPfxBaseRenderToTexture *this);
int __stdcall PPFX::IPfxBaseRenderToTexture::GetTilingRectArray(PPFX::IPfxBaseRenderToTexture *this);
int __stdcall PPFX::IPfxBaseRenderToTexture::GetTilingFramebufferWidth(PPFX::IPfxBaseRenderToTexture *this);
int __stdcall PPFX::IPfxBaseRenderToTexture::GetTilingFramebufferHeight(PPFX::IPfxBaseRenderToTexture *this);
int __stdcall PPFX::IPfxBaseRenderToTexture::Initialize(PPFX::IPfxBaseRenderToTexture *this, struct PPFX::IPfxBaseContext *a2, _DWORD *a3);
PPFX::IPfxBaseRenderToTexture *__thiscall PPFX::IPfxBaseRenderToTexture::IPfxBaseRenderToTexture(PPFX::IPfxBaseRenderToTexture *this);
void __thiscall PPFX::IPfxBaseRenderToTexture::~IPfxBaseRenderToTexture(PPFX::IPfxBaseRenderToTexture *__hidden this); // weak
_DWORD *PPFX::IPfxRenderToTexture_Dx11::Instantiate();
int __stdcall PPFX::IPfxRenderToTexture_Dx11::GetGpuTexture_Dx11(PPFX::IPfxRenderToTexture_Dx11 *this);
int __stdcall PPFX::IPfxRenderToTexture_Dx11::GetGpuTextureSurface_Dx11(PPFX::IPfxRenderToTexture_Dx11 *this);
int __stdcall PPFX::IPfxRenderToTexture_Dx11::GetGpuRenderSurface_Dx11(PPFX::IPfxRenderToTexture_Dx11 *this);
int __stdcall PPFX::IPfxRenderToTexture_Dx11::GetGpuTextureResource_Dx11(PPFX::IPfxRenderToTexture_Dx11 *this);
int __stdcall PPFX::IPfxRenderToTexture_Dx11::GetGpuRenderResource_Dx11(PPFX::IPfxRenderToTexture_Dx11 *this);
int __stdcall PPFX::IPfxRenderToTexture_Dx11::GetMultisampleCount_Dx11(PPFX::IPfxRenderToTexture_Dx11 *this);
int __stdcall PPFX::IPfxRenderToTexture_Dx11::GetMultisampleQuality_Dx11(PPFX::IPfxRenderToTexture_Dx11 *this);
PPFX::IPfxRenderToTexture_Dx11 *__thiscall PPFX::IPfxRenderToTexture_Dx11::IPfxRenderToTexture_Dx11(PPFX::IPfxRenderToTexture_Dx11 *this);
void __thiscall PPFX::IPfxRenderToTexture_Dx11::~IPfxRenderToTexture_Dx11(PPFX::IPfxRenderToTexture_Dx11 *__hidden this); // weak
PPFX::IPfxBaseRenderToTexture *__thiscall PPFX::IPfxBaseRenderToTexture::`scalar deleting destructor'(PPFX::IPfxBaseRenderToTexture *this, char a2);
PPFX::IPfxRenderToTexture_Dx11 *__thiscall PPFX::IPfxRenderToTexture_Dx11::`vector deleting destructor'(PPFX::IPfxRenderToTexture_Dx11 *this, char a2);
int __thiscall PPFX::CRenderTexture::Initialize(__m128i *this, unsigned int a2, __int64 a3, unsigned int a4, int a5, int a6, int a7, int a8);
PPFX::CRenderTexture *__cdecl PPFX::CRenderTexture::Instantiate(const char *a1, int a2, const char *a3);
int __thiscall PPFX::RENDERTEXPARAM::Set(_DWORD *this, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9);
PPFX::CPfxMemoryAllocator *__thiscall PPFX::CPfxMemoryAllocator::CPfxMemoryAllocator(PPFX::CPfxMemoryAllocator *this);
int __thiscall PPFX::CPfxMemoryAllocator::Alloc(PPFX::CPfxMemoryAllocator *this, unsigned int a2, const char *a3, int a4, const char *a5);
int __thiscall PPFX::CPfxMemoryAllocator::Free(PPFX::CPfxMemoryAllocator *this, const void *a2);
void *__thiscall PPFX::CPfxMemoryAllocator::AllocMemory(PPFX::CPfxMemoryAllocator *this, size_t Size, const char *a3, int a4);
void __thiscall PPFX::CPfxMemoryAllocator::FreeMemory(PPFX::CPfxMemoryAllocator *this, void *Block);
int __cdecl PPFX::SetMemoryAllocator(PPFX *this);
int __cdecl PPFX::GPUMath_GetPowerOfTwoValue(PPFX *this, char a2, int a3);
double __cdecl PPFX::GPUMath_FresnelReflectionFromNE(PPFX *this, float a2);
float *__cdecl PPFX::GPUMath_Vec4TransformCoord4x3(float *a1, float *a2, float *a3);
float *__cdecl PPFX::GPUMath_Vec4TransformCoord4x4(float *a1, float *a2, float *a3);
__m128i *__cdecl PPFX::GPUMath_Vec4Transform4x4(__m128i *a1, float *a2, float *a3);
int __cdecl PPFX::GPUMath_Vec3Transform4x3(int a1, float *a2, int a3);
__m128i *__cdecl PPFX::GPUMath_Vec3Transform4x3(__m128i *a1, float *a2, float *a3);
float *__cdecl PPFX::GPUMath_Vec2Transform4x2(float *a1, float *a2, float *a3);
__m128i *__cdecl PPFX::GPUMath_Vec2Transform4x2(__m128i *a1, float *a2, float *a3);
int __cdecl PPFX::GPUMath_Vec3Transform3x3(int a1, float *a2, int a3);
int __cdecl PPFX::GPUMath_Vec3TransformTranspose3x3(int a1, float *a2, int a3);
__m128i *__cdecl PPFX::GPUMath_MaxValue_CIEXYZ(__m128i *a1);
__m128i *__cdecl PPFX::GPUMath_MaxValue_CIERGB(__m128i *a1);
__m128i *__cdecl PPFX::GPUMath_MaxValue_RGB(__m128i *a1);
double __cdecl PPFX::GPUMath_Wavelength_to_CIEPhotopicLuminousEfficiency(float this);
void __cdecl PPFX::GPUMath_WavelengthInMeters_to_CIEPhotopicLuminousEfficiency(PPFX *this);
int __cdecl PPFX::GPUMath_Wavelength_to_CIEXYZ(int a1, float a2);
int __cdecl PPFX::GPUMath_WavelengthInMeters_to_CIEXYZ(int a1, float a2);
float *__cdecl PPFX::GPUMath_Wavelength_to_CIERGB(float *a1, float a2);
float *__cdecl PPFX::GPUMath_WavelengthInMeters_to_CIERGB(float *a1, float a2);
// float *__usercall PPFX::GPUMath_Wavelength_to_RGB@<eax>(int a1@<edi>, int a2@<esi>, float *a3, float a4, float a5, float a6, float a7, float a8, float a9);
// float *__usercall PPFX::GPUMath_WavelengthInMeters_to_RGB@<eax>(int a1@<edi>, int a2@<esi>, float *a3, float a4, float a5, float a6, float a7, float a8, float a9);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrix_CIERGB_to_XYZ(_DWORD *a1);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrix_XYZ_to_CIERGB(_DWORD *a1);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrix_ACESRGB_to_XYZ(_DWORD *a1);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrix_XYZ_to_ACESRGB(_DWORD *a1);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrix_AdobeRGB_to_XYZ(_DWORD *a1);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrix_XYZ_to_AdobeRGB(_DWORD *a1);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrix_RGB_to_XYZ(_DWORD *a1);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrix_XYZ_to_RGB(_DWORD *a1);
__m128i *__cdecl PPFX::GPUMath_ColorMatrix_RGB_to_CIERGB(__m128i *a1);
__m128i *__cdecl PPFX::GPUMath_ColorMatrix_CIERGB_to_RGB(__m128i *a1);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrix_RGB_to_YUV(_DWORD *a1);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrix_YUV_to_RGB(_DWORD *a1);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrix_RGB_to_YCbCr(_DWORD *a1);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrix_YCbCr_to_RGB(_DWORD *a1);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrix_RGB_to_YPbPr(_DWORD *a1);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrix_YPbPr_to_RGB(_DWORD *a1);
_DWORD *__cdecl PPFX::GPUMath_MatrixScalingTranslation(_DWORD *a1, _DWORD *a2, _DWORD *a3);
int __cdecl PPFX::GPUMath_MatrixLookAt(int a1, char a2, float *a3, float *a4, float *a5);
int __cdecl PPFX::GPUMath_MatrixCameraLookAt(int a1, char a2, float *a3, float *a4, float *a5);
int __cdecl PPFX::GPUMath_MatrixChangeHandedness(int a1, const __m128i *a2);
int __cdecl PPFX::GPUMath_MatrixFrustumChangeHandedness(int a1, float *a2);
float *__cdecl PPFX::GPUMath_MatrixToYawPitchRoll(float *a1, float *a2, float *a3, float *a4);
__m128i *__cdecl PPFX::GPUMath_MatrixRotationYawPitchRoll(__m128i *a1);
int __cdecl PPFX::GPUMath_MatrixFrustum(int a1, char a2, char a3, float a4, float a5, float a6, float a7, float a8, float a9);
int __cdecl PPFX::GPUMath_MatrixPerspective(int a1, char a2, char a3, int a4, float a5, __int64 a6);
int __cdecl PPFX::GPUMath_MatrixPerspectiveSheared(int a1, char a2, char a3, int a4, float a5, __int64 a6, float a7, float a8, float a9, float a10);
int __cdecl PPFX::GPUMath_MatrixFrustumShear(int a1, int a2, char a3, float a4, float a5, float a6, float a7);
float *__cdecl PPFX::GPUMath_MatrixToFrustumParameters(float *a1, char a2, bool *a3, float *a4, float *a5, float *a6, float *a7, _DWORD *a8, float *a9, float *a10, float *a11, float *a12, float *a13, float *a14, float *a15, float *a16);
float *__cdecl PPFX::GPUMath_MatrixToFrustumTangent(float *a1, float *a2, float *a3);
float *__cdecl PPFX::GPUMath_MatrixToFrustumNearFarTangent(float *a1, char a2, float *a3, float *a4, float *a5, float *a6, float *a7, float *a8);
float *__cdecl PPFX::GPUMath_MatrixToFrustumD3dNearFarFov(float *a1, _DWORD *a2, _DWORD *a3, float *a4);
float *__cdecl PPFX::GPUMath_MatrixFrustumOglNearFarFov(float *a1, _DWORD *a2, _DWORD *a3, float *a4);
float *__cdecl PPFX::GPUMath_MatrixToFrustumNearFarFov(float *a1, char a2, _DWORD *a3, float *a4, float *a5);
int __cdecl PPFX::GPUMath_MatrixFrustumD3dToOgl(int a1, float *a2, char a3);
int __cdecl PPFX::GPUMath_MatrixFrustumOglToD3d(int a1, float *a2, char a3);
float *__cdecl PPFX::GPUMath_ColorMatrixGrayscale(float *a1, char a2);
int __cdecl PPFX::GPUMath_ColorMatrixSaturation(int a1, float a2, float a3, float a4, char a5);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrixBiasHsi(_DWORD *a1, int a2, float a3, float a4, float a5);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrixContrast(_DWORD *a1, int a2);
_DWORD *__cdecl PPFX::GPUMath_ColorMatrixContrast(_DWORD *a1, float a2, float a3, float a4);
double *__cdecl PPFX::GPUMath_LensRayConvergenceArrayCallback_ParaxialOptics(double *a1, int a2, int a3, __int64 a4, int a5, int a6, int a7, _BYTE *a8);
// double __usercall PPFX::GPUMath_LensRayConvergenceArray@<st0>(int a1@<ebp>, double a2@<esi:edi>, int a3, float *a4, __m128i *a5, __m128i *a6, int a7, int a8, unsigned int a9, float *a10, float a11, float a12, float a13, float a14, char a15, double *(__cdecl *a16)(double *a1, int a2, int a3, __int64 a4, int a5, int a6, int a7, _BYTE *a8), int a17, unsigned int a18, float a19, int a20, float a21, char a22, char a23, char a24, int a25, float *a26);
char __cdecl PPFX::GPUMath_GaussianPixel(int this, float *a2);
// __m128 *__usercall PPFX::GPUTexUtil_GetTexCoordOffset_Resample@<eax>(__m128 a1@<xmm3>, __m128 a2@<xmm6>, unsigned int this, int a4, __m128 *a5, float *a6);
// int __usercall PPFX::GPUTexUtil_GetTexCoordOffset_Box@<eax>(__m128 a1@<xmm6>, unsigned int a2, unsigned int a3, float a4, float a5, float a6, float a7, int a8, int a9, float *a10, float a11, float a12, int a13, float a14);
_OWORD *__cdecl PPFX::GPUTexUtil_GetTexCoordOffset12_Gauss5x5(unsigned int a1, unsigned int a2, __m128i *a3, _OWORD *a4);
_OWORD *__cdecl PPFX::GPUTexUtil_GetTexCoordOffset4_Gauss3x3(unsigned int a1, unsigned int a2, __m128i *a3, _OWORD *a4, float a5);
void __cdecl PPFX::GPUTexUtil_GetGaussianArray(PPFX *this, int a2, int a3, float *const a4);
float *__cdecl PPFX::GPUTexUtil_GetRecursiveSampleParameters(float a1, int a2, int a3, int a4, float a5, int *a6, int *a7, float *a8);
float *__cdecl PPFX::GPUTexUtil_GetTexCoordAndWeight1_Bilinear2(PPFX *this, float a2, float a3, float a4, float *a5, float *a6);
float *__cdecl PPFX::GPUTexUtil_GetColorWeight5_Kernel3x3(unsigned int a1, unsigned int a2, float *a3, int a4, float *a5, float a6);
int __cdecl PPFX::GPUTexUtil_GetColorWeight9_Disc5x5(unsigned int a1, unsigned int a2, int a3, int a4, float a5);
int __cdecl PPFX::GPUTexUtil_GetColorWeight25_Disc9x9(unsigned int a1, unsigned int a2, int a3, __m128 *a4, float a5);
float *__cdecl PPFX::GPUTexUtil_GetColorWeight24_DiscEdge17x17(unsigned int a1, unsigned int a2, __m128i *a3, int a4, char a5, float a6);
__m128i *__cdecl PPFX::GPUTexUtil_GetColorWeight5_Sparsely3x3(unsigned int a1, unsigned int a2, __m128i *a3, float a4);
__m128i *__cdecl PPFX::GPUTexUtil_GetColorWeight9_Sparsely5x5(unsigned int a1, unsigned int a2, __m128i *a3, float a4);
__m128i *__cdecl PPFX::GPUTexUtil_GetColorWeight9_Sparsely7x7(unsigned int a1, unsigned int a2, __m128i *a3, float a4);
__m128i *__cdecl PPFX::GPUTexUtil_GetColorWeight13_Sparsely7x7(unsigned int a1, unsigned int a2, __m128i *a3, float a4);
__m128i *__cdecl PPFX::GPUTexUtil_GetColorWeight13_Sparsely9x9(__int64 a1, __m128i *a2, float a3);
__m128i *__cdecl PPFX::GPUTexUtil_GetColorWeight17_Sparsely9x9(__int64 a1, __m128i *a2, float a3);
int __cdecl PPFX::GPUTexUtil_GetColorWeight_Sparsely(__int64 a1, int a2, __m128i *a3, float a4, int a5);
int __cdecl PPFX::GPUTexUtil_GetColorWeight_CenterPeak(unsigned int a1, unsigned int a2, int a3, __m128i *a4, float a5, int a6);
int __cdecl PPFX::GPUTexUtil_GetWeight9_Gauss3x3(PPFX *this, float (*const a2)[3], char a3);
float *__cdecl PPFX::GPUTexUtil_GetColorWeight5_Gauss3x3(unsigned int a1, unsigned int a2, int a3, float *a4, __int64 a5, float a6);
// void __usercall PPFX::GPUTexUtil_GetColorWeight9_Gauss5x5(int a1@<edi>, int a2@<esi>, unsigned int a3, unsigned int a4, __m128i *a5, __m128 *a6, float a7, char a8, float a9);
unsigned int __cdecl PPFX::GPUTexUtil_GetColorWeight9_Gauss3x3(unsigned int a1, unsigned int a2, __m128i *a3, _DWORD *a4, __int64 a5, float a6);
// float *__usercall PPFX::GPUTexUtil_GetColorWeight25_Gauss5x5@<eax>(int a1@<edi>, int a2@<esi>, unsigned int a3, unsigned int a4, __m128i *a5, float *a6, float a7, char a8, float a9);
// float *__usercall PPFX::GPUTexUtil_GetColorWeight2_Gauss3@<eax>(int a1@<esi>, PPFX *this, unsigned int a3, float *const a4, float *const a5, char a6, float a7);
// float __usercall PPFX::GPUTexUtil_GetColorWeight4_Gauss7@<eax>(int a1@<edi>, int a2@<esi>, PPFX *this, unsigned int a4, float *const a5, float *const a6, char a7, float a8);
// float *__usercall PPFX::GPUTexUtil_GetColorWeight6_Gauss11@<eax>(int a1@<edi>, int a2@<esi>, PPFX *this, unsigned int a4, float *const a5, float *const a6, char a7, float a8);
// int __usercall PPFX::GPUTexUtil_GetColorWeight15_Gauss29@<eax>(int a1@<edi>, int a2@<esi>, PPFX *this, unsigned int a4, float *const a5, float *const a6, char a7, float a8);
// int __usercall PPFX::GPUTexUtil_GetColorWeight31_Gauss61@<eax>(int a1@<edi>, int a2@<esi>, PPFX *this, unsigned int a4, float *const a5, float *const a6, char a7, float a8);
// void __usercall PPFX::GPUTexUtil_GetColorWeight9_Gauss17(int a1@<edi>, int a2@<esi>, PPFX *this, unsigned int a4, float *const a5, float *const a6, char a7, float a8);
// float *__usercall PPFX::GPUTexUtil_GetColorWeight3_Gauss3@<eax>(int a1@<edi>, int a2@<esi>, PPFX *this, _DWORD *a4, unsigned int a5, float *const a6, char a7, float a8);
// int __usercall PPFX::GPUTexUtil_GetColorWeight7_Gauss7@<eax>(int a1@<edi>, int a2@<esi>, PPFX *this, float *a4, float *const a5, float *const a6, char a7);
// int __usercall PPFX::GPUTexUtil_GetColorWeight11_Gauss11@<eax>(int a1@<edi>, int a2@<esi>, PPFX *this, unsigned int a4, float *const a5, float *const a6, char a7);
// int __usercall PPFX::GPUTexUtil_GetColorWeight15_Gauss15@<eax>(int a1@<edi>, int a2@<esi>, PPFX *this, float a4, float *const a5, float *const a6, char a7);
int __cdecl PPFX::GPUTexUtil_GetCirclePointArray(int a1, float *a2, float a3);
double __cdecl PPFX::GPUTexUtil_GetPointSymmetryScaleCoord(PPFX *this, float a2, float a3);
void sub_7A2350();
// int __usercall PPFX::GPUMath_ColorComponent<double>@<eax>(int a1@<edi>, int a2, double *a3, char a4, char a5, unsigned __int64 *a6, double *a7, unsigned __int64 *a8);
double *__cdecl PPFX::GPUMath_LensWaveSource<double>(double *a1, double a2, double a3, double a4, double a5, char a6, double a7);
__m128i *__cdecl PPFX::MATRIXT44_MatrixMultiply<float>(__m128i *a1, int a2, float *a3);
int __cdecl PPFX::Normalize<float>(int a1, float *a2);
int __cdecl PPFX::GPUMath_ColorMatrixHue(int a1, int a2, char a3);
int __thiscall PPFX::CPostEffect::GetRenderSceneTexture(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetRenderSceneTexture(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetHdrTexture(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetHdrAuxTexture(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CPostEffect::GetCurrentRenderSceneTexture(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetEffectiveEffectSourceTexture(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetDepthRenderTexture(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetDepthTexture(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetGpuDepthStencilTexture(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetDepthSurface(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetGpuDepthStencilSurface(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetFeedbackTexture(PPFX::CPostEffect *this, int a2, char a3);
int __thiscall PPFX::CPostEffect::GetDebugTexture(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CPostEffect::GetGPUDebugTexture(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CPostEffect::GetGPUZeroTexture(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetGPUGrayTexture(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetGPUTextureFullColorDitherMatrix(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetGPUTextureLogo(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetGPUTextureAnalyzer(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetGPUTextureFilmGrain(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetGPUTextureSpectrum(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetGPUTextureRadiusGaussianFade(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetGPUMultisampleType(_DWORD *this);
int __thiscall PPFX::CPostEffect::GetGPUMultisampleQuality(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetMultisampleNumSamples(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetMultisampleQuality(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetEffectiveExposure(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetEffectiveRenderSceneLuminanceScale(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetRenderSceneToEffectBufferLuminanceScale(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetEffectiveTonemapMaxMappingLuminance(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetEffectiveTonemapMappingFactor(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::PushDeviceStates(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::PopDeviceStates(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::PushGprAllocation(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::PopGprAllocation(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::RegisterDeviceSurface(PPFX::CPostEffect *this, std::_Tree_node<std::pair<unsigned int const ,bool>,void *> *a2, unsigned int a3, unsigned int a4, enum DXGI_FORMAT a5, int a6, int a7, struct PPFX::IGPUSurface **a8);
int __thiscall PPFX::CPostEffect::RegisterDeviceTexture(PPFX::CPostEffect *this, std::_Tree_node<std::pair<unsigned int const ,bool>,void *> *a2, unsigned int a3, unsigned int a4, GPUUTIL *a5, struct PPFX::IGPUTexture **a6, const struct PPFX::CRenderTexture **a7);
int __thiscall PPFX::CPostEffect::RegisterDeviceVolumeTexture(PPFX::CPostEffect *this, std::_Tree_node<std::pair<unsigned int const ,bool>,void *> *a2, unsigned int a3, unsigned int a4, unsigned int a5, enum DXGI_FORMAT a6, struct PPFX::IGPUVolumeTexture **a7);
int __thiscall PPFX::CPostEffect::SelectRenderSceneHdrFormat(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SelectGlareFormat(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SelectGlarePartialFormat(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::BeginTemporaryFilter(PPFX::CPostEffect *this, char a2);
int __thiscall PPFX::CPostEffect::EndTemporaryFilter(PPFX::CPostEffect *this, const struct PPFX::CRenderTexture *a2, __int64 a3, bool a4, bool a5);
int __thiscall PPFX::CPostEffect::CopyToCurrentRenderSceneTexture(_DWORD *this, int a2, int a3, int a4);
int __thiscall PPFX::CPostEffect::DecideBufferIndex_RenderScene(PPFX::CPostEffect *this);
BOOL __thiscall PPFX::CPostEffect::DecideBufferIndex_RenderSceneAuxiliary(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::DecideBufferIndex_RenderSceneHdr(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::ResetTonemapDestination(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::ResetAllTonemapDestination(PPFX::CPostEffect *this);
const struct PPFX::CRenderTexture *__thiscall PPFX::CPostEffect::ResizeRenderTexture(PPFX::CPostEffect *__hidden this, const struct PPFX::CRenderTexture *); // weak
int __thiscall PPFX::CPostEffect::ApplyEffects_DepthFactorAlpha(PPFX::CPostEffect *this, int a2, bool a3, const struct PPFX::CRenderTexture *a4, const struct PPFX::CRenderTexture *a5, bool a6, const struct PPFX::CRenderTexture *a7, float a8, float a9, int a10, float a11);
int __thiscall PPFX::CPostEffect::ApplyEffects_DepthBaseFactorIfNeeded(PPFX::CPostEffect *this, bool a2);
GPUUTIL *__thiscall PPFX::CPostEffect::ApplyEffects_GenerateNormalAndLinearDepth(PPFX::CPostEffect *this);
// int __userpurge PPFX::CPostEffect::ApplyEffects_UpdateAutoExposure@<eax>(PPFX::CPostEffect *this@<ecx>, _DWORD *a2@<ebx>, int a3@<edi>, const struct PPFX::CRenderTexture *a4);
// int __usercall PPFX::CPostEffect::ApplyEffects_UpdateAutoFocus@<eax>(PPFX::CPostEffect *this@<ecx>, _DWORD *a2@<ebx>, char a3@<efl>);
int __thiscall PPFX::CPostEffect::ApplyEffects_MotionBlurCamera(PPFX::CPostEffect *this);
// GPUUTIL *__usercall PPFX::CPostEffect::ApplyEffects_DepthOfField@<eax>(PPFX::CPostEffect *this@<ecx>, _DWORD *a2@<ebx>);
// int __usercall PPFX::CPostEffect::ApplyEffects_AmbientOcclusion@<eax>(PPFX::CPostEffect *this@<ecx>, int a2@<ebx>);
int __thiscall PPFX::CPostEffect::ApplyEffects_Feedback(PPFX::CPostEffect *this, const struct PPFX::CRenderTexture *a2);
int __thiscall PPFX::CPostEffect::ApplyEffects_TonemapTemporaly(PPFX::CPostEffect *this, const struct PPFX::CRenderTexture *a2);
int __thiscall PPFX::CPostEffect::UpdateParameters_Base(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetCameraMovement(PPFX::CPostEffect *this, bool *a2, bool *a3, bool *a4, bool *a5, bool *a6);
GPUUTIL *__thiscall PPFX::CPostEffect::EndPostEffectScene_PreProcess(PPFX::CPostEffect *this, PPFX::CTextureUtil *a2, int a3);
// GPUUTIL *__usercall PPFX::CPostEffect::EndPostEffectScene_InternalProcess@<eax>(PPFX::CPostEffect *this@<ecx>, _DWORD *a2@<ebx>);
int __thiscall PPFX::CPostEffect::EndPostEffectScene_PostProcess(PPFX::CPostEffect *this);
// int __userpurge PPFX::CPostEffect::EndPostEffectScene_Process@<eax>(PPFX::CPostEffect *this@<ecx>, _DWORD *a2@<ebx>, PPFX::CTextureUtil *a3, int a4);
int __thiscall PPFX::CPostEffect::UpdateParameters_DepthOfFieldFactorStore(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::UpdateParameters_ChangeFormat(PPFX::CPostEffect *this);
// float __usercall PPFX::CPostEffect::UpdateParameters_DepthOfFieldOpticalParameters@<eax>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
int __thiscall PPFX::CPostEffect::UpdateParameters_TonemapDestination(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::UpdateParameters(PPFX::CPostEffect *this);
char __thiscall PPFX::CPostEffect::UpdateParameters_EffectiveAmbientOcclusionEnable(PPFX::CPostEffect *this);
char __thiscall PPFX::CPostEffect::UpdateParameters_EffectiveApertureAiryDiscEnable(PPFX::CPostEffect *this);
char __thiscall PPFX::CPostEffect::UpdateParameters_EffectiveGaussianBlurEnable(PPFX::CPostEffect *this);
char __thiscall PPFX::CPostEffect::UpdateParameters_EffectiveChromaticAberrationEnable(PPFX::CPostEffect *this);
bool __thiscall PPFX::CPostEffect::UpdateParameters_EffectiveChromaticAberrationBlurEnable(PPFX::CPostEffect *__hidden this); // weak
char __thiscall PPFX::CPostEffect::UpdateParameters_EffectiveLightShaftEnable(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::UpdateParameters_EffectiveAntialiasEnable(PPFX::CPostEffect *this);
char __thiscall PPFX::CPostEffect::UpdateParameters_EffectiveHeatShimmerParticleEnable(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::UpdateParameters_EffectiveLensDistortionEnable(PPFX::CPostEffect *this);
BOOL __thiscall PPFX::CPostEffect::UpdateParameters_EffectiveLensDistortionOrImageSensorNoiseEnable(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::UpdateParameters_EffectiveColorGradingLutEnable(PPFX::CPostEffect *this);
char __thiscall PPFX::CPostEffect::UpdateParameters_EffectiveDepthOfFieldDepthRemapLutEnable(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetEffectiveGlareEnable(PPFX::CPostEffect *this);
char __thiscall PPFX::CPostEffect::GetEffectiveFeedbackEnable(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SetDynamicBufferIndex_MotionBlurCamera(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CPostEffect::GetLensDistortionFxParameters(PPFX::CPostEffect *this, float *a2, float *a3);
// _DWORD *__userpurge PPFX::CPostEffect::GetLensDistortionPosition@<eax>(int a1@<ecx>, int a2@<esi>, _DWORD *a3, char a4, int a5, char a6);
int __thiscall PPFX::CPostEffect::GetFrustumParameters(PPFX::CPostEffect *this, float *a2, float *a3, float *a4, float *a5, bool a6);
int __thiscall PPFX::CPostEffect::GetFrustumMatrix(float *this, int a2, char a3, char a4, char a5);
int __thiscall PPFX::CPostEffect::GetMaxEffectAcceptableRecurrences(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CPostEffect::GetMaxMotionBlurCameraRecurrences(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetMotionBlurEffectFormat(PPFX::CPostEffect *this);
bool __thiscall PPFX::CPostEffect::GetMotionBlurFalloffEnable(PPFX::CPostEffect *__hidden this); // weak
bool __thiscall PPFX::CPostEffect::GetAntialiasFalloffEnable(PPFX::CPostEffect *__hidden this); // weak
float *__thiscall PPFX::CPostEffect::GetAlphaToFalloffFactor(float *this, float *a2, float a3, float a4);
double __thiscall PPFX::CPostEffect::GetEffectiveGlareLuminanceScale(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetEffectiveTonemapParameters(int this, int *a2, float *a3, float *a4, float *a5, _BYTE *a6, float *a7, __int128 **a8, float **a9);
double __thiscall PPFX::CPostEffect::GetDiaphragmRotateAngle(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetDiaphragmRotateAngle_LINEAR_FOCALLENGTH(PPFX::CPostEffect *this, float a2);
double __thiscall PPFX::CPostEffect::GetDiaphragmRotateAngle_LOG_FOCALLENGTH(PPFX::CPostEffect *this, float a2);
double __thiscall PPFX::CPostEffect::GetDiaphragmRotateAngle_INV_FOCALLENGTH(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::SetAperture(PPFX::CPostEffect *this, float a2, enum PPFX::EPFX_DOFAPERTUREPARAM a3, float a4, float a5);
int __thiscall PPFX::CPostEffect::GetRendereSceneMultisampleMode(PPFX::CPostEffect *this);
bool __thiscall PPFX::CPostEffect::IsResettable(PPFX::CPostEffect *__hidden this, struct PPFX::IGPUDevice *); // weak
BOOL __cdecl PPFX::CPostEffect::IsVignetteBarrelObstructionParameterEnable(float a1, float a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::GetNextEffectBufferIndex(PPFX::CPostEffect *this, unsigned int a2);
int __thiscall PPFX::CPostEffect::DrawDebugBuffers(PPFX::CPostEffect *this);
PPFX::CPostEffect *__thiscall PPFX::CPostEffect::CPostEffect(PPFX::CPostEffect *this);
int __fastcall PPFX::CPostEffect::~CPostEffect(PPFX::CPostEffect *this, PPFX::CTextureUtil *a2);
// int __userpurge PPFX::CPostEffect::Initialize@<eax>(PPFX::CPostEffect *this@<ecx>, PPFX::CTextureUtil *a2@<edx>, int a3@<ebx>, const struct PPFX::PFX_DEVICEPARAM *a4, PPFX *a5, int a6, unsigned int a7, const struct PPFX::PFX_INITPARAM *a8);
int __fastcall PPFX::CPostEffect::Uninitialize(PPFX::CPostEffect *this, PPFX::CTextureUtil *a2, struct PPFX::IGPUDevice *a3);
int __fastcall PPFX::CPostEffect::OnLostDevice(struct PPFX::IGPUDevice **this, PPFX::CTextureUtil *a2);
bool __thiscall PPFX::CPostEffect::IsReadyForReset(PPFX::CPostEffect *__hidden this); // weak
bool __thiscall PPFX::CPostEffect::IsDeviceLost(PPFX::CPostEffect *__hidden this); // weak
int __thiscall PPFX::CPostEffect::SetDeviceContext(PPFX::CPostEffect *this, struct ID3D11DeviceContext *a2);
int __thiscall PPFX::CPostEffect::SetActiveView(PPFX::CPostEffect *this, int a2);
double __thiscall PPFX::CPostEffect::GetAutoExposureMeteringResult(PPFX::CPostEffect *this, int a2);
double __thiscall PPFX::CPostEffect::GetAutoFocusScreenDistance(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CPostEffect::InitializeContinuousEffects(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CPostEffect::InitializeAfterimage(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CPostEffect::InitializeFeedback(PPFX::CPostEffect *this, int a2);
// int __userpurge PPFX::CPostEffect::SetRenderSceneParameters@<eax>(PPFX::CPostEffect *this@<ecx>, int a2@<esi>, float a3, float a4, float a5, float a6, float a7);
// int __userpurge PPFX::CPostEffect::SetRenderScenePerspective@<eax>(PPFX::CPostEffect *this@<ecx>, int a2@<esi>, float a3, float a4, float a5);
int __thiscall PPFX::CPostEffect::SetRenderScenePerspectiveByFrustum(PPFX::CPostEffect *this, float a2, float a3, float a4, float a5, float a6);
// int __userpurge PPFX::CPostEffect::SetRenderScenePreviousPerspective@<eax>(PPFX::CPostEffect *this@<ecx>, int a2@<esi>, float a3, float a4, float a5);
int __thiscall PPFX::CPostEffect::SetRenderScenePreviousPerspectiveByFrustum(PPFX::CPostEffect *this, float a2, float a3, float a4, float a5, float a6);
double __thiscall PPFX::CPostEffect::GetRenderSceneNear(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetRenderSceneFar(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetRenderSceneVerticalFov(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetRenderScenePreviousNear(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetRenderScenePreviousFar(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetRenderScenePreviousVerticalFov(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SetRenderSceneCameraMatrix(PPFX::CPostEffect *this, const float *a2, bool a3);
int __thiscall PPFX::CPostEffect::SetRenderSceneViewMatrix(PPFX::CPostEffect *this, const __m128i *a2, bool a3);
int __thiscall PPFX::CPostEffect::SetRenderScenePreviousCameraMatrix(PPFX::CPostEffect *this, const float *a2, bool a3);
int __thiscall PPFX::CPostEffect::SetRenderScenePreviousViewMatrix(PPFX::CPostEffect *this, const __m128i *a2, bool a3);
int __thiscall PPFX::CPostEffect::SetRemapCompressionLuminanceScale(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::SetRenderSceneLuminanceScale(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::SetGlareParameters(PPFX::CPostEffect *this, float a2, float a3, enum PPFX::EPFX_GLAREBRIGHTPASS a4, float a5);
int __thiscall PPFX::CPostEffect::SetGlareShape(PPFX::CPostEffect *this, enum PPFX::EPFX_GLARESHAPE a2);
int __thiscall PPFX::CPostEffect::SetGlareShape(PPFX::CPostEffect *this, const __m128i *a2);
struct PPFX::PFX_GLARESHAPEDEF *__thiscall PPFX::CPostEffect::GetGlareShapeDefinition(PPFX::CPostEffect *this, struct PPFX::PFX_GLARESHAPEDEF *a2, unsigned int a3);
struct PPFX::PFX_GLARESHAPEDEF *__thiscall PPFX::CPostEffect::GetEffectGlareShapeDefinition(PPFX::CPostEffect *this, struct PPFX::PFX_GLARESHAPEDEF *a2, int a3);
int __thiscall PPFX::CPostEffect::SetGlareThresholdSpace(PPFX::CPostEffect *this, enum PPFX::EPFX_DYNAMICRANGESPACE a2);
int __thiscall PPFX::CPostEffect::SetLightShaftEnable(PPFX::CRenderGlare **this, bool a2);
char __thiscall PPFX::CPostEffect::GetLightShaftEnable(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SetLightShaftParameters(__m128i *this, const __m128i *a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9);
int __thiscall PPFX::CPostEffect::SetLightShaftDiffractionRing(int this, int a2, int a3, int a4, int a5, const __m128i *a6);
int __thiscall PPFX::CPostEffect::SetLightShaftPosition(PPFX::CPostEffect *this, float a2, float a3);
int __thiscall PPFX::CPostEffect::SetGlareAnamorphicLensFlareEnable(PPFX::CPostEffect *this, bool a2);
char __thiscall PPFX::CPostEffect::GetGlareAnamorphicLensFlareEnable(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SetGlareAnamorphicLensFlareParameters(PPFX::CRenderGlare **this, __int64 a2);
int __thiscall PPFX::CPostEffect::SetGlareAnamorphicLensFlareColor(int *this, const __m128i *a2, const __m128i *a3);
int __thiscall PPFX::CPostEffect::SetGlareGhostConcentricDistortion(PPFX::CPostEffect *this, float a2);
double __thiscall PPFX::CPostEffect::GetGlareGhostConcentricDistortion(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SetManualMultisampleDownsampleSpace(PPFX::CPostEffect *this, enum PPFX::EPFX_DYNAMICRANGESPACE a2);
int __thiscall PPFX::CPostEffect::SetMultisampleMode(PPFX::CPostEffect *this, enum PPFX::EPFX_MULTISAMPLEMODE a2);
int __thiscall PPFX::CPostEffect::GetMultisampleMode(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetMultisampleDownsampleFilter(PPFX::CPostEffect *this, unsigned int a2);
int __thiscall PPFX::CPostEffect::GetMultisampleDownsampleFilter(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldParameters(PPFX::CPostEffect *this, float a2, float a3, enum PPFX::EPFX_DOFAPERTUREPARAM a4, float a5, float a6, float a7);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldByDiameter(PPFX::CPostEffect *this, float a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldByFnumber(PPFX::CPostEffect *this, float a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldByFnumberAdaptive(PPFX::CPostEffect *this, float a2, float a3, float a4, float a5);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldByBokeh(PPFX::CPostEffect *this, float a2, float a3, float a4, float a5);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldFocusDistance(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldEnable(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetApertureStopUnit(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::SetMaximumAperture(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::SetMaximumApertureAdaptive(PPFX::CPostEffect *this, float a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::SetMaximumApertureAdaptiveFocalLength(PPFX::CPostEffect *this, float a2, float a3, float a4, float a5, float a6, float a7);
int __thiscall PPFX::CPostEffect::SetMaximumApertureAdaptiveFov(PPFX::CPostEffect *this, float a2, float a3, float a4, float a5, float a6, float a7);
int __thiscall PPFX::CPostEffect::SetMaximumApertureLimitationEnable(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetApertureBokehShape(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CPostEffect::SetApertureBokehCircularity(PPFX::CPostEffect *this, float a2, enum PPFX::EPFX_APERTURECIRCULARITYMODE a3);
int __thiscall PPFX::CPostEffect::SetApertureBokehAberration(PPFX::CPostEffect *this, enum PPFX::EPFX_BOKEHABERRATIONTYPE a2, float a3, float a4, float a5, float a6);
int __thiscall PPFX::CPostEffect::SetApertureBokehAnamorphicFocusEnable(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetApertureBokehAnamorphicFocusParameters(PPFX::CPostEffect *this, float a2);
// int __userpurge PPFX::CPostEffect::GetDepthOfFieldFactorScaleOffset@<eax>(int a1@<ecx>, char a2@<efl>, __m128i *a3);
// __m128i *__userpurge PPFX::CPostEffect::GetDepthOfFieldFactorScaleOffset@<eax>(int a1@<ecx>, char a2@<efl>, __m128i *a3);
// int __userpurge PPFX::CPostEffect::GetDepthFactorScaleOffset@<eax>(int a1@<ecx>, char a2@<efl>, __m128i *a3);
// __m128i *__userpurge PPFX::CPostEffect::GetDepthFactorScaleOffset@<eax>(int a1@<ecx>, char a2@<efl>, __m128i *a3);
// double __usercall PPFX::CPostEffect::GetDepthFactorBaseDistance@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// int __userpurge PPFX::CPostEffect::GetDepthConversionFactor@<eax>(int a1@<ecx>, char a2@<efl>, __m128i *a3, float a4, float a5, float a6, float a7);
// __m128i *__userpurge PPFX::CPostEffect::GetDepthConversionFactor@<eax>(int a1@<ecx>, char a2@<efl>, __m128i *a3, float a4, float a5, __int64 a6);
// double __userpurge PPFX::CPostEffect::GetDepthConversionValue@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>, float a3, float a4, float a5);
// int __userpurge PPFX::CPostEffect::GetDepthOfFieldParameters@<eax>(int a1@<ecx>, char a2@<efl>, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, _DWORD *a7, _DWORD *a8, _DWORD *a9, __m128i *a10);
// double __usercall PPFX::CPostEffect::GetFocusDistance@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetFocalLength@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetImageSensorHeight@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetApertureFnumber@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetApertureDiameter@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetCircleOfConfusionAtInfinity@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetCircleOfConfusionToScreenRatioAtInfinity@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetApertureRatio@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __userpurge PPFX::CPostEffect::GetCircleOfConfusion@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>, float a3);
// double __userpurge PPFX::CPostEffect::GetCircleOfConfusionToScreenRatio@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>, float a3);
// double __usercall PPFX::CPostEffect::GetPermissibleCircleOfConfusion@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetPermissibleCircleOfConfusionToScreenRatio@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetHyperfocalDistance@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetFrontDepthOfField@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetRearDepthOfField@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetNearFocusDistance@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetFarFocusDistance@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetHalfDepthOfFocus@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetImageDistance@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetFocalLengthAtInfinity@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetMagnificationRatio@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetEffectiveFnumber@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetMaximumApertureFnumber@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetApertureOpeningRatio@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetApertureBokehCircularity@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __userpurge PPFX::CPostEffect::GetNumericalAperture@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>, float a3);
// double __userpurge PPFX::CPostEffect::GetAiryDiscDiameter@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>, __int64 a3);
// double __userpurge PPFX::CPostEffect::GetAiryDiscDiameterToScreenRatio@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>, __int64 a3);
// double __usercall PPFX::CPostEffect::GetLensBarrelObstructionDiameter@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
// double __usercall PPFX::CPostEffect::GetLensBarrelObstructionDistance@<st0>(PPFX::CPostEffect *this@<ecx>, char a2@<efl>);
double __thiscall PPFX::CPostEffect::GetEffectiveVerticalFov(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetEffectiveVerticalTangentHalfFov(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SetLensDistortionEnable(PPFX::CPostEffect *this, bool a2);
char __thiscall PPFX::CPostEffect::GetLensDistortionEnable(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SetImageSensorNoiseEnable(PPFX::CPostEffect *this, bool a2);
char __thiscall PPFX::CPostEffect::GetImageSensorNoiseEnable(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SetImageSensorNoiseParameters(PPFX::CPostEffect *this, float a2, float a3, float a4, float a5, float a6);
int __thiscall PPFX::CPostEffect::SetLensDistortionParameters(_DWORD *this, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12);
int __thiscall PPFX::CPostEffect::SetLensDistortionParametersUniformFov(PPFX::CPostEffect *this, float a2, float a3);
int __thiscall PPFX::CPostEffect::SetLensDistortionParametersAdaptive(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::SetLensDistortionParametersAdaptiveBarrelPincushion(PPFX::CPostEffect *this, float a2, float a3, float a4, float a5, float a6);
int __thiscall PPFX::CPostEffect::SetLensDistortionFovBase(PPFX::CPostEffect *this, enum PPFX::EPFX_DISTORTIONFOVBASE a2, float a3);
int __thiscall PPFX::CPostEffect::SetLensDistortionEdge(PPFX::CPostEffect *this, float a2, float a3);
int __thiscall PPFX::CPostEffect::SetChromaticAberrationEnable(PPFX::CPostEffect *this, bool a2, bool a3);
int __thiscall PPFX::CPostEffect::SetChromaticAberrationParameters(int this, int a2, char a3, _DWORD *a4, _DWORD *a5);
int __thiscall PPFX::CPostEffect::SetApertureAiryDiscEnable(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetApertureAiryDiscParameters(PPFX::CPostEffect *this, float a2, bool a3, bool a4);
int __thiscall PPFX::CPostEffect::SetGaussianBlurEnable(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetGaussianBlurParameters(int this, const __m128i *a2, int a3);
int __thiscall PPFX::CPostEffect::SetGaussianBlurWrapMode(PPFX::CPostEffect *this, enum PPFX::EPFX_SAMPLEWRAPMODE a2);
int __thiscall PPFX::CPostEffect::GetEffectiveGaussianBlurWrapMode(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SetAntialiasEnable(PPFX::CPostEffect *this, bool a2, bool a3);
int __thiscall PPFX::CPostEffect::SetAntialiasFalloffDistance(PPFX::CPostEffect *this, float a2, float a3, bool a4);
int __thiscall PPFX::CPostEffect::SetDepthFactorRange(PPFX::CPostEffect *this, float a2, float a3);
int __thiscall PPFX::CPostEffect::SetDepthFactorRangeFloatOptimizeEnable(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetHeatShimmerParticleEnable(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetHeatShimmerParticleFalloffDistance(PPFX::CPostEffect *this, float a2, float a3, bool a4);
int __thiscall PPFX::CPostEffect::SetGeometryBlurEnable(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetMotionBlurEnable(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetMotionBlurMode(PPFX::CPostEffect *this, enum PPFX::EPFX_MOTIONBLURMODE a2);
int __thiscall PPFX::CPostEffect::SetMotionBlurParameters(PPFX::CPostEffect *this, float a2, float a3, int a4, int a5, float a6);
int __thiscall PPFX::CPostEffect::SetMotionBlurThreshold(PPFX::CPostEffect *this, float a2, float a3, bool a4);
int __thiscall PPFX::CPostEffect::SetMotionBlurFalloffDistance(PPFX::CPostEffect *this, float a2, float a3);
int __thiscall PPFX::CPostEffect::SetMotionBlurVelocityMaskThreshold(PPFX::CPostEffect *this, float a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::SetMotionBlurVelocitySource(int this, int a2, int a3, int a4, _DWORD *a5, char a6);
int __thiscall PPFX::CPostEffect::SetMotionBlurVelocitySource(PPFX::CPostEffect *this, int a2, struct ID3D11ShaderResourceView *a3, unsigned int a4, unsigned int a5, GPUUTIL *a6, int a7, _DWORD *a8, char a9);
int __thiscall PPFX::CPostEffect::SetMotionBlurVelocityScale(PPFX::CPostEffect *this, float a2, float a3);
int __thiscall PPFX::CPostEffect::SetNormalSource(PPFX::CPostEffect *this, enum PPFX::EPFX_NORMALSOURCE a2, const struct PPFX::CRenderTexture *a3, enum PPFX::EPFX_NORMALFORMAT a4, bool a5);
int __thiscall PPFX::CPostEffect::SetNormalSource(PPFX::CPostEffect *this, enum PPFX::EPFX_NORMALSOURCE a2, struct ID3D11ShaderResourceView *a3, unsigned int a4, unsigned int a5, GPUUTIL *a6, enum PPFX::EPFX_NORMALFORMAT a7, bool a8);
int __thiscall PPFX::CPostEffect::SetAmbientOcclusionEnable(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetAmbientOcclusionParameters(PPFX::CPostEffect *this, int a2, float a3, float a4, float a5, float a6, float a7);
int __thiscall PPFX::CPostEffect::SetPostBilateralParameters(PPFX::CPostEffect *this, float a2, float a3, float a4, int a5);
int __thiscall PPFX::CPostEffect::SetDiaphragmRotate(PPFX::CPostEffect *this, float a2, float a3, enum PPFX::EPFX_DIAPHRAGMROTATE a4);
int __thiscall PPFX::CPostEffect::SetTonemapExposure(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::SetTonemapFunction(PPFX::CPostEffect *this, enum PPFX::EPFX_TONEMAP a2, float a3);
int __thiscall PPFX::CPostEffect::SetTonemapBackend(PPFX::CPostEffect *this, float a2, float a3);
int __thiscall PPFX::CPostEffect::SetCharacteristicCurveParameters(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::SetTonemapAlphaScale(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CPostEffect::SetTonemapAlphaFactor(PPFX::CPostEffect *this, __int64 a2, __int64 a3);
int __thiscall PPFX::CPostEffect::SetTonemapImageSensorSensitivity(PPFX::CPostEffect *this, float a2, float a3, float a4, float a5, float a6, float a7, float a8, float a9, unsigned int a10);
int __thiscall PPFX::CPostEffect::SetRenderSceneColorSpace(PPFX::CPostEffect *this, enum PPFX::EPFX_COLORSPACE a2);
int __thiscall PPFX::CPostEffect::SetTonemapColorSpace(PPFX::CPostEffect *this, enum PPFX::EPFX_COLORSPACE a2);
int __thiscall PPFX::CPostEffect::SetFeedbackEnable(PPFX::CPostEffect *this, bool a2);
BOOL __thiscall PPFX::CPostEffect::SetFeedbackWeight(PPFX::CPostEffect *this, float a2, float a3, float a4);
double __thiscall PPFX::CPostEffect::GetEffectiveFeedbackMatrixAspectRatio(PPFX::CPostEffect *this);
char __thiscall PPFX::CPostEffect::GetTonemapResampleFilterAvailability(PPFX::CPostEffect *this, enum PPFX::EPFX_RESAMPLEFILTER a2);
int __thiscall PPFX::CPostEffect::SetTonemapResampleFilter(PPFX::CPostEffect *this, unsigned int a2, float a3);
int __thiscall PPFX::CPostEffect::GetInitialTonemapResampleFilter(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetTonemapResampleFilter(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetTemporalyTonemapResultTexture(PPFX::CPostEffect *this);
BOOL __thiscall PPFX::CPostEffect::GetTonemapResampleFilterPassEnable(PPFX::CPostEffect *this, int a2);
BOOL __thiscall PPFX::CPostEffect::GetEffectiveTonemapResampleFilterPassEnable(PPFX::CPostEffect *this);
__m128i *__thiscall PPFX::CPostEffect::GetEffectivePreTonemapColorTransform(int this, __m128i *a2);
_DWORD *__stdcall PPFX::CPostEffect::GetEffectivePostTonemapColorTransform(_DWORD *a1);
int __thiscall PPFX::CPostEffect::SetTonemapParameters(PPFX::CPostEffect *this, float a2, float a3, enum PPFX::EPFX_TONEMAP a4, float a5, float a6);
int __thiscall PPFX::CPostEffect::SetCustomTonemapParameters(PPFX::CPostEffect *this, float a2, float a3, enum PPFX::EPFX_REMAPHDR a4, enum PPFX::EPFX_TONEMAPLDR a5, float a6, float a7, float a8);
int __thiscall PPFX::CPostEffect::SetVignetteParameters(PPFX::CPostEffect *this, float a2, float a3);
int __thiscall PPFX::CPostEffect::SetVignetteByOptics(PPFX::CPostEffect *this, float a2, float a3, float a4, float a5, float a6, bool a7, bool a8);
int __thiscall PPFX::CPostEffect::SetVignetteByViewport(PPFX::CPostEffect *this, float a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::BeginPostEffectScene(void *this, int a2, const __m128i *a3, __int64 a4, int a5);
// GPUUTIL *__userpurge PPFX::CPostEffect::EndPostEffectScene@<eax>(PPFX::CPostEffect *this@<ecx>, _DWORD *a2@<ebx>, PPFX::CTextureUtil *a3, int a4);
// int __userpurge PPFX::CPostEffect::ApplyEffects@<eax>(PPFX::CPostEffect *this@<ecx>, _DWORD *a2@<ebx>, PPFX::CTextureUtil *a3);
int __thiscall PPFX::CPostEffect::ApplyApertureFilter(PPFX::CPostEffect *this, int a2, char a3, __int64 a4, bool a5);
int __thiscall PPFX::CPostEffect::ApplyApertureFilter(PPFX::CPostEffect *this, float a2, char a3, __int64 a4, bool a5);
int __thiscall PPFX::CPostEffect::ApplyApertureFilterByBokeh(PPFX::CPostEffect *this, float a2, char a3, char a4, __int64 a5, bool a6);
int __thiscall PPFX::CPostEffect::ApplyApertureFilter(PPFX::CPostEffect *this, float a2, enum PPFX::EPFX_APERTUREFILTERSIZEPARAM a3, char a4, unsigned int a5, __int64 a6);
int __thiscall PPFX::CPostEffect::ApplyDepthOfFieldFilter(PPFX::CPostEffect *this, int a2, int a3, PPFX::CTextureUtil *a4, __int64 a5, bool a6);
// int __userpurge PPFX::CPostEffect::ApplyGaussianBlurFilter@<eax>(int a1@<ecx>, int a2@<ebx>, int a3@<edi>, float *a4, int a5, int a6, char a7, __int64 a8, bool a9);
int __thiscall PPFX::CPostEffect::SetFramebuffer(_BYTE *this, int a2, int a3, const __m128i *a4);
int __thiscall PPFX::CPostEffect::ResolveFramebuffer(PPFX::CPostEffect *this, int a2, char a3);
int __thiscall PPFX::CPostEffect::ApplyRenderSceneViewport(PPFX::CPostEffect *this, bool a2, float a3);
int __thiscall PPFX::CPostEffect::ApplyPostTonemapViewport(PPFX::CPostEffect *this, bool a2);
// int __userpurge PPFX::CPostEffect::SetRenderSceneViewport@<eax>(PPFX::CPostEffect *this@<ecx>, int a2@<ebx>, int a3, int a4, int a5, int a6, bool a7);
// int __userpurge PPFX::CPostEffect::SetRenderSceneViewportScale@<eax>(PPFX::CRenderTextureArray **this@<ecx>, int a2@<ebx>, __int64 a3, float a4, float a5, bool a6);
int __thiscall PPFX::CPostEffect::SetTonemapViewportScale(PPFX::CPostEffect *this, float a2, float a3, float a4, float a5);
int __thiscall PPFX::CPostEffect::SetTonemapDestination(PPFX::CPostEffect *this, struct PPFX::IGPUSurface *a2);
int __thiscall PPFX::CPostEffect::SetTonemapDestination(PPFX::CPostEffect *this, struct PPFX::IGPUTexture *a2);
int __thiscall PPFX::CPostEffect::SetTonemapDestination(PPFX::CPostEffect *this, const struct PPFX::CRenderTexture *a2);
int __thiscall PPFX::CPostEffect::SetTonemapDestination(PPFX::CPostEffect *this, struct ID3D11View *a2, unsigned int a3, unsigned int a4, enum DXGI_FORMAT a5, int a6, int a7);
int __thiscall PPFX::CPostEffect::SetEffectSource(_DWORD *this, int a2, int a3);
int __thiscall PPFX::CPostEffect::SetEffectSource(PPFX::CPostEffect *this, struct ID3D11ShaderResourceView *a2, unsigned int a3, unsigned int a4, GPUUTIL *a5, int a6);
unsigned int __thiscall PPFX::CPostEffect::SetGlareModulatorSource(PPFX::CPostEffect *this, unsigned int a2, const struct PPFX::CRenderTexture *a3);
int __thiscall PPFX::CPostEffect::SetGlareModulatorSource(PPFX::CPostEffect *this, unsigned int a2, struct ID3D11ShaderResourceView *a3, unsigned int a4, unsigned int a5, GPUUTIL *a6);
unsigned int __thiscall PPFX::CPostEffect::SetEffectMaskColorSource(PPFX::CPostEffect *this, unsigned int a2, const struct PPFX::CRenderTexture *a3);
int __thiscall PPFX::CPostEffect::SetEffectMaskColorSource(PPFX::CPostEffect *this, unsigned int a2, struct ID3D11ShaderResourceView *a3, unsigned int a4, unsigned int a5, GPUUTIL *a6);
unsigned int __thiscall PPFX::CPostEffect::SetEffectMaskAlphaSource(PPFX::CPostEffect *this, unsigned int a2, const struct PPFX::CRenderTexture *a3);
int __thiscall PPFX::CPostEffect::SetEffectMaskAlphaSource(PPFX::CPostEffect *this, unsigned int a2, struct ID3D11ShaderResourceView *a3, unsigned int a4, unsigned int a5, GPUUTIL *a6);
int __thiscall PPFX::CPostEffect::SetAlphaOutputParameters(PPFX::CPostEffect *this, enum PPFX::EPFXALPHAOUTPUT a2, float a3);
int __thiscall PPFX::CPostEffect::SetColorGradingLutEnable(PPFX::CPostEffect *this, bool a2, bool a3);
int __thiscall PPFX::CPostEffect::SetColorGradingLutSource(PPFX::CPostEffect *this, struct PPFX::IGPUVolumeTexture *a2);
int __thiscall PPFX::CPostEffect::SetColorGradingLutSource(PPFX::CPostEffect *this, struct ID3D11ShaderResourceView *a2, unsigned int a3, enum DXGI_FORMAT a4);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldDepthRemapLutSource(PPFX::CPostEffect *this, const struct PPFX::CRenderTexture *a2);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldDepthRemapLutSource(PPFX::CPostEffect *this, struct ID3D11ShaderResourceView *a2, unsigned int a3, unsigned int a4, GPUUTIL *a5);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldDepthRemapLutParameters(PPFX::CPostEffect *this, enum PPFX::EPFX_DEPTHFACTORFORMAT a2, enum PPFX::EPFX_DEPTHFACTORFORMAT a3, enum PPFX::EPFX_DEPTHFACTORSOURCE a4, float a5);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldDepthRemapLutEnable(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetUserTexture(PPFX::CPostEffect *this, const struct PPFX::CRenderTexture *a2);
int __thiscall PPFX::CPostEffect::SetUserTexture(PPFX::CPostEffect *this, struct ID3D11ShaderResourceView *a2, unsigned int a3, unsigned int a4, GPUUTIL *a5);
int __thiscall PPFX::CPostEffect::GetRegisteredDeviceSurface_GpuSurface(PPFX::CPostEffect *this, struct ID3D11View *a2);
int __thiscall PPFX::CPostEffect::GetRegisteredDeviceTexture_GpuTexture(PPFX::CPostEffect *this, struct ID3D11ShaderResourceView *a2);
int __thiscall PPFX::CPostEffect::GetRegisteredDeviceTexture_RenderTexture(PPFX::CPostEffect *this, struct ID3D11ShaderResourceView *a2);
int __thiscall PPFX::CPostEffect::SetStaticSceneSource(PPFX::CPostEffect *this, unsigned int a2, unsigned int a3, enum DXGI_FORMAT a4, struct PPFX::IGPUTexture *a5);
// int __userpurge PPFX::CPostEffect::ApplyStaticSceneEffects@<eax>(PPFX::CPostEffect *this@<ecx>, int a2@<ebx>, int a3@<edi>, float a4, __int64 a5, bool a6, PPFX::CTextureUtil *a7);
int __thiscall PPFX::CPostEffect::UnregisterDeviceSurface(PPFX::CPostEffect *this, struct ID3D11View *a2);
int __thiscall PPFX::CPostEffect::UnregisterDeviceTexture(PPFX::CPostEffect *this, struct ID3D11ShaderResourceView *a2);
bool __thiscall PPFX::CPostEffect::GetAsyncDeviceFeedbackAvailability(PPFX::CPostEffect *__hidden this); // weak
int __thiscall PPFX::CPostEffect::InitializeAutoExposure(PPFX::CPostEffect *this, int a2, unsigned int a3, float a4);
int __thiscall PPFX::CPostEffect::InitializeAutoFocus(PPFX::CPostEffect *this, int a2, unsigned int a3);
int __thiscall PPFX::CPostEffect::SetAutoExposureEnable(PPFX::CPostEffect *this, int a2, bool a3);
int __thiscall PPFX::CPostEffect::SetAutoFocusEnable(PPFX::CPostEffect *this, int a2, bool a3);
int __thiscall PPFX::CPostEffect::SetAutoExposureAdjustment(PPFX::CPostEffect *this, int a2, float a3, float a4, float a5, float a6, float a7, float a8, float a9);
int __thiscall PPFX::CPostEffect::SetAutoExposureRange(PPFX::CPostEffect *this, int a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::SetAutoExposureMiddleGray(PPFX::CPostEffect *this, int a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::SetAutoExposureDelay(PPFX::CPostEffect *this, int a2, enum PPFX::EPFX_AUTOADJUSTDELAYMODE a3, float a4);
int __thiscall PPFX::CPostEffect::SetAutoExposureMeteringArea(PPFX::CPostEffect *this, int a2, float a3, float a4, float a5, float a6);
int __thiscall PPFX::CPostEffect::SetAutoFocusAdjustment(PPFX::CPostEffect *this, int a2, bool a3, float a4, int a5);
int __thiscall PPFX::CPostEffect::SetAutoFocusDistanceRange(PPFX::CPostEffect *this, int a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::SetAutoFocusPosition(PPFX::CPostEffect *this, int a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::SetAutoFocusDelay(PPFX::CPostEffect *this, int a2, enum PPFX::EPFX_AUTOADJUSTDELAYMODE a3, float a4);
int __thiscall PPFX::CPostEffect::SetAutoExposureAdjustmentReset(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CPostEffect::SetAutoFocusAdjustmentReset(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CPostEffect::InitializeColorMatrix(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SetColorMatrix(PPFX::CPostEffect *this, const __m128i *a2);
int __thiscall PPFX::CPostEffect::GetColorMatrix(PPFX::CPostEffect *this, __m128i *a2);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrix(PPFX::CPostEffect *this, float *a2);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixHue(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixGrayscale(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixNegative(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixSaturation(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixSaturation(PPFX::CPostEffect *this, __int64 a2, float a3);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixBrightness(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixModulation(PPFX::CPostEffect *this, float a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixContrast(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixContrast(PPFX::CPostEffect *this, __int64 a2, float a3);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixBias(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixBias(PPFX::CPostEffect *this, float a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixHsb(PPFX::CPostEffect *this, int a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixMonotone(PPFX::CPostEffect *this, __int64 a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixMonotone(PPFX::CPostEffect *this, float a2, float a3, float a4, float a5, float a6);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixSepiaTone(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::MultiplyColorMatrixFadeColor(PPFX::CPostEffect *this, float a2, float a3, float a4, float a5);
int __thiscall PPFX::CPostEffect::InitializeMatrix(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2);
int __thiscall PPFX::CPostEffect::SetMatrix(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, const __m128i *a3);
int __thiscall PPFX::CPostEffect::GetMatrix(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, __m128i *a3);
__m128i *__thiscall PPFX::CPostEffect::GetMatrix(char *this, __m128i *a2, int a3);
int __thiscall PPFX::CPostEffect::InverseMatrix(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2);
int __thiscall PPFX::CPostEffect::MultiplyMatrix(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, float *a3);
// int __userpurge PPFX::CPostEffect::MultiplyMatrixRotationX@<eax>(PPFX::CPostEffect *this@<ecx>, int a2@<edi>, enum PPFX::EPFX_MATRIXTYPE a3, float a4);
// int __userpurge PPFX::CPostEffect::MultiplyMatrixRotationY@<eax>(PPFX::CPostEffect *this@<ecx>, int a2@<edi>, enum PPFX::EPFX_MATRIXTYPE a3, float a4);
// int __userpurge PPFX::CPostEffect::MultiplyMatrixRotationZ@<eax>(PPFX::CPostEffect *this@<ecx>, int a2@<edi>, enum PPFX::EPFX_MATRIXTYPE a3, float a4);
int __thiscall PPFX::CPostEffect::MultiplyMatrixRotationAxis(_BYTE *this, int a2, int a3, int a4);
// int __userpurge PPFX::CPostEffect::MultiplyMatrixRotationAxis@<eax>(PPFX::CPostEffect *this@<ecx>, int a2@<edi>, enum PPFX::EPFX_MATRIXTYPE a3, __int64 a4, float a5, float a6);
int __thiscall PPFX::CPostEffect::MultiplyMatrixScaling(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3);
int __thiscall PPFX::CPostEffect::MultiplyMatrixScaling(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3, float a4, float a5);
int __thiscall PPFX::CPostEffect::MultiplyMatrixTranslation(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3, float a4, float a5);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorHue(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorGrayscale(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorNegative(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorSaturation(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorSaturation(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, float a4);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorBrightness(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorModulation(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3, float a4, float a5);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorModulationHue(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, int a3, float a4, float a5, float a6);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorContrast(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorContrast(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, float a4);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorBias(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorBias(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3, float a4, float a5);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorBiasHsi(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, float a4, float a5);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorHsb(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, int a3, float a4, float a5, float a6);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorMonotone(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, int a4, float a5);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorMonotone(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, int a4, float a5, float a6);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorMonotoneHue(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, int a3, float a4, __int64 a5);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorMonotoneHue(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, __int64 a3, float a4, float a5, char a6);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorSepiaTone(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorFade(PPFX::CPostEffect *this, float a2, float a3, float a4, float a5, float a6);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorTemperature(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::MultiplyMatrixColorWhiteBalance(PPFX::CPostEffect *this, enum PPFX::EPFX_MATRIXTYPE a2, float a3, float a4);
int __thiscall PPFX::CPostEffect::SetRenderSceneDepthReverse(PPFX::CPostEffect *this, bool a2, bool a3);
bool __thiscall PPFX::CPostEffect::GetRenderTargetStability(PPFX::IGPUDevice **this);
bool __thiscall PPFX::CPostEffect::GetRenderSceneSurfaceStability(PPFX::IGPUDevice **this);
bool __thiscall PPFX::CPostEffect::GetRenderSceneDepthStencilStability(PPFX::IGPUDevice **this);
char __thiscall PPFX::CPostEffect::IsSupported_DepthTexture(PPFX::CPostEffect *this);
char __thiscall PPFX::CPostEffect::IsSupported_RestoreDeviceStates(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SetRenderSceneHeightReverse_Gcm(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldEdgeQuality(PPFX::CPostEffect *this, const char *a2);
char __thiscall PPFX::CPostEffect::GetDepthOfFieldEdgeQualityAvailability(PPFX::CPostEffect *this, const char *a2);
int __thiscall PPFX::CPostEffect::GetDepthOfFieldEdgeQuality(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetInitialDepthOfFieldEdgeQuality(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SetDepthFactorSource(PPFX::CPostEffect *this, enum PPFX::EPFX_DEPTHFACTORSOURCE a2, const struct PPFX::CRenderTexture *a3, struct PPFX::IGPUTexture *a4, enum PPFX::EPFX_DEPTHFACTORFORMAT a5, float a6, float a7);
int __thiscall PPFX::CPostEffect::SetDepthFactorSource(PPFX::CPostEffect *this, enum PPFX::EPFX_DEPTHFACTORSOURCE a2, struct ID3D11ShaderResourceView *a3, unsigned int a4, unsigned int a5, GPUUTIL *a6, enum PPFX::EPFX_DEPTHFACTORFORMAT a7, __int64 a8);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldBackgroundLayerMaskThreshold(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::SetApertureFilterLevelVisualize(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetApertureFilterResultBlur(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldRemap(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldApertureNumLevels(PPFX::CPostEffect *this, int a2, int a3);
int __thiscall PPFX::CPostEffect::SetDepthOfFieldApertureDistanceRange(PPFX::CPostEffect *this, float a2, float a3);
int __thiscall PPFX::CPostEffect::SetGlareBloomNumLevels(PPFX::CPostEffect *this, int a2);
bool __thiscall PPFX::CPostEffect::GetGlareResultBlurAvailability(PPFX::CPostEffect *__hidden this); // weak
int __thiscall PPFX::CPostEffect::SetGlareResultBlur(PPFX::CRenderGlare **this, float a2);
BOOL __thiscall PPFX::CPostEffect::SetGlareStarSoftness(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::SetGlareStarLengthFovDependence(PPFX::CPostEffect *this, float a2);
int __thiscall PPFX::CPostEffect::SetGlareGenerationSrgbEnable(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::SetGlareBloomGaussianRadiusScale(PPFX::CPostEffect *this, float a2);
double __thiscall PPFX::CPostEffect::GetGlareBloomGaussianRadiusScale(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SetGlareBloomFilterThreshold(PPFX::CPostEffect *this, float a2);
double __thiscall PPFX::CPostEffect::GetGlareBloomFilterThreshold(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::SetGlareStarFilterThreshold(PPFX::CPostEffect *this, float a2);
double __thiscall PPFX::CPostEffect::GetGlareStarFilterThreshold(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::FlushManagement(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::ResetManagement(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetApertureShape(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetEffectBufferFormat(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetRenderSceneFormat(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetDepthStencilFormat(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetRenderSceneWidth(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetRenderSceneHeight(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetEffectBufferWidth(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetEffectBufferHeight(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetDeviceContext(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetDeviceFramebufferWidth(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetDeviceFramebufferHeight(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetAspectRatio(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetImageSensorAspectRatio(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetGlareAspectRatio(PPFX::CPostEffect *this);
double __thiscall PPFX::CPostEffect::GetDepthOfFieldEclipseAspectRatioScale(PPFX::CPostEffect *this);
BOOL __thiscall PPFX::CPostEffect::GetTilingEnable(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetTilingNumRects(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetTilingRectArray(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetTilingFramebufferWidth(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetTilingFramebufferHeight(PPFX::CPostEffect *this);
int __thiscall PPFX::CPostEffect::GetUsedTechniqueNames(PPFX::CPostEffect *this, char a2);
int __thiscall PPFX::CPostEffect::GetNumUsedTechniques(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::GetUsedVertexProgramNames(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::GetNumUsedVertexPrograms(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::GetUsedFragmentProgramNames(PPFX::CPostEffect *this, bool a2);
int __thiscall PPFX::CPostEffect::GetNumUsedFragmentPrograms(PPFX::CPostEffect *this, bool a2);
int PPFX::CPostEffect::GetMaxGlareQuality();
int PPFX::CPostEffect::GetMaxDepthOfFieldQuality();
int PPFX::CPostEffect::GetMaxDepthOfFieldInternalQuality();
int PPFX::CPostEffect::GetMaxApertureLevelCombination();
bool __cdecl PPFX::CPostEffect::GetDistanceFalloffParametersEnable(float, float, float, float); // weak
int __cdecl PPFX::CPostEffect::GetDistanceFalloffRequiredDepthRange(float a1, float a2, float a3, float a4, float *a5, float *a6);
struct PPFX::PFX_INITPARAM *__cdecl PPFX::CPostEffect::GetQualityParameters(int a1, int a2, int a3, int a4);
int __cdecl PPFX::CPostEffect::GetMultisampleParameters(int a1, int a2, int *a3, _DWORD *a4);
float *__cdecl PPFX::ColorWavelength(float *a1, float a2);
int __cdecl sub_7BE330(int a1);
int __cdecl sub_7BE380(int a1, char a2);
int __cdecl sub_7BE450(int a1);
int __cdecl sub_7BE4A0(int a1);
int __cdecl sub_7BE4F0(const char *a1);
int __cdecl sub_7BE640(int a1);
int __cdecl sub_7BE720(int a1);
unsigned int __cdecl sub_7BE7C0(int a1, int a2);
float *__cdecl PPFX::GPUMath_CIExyFromColorTemperature<float>(float *a1, float *a2);
int __cdecl PPFX::GPUMath_MatrixInverse<float>(int a1, const __m128i *a2);
bool __cdecl PPFX::GPUMath_MatrixIsIdentity<float>(float *a1);
_DWORD *__cdecl PPFX::GPUMath_MatrixScaling<float>(_DWORD *a1, _DWORD *a2, _DWORD *a3, _DWORD *a4);
_DWORD *__cdecl PPFX::GPUMath_MatrixTranslation<float>(_DWORD *a1, _DWORD *a2, _DWORD *a3, _DWORD *a4);
int __cdecl PPFX::GPUMath_RGBFromColorTemperature<float>(int a1, int a2, int *a3, float *a4, int *a5, char a6, char a7);
float *__cdecl PPFX::GPUMath_SetColorLuminance<float>(float *a1, float *a2, float *a3, char a4);
double __cdecl PPFX::Length<float>(float *a1);
_DWORD *__cdecl PPFX::PfxNewArray<unsigned int>(int a1, PPFX::CPfxMemoryAllocator *a2, const char *a3, int a4);
_DWORD *__cdecl PPFX::PfxNewArray<PPFX::PEAUTOEXPOSURE>(int a1, PPFX::CPfxMemoryAllocator *a2, const char *a3, int a4);
_DWORD *__cdecl PPFX::PfxNewArray<PPFX::PEAUTOFOCUS>(int a1, PPFX::CPfxMemoryAllocator *a2, const char *a3, int a4);
std::_Tree_node<std::pair<unsigned int const ,bool>,void *> **__thiscall std::_Tree_buy<std::pair<ID3D11ShaderResourceView * const,PPFX::CRenderTexture *>>::_Buynode<std::pair<ID3D11ShaderResourceView *,PPFX::CRenderTexture *>>(std::_Tree_buy<std::pair<unsigned int const ,bool>> *this, std::_Tree_node<std::pair<unsigned int const ,bool>,void *> **a2);
_DWORD *__thiscall std::_Tree<std::_Tmap_traits<ID3D11ShaderResourceView *,PPFX::CRenderTexture *,std::less<ID3D11ShaderResourceView *>,std::allocator<std::pair<ID3D11ShaderResourceView * const,PPFX::CRenderTexture *>>,0>>::_Insert_at<std::pair<ID3D11ShaderResourceView * const,PPFX::CRenderTexture *> &,std::_Tree_node<std::pair<ID3D11ShaderResourceView * const,PPFX::CRenderTexture *>,void *> *>(_DWORD *this, _DWORD *a2, char a3, _DWORD *a4, int a5, int a6);
int __thiscall std::_Tree<std::_Tmap_traits<ID3D11ShaderResourceView *,PPFX::CRenderTexture *,std::less<ID3D11ShaderResourceView *>,std::allocator<std::pair<ID3D11ShaderResourceView * const,PPFX::CRenderTexture *>>,0>>::_Insert_nohint<std::pair<ID3D11ShaderResourceView * const,PPFX::CRenderTexture *> &,std::_Tree_node<std::pair<ID3D11ShaderResourceView * const,PPFX::CRenderTexture *>,void *> *>(_DWORD *this, int a2, std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > >,std::_Iterator_base0> a3, const unsigned int *a4, int a5);
PPFX::DOFPARAM *__thiscall PPFX::DOFPARAM::DOFPARAM(PPFX::DOFPARAM *this);
PPFX::GLAREPARAM *__thiscall PPFX::GLAREPARAM::GLAREPARAM(PPFX::GLAREPARAM *this);
int __thiscall std::map<ID3D11ShaderResourceView *,PPFX::IGPUBaseTexture *>::~map<ID3D11ShaderResourceView *,PPFX::IGPUBaseTexture *>(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > >,std::_Iterator_base0> ***this);
int __cdecl PPFX::FXFMT_GetAccurateDecode(int a1);
int __cdecl PPFX::FXFMT_GetEncode(int a1);
int __cdecl PPFX::FXFMT_GetFastDecode(int a1);
int __cdecl PPFX::GPUFMT_GetLinearColorSpaceFormat(PPFX *this);
bool __cdecl PPFX::GPUFMT_IsSrgbFormat(PPFX *this);
int __cdecl PPFX::GPUIEFMT_GetFormatSize(int a1);
__m128i *__cdecl PPFX::GPUMath_ColorMatrixModulation(__m128i *a1, int a2, int a3, int a4, float a5);
__m128i *__cdecl PPFX::GPUMath_ColorMatrixMonotone(__m128i *a1, __int64 a2, int a3, float a4, float a5, char a6);
__m128i *__cdecl PPFX::GPUMath_ColorMatrixMonotoneHue(__m128i *a1, int a2, float a3, float a4, float a5, char a6, char a7);
char __cdecl PPFX::GPUUtil_IsAlphaFormat(PPFX *this);
bool __cdecl PPFX::GPUUtil_IsFP10Format(PPFX *this);
char __cdecl PPFX::GPUUtil_IsFX10Format(PPFX *this);
char __cdecl PPFX::GPUUtil_IsFX16Format(PPFX *this);
char __cdecl PPFX::GPUUtil_IsFX8Format(PPFX *this);
char __cdecl PPFX::GPUUtil_IsFloatingPointFormat(PPFX *this);
bool __cdecl PPFX::GPUUtil_IsSignedFormat(PPFX *this);
int __thiscall PPFX::CPostEffect::GetAutoExposureParam(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CPostEffect::GetAutoFocusParam(PPFX::CPostEffect *this, int a2);
int __thiscall PPFX::CRenderTextureArray::GetGPUTexture(PPFX::CRenderTextureArray *this, int a2);
PPFX::CTextureUtil *PPFX::CGPUTypedSingleObject<PPFX::CTextureUtil>::GetObjectA();
int __thiscall PPFX::CRenderTexture::GetSharedRenderTextureIndex(PPFX::CRenderTexture *this, const struct PPFX::CRenderTexture *a2);
int __thiscall PPFX::CRenderTextureArray::GetTexture(PPFX::CRenderTextureArray *this, int a2);
int __cdecl PPFX::HDRTMAP_GetEncodeFormat(int a1);
int __cdecl PPFX::HDRTMAP_GetPostmap(int a1);
int __cdecl PPFX::HDRTMAP_GetPremap(int a1);
int __thiscall PPFX::CPostEffect::InitializeFrameCount(PPFX::CPostEffect *this);
PPFX::CDepthOfField *__cdecl PPFX::CDepthOfField::Instantiate(const char *a1, int a2, const char *a3);
PPFX::CRenderGlare *__cdecl PPFX::CRenderGlare::Instantiate(const char *a1, int a2, const char *a3);
PPFX::CRenderTextureArray *__cdecl PPFX::CRenderTextureArray::Instantiate(const char *a1, int a2, const char *a3);
PPFX::CTextureLuminanceManage *__cdecl PPFX::CTextureLuminanceManage::Instantiate(const char *a1, int a2, const char *a3);
int __thiscall PPFX::CRenderTextureArray::RefTexture(PPFX::CRenderTextureArray *this, int a2);
int PPFX::CGPUTypedSingleObject<PPFX::CTextureUtil>::Release();
int __cdecl PPFX::CRenderTexture::ResolveCurrentFramebuffer(int a1, unsigned int a2);
char *__thiscall PPFX::MATRIXT44<float>::Set(char *this, int a2);
int __thiscall PPFX::CPostEffect::SetCameraMatrix(int this, const __m128i *a2, const __m128i *a3);
int __cdecl PPFX::CRenderTexture::SetFramebuffer(int a1, int a2, struct PPFX::IGPUTexture *a3, int a4, const __m128i *a5, __int64 a6, int a7, unsigned int a8);
_DWORD *__thiscall PPFX::MATRIXT44<float>::SetIdentity(_DWORD *this);
int __cdecl PPFX::CRenderTexture::ShareRenderTexture(struct PPFX::CRenderTexture *a1, struct PPFX::CRenderTexture *a2);
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<ID3D11View * const,PPFX::IGPUSurface *>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned int const ,bool>> > *this);
int __stdcall std::_Tree<std::_Tmap_traits<ID3D11ShaderResourceView *,PPFX::IGPUBaseTexture *,std::less<ID3D11ShaderResourceView *>,std::allocator<std::pair<ID3D11ShaderResourceView * const,PPFX::IGPUBaseTexture *>>,0>>::_Erase(int *a1);
_DWORD *__thiscall std::_Tree<std::_Tmap_traits<ID3D11View *,PPFX::IGPUSurface *,std::less<ID3D11View *>,std::allocator<std::pair<ID3D11View * const,PPFX::IGPUSurface *>>,0>>::_Lrotate(void *this, int a2);
_DWORD *__thiscall std::_Tree<std::_Tmap_traits<ID3D11View *,PPFX::IGPUSurface *,std::less<ID3D11View *>,std::allocator<std::pair<ID3D11View * const,PPFX::IGPUSurface *>>,0>>::_Rrotate(void *this, _DWORD *a2);
int __thiscall std::_Tree<std::_Tmap_traits<ID3D11View *,PPFX::IGPUSurface *,std::less<ID3D11View *>,std::allocator<std::pair<ID3D11View * const,PPFX::IGPUSurface *>>,0>>::clear(_DWORD *this);
_DWORD *__thiscall std::_Tree<std::_Tmap_traits<ID3D11View *,PPFX::IGPUSurface *,std::less<ID3D11View *>,std::allocator<std::pair<ID3D11View * const,PPFX::IGPUSurface *>>,0>>::erase(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > >,std::_Iterator_base0> ***this, _DWORD *a2, std::_Tree_node<std::pair<unsigned int const ,bool>,void *> *a3, std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > >,std::_Iterator_base0> **a4);
std::_Tree_node<std::pair<unsigned int const ,bool>,void *> **__thiscall std::_Tree<std::_Tmap_traits<ID3D11ShaderResourceView *,PPFX::IGPUBaseTexture *,std::less<ID3D11ShaderResourceView *>,std::allocator<std::pair<ID3D11ShaderResourceView * const,PPFX::IGPUBaseTexture *>>,0>>::erase(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > >,std::_Iterator_base0> ***this, std::_Tree_node<std::pair<unsigned int const ,bool>,void *> **a2, std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,bool> > >,std::_Iterator_base0> a3);
_DWORD *__thiscall std::_Tree<std::_Tmap_traits<ID3D11ShaderResourceView *,PPFX::CRenderTexture *,std::less<ID3D11ShaderResourceView *>,std::allocator<std::pair<ID3D11ShaderResourceView * const,PPFX::CRenderTexture *>>,0>>::find(int *this, _DWORD *a2, unsigned int *a3);
int __cdecl GPUUTIL::GPUUtil_GetPixelFormatSize(GPUUTIL *this);
bool __cdecl GPUUTIL::GPUUtil_IsForceSrgbWriteFormat(GPUUTIL *this);
const char *__cdecl GPUUTIL::GPUUtil_GetFormatString(GPUUTIL *this);
const char *__cdecl GPUUTIL::GPUUtil_GetMutisampleTypeString(int a1);
char *__cdecl GPUUTIL::GPUUtil_GetUsageString(GPUUTIL *this, char a2);
const char *__cdecl GPUUTIL::GPUUtil_GetIndexBufferFormatString(int a1);
const char *__cdecl GPUUTIL::GPUUtil_GetPlatformErrorString(GPUUTIL *this);
const char *__cdecl GPUUTIL::GPUUtil_GetErrorString(GPUUTIL *this);
int __cdecl GPUUTIL::GPUUtil_CheckResolveFormatConversion(GPUUTIL *this, GPUUTIL *a2);
int __cdecl GPUUTIL::GPUUtil_TexLevelDimension(unsigned int this, char a2);
unsigned int GPUUTIL::GPUUtil_LevelsFromDimension();
int __cdecl GPUUTIL::GPUUtil_GetTypelessFormat(GPUUTIL *this);
int __cdecl GPUUTIL::GPUUtil_GetShaderResourceFormatFromDepthStencilFormat(GPUUTIL *this, enum DXGI_FORMAT a2);
int __cdecl GPUUTIL::GPUUtil_GetDepthStencilFormatFromShaderResourceFormat(GPUUTIL *this);
int __cdecl GPUUTIL::GPUUtil_GetDepthStencilFormatFromTypelessFormat(GPUUTIL *this);
int __cdecl GPUUTIL::GPUUtil_GetDepthStencilFormatFromShaderResourceOrTypelessFormat(GPUUTIL *this);
bool __cdecl GPUUTIL::GPUUtil_IsTypelessFormat(GPUUTIL *this);
const char *__cdecl GPUUTIL::GPUUtil_GetD3DInputSemanticFromGPUInputSemantic(int a1);
int __cdecl GPUUTIL::GPUUtil_GetD3DInputElementFromGPUInputElement(GPUUTIL *this, const struct PPFX::GPUINPUTELEMENT *a2);
unsigned int *__cdecl GPUUTIL::GPUUtil_CrateD3DInputElementArrayFromGPUInputElementArray(GPUUTIL *this, unsigned int a2);
int __cdecl GPUUTIL::GPUUtil_GetRenderableTileSize(_DWORD *a1, _DWORD *a2, int a3, int a4);
int __cdecl GPUUTIL::GPUUtil_GetNumMultisamples(int a1);
int __cdecl GPUUTIL::GPUUtil_GetGPUMultisampleType(int a1);
int __cdecl GPUUTIL::GPUUtil_GetNumMultisamplesAndQuality(int a1, int a2, int *a3, _DWORD *a4);
int __cdecl GPUUTIL::GPUUtil_GetGPUMultisampleTypeAndQuality(int this, int a2, int *a3, enum PPFX::GPUMULTISAMPLE_TYPE *a4);
bool __cdecl GPUUTIL::GPUUtil_IsGPUMultisample(int a1, int a2);
bool __cdecl GPUUTIL::GPUUtil_IsMultisample(GPUUTIL *this, int a2);
int __cdecl GPUUTIL::GPUUtil_GetMultisampleMode(int a1, int a2);
int __cdecl GPUUTIL::GPUUtil_GetSwizzledOffsetNV(GPUUTIL *this, char a2, int a3, signed int a4);
int __cdecl GPUUTIL::GPUUtil_CopyImage(GPUUTIL *this, char *a2, PPFX *a3, unsigned int a4, size_t Size, char a6, size_t a7, size_t a8);
bool __cdecl PPFX::GPUDef_IsPowerOfTwo(PPFX *this, unsigned int a2, int *a3, int *a4);
PPFX::GPURENDERTILE *__thiscall PPFX::GPURENDERTILE::GPURENDERTILE(PPFX::GPURENDERTILE *this);
PPFX::GPURENDERTILE *__thiscall PPFX::GPURENDERTILE::GPURENDERTILE(PPFX::GPURENDERTILE *this, const struct PPFX::GPURENDERTILE *a2);
PPFX::GPURENDERTILE *__thiscall PPFX::GPURENDERTILE::GPURENDERTILE(PPFX::GPURENDERTILE *this, const struct PPFX::RENDERTILE *a2);
int __thiscall PPFX::GPURENDERTILE::~GPURENDERTILE(PPFX::GPURENDERTILE *this);
PPFX::GPURENDERTILE *__thiscall PPFX::GPURENDERTILE::operator=(PPFX::GPURENDERTILE *this, PPFX::GPURENDERTILE *a2);
PPFX::GPURENDERTILE *__thiscall PPFX::GPURENDERTILE::operator=(PPFX::GPURENDERTILE *this, PPFX::GPURENDERTILE *a2);
void __thiscall PPFX::GPURENDERTILE::UpdateRenderTargetSize(PPFX::GPURENDERTILE *__hidden this); // weak
int __thiscall PPFX::CRenderTexture::ResolveRenderTextureTile(int this, int a2, unsigned int *a3, int a4, int a5, int a6, char a7, int a8, int a9, int a10, _BYTE *a11);
int __thiscall PPFX::CRenderTexture::ResolveRenderTexture(int *this, int a2, unsigned int *a3, int a4, int a5, int a6, char a7, int a8, int a9, int a10, int a11, __int64 a12, _BYTE *a13);
int __thiscall PPFX::CRenderTexture::ResolveDepthStencilTextureTile(PPFX::CRenderTexture *this, unsigned int a2, int a3, float a4, unsigned int a5, bool *a6);
int __thiscall PPFX::CRenderTexture::ResolveDepthStencilTexture(PPFX::CRenderTexture *this, unsigned int a2, bool a3, float a4, unsigned int a5, float a6, unsigned int a7, bool *a8);
BOOL __thiscall PPFX::CRenderTexture::GetTilingEnable(PPFX::CRenderTexture *this);
int __thiscall PPFX::CRenderTexture::GetTilingNumRects(PPFX::CRenderTexture *this);
int __thiscall PPFX::CRenderTexture::GetTilingRectArray(PPFX::CRenderTexture *this);
int __thiscall PPFX::CRenderTexture::GetTilingFramebufferWidth(PPFX::CRenderTexture *this);
int __thiscall PPFX::CRenderTexture::GetTilingFramebufferHeight(PPFX::CRenderTexture *this);
int __thiscall PPFX::CRenderTexture::Construct(PPFX::CRenderTexture *this, const char *a2);
void __thiscall PPFX::CRenderTexture::InitializeLocalSystemMemory(PPFX::CRenderTexture *__hidden this); // weak
void __thiscall PPFX::CRenderTexture::InitializeLocalGPUInfos(PPFX::CRenderTexture *__hidden this); // weak
int __thiscall PPFX::CRenderTexture::CreateDeviceResources(PPFX::CRenderTexture *this);
int *__thiscall PPFX::CRenderTexture::CreateRenderTile(int *this, int a2, int a3, int a4, int a5, int a6, int a7);
int __thiscall PPFX::CRenderTexture::CreateRenderTile(int *this, int a2, int a3, int a4, int a5, int a6, int a7, int a8);
int __thiscall PPFX::CRenderTexture::CreateRenderTargetSurface(int this, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10);
int __thiscall PPFX::CRenderTexture::UpdateTexCoordScaleOffset(PPFX::CRenderTexture *this);
PPFX::CRenderTexture *__thiscall PPFX::CRenderTexture::CRenderTexture(PPFX::CRenderTexture *this, const char *a2);
int __thiscall PPFX::CRenderTexture::Initialize(__m128i *this, const __m128i *a2);
int __thiscall PPFX::CRenderTexture::RegisterUserRenderTile(PPFX::CRenderTexture *this, const struct PPFX::RENDERTILE *a2, const struct PPFX::RENDERTILE *a3);
int __thiscall PPFX::CRenderTexture::SetActiveSize(const struct PPFX::CRenderTexture **this, int a2, int a3, int a4, int a5);
int __thiscall PPFX::CRenderTexture::SetDepthRange(PPFX::CRenderTexture *this, float a2, float a3);
bool __thiscall PPFX::CRenderTexture::GetRenderSurfaceStability(PPFX::IGPUDevice **this);
int __thiscall PPFX::CRenderTexture::GenerateMipMaps(PPFX::CRenderTexture *this);
char *__thiscall PPFX::CRenderTexture::~CRenderTexture(PPFX::CRenderTexture *this);
int __thiscall PPFX::CRenderTexture::InitializeDevice(PPFX::CRenderTexture *this, struct PPFX::IGPUDevice *a2);
int __thiscall PPFX::CRenderTexture::InitializeDeviceTexture(const struct PPFX::CRenderTexture **this, struct PPFX::IGPUDevice *a2, struct PPFX::IGPUTexture *a3);
int __thiscall PPFX::CRenderTexture::UninitializeDevice(PPFX::CRenderTexture *this);
int __thiscall PPFX::CRenderTexture::GetAvailability(PPFX::CRenderTexture *this);
int __thiscall PPFX::CRenderTexture::UninitializeSystemObjects(PPFX::CRenderTexture *this);
int __thiscall PPFX::CRenderTexture::ColorFill(int this, const __m128i *a2, int a3);
int __thiscall PPFX::CRenderTexture::ClearAllGPUResources(void *this, const __m128i *a2);
int __thiscall PPFX::CRenderTexture::SetRenderTarget(PPFX::CRenderTexture *this, int a2, int a3, bool a4, unsigned int *a5, unsigned int a6);
int __cdecl PPFX::CRenderTexture::GetEffectiveMultisampleDownsampleFilter(int a1, int a2, int a3, int a4);
int __cdecl PPFX::CRenderTexture::ResolveCurrentRenderTexture(int a1, int a2, int a3, int a4, __int64 a5, _BYTE *a6);
int __cdecl PPFX::CRenderTexture::ResolveCurrentDepthStencilTexture(unsigned int a1, const struct PPFX::CRenderTexture *a2, __int64 a3, bool *a4);
int __cdecl PPFX::CRenderTexture::ResolveCurrentFramebuffer(int a1, int a2, unsigned int a3, const struct PPFX::CRenderTexture *a4, int a5, __int64 a6, _BYTE *a7, bool *a8);
int __cdecl PPFX::CRenderTexture::BeginTiling(unsigned int a1, const __m128i *a2, float a3, unsigned int a4);
int PPFX::CRenderTexture::EndTiling();
int __cdecl PPFX::CRenderTexture::SetFramebuffer(unsigned int a1, int a2, int a3, struct PPFX::IGPUTexture *a4, int a5, const __m128i *a6, __int64 a7, int a8, unsigned int a9);
int __cdecl PPFX::CRenderTexture::SetDepthStencilSurface(struct PPFX::IGPUSurface *a1, struct PPFX::IGPUTexture *a2);
int *__cdecl PPFX::CRenderTexture::CreateRenderTile(int a1, int a2);
PPFX::CRenderTexture *__thiscall PPFX::CRenderTexture::`scalar deleting destructor'(PPFX::CRenderTexture *this, char a2);
int __cdecl PPFX::CreateResourceFlagsFromRenderTextureFlags(unsigned int this);
int __thiscall PPFX::CRenderTexture::GetGPURenderSurface(_DWORD *this, int a2, int a3);
int __cdecl PPFX::CRenderTexture::ResetCurrentRenderTexturePtr(int a1);
char __thiscall PPFX::IGPUDevice::IsSupported_ShaderModel3(PPFX::IGPUDevice *this);
char __thiscall PPFX::IGPUDevice::IsRenderTargetMemoryCanBeDiscarded(PPFX::IGPUDevice *this);
int __thiscall PPFX::IGPUDevice::IncreaseGPUAllocatedMemorySizeInBytes(PPFX::IGPUDevice *this, int a2);
int __thiscall PPFX::IGPUDevice::DecreaseGPUAllocatedMemorySizeInBytes(PPFX::IGPUDevice *this, int a2);
int __thiscall PPFX::IGPUDevice::InitializeDeviceBuffers(PPFX::IGPUDevice *this);
int __thiscall PPFX::IGPUDevice::InitializeDevice_Caps(PPFX::IGPUDevice *this);
int __thiscall PPFX::IGPUDevice::InitializeDevice(PPFX::IGPUDevice *this, const __m128i *a2, struct ID3D11DeviceContext *a3);
GPUUTIL *__thiscall PPFX::IGPUDevice::InitializeDevice_CreateDeviceStates_DrawRectDefaultStates(PPFX::IGPUDevice *this);
int __thiscall PPFX::IGPUDevice::InitializeDevice_CreateDeviceStates_RenderStateMode(_DWORD **this, int a2);
int __thiscall PPFX::IGPUDevice::InitializeDevice_CreateDeviceStates_SamplerStateMode(_DWORD **this, int a2);
GPUUTIL *__thiscall PPFX::IGPUDevice::InitializeDevice_CreateDeviceStates(PPFX::IGPUDevice *this);
int __thiscall PPFX::IGPUDevice::ReleaseD3DDeviceStates(PPFX::IGPUDevice *this);
int __thiscall PPFX::IGPUDevice::ApplyRenderState_DepthOffset(PPFX::IGPUDevice *this, float a2, float a3);
int __thiscall PPFX::IGPUDevice::GetD3DDeviceBackBuffer(PPFX::IGPUDevice *this, struct ID3D11View **a2);
int __thiscall PPFX::IGPUDevice::GetD3DDeviceDepthStencilSurface(PPFX::IGPUDevice *this, struct ID3D11View **a2);
PPFX::IGPUDevice *__thiscall PPFX::IGPUDevice::IGPUDevice(PPFX::IGPUDevice *this);
void __thiscall PPFX::IGPUDevice::~IGPUDevice(PPFX::IGPUDevice *__hidden this); // weak
int __thiscall PPFX::IGPUDevice::SetRenderTarget_ED3D10OMRENDERTARGETS(PPFX::IGPUDevice *this, unsigned int a2, struct PPFX::IGPUSurface *a3, unsigned int a4);
int __thiscall PPFX::IGPUDevice::SetDepthStencilSurface_ED3D10OMRENDERTARGETS(PPFX::IGPUDevice *this, struct PPFX::IGPUSurface *a2);
int __thiscall PPFX::IGPUDevice::ReleaseDeviceBuffers(PPFX::IGPUDevice *this);
int __thiscall PPFX::IGPUDevice::GetResetAvailability(PPFX::IGPUDevice *this, struct PPFX::IGPUDevice *a2);
int __thiscall PPFX::IGPUDevice::TestCooperativeLevel(PPFX::IGPUDevice *this);
int __thiscall PPFX::IGPUDevice::Reset(PPFX::IGPUDevice *this, const __m128i *a2);
int __thiscall PPFX::IGPUDevice::SetRenderTarget(PPFX::IGPUDevice *this, unsigned int a2, struct PPFX::IGPUSurface *a3, unsigned int a4);
int __thiscall PPFX::IGPUDevice::SetDepthStencilSurface(PPFX::IGPUDevice *this, struct PPFX::IGPUSurface *a2);
int __thiscall PPFX::IGPUDevice::SetIndexBuffer(PPFX::IGPUDevice *this, struct PPFX::IGPUIndexBuffer *a2, unsigned int a3);
int __thiscall PPFX::IGPUDevice::GetRenderTarget(PPFX::IGPUDevice *this, unsigned int a2, struct PPFX::IGPUSurface **a3);
int __thiscall PPFX::IGPUDevice::GetDepthStencilSurface(PPFX::IGPUDevice *this, struct PPFX::IGPUSurface **a2);
int __thiscall PPFX::IGPUDevice::GetBackBuffer(PPFX::IGPUDevice *this, struct PPFX::IGPUSurface **a2);
int __thiscall PPFX::IGPUDevice::GetIndexBuffer(PPFX::IGPUDevice *this, struct PPFX::IGPUIndexBuffer **a2);
int __thiscall PPFX::IGPUDevice::SetTexture(PPFX::IGPUDevice *this, unsigned int a2, struct PPFX::IGPUBaseTexture *a3);
int __thiscall PPFX::IGPUDevice::GetTexture(PPFX::IGPUDevice *this, unsigned int a2, struct PPFX::IGPUBaseTexture **a3);
int __thiscall PPFX::IGPUDevice::SetViewport(PPFX::IGPUDevice *this, const struct PPFX::GPUVIEWPORT *a2);
int __thiscall PPFX::IGPUDevice::GetViewport(PPFX::IGPUDevice *this, struct PPFX::GPUVIEWPORT *a2);
int __thiscall PPFX::IGPUDevice::SetScissor(PPFX::IGPUDevice *this, const struct PPFX::GPUVIEWPORT *a2);
int __thiscall PPFX::IGPUDevice::SetScissor(PPFX::IGPUDevice *this, const struct tagRECT *a2);
int __thiscall PPFX::IGPUDevice::ApplyRenderState_ColorWriteMask(PPFX::IGPUDevice *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::ApplyRenderState_DepthWriteMask(PPFX::IGPUDevice *this, unsigned int a2);
int __stdcall PPFX::IGPUDevice::ApplyRenderState_DepthTestEnable(int a1);
int __stdcall PPFX::IGPUDevice::ApplyRenderState_DepthFunc(int a1);
int __thiscall PPFX::IGPUDevice::ApplyRenderState_AlphaTestEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __stdcall PPFX::IGPUDevice::ApplyRenderState_AlphaFunc(int a1, int a2);
int __thiscall PPFX::IGPUDevice::ApplyRenderState_BlendEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __stdcall PPFX::IGPUDevice::ApplyRenderState_BlendFunc(int a1, int a2);
int __thiscall PPFX::IGPUDevice::ApplyRenderState_BlendColor(PPFX::IGPUDevice *this, float a2, float a3, float a4, float a5);
int __stdcall PPFX::IGPUDevice::ApplyRenderState_BlendEquation(int a1, int a2);
int __thiscall PPFX::IGPUDevice::ApplyRenderState_DitherEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::ApplyRenderState_FogEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::ApplyRenderState_LightingEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::ApplyRenderState_ScissorTestEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::ApplyRenderState_StencilTestEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __stdcall PPFX::IGPUDevice::ApplyRenderState_PolygonMode(int a1);
int __stdcall PPFX::IGPUDevice::ApplyRenderState_ShadeMode(int a1);
int __stdcall PPFX::IGPUDevice::ApplyRenderState_CullFace(int a1);
int __thiscall PPFX::IGPUDevice::ApplyRenderState_SrgbWriteEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::SetRenderState_ColorWriteMask(PPFX::IGPUDevice *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::SetRenderState_DepthWriteMask(PPFX::IGPUDevice *this, unsigned int a2);
int __stdcall PPFX::IGPUDevice::SetRenderState_DepthTestEnable(int a1);
int __stdcall PPFX::IGPUDevice::SetRenderState_DepthFunc(int a1);
int __thiscall PPFX::IGPUDevice::SetRenderState_AlphaTestEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __stdcall PPFX::IGPUDevice::SetRenderState_AlphaFunc(int a1, int a2);
int __thiscall PPFX::IGPUDevice::SetRenderState_BlendEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __stdcall PPFX::IGPUDevice::SetRenderState_BlendFunc(int a1, int a2);
int __thiscall PPFX::IGPUDevice::SetRenderState_BlendColor(PPFX::IGPUDevice *this, float a2, float a3, float a4, float a5);
int __stdcall PPFX::IGPUDevice::SetRenderState_BlendEquation(int a1, int a2);
int __thiscall PPFX::IGPUDevice::SetRenderState_DitherEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::SetRenderState_FogEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::SetRenderState_LightingEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::SetRenderState_ScissorTestEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::SetRenderState_StencilTestEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __stdcall PPFX::IGPUDevice::SetRenderState_PolygonMode(int a1);
int __stdcall PPFX::IGPUDevice::SetRenderState_ShadeMode(int a1);
int __stdcall PPFX::IGPUDevice::SetRenderState_CullFace(int a1);
int __thiscall PPFX::IGPUDevice::SetRenderState_SrgbWriteEnable(PPFX::IGPUDevice *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::InvalidateRenderStateModeCache(PPFX::IGPUDevice *this);
int __thiscall PPFX::IGPUDevice::InvalidateSamplerStateModeCache(PPFX::IGPUDevice *this, int a2);
int __thiscall PPFX::IGPUDevice::ApplyRenderStateMode(int this, unsigned int a2, char a3);
int __thiscall PPFX::IGPUDevice::SetRenderStateMode(_DWORD *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::GetRenderStateMode(_DWORD *this);
int __thiscall PPFX::IGPUDevice::SetRenderStateMode_Blend(_DWORD *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::SetRenderStateMode_ColorMask(_DWORD *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::SetRenderStateMode_ScissorTest(_DWORD *this, unsigned int a2);
int __thiscall PPFX::IGPUDevice::GetRenderStateMode_Blend(_DWORD *this);
int __thiscall PPFX::IGPUDevice::GetRenderStateMode_ColorMask(int *this);
int __thiscall PPFX::IGPUDevice::GetRenderStateMode_ScissorTest(int *this);
int __thiscall PPFX::IGPUDevice::SetRenderStateMode_BlendColor(char *this, const __m128i *a2);
int __thiscall PPFX::IGPUDevice::ApplySamplerStateMode(_DWORD **this, unsigned int a2, unsigned int a3, char a4);
int __thiscall PPFX::IGPUDevice::ApplyDefaultStatesForDrawRect(PPFX::IGPUDevice *this);
int __thiscall PPFX::IGPUDevice::Clear(_DWORD *this, int a2, const __m128i *a3, __int64 a4);
int __thiscall PPFX::IGPUDevice::Clear(PPFX::IGPUDevice *this, unsigned int a2, unsigned int a3, float a4, unsigned int a5);
int __thiscall PPFX::IGPUDevice::ClearVertexInputs(PPFX::IGPUDevice *this);
int __thiscall PPFX::IGPUDevice::ResetStateMapping(PPFX::IGPUDevice *this);
int __thiscall PPFX::IGPUDevice::DrawVertices(_DWORD **this, int a2, int a3, int a4);
int __thiscall PPFX::IGPUDevice::DrawIndices(int this, int a2, int a3, int a4, int a5, int a6);
// int __userpurge PPFX::IGPUDevice::CreateTexture@<eax>(PPFX::IGPUDevice *a1@<ecx>, const char *a2@<edi>, int a3, int a4, int a5, GPUUTIL *a6, GPUUTIL *a7, int a8, int a9, PPFX::IGPUTexture **a10, int a11);
// int __userpurge PPFX::IGPUDevice::CreateVolumeTexture@<eax>(const char *a1@<edi>, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, GPUUTIL *a6, GPUUTIL *a7, struct PPFX::IGPUVolumeTexture **a8, unsigned int a9);
// int __userpurge PPFX::IGPUDevice::CreateTexture@<eax>(PPFX::IGPUDevice *this@<ecx>, const char *a2@<edi>, unsigned int a3, unsigned int a4, unsigned int a5, GPUUTIL *a6, GPUUTIL *a7, struct ID3D11ShaderResourceView *a8, struct PPFX::IGPUTexture **a9);
// int __userpurge PPFX::IGPUDevice::CreateVolumeTexture@<eax>(PPFX::IGPUDevice *this@<ecx>, const char *a2@<edi>, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6, GPUUTIL *a7, GPUUTIL *a8, struct ID3D11ShaderResourceView *a9, struct PPFX::IGPUVolumeTexture **a10);
// int __userpurge PPFX::IGPUDevice::CreateRenderTarget@<eax>(struct PPFX::IGPUDevice *a1@<ecx>, const char *a2@<edi>, int a3, int a4, GPUUTIL *a5, int a6, int a7, PPFX::IGPUSurface **a8, int a9, int a10, int a11);
// int __userpurge PPFX::IGPUDevice::CreateDepthStencilSurface@<eax>(struct PPFX::IGPUDevice *a1@<ecx>, const char *a2@<edi>, int a3, int a4, GPUUTIL *a5, int a6, int a7, PPFX::IGPUSurface **a8, int a9, int a10, int a11);
// int __userpurge PPFX::IGPUDevice::CreateSurface@<eax>(PPFX::IGPUDevice *this@<ecx>, const char *a2@<edi>, int a3, int a4, GPUUTIL *a5, struct PPFX::IGPUSurface **a6, int a7);
// int __userpurge PPFX::IGPUDevice::CreateSurface@<eax>(struct PPFX::IGPUDevice *a1@<ecx>, const char *a2@<edi>, int a3, int a4, GPUUTIL *a5, int a6, int a7, struct ID3D11View *a8, PPFX::IGPUSurface **a9);
// int __userpurge PPFX::IGPUDevice::CreateVertexBuffer@<eax>(PPFX::IGPUDevice *this@<ecx>, const char *a2@<edi>, const char *a3, unsigned int a4, GPUUTIL *a5, struct PPFX::IGPUVertexBuffer **a6, unsigned int a7, void *a8);
// int __userpurge PPFX::IGPUDevice::CreateIndexBuffer@<eax>(struct PPFX::IGPUDevice *a1@<ecx>, const char *a2@<edi>, const char *a3, unsigned int a4, int a5, GPUUTIL *a6, PPFX::IGPUIndexBuffer **a7, int a8, void *a9);
int __thiscall PPFX::IGPUDevice::CreateInputAttribute(PPFX::IGPUDevice *this, const struct PPFX::GPUINPUTELEMENT *a2, unsigned int a3, const void *a4, unsigned int a5, struct PPFX::IGPUInputAttribute **a6);
int __thiscall PPFX::IGPUDevice::CreateQueryOcclusion(PPFX::IGPUDevice *this, struct PPFX::IGPUQueryOcclusion **a2);
int __thiscall PPFX::IGPUDevice::CheckD3D10DeviceMultisampleQualityLevels(PPFX::IGPUDevice *this, enum DXGI_FORMAT a2, unsigned int a3, unsigned int *a4);
int __thiscall PPFX::IGPUDevice::CheckD3D10DeviceMultisampleMode(void *this, int a2, unsigned int a3, unsigned int a4);
int __thiscall PPFX::IGPUDevice::GetDeviceFormatSupport(_DWORD **this, unsigned int a2, GPUUTIL *a3);
int __thiscall PPFX::IGPUDevice::CheckDeviceMultisampleMode(void *this, int a2, int a3, int a4);
unsigned int __thiscall PPFX::IGPUDevice::CheckDeviceFormat(void *this, int a2, int a3, int a4);
int __thiscall PPFX::IGPUDevice::GetDeviceFormatUsageSupported(void *this, int a2, int a3, int a4, int a5, int a6);
PPFX::IGPUDevice *__cdecl PPFX::IGPUDevice::CreateDevice(const __m128i *a1, struct ID3D11DeviceContext *a2);
PPFX::IGPUDevice *__thiscall PPFX::IGPUDevice::`vector deleting destructor'(PPFX::IGPUDevice *this, char a2);
int __cdecl PPFX::GPUDef_GetGPUUsageFromD3D10FormatSupport(unsigned int this);
int __thiscall PPFX::IGPUDevice::SetD3DInputAttribute(PPFX::IGPUDevice *this, struct ID3D11InputLayout *a2);
int __thiscall PPFX::IGPUDevice::SetViewportHeightReverse(PPFX::IGPUDevice *this, bool a2, unsigned int a3);
int __thiscall PPFX::IGPUDevice::SetViewportPixelOffset(PPFX::IGPUDevice *this, float a2, float a3);
PPFX::String *__thiscall PPFX::String::Clear(PPFX::String *this);
void __thiscall PPFX::String::Realloc(PPFX::String *this, int Size, int a3);
void *__thiscall PPFX::String::Copy(void **this, void **a2);
PPFX::String *__thiscall PPFX::String::ReadAllLines(PPFX::String *this, struct _iobuf *Stream);
PPFX::String *__thiscall PPFX::String::Set(PPFX::String *this, int a2);
PPFX::String *__thiscall PPFX::String::Set(PPFX::String *this, const char *Src);
PPFX::String *__thiscall PPFX::String::Set(PPFX::String *this, const char *Src, int a3, signed int Size);
PPFX::String *__thiscall PPFX::String::Set(PPFX::String *this, const struct PPFX::String *a2);
PPFX::String *__thiscall PPFX::String::Set(PPFX::String *this, const void **a2, int a3);
PPFX::String *__thiscall PPFX::String::Set(PPFX::String *this, char a2);
char *__thiscall PPFX::String::~String(PPFX::String *this);
PPFX::String *__thiscall PPFX::String::Length(PPFX::String *this, int a2);
PPFX::String *__thiscall PPFX::String::ReplaceString(PPFX::String *this, char a2, char a3);
const char **__thiscall PPFX::String::ReplaceString(const char **this, const char **a2, const char **a3);
PPFX::String *__thiscall PPFX::String::Lower(PPFX::String *this);
PPFX::String *__thiscall PPFX::String::Upper(PPFX::String *this);
struct PPFX::String *PPFX::String::Format(PPFX::String *__hidden this, const char *Format, ...); // weak
struct PPFX::String *PPFX::String::AddFormat(PPFX::String *__hidden this, const char *Format, ...); // weak
void **__thiscall PPFX::String::ReadFile(void **this, const char **a2);
const char **__thiscall PPFX::String::WriteFile(const char **this, const char **a2);
// PPFX::String *__userpurge PPFX::String::Token@<eax>(PPFX::String *a1@<ecx>, unsigned int a2@<ebx>, PPFX::String *a3, const char *a4, const char *a5, const char *a6, int a7, size_t Size, int a9);
size_t *__thiscall PPFX::String::TokenLine(PPFX::String *this, size_t *a2, int *a3, int *a4);
PPFX::String *__thiscall PPFX::String::Mid(PPFX::String *this, int a2, signed int Size);
PPFX::String *__cdecl PPFX::String::Mid(PPFX::String *a1, int *a2, int a3, int a4);
PPFX::String *__thiscall PPFX::String::MidString(PPFX::String *this, int a2, int a3);
PPFX::String *__cdecl PPFX::String::MidString(PPFX::String *a1, int *a2, int a3, int a4);
PPFX::String *__thiscall PPFX::String::Left(PPFX::String *this, signed int a2);
PPFX::String *__cdecl PPFX::String::Left(PPFX::String *a1, int *a2, int a3);
PPFX::String *__thiscall PPFX::String::Right(PPFX::String *this, signed int a2);
PPFX::String *__cdecl PPFX::String::Right(PPFX::String *a1, const struct PPFX::String *a2, int a3);
PPFX::String *__thiscall PPFX::String::FileDirectory(int *this, PPFX::String *a2, char a3);
PPFX::String *__thiscall PPFX::String::FileNamePart(const char **this, PPFX::String *a2, char a3);
size_t *__stdcall PPFX::String::FileSuffix(size_t *a1, char a2);
int *__stdcall PPFX::String::CutFileSuffix(int *a1, char a2);
int __thiscall PPFX::String::Search(PPFX::String *this, const char *a2, int a3, int a4);
int __thiscall PPFX::String::Search(PPFX::String *this, char a2, int a3);
int __thiscall PPFX::String::SearchToLeft(PPFX::String *this, char *a2, int a3, int a4);
int __thiscall PPFX::String::SearchToLeft(PPFX::String *this, char a2, int a3);
int __thiscall PPFX::String::SearchPair(PPFX::String *this, int a2, const char **a3, const char **a4, bool a5);
int __thiscall PPFX::String::operator/(_DWORD *this, int *a2);
int __thiscall PPFX::String::operator/(_DWORD *this, const char *a2);
int __thiscall PPFX::String::operator/(_DWORD *this, char a2);
int __thiscall PPFX::String::operator=(int this, int a2);
int __thiscall PPFX::String::operator=(int this, const char *Src);
_DWORD *__thiscall PPFX::String::operator=(_DWORD *this, char a2);
BOOL __thiscall PPFX::String::Equ(const char **this, const struct PPFX::String *a2, int a3);
int __thiscall PPFX::String::Cmp(const char **this, char *Str2, int MaxCount);
int __thiscall PPFX::String::CmpNoCase(PPFX::String *this, const char *a2, int MaxCount);
BOOL __thiscall PPFX::String::operator==(const char **this, int a2);
BOOL __thiscall PPFX::String::operator!=(const char **this, int a2);
BOOL __thiscall PPFX::String::operator==(const char **this, const char *a2);
BOOL __thiscall PPFX::String::operator!=(const char **this, const char *a2);
BOOL __thiscall PPFX::String::operator==(_BYTE **this, char a2);
BOOL __thiscall PPFX::String::operator!=(_BYTE **this, char a2);
BOOL __cdecl PPFX::operator==(const char *a1, int a2);
BOOL __cdecl PPFX::operator!=(const char *a1, int a2);
BOOL __cdecl PPFX::operator==(char a1, int a2);
BOOL __cdecl PPFX::operator!=(char a1, int a2);
int __thiscall PPFX::String::operator>(const char **this, int a2);
int __thiscall PPFX::String::operator<(const char **this, int a2);
BOOL __thiscall PPFX::String::operator>=(const char **this, int a2);
BOOL __thiscall PPFX::String::operator<=(const char **this, int a2);
int __thiscall PPFX::String::operator>(const char **this, const char *a2);
int __thiscall PPFX::String::operator<(const char **this, const char *a2);
BOOL __thiscall PPFX::String::operator>=(const char **this, const char *a2);
BOOL __thiscall PPFX::String::operator<=(const char **this, const char *a2);
BOOL __thiscall PPFX::String::operator>(const char **this, char a2);
BOOL __thiscall PPFX::String::operator<(const char **this, char a2);
BOOL __thiscall PPFX::String::operator>=(const char **this, char a2);
BOOL __thiscall PPFX::String::operator<=(const char **this, char a2);
int __cdecl PPFX::operator>(const char *a1, int a2);
int __cdecl PPFX::operator<(const char *a1, int a2);
BOOL __cdecl PPFX::operator>=(const char *a1, int a2);
BOOL __cdecl PPFX::operator<=(const char *a1, int a2);
BOOL __cdecl PPFX::operator>(char a1, int a2);
BOOL __cdecl PPFX::operator<(char a1, int a2);
BOOL __cdecl PPFX::operator>=(char a1, int a2);
BOOL __cdecl PPFX::operator<=(char a1, int a2);
int __thiscall PPFX::String::operator()(int this, int a2);
int __thiscall PPFX::String::operator()(int this, const char *Src);
_DWORD *__thiscall PPFX::String::operator()(_DWORD *this, char a2);
PPFX::String *__thiscall PPFX::String::operator+(const char **this, PPFX::String *a2, size_t *a3);
PPFX::String *__thiscall PPFX::String::operator+(const char **this, PPFX::String *a2, const char *Src);
PPFX::String *__thiscall PPFX::String::operator+(const char **this, PPFX::String *a2, char a3);
PPFX::String *__cdecl PPFX::operator+(PPFX::String *a1, const char *a2, const struct PPFX::String *a3);
PPFX::String *__cdecl PPFX::operator+(PPFX::String *a1, char a2, _DWORD *a3);
PPFX::String *__thiscall PPFX::String::operator+=(PPFX::String *this, int *a2);
PPFX::String *__thiscall PPFX::String::operator+=(PPFX::String *this, const char *Src);
PPFX::String *__thiscall PPFX::String::operator+=(PPFX::String *this, char a2);
PPFX::String *__thiscall PPFX::String::operator*(int this, PPFX::String *a2, int a3);
const void **__thiscall PPFX::String::operator*=(const void **this, int a2);
PPFX::String *__thiscall PPFX::String::Cut(PPFX::String *this);
PPFX::String *__cdecl PPFX::String::Cut(PPFX::String *a1, int a2, int a3, char *a4);
PPFX::String *__cdecl PPFX::String::Cut(PPFX::String *a1, const char *a2);
PPFX::String *__fastcall PPFX::String::Cut(PPFX::String *this, int a2, const struct PPFX::String *a3);
PPFX::String *__thiscall PPFX::String::CutLeft(PPFX::String *this, const struct PPFX::String *a2);
PPFX::String *__fastcall PPFX::String::CutLeft(PPFX::String *this, int a2, const char *a3, int a4);
BOOL __thiscall PPFX::String::IsLineComment(PPFX::String *this, int a2, char **a3);
BOOL __thiscall PPFX::String::IsBlockComment(PPFX::String *this, int a2, char **a3, const char **a4);
BOOL __thiscall PPFX::String::IsComment(PPFX::String *this, int a2, char **a3, char **a4, const struct PPFX::String *a5);
PPFX::String *__fastcall PPFX::String::TrimQuotes(PPFX::String *this, int a2, const char *a3);
PPFX::String *__cdecl PPFX::String::TrimQuotes(PPFX::String *a1, const struct PPFX::String *a2, const char *a3);
PPFX::String *__cdecl PPFX::String::IntToString(PPFX::String *a1, int a2);
char __thiscall PPFX::String::Character(PPFX::String *this, int a2);
int __thiscall PPFX::CGPUResourceManage::ResetDevice(PPFX::CGPUResourceManage *this, struct PPFX::IGPUDevice *a2);
int __thiscall PPFX::CGPUResourceManage::Uninitialize(PPFX::CGPUResourceManage *this);
PPFX::CGPUResourceManage *__thiscall PPFX::CGPUResourceManage::CGPUResourceManage(PPFX::CGPUResourceManage *this, const char *a2);
char *__thiscall PPFX::CGPUResourceManage::~CGPUResourceManage(PPFX::CGPUResourceManage *this);
int __thiscall PPFX::CGPUResourceManage::Construct(PPFX::CGPUResourceManage *this, const char *a2);
int PPFX::CGPUResourceManage::GetNumGPUResourceRegisterd();
int PPFX::CGPUResourceManage::OutputGPUResourceStillRegisterd();
int PPFX::CGPUResourceManage::GetRegisteredGPUResourceArrayCount();
int __thiscall PPFX::CGPUResourceManage::InitializeDevice(struct PPFX::IGPUDevice **this, struct PPFX::IGPUDevice *a2);
int __thiscall PPFX::CGPUResourceManage::UninitializeDevice(PPFX::CGPUResourceManage *this);
int __thiscall PPFX::CGPUResourceManage::GetAvailability(PPFX::CGPUResourceManage *this);
int __thiscall PPFX::CGPUResourceManage::UninitializeSystemObjects(PPFX::CGPUResourceManage *this);
int __cdecl PPFX::CGPUResourceManage::RegisterStaticGPUDevice(const char **a1, struct PPFX::IGPUDevice *a2);
int __cdecl PPFX::CGPUResourceManage::UnregisterStaticGPUDevice(struct PPFX::CGPUResourceManage *a1);
int __cdecl PPFX::CGPUResourceManage::InitializeDeviceInfo(struct PPFX::IGPUDevice *a1);
void PPFX::CGPUResourceManage::UninitializeDeviceInfo();
void __thiscall PPFX::CGPUBaseResourceManage::~CGPUBaseResourceManage(PPFX::CGPUBaseResourceManage *__hidden this); // weak
PPFX::CGPUResourceManage *__thiscall PPFX::CGPUResourceManage::`vector deleting destructor'(PPFX::CGPUResourceManage *this, char a2);
PPFX::IGPUBaseResourceManage *__thiscall PPFX::IGPUBaseResourceManage::`scalar deleting destructor'(PPFX::IGPUBaseResourceManage *this, char a2);
char PPFX::GetApplyRenderStateMode();
__m128i *__cdecl PPFX::GPUFillTexture_RadiusFade(__m128i *a1, float *a2, float *a3, float *a4);
__m128i *__cdecl PPFX::GPUFillTexture_RadiusGaussianFade(__m128i *a1, float *a2, float *a3, float *a4);
// __m128i *__usercall PPFX::GPUFillTexture_OpticalEclipseMask@<eax>(int a1@<esi>, __m128i *a2, float *a3, float *a4, int a5);
// __m128i *__usercall PPFX::GPUFillTexture_BokehLut@<eax>(int a1@<esi>, __m128i *a2, float *a3, float *a4, int a5);
int __cdecl PPFX::GPUTexUtil_Build2DMipmaps(PPFX *this, struct PPFX::IGPUTexture *a2, const void *a3, char a4, bool a5, int *a6);
int __thiscall PPFX::CAMERALERPABLEPARAM::Set(int this, int a2, float *a3, char a4);
float *__thiscall PPFX::CAMERALERPABLEPARAM::SetRotation(float *this, float *a2);
int __thiscall PPFX::CAMERALERPABLEPARAM::SetTranslation(int this, int a2);
int __thiscall PPFX::CAMERALERPABLEPARAM::SetFrustum(int this, float *a2, char a3);
PPFX::CAMERALERPABLEPARAM *__thiscall PPFX::CAMERALERPABLEPARAM::ClearTranslation(PPFX::CAMERALERPABLEPARAM *this);
int __thiscall PPFX::CAMERALERPABLEPARAM::GetCameraRotationMatrix(float *this, int a2);
int __thiscall PPFX::CAMERALERPABLEPARAM::GetCameraTranslationMatrix(int this, int a2);
__m128i *__thiscall PPFX::CAMERALERPABLEPARAM::GetCameraMatrix(int this, __m128i *a2, char a3, char a4);
_DWORD *__thiscall PPFX::CAMERALERPABLEPARAM::GetViewRotationMatrix(float *this, _DWORD *a2);
_DWORD *__thiscall PPFX::CAMERALERPABLEPARAM::GetViewTranslationMatrix(_DWORD *this, _DWORD *a2);
float *__thiscall PPFX::CAMERALERPABLEPARAM::GetViewMatrix(void *this, float *a2, char a3, char a4);
int __thiscall PPFX::CAMERALERPABLEPARAM::GetProjectionMatrix(float *this, int a2, char a3, char a4);
int __thiscall PPFX::CAMERALERPABLEPARAM::GetInverseProjectionMatrix(float *this, int a2, char a3, char a4);
float *__thiscall PPFX::CAMERALERPABLEPARAM::GetTransformMatrix(float *this, float *a2, __int64 a3, char a4, char a5, char a6);
int __thiscall PPFX::CAMERALERPABLEPARAM::GetInverseTransformMatrix(float *this, int a2, __int64 a3, char a4, char a5, char a6);
int __cdecl PPFX::Lerp(int a1, float *a2, int a3, float a4);
// int __usercall PPFX::GPUTexUtil_GetLensDistortionParameters@<eax>(int a1@<ecx>, int a2@<esi>, PPFX *this, float a4, float a5, float a6, float a7, float a8, float a9, float a10, float a11, float *a12, float *a13, float *a14, float *a15);
// float *__usercall PPFX::GPUTexUtil_GetLensDistortionPosition@<eax>(int a1@<ecx>, int a2@<esi>, float *a3, char a4, float *a5, __int64 a6, float a7, float a8, float a9, float a10, float a11, float a12, float a13);
int __cdecl PPFX::GPUTexUtil_LensRayConvergenceTextureCoordinateConversionFactor(float *a1, float *a2, unsigned int a3, unsigned int a4, float a5, float a6, float a7);
double __cdecl PPFX::GPUTexUtil_GetVignetteAspectRatio(PPFX *this, float a2, float a3);
int __cdecl PPFX::FXDCT_GetDepthCastTypeFromDepthFormat(const char *a1);
double __cdecl PPFX::HDRTMAP_DecodeTonemap(int a1, __int64 a2, float a3);
int __thiscall PPFX::TEXSHADERSET::CreateCurrentTechVertexInputAttribute(PPFX::IGPUResource **this, struct PPFX::GPUINPUTELEMENT *const a2, unsigned int a3, struct PPFX::IGPUInputAttribute **a4);
int __thiscall PPFX::TEXSHADERSET::CreateVertexInputAttribute_XY_TEX2D1(PPFX::IGPUResource **this);
int __thiscall PPFX::TEXSHADERSET::CreateVertexInputAttribute_XY_TEX2D2(PPFX::IGPUResource **this);
int __thiscall PPFX::TEXSHADERSET::CreateVertexInputAttribute_XY_TEX2D3(PPFX::IGPUResource **this);
int __thiscall PPFX::TEXSHADERSET::CreateVertexInputAttribute_XY_TEX2D4(PPFX::IGPUResource **this);
int __thiscall PPFX::TEXSHADERSET::CreateVertexInputAttribute_XY_TEX2D5(PPFX::IGPUResource **this);
int __thiscall PPFX::TEXSHADERSET::CreateVertexInputAttribute_XYZ_TEX4D2(PPFX::IGPUResource **this);
int __thiscall PPFX::TEXSHADERSET::Construct(PPFX::TEXSHADERSET *this);
int __thiscall PPFX::TEXSHADERSET::Destruct(PPFX::TEXSHADERSET *this);
GPUUTIL *__thiscall PPFX::TEXSHADERSET::CreateEffect(PPFX::TEXSHADERSET *this, ID3D11DeviceChild **a2);
GPUUTIL *__thiscall PPFX::TEXSHADERSET::InitializeDevice(PPFX::TEXSHADERSET *this, ID3D11DeviceChild **a2, bool a3);
int __thiscall PPFX::TEXSHADERSET::UninitializeDevice(PPFX::TEXSHADERSET *this, struct PPFX::IGPUDevice *a2);
int __thiscall PPFX::TEXSHADERSET::GetHandle_EFX_FORMAT(PPFX::TEXSHADERSET *this, char *a2, const char *a3);
int __thiscall PPFX::TEXSHADERSET::GetHandle_Samples_EFX_FORMAT(PPFX::TEXSHADERSET *this, int (*const a2)[22], const char *a3, int a4);
int __thiscall PPFX::TEXSHADERSET::GetHandle_NUM_DOFMASKSAMPLES_EFX_FORMAT(PPFX::TEXSHADERSET *this, int (*const a2)[8][22], const char *a3);
int __thiscall PPFX::TEXSHADERSET::GetHandle_DEPTHCASTTYPE_FORMAT(PPFX::TEXSHADERSET *this, int (*const a2)[22], const char *a3);
int __thiscall PPFX::TEXSHADERSET::GetHandle_EDOFFACTORSTORE_DEPTHCASTTYPE_FORMAT(PPFX::TEXSHADERSET *this, int (*const a2)[7][22], const char *a3);
int __thiscall PPFX::TEXSHADERSET::GetHandle_Samples_EDOFFACTORSTORE_DEPTHCASTTYPE_FORMAT(PPFX::TEXSHADERSET *this, int (*const a2)[2][7][22], const char *a3, int a4);
int __thiscall PPFX::TEXSHADERSET::GetHandle_EHDRTONEMAP(PPFX::TEXSHADERSET *this, char *a2, const char *a3);
int __thiscall PPFX::TEXSHADERSET::GetHandle_TonemapCombiniation_EHDRTONEMAP(PPFX::TEXSHADERSET *this, int (*const a2)[16], const char *a3);
int __thiscall PPFX::TEXSHADERSET::GetHandle_Samples(PPFX::TEXSHADERSET *this, int *const a2, const char *a3, int a4);
int __thiscall PPFX::TEXSHADERSET::GetHandle_ParameterArray(PPFX::TEXSHADERSET *this, int *a2, int a3, const char *a4);
bool __thiscall PPFX::CTextureUtil::IsSharedVertexBufferDiscardingNeeded(PPFX::CTextureUtil *__hidden this, unsigned int); // weak
int __thiscall PPFX::CTextureUtil::AllocSharedVertexBufferMapping(PPFX::CTextureUtil *this, unsigned int a2, bool *a3);
int __thiscall PPFX::CTextureUtil::MapSharedVertexBuffer(PPFX::CTextureUtil *this, int a2, unsigned int *a3, bool *a4);
int __thiscall PPFX::CTextureUtil::UnmapSharedVertexBuffer(PPFX::IGPUBuffer **this);
bool __thiscall PPFX::CTextureUtil::IsBorderIndexBufferDiscardingNeeded(PPFX::CTextureUtil *__hidden this, unsigned int); // weak
int __thiscall PPFX::CTextureUtil::AllocBorderIndexBufferMapping(PPFX::CTextureUtil *this, unsigned int a2, bool *a3);
int __thiscall PPFX::CTextureUtil::MapBorderIndexBuffer(PPFX::CTextureUtil *this, int a2, unsigned int *a3, bool *a4);
int __thiscall PPFX::CTextureUtil::UnmapBorderIndexBuffer(PPFX::IGPUBuffer **this);
int __thiscall PPFX::CTextureUtil::SetRecursiveBlurBaseSamples(PPFX::CTextureUtil *this, int a2);
signed int __thiscall PPFX::CTextureUtil::GetEffectiveRecursiveBlurBaseSamples(PPFX::CTextureUtil *this, bool a2);
int __thiscall PPFX::CTextureUtil::Construct(PPFX::CTextureUtil *this, const char *a2);
void __thiscall PPFX::CTextureUtil::InitializeLocalSystemMemory(PPFX::CTextureUtil *__hidden this); // weak
void __thiscall PPFX::CTextureUtil::InitializeLocalGPUInfos(PPFX::CTextureUtil *__hidden this); // weak
int __thiscall PPFX::CTextureUtil::SetTonemapEffectParameters(int this, int a2, __int64 a3, int a4);
int __thiscall PPFX::CTextureUtil::CreateSystemObjects(const char **this);
GPUUTIL *__thiscall PPFX::CTextureUtil::InitializeDeviceSharedTexturePoolWithCheck(PPFX::CTextureUtil *this, bool a2);
PPFX::CTextureUtil *__thiscall PPFX::CTextureUtil::CTextureUtil(PPFX::CTextureUtil *this, const char *a2);
__int128 *PPFX::CTextureUtil::GetVectorWorkArrayPtr();
__int128 *PPFX::CTextureUtil::GetColorWorkArrayPtr();
GPUUTIL *__thiscall PPFX::CTextureUtil::InitializeDeviceSharedTexturePool(PPFX::CTextureUtil *this);
int __thiscall PPFX::CTextureUtil::ClearSharedTexturePool(_DWORD **this, const __m128i *a2);
int __thiscall PPFX::CTextureUtil::ClearAllGPUResources(_DWORD **this, const __m128i *a2);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_GetTexCoords(_DWORD *this, int a2, int a3, int a4, int a5, int *a6, int a7);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_GetVerticesAndTexCoords(_DWORD *this, float a2, float a3, float a4, float a5, int a6, char *a7, const void *a8, int a9, _DWORD *a10, int a11, int a12);
char *__thiscall PPFX::CTextureUtil::~CTextureUtil(PPFX::CTextureUtil *this);
// ID3D11DeviceChild **__userpurge PPFX::CTextureUtil::InitializeDevice@<eax>(ID3D11DeviceChild ***this@<ecx>, int a2@<edi>, struct PPFX::IGPUDevice *a3);
int __thiscall PPFX::CTextureUtil::UninitializeDevice(PPFX::CTextureUtil *this);
int __thiscall PPFX::CTextureUtil::UninitializeDevice(PPFX::CTextureUtil *this, struct PPFX::IGPUDevice *a2);
int __thiscall PPFX::CTextureUtil::GetAvailability(PPFX::CTextureUtil *this);
int __thiscall PPFX::CTextureUtil::UninitializeSystemObjects(PPFX::CTextureUtil *this);
int __thiscall PPFX::CTextureUtil::SetRenderStateDrawRectGPU(PPFX::CTextureUtil *this);
int __thiscall PPFX::CTextureUtil::SetRenderStateDrawRectGPU_SimpleFill(PPFX::CTextureUtil *this, int a2, int a3, int a4);
void __thiscall PPFX::CTextureUtil::SetSamplerState_SRGBTEXTURE(PPFX::CTextureUtil *__hidden this, _DWORD, bool); // weak
int __thiscall PPFX::CTextureUtil::CreateLensRayConvergenceTexture(_DWORD **this, _DWORD *a2, _DWORD *a3, float *a4, float *a5, float *a6, unsigned int a7, unsigned int a8, unsigned int a9, float *a10, __int64 a11, float a12, float a13, char a14, double *(__cdecl *a15)(double *a1, int a2, int a3, __int64 a4, int a5, int a6, int a7, _BYTE *a8), int a16, float a17, float a18, unsigned int a19, int a20, float a21, char a22, char a23, int a24, float *a25);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_Effect_XY_TEX2D1(PPFX::CTextureUtil *this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, int a9);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_Effect_XY_TEX2D2(PPFX::CTextureUtil *this, __int64 a2, float a3, float a4, float a5, int a6, float a7, int a8, int a9, int a10, int a11, int a12, int a13);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_Effect_XY_TEX2D3(PPFX::CTextureUtil *this, __int64 a2, float a3, float a4, float a5, int a6, float a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_Effect_XY_TEX2D4(PPFX::CTextureUtil *this, __int64 a2, float a3, float a4, float a5, int a6, float a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_Effect_XY_TEX2D5(PPFX::CTextureUtil *this, __int64 a2, float a3, float a4, float a5, int a6, float a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_Effect_XY_TEX2Dn(PPFX::CTextureUtil *this, __int64 a2, float a3, float a4, float *const a5, float *const a6, float *const a7, float *const a8, int a9, int a10);
int __thiscall PPFX::CTextureUtil::DrawIndicesGPU_Effect_XYZ_TEX4D2(PPFX::CTextureUtil *this, int a2, unsigned int a3, unsigned int a4, struct PPFX::IGPUVertexBuffer *a5, struct PPFX::IGPUIndexBuffer *a6, unsigned int a7, unsigned int a8, unsigned int a9);
int __thiscall PPFX::CTextureUtil::DrawRectBorderGPU_Effect_XY_TEX2D1(PPFX::CTextureUtil *this, float a2, float a3, float a4, float a5, float a6, float a7, float a8, float a9, float a10, float a11, float a12, float a13, unsigned int a14);
// int __userpurge PPFX::CTextureUtil::SetEffectTexCoordOffsetParameters@<eax>(int a1@<ecx>, int a2@<edi>, int a3, float *a4, int a5, int a6);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_TexCoordOffsetMadTn(PPFX::IGPUDevice **this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, int a9, float *a10, int a11, int a12, int a13, int a14);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_TexCoordMadT1_Sn(int this, __int64 a2, float a3, float a4, float *a5, float *a6, float *a7, float *a8, int a9, int a10, int a11, int a12, int a13);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_MadT1_Sn@<eax>(PPFX::IGPUDevice **a1@<ecx>, int a2@<ebx>, __int64 a3, float a4, float a5, float a6, __int64 a7, size_t a8, int a9, float *a10, int a11, int a12, int a13, int a14);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_MadT2_Sn@<eax>(int a1@<ecx>, int a2@<ebx>, __int64 a3, float a4, float a5, float a6, int a7, float a8, size_t a9, int a10, float *a11, int a12, int a13, int a14, int a15, int a16);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_MadScalarWeightT1_Sn(PPFX::IGPUDevice **this, __int64 a2, float a3, float a4, float a5, __int64 a6, size_t a7, int a8, __m128 *a9, int a10, int a11, int a12, int a13);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_MadCocT2_Sn(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, int a9, float *a10, int a11, const __m128i *a12, int a13, int a14, int a15, int a16);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_MadTn(PPFX::IGPUDevice **this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, int a9, int a10, const void *a11, int a12, int a13);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_MadTn(PPFX::CTextureUtil *this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, int a9, int a10, const void *a11, int a12, int a13);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_MadLumGammaTn(int this, __int64 a2, float a3, float a4, float a5, __int64 a6, size_t a7, float a8, int a9, int a10, const void *a11, int a12, int a13);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_MadLumGammaTn@<eax>(int a1@<ecx>, int a2@<ebx>, __int64 a3, float a4, __int64 a5, int a6, float a7, size_t a8, float a9, int a10, int a11, const void *a12, int a13, int a14);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_MadOffsetT1@<eax>(int a1@<ecx>, int a2@<ebx>, int a3@<edi>, int a4@<esi>, __int64 a5, float a6, float a7, __int64 a8, __int64 a9, int a10, const __m128i *a11, const __m128i *a12, int *a13, int a14, int a15, int a16);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_MadOffsetTn(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, int a9, int a10, int a11, __int128 *a12, int a13, int a14);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_MadOffsetTn(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, int a9, int a10, int a11, __int128 *a12, int a13, int a14);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_MadColorGradingT1_Sn@<eax>(int a1@<ecx>, int a2@<edi>, int a3@<esi>, __int64 a4, float a5, float a6, float a7, __int64 a8, size_t a9, int a10, float *a11, int a12, int a13, _DWORD *a14, int a15, int a16);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_MaxColorTn@<eax>(int a1@<ecx>, int a2@<ebx>, __int64 a3, float a4, float a5, float a6, int a7, float a8, size_t a9, int a10, int a11, const __m128i *a12, float *a13, int a14, int a15);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_MaxColorTn(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, int a9, int a10, const __m128i *a11, float *a12, int a13, int a14);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_AnalyzeLuminanceAlphaTest(int this, char a2, int a3, int a4, int a5);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_MaxColorLumGammaTn(int this, __int64 a2, float a3, float a4, float a5, __int64 a6, size_t a7, float a8, int a9, int a10, const __m128i *a11, float *a12, int a13, int a14);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_MaxColorLumGammaTn(_DWORD **this, __int64 a2, float a3, float a4, float a5, __int64 a6, size_t a7, float a8, int a9, int a10, const __m128i *a11, float *a12, int a13, int a14);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_BrightPass(int this, __int64 a2, float a3, float a4, float a5, __int64 a6, size_t a7, int a8, int a9, int a10, unsigned int a11, int a12, float a13, int *a14, float a15, __int64 a16, float a17, int a18, int a19);
int __thiscall PPFX::CTextureUtil::DrawRectBorderGPU_Color(int this, __int64 a2, float a3, float a4, float a5, float a6, float a7, float a8, const __m128i *a9, unsigned int a10);
int __thiscall PPFX::CTextureUtil::DrawRectBorderGPU_Color(void *this, __int64 a2, __int64 a3, float a4, const __m128i *a5, unsigned int a6);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_Color(int this, __int64 a2, float a3, float a4, const __m128i *a5, int a6, int a7, int a8);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_LensDistortionAndFilmGrain@<eax>(int a1@<ecx>, int a2@<edi>, int a3@<esi>, __int64 a4, float a5, float a6, float a7, int a8, float a9, size_t a10, __int64 a11, int a12, float a13, float a14, float a15, float a16, float a17, int a18, int a19, float a20, float a21, unsigned int a22, float a23, float a24, char a25, float a26, char a27, int a28, int a29, int a30);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_ChromaticAberration(_DWORD *this, __int64 a2, float a3, float a4, float a5, int a6, float a7, float a8, int a9, float a10, int a11, int *a12, float a13, int a14, int a15, int a16);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_Feedback(int this, __int64 a2, __int64 a3, int a4, int a5, __int64 a6, char a7, unsigned int a8, unsigned int a9, int a10, int a11, float *a12, float *a13, int a14, int a15, int a16);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_MotionBlur_CameraTransformT1_Sn(int this, __int64 a2, float a3, float a4, float a5, float a6, float a7, float a8, int a9, int a10, float *a11, int a12, int a13, int a14, int a15);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_MotionBlurMakeCameraVelocity(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, _QWORD *a16, int a17, _QWORD *a18, float *a19, int a20, int a21, int a22);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_MotionBlur_VelocityT2_Sn@<eax>(_DWORD *a1@<ecx>, int a2@<edi>, int a3@<esi>, __int64 a4, float a5, float a6, float a7, int a8, float a9, float a10, int a11, int a12, float *a13, __int64 a14, __int64 a15, char a16, int a17, int a18, int a19, int a20, int a21);
// int __userpurge PPFX::CTextureUtil::SetHDRFormatFactor@<eax>(PPFX::CTextureUtil *this@<ecx>, int a2@<esi>, float a3, float a4);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_TonemapHDR@<eax>(int a1@<ecx>, int a2@<ebx>, int a3@<edi>, int a4@<esi>, __int64 a5, __int64 a6, int a7, float a8, int a9, int a10, int a11, float a12, int a13, float a14, float a15, int a16, float a17, float *a18, int a19, float a20, __int64 a21, float a22, int a23, int a24, int a25, int *a26, unsigned int a27, unsigned int a28, float a29, float a30, unsigned int a31, unsigned int a32, float a33, float a34, int a35, int a36);
int __thiscall PPFX::CTextureUtil::TonemapHDR(PPFX::CTextureUtil *this, int a2, PPFX::CRenderTexture *a3, float a4, float a5, int a6, float a7, float a8, int a9, float a10, float *a11, int a12, float a13, __int64 a14, float a15, char a16, int a17);
int __thiscall PPFX::CTextureUtil::SetEffectDepthOfFieldFactorScaleOffsetParameters(PPFX::CTextureUtil *this, float a2);
// int __userpurge PPFX::CTextureUtil::SetEffectVignetteSimulateParameters@<eax>(PPFX::CTextureUtil *this@<ecx>, int a2@<esi>, float a3, float a4, float a5, float a6);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_DepthOfFieldCompositeLevels@<eax>(int a1@<ecx>, int a2@<esi>, __int64 a3, float a4, float a5, float a6, int a7, float a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, char a17, int a18, int a19, int a20);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_DepthOfFieldCompositeLevelsFrontBlur(_DWORD **this, __int64 a2, float a3, float a4, float a5, int a6, float a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_DepthOfFieldCompositeMaskedBlurLevels(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, _QWORD *a17, int a18, int a19, int a20);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_DepthOfFieldLayerMask(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, char a9, const char *a10, float *a11, int *a12, int *a13, int a14, int a15, int a16, int a17);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_DepthOfFieldLayerMaskMakeColor(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, char a9, int a10, float *a11, int *a12, int a13, int a14, int a15, int a16, int a17);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_DepthOfFieldBackgroundBlurFactorNormalize(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, int *a9, int a10, int a11, int a12);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_FrontBlurBlendFactor@<eax>(int a1@<ecx>, int a2@<edi>, __int64 a3, float a4, float a5, float a6, int a7, float a8, size_t a9, const __m128i *a10, const __m128i *a11, char a12, int a13, int a14, int a15);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_DepthOfFieldStoreBlurFactorAlphaFromDepthTextureTypeCast_Process(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, float a9, float a10, float a11, char a12, const char **a13, int a14, int a15, int a16, int a17, int a18, float *a19, int a20, float *a21, float *a22, int a23, unsigned int a24, int a25, int a26);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_DepthOfFieldStoreBlurFactorAlphaFromDepthTextureTypeCast@<eax>(int a1@<ecx>, int a2@<edi>, int a3@<esi>, __int64 a4, float a5, float a6, float a7, int a8, float a9, size_t a10, float a11, float a12, float a13, const char **a14, int a15, int a16, int a17, char a18, float *a19, int a20, float *a21, float *a22, int a23, unsigned int a24, int a25, int a26);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_DepthOfFieldStoreBlurFactorAlphaFromBlurFactorTexture@<eax>(int a1@<ecx>, int a2@<edi>, __int64 a3, float a4, float a5, float a6, int a7, float a8, size_t a9, const char **a10, int a11, const __m128i *a12, float *a13, int a14, int a15, int a16, float *a17, float *a18, int a19, unsigned int a20, const __m128i *a21, int a22);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_DepthEncodeFromDepthTextureTypeCast(PPFX::CTextureUtil *this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, const char **a9, bool a10, int a11);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_DepthEncodeFromDepthOfFieldFactorTexture(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, float a9, float a10, float a11, int a12, int a13, int a14, int a15);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_DepthEncodeFromDepthFactorTexture(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, float *a9, int a10, int a11, int a12);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_Fxaa2(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, int a9, float *a10, unsigned int a11, int a12, float a13, int a14);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_ColorModulateByChannel(PPFX::CTextureUtil *this, __int64 a2, float a3, float a4, float a5, int a6, float a7, int a8, int a9, int a10, int a11, int a12, struct PPFX::IGPUTexture *a13, struct PPFX::IGPUTexture *a14, enum PPFX::EPFX_GLAREMODULATORSOURCE a15, int a16);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_LightShaftMask(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, int a8, int a9, int a10, float a11, int a12, int a13, int a14, int *a15, int a16, float a17, int a18);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_Corona(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, int a8, int a9, __int64 a10, unsigned int a11, float a12, const __m128i *a13, int *a14, int a15, int a16);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_RenderSceneRect@<eax>(int a1@<ecx>, int a2@<esi>, __int64 a3, float a4, float a5, float a6, int a7, __int64 a8, int a9, char a10, int a11, int a12, int a13, int a14, unsigned int a15, float a16, const __m128i *a17, int a18, int a19);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_MaskGradientValue@<eax>(int a1@<ecx>, int a2@<edi>, __int64 a3, float a4, float a5, float a6, int a7, float a8, size_t a9, float a10, __int64 a11, const __m128i *a12, const __m128i *a13, __int64 a14, float *a15, int a16, int a17);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_DilateScatteredColor@<eax>(int a1@<ecx>, int a2@<edi>, __int64 a3, float a4, float a5, float a6, int a7, float a8, size_t a9, float *a10, int a11, int a12);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_CrossBilateralFilterForSsao(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, int a9, int a10, int a11, int a12, _QWORD *a13, _QWORD *a14, _QWORD *a15, float a16, float a17, float a18, int a19, int a20, int a21, int a22, char a23, int a24);
// int __userpurge PPFX::CTextureUtil::CrossBilateralFilterForSsao@<eax>(PPFX::CTextureUtil *this@<ecx>, int a2@<ebx>, int a3@<edi>, int a4@<esi>, const struct PPFX::CRenderTexture *a5, const struct PPFX::CRenderTexture *a6, const struct PPFX::CRenderTexture *a7, float a8, float a9, bool a10, int a11, const struct PPFX::CRenderTexture *a12, float a13, float a14, float a15, bool a16);
// int __userpurge PPFX::CTextureUtil::Resample@<eax>(PPFX::IGPUDevice **a1@<ecx>, int a2@<edi>, float *a3, int a4, int a5, __m128 *a6, int a7, char a8, char a9, float a10, float a11, int a12, float a13, float a14, float *a15, _DWORD *a16);
// int __userpurge PPFX::CTextureUtil::MaskGradientValue@<eax>(int a1@<ecx>, __m128 a2@<xmm6>, int a3, unsigned int *a4, float a5, __int64 a6, const __m128i *a7, const __m128i *a8, __int64 a9);
int __thiscall PPFX::CTextureUtil::DilateScatteredColor(void *this, int a2, PPFX::CRenderTexture *a3, float *a4, float *a5);
int __thiscall PPFX::CTextureUtil::LensDistortionAndFilmGrain(void *this, int a2, unsigned int *a3, unsigned int a4, float a5, int a6, float a7, float a8, float a9, float a10, float a11, int a12, int a13, float a14, float a15, unsigned int a16, float a17, float a18, char a19, float a20, char a21, int a22, int a23);
int __thiscall PPFX::CTextureUtil::ChromaticAberration(_DWORD *this, int a2, unsigned int *a3, int a4, float a5, int a6, int *a7, float a8, int a9, int a10);
int __thiscall PPFX::CTextureUtil::Feedback(void *this, int a2, int a3, unsigned int *a4, char a5, char a6, unsigned int a7, unsigned int a8, float *a9, float *a10, int a11, int a12, int a13);
int __thiscall PPFX::CTextureUtil::GetLinearBlurParameters(_DWORD *this, int a2, float *a3, int a4, float a5, int a6, int *a7, _DWORD *a8, _DWORD *a9, float *a10);
int __thiscall PPFX::CTextureUtil::LinearBlur(PPFX::IGPUDevice **this, int a2, int a3, int a4, float *a5, int a6, __int64 a7, const __m128i *a8, char a9);
float *__stdcall PPFX::CTextureUtil::GetMotionBlur_CameraUniformScreenBlur(float *a1, const __m128i *a2, const __m128i *a3, float *a4, float a5, float a6, int a7);
int __thiscall PPFX::CTextureUtil::GetMotionBlur_CameraUniformParameters(_DWORD *this, int a2, const __m128i *a3, const __m128i *a4, float *a5, __int64 a6, int a7, float a8, int a9, int a10, int *a11, __int64 a12, _DWORD *a13, float *a14);
int __thiscall PPFX::CTextureUtil::MotionBlur_CameraUniform(PPFX::IGPUDevice **this, int a2, int a3, int a4, const __m128i *a5, const __m128i *a6, float *a7, __int64 a8, int a9, unsigned int a10, int a11, __int64 a12, char a13);
int __thiscall PPFX::CTextureUtil::GetMotionBlur_CameraRotationPerspectiveParameters(_DWORD *this, int a2, const __m128i *a3, const __m128i *a4, float *a5, float *a6, float *a7, float a8, float a9, int a10, float a11, int a12, int a13, int *a14, _DWORD *a15, _DWORD *a16, float *a17, float *a18, __m128i *a19, __m128i *a20);
// int __userpurge PPFX::CTextureUtil::MotionBlur_CameraRotationPerspective@<eax>(float *a1@<ecx>, int a2@<edi>, int a3@<esi>, int a4, float a5, PPFX::CRenderTexture *a6, const __m128i *a7, const __m128i *a8, float *a9, float *a10, float *a11, __int64 a12, int a13, float a14, int a15, int a16, float a17, char a18);
int __thiscall PPFX::CTextureUtil::GetMotionBlur_GenericParameters(_DWORD *this, int a2, const __m128i *a3, const __m128i *a4, float *a5, float *a6, __int64 a7, char a8, int a9, float a10, int a11, int a12, int *a13, _DWORD *a14, _DWORD *a15, float *a16, _DWORD *a17, float *a18, __m128i *a19, __m128i *a20);
// int __userpurge PPFX::CTextureUtil::MotionBlur_Generic@<eax>(PPFX::IGPUDevice **a1@<ecx>, int a2@<edi>, float *a3, float a4, int a5, float *a6, int a7, char a8, const __m128i *a9, const __m128i *a10, float *a11, float *a12, int a13, int a14, int a15, _DWORD *a16, int a17, int *a18, __int64 a19, char a20, unsigned int a21, int a22, int a23, float a24, int a25, int a26, __m128 *a27, char a28);
int __thiscall PPFX::CTextureUtil::DrawIndicesGPU_HeatShimmerParticles(int this, int a2, int a3, int a4, float a5, float a6, float a7, float a8, float a9, float a10, int a11, int a12, const __m128i *a13, float *a14, _QWORD *a15, float a16, float a17, float *a18, float a19, float a20, float *a21, float *a22, float *a23, __int64 a24, int a25, bool a26, unsigned int a27);
int __thiscall PPFX::CTextureUtil::SetupHeatShimmerParticles(_DWORD *this, int a2, float a3, const __m128i *a4, float *a5, float a6, int a7, char a8, float a9, float *a10);
int __thiscall PPFX::CTextureUtil::HeatShimmerParticles(PPFX::IGPUDevice **this, char a2, int a3, float a4, int a5, unsigned int *a6, int a7, int a8, const __m128i *a9, float *a10, _QWORD *a11, __int64 a12, char a13, float *a14, float a15, float a16, float *a17, float *a18, float *a19, __int64 a20, __int64 a21);
int __cdecl PPFX::CTextureUtil::Callback_QSort_CompareParticleZ_S(const void *, const void *);
int __thiscall PPFX::CTextureUtil::PointSymmetryT4_S8_TrimT1_S8(PPFX::CTextureUtil *this, int a2, int a3, int a4, int a5, int a6, unsigned int *a7, int a8, float a9, int a10, int a11, int a12);
int __thiscall PPFX::CTextureUtil::PointSymmetryT3_S8(int this, int a2, int a3, int a4, unsigned int *a5, int a6, float a7, int a8, int a9, int a10);
// int __userpurge PPFX::CTextureUtil::DrawRectGPU_GenerateNormalAndLinearDepth@<eax>(int a1@<ecx>, int a2@<edi>, __int64 a3, float a4, float a5, float a6, int a7, float a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int *a18, float *a19, int a20, int a21, const __m128i *a22, const __m128i *a23, int a24);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_AlchemySsao(int this, __int64 a2, float a3, float a4, float a5, int a6, float a7, size_t a8, const __m128i *a9, _QWORD *a10, _QWORD *a11, int a12, int a13, float a14, float a15, unsigned int a16, __int64 a17, int a18);
int __thiscall PPFX::CTextureUtil::AlchemySsao(PPFX::CTextureUtil *this, int a2, PPFX::CRenderTexture *a3, const __m128i *a4, float a5, float a6, int a7, float a8, float a9, unsigned int a10, __int64 a11, char a12);
int __thiscall PPFX::CTextureUtil::DepthOfFieldStoreBlurFactorAlphaFromDepthTextureTypeCast(PPFX::IGPUDevice **this, int a2, unsigned int *a3, float a4, float a5, float a6, int a7, _DWORD *a8, int a9, char a10, float *a11, int a12, float *a13, float *a14, int a15, unsigned int a16, int a17, char a18);
int __thiscall PPFX::CTextureUtil::DepthOfFieldLayerMask(PPFX::CTextureUtil *this, int a2, unsigned int *a3, int *a4, int *a5, int a6, int a7, char a8, char a9, float *a10, float a11, float a12, int a13);
int __thiscall PPFX::CTextureUtil::DepthOfFieldLayerMaskMakeColor(PPFX::IGPUDevice **this, int a2, PPFX::CRenderTexture *a3, int a4, int a5, int *a6, int a7, int a8, char a9, char a10);
int __thiscall PPFX::CTextureUtil::DepthOfFieldBackgroundBlurFactorNormalize(int this, int a2, unsigned int *a3, int *a4, int a5, char a6);
// int __userpurge PPFX::CTextureUtil::MadTn@<eax>(PPFX::CTextureUtil *a1@<ecx>, BOOL a2@<ebx>, int a3@<edi>, unsigned int a4, int a5, int a6, char *a7, unsigned int a8, float a9, int a10, char a11);
// int __userpurge PPFX::CTextureUtil::MadT2@<eax>(PPFX::CTextureUtil *a1@<ecx>, BOOL a2@<ebx>, int a3@<edi>, unsigned int a4, int a5, int a6, char *a7, __int64 a8, int a9, char a10);
int __thiscall PPFX::CTextureUtil::MadT3(PPFX::CTextureUtil *this, unsigned int a2, int a3, int a4, int a5, char *a6, __int64 a7, int a8, char a9);
// int __userpurge PPFX::CTextureUtil::MaxColorTn@<eax>(PPFX::CTextureUtil *a1@<ecx>, BOOL a2@<edi>, unsigned int *a3, int a4, float **a5, __int128 a6, float *a7, float a8, int a9, char a10);
int __thiscall PPFX::CTextureUtil::AnalyzeLuminanceAlphaTest(int this, int a2, int a3, int a4);
// int __userpurge PPFX::CTextureUtil::AnalyzeLuminance@<eax>(int a1@<ecx>, int a2@<ebx>, int a3@<edi>, int a4, int a5, int a6, const __m128i *a7);
int __thiscall PPFX::CTextureUtil::Fxaa2(PPFX::CTextureUtil *this, PPFX::CRenderTexture *a2, int a3, unsigned int a4, int a5, float a6, char a7);
int __thiscall PPFX::CTextureUtil::ColorModulateByChannel(PPFX::CTextureUtil *this, const struct PPFX::CRenderTexture *a2, const struct PPFX::CRenderTexture *a3, const struct PPFX::CRenderTexture *a4, enum PPFX::EPFX_GLAREMODULATORSOURCE a5, bool a6);
int __thiscall PPFX::CTextureUtil::BrightPass(PPFX::CTextureUtil *this, int a2, PPFX::CRenderTexture *a3, int a4, int a5, unsigned int a6, int a7, float a8, int *a9, float a10, __int64 a11, float a12, int a13, int a14, float a15);
int __thiscall PPFX::CTextureUtil::LightShaftMask(PPFX::CTextureUtil *this, PPFX::CRenderTexture *a2, int a3, int a4, float a5, int a6, int a7, int a8, int *a9, int a10, float a11, char a12);
int __thiscall PPFX::CTextureUtil::Corona(PPFX::CTextureUtil *this, PPFX::CRenderTexture *a2, int a3, __int64 a4, unsigned int a5, float a6, const __m128i *a7, int *a8, int a9, char a10);
int __thiscall PPFX::CTextureUtil::ConvolutionFilterMax29x29_2Pass(PPFX::CTextureUtil *this, int a2, int a3, PPFX::CRenderTexture *a4, int a5, float *a6, char a7, int a8, int a9, __m128 *a10, char a11, unsigned int a12, int a13);
// int __userpurge PPFX::CTextureUtil::ConvolutionRotatedFilterMax15x15_2Pass@<eax>(PPFX::CTextureUtil *a1@<ecx>, int a2@<ebx>, int a3, int a4, PPFX::CRenderTexture *a5, int a6, int a7, float *a8, char a9, float a10, int a11, int a12, float *a13, int a14, const __m128i *a15, char a16, unsigned int a17, unsigned int a18);
// int __userpurge PPFX::CTextureUtil::SquareRotatedFilterMax15x15_2Pass@<eax>(PPFX::CTextureUtil *a1@<ecx>, int a2@<ebx>, int a3, int a4, PPFX::CRenderTexture *a5, int a6, int a7, float a8, int a9, int a10, float *a11, int a12, const __m128i *a13, char a14, unsigned int a15, unsigned int a16);
// int __userpurge PPFX::CTextureUtil::SquareRotatedFilter3nx3n_2nPass@<eax>(int a1@<ecx>, int a2@<ebx>, int a3, PPFX::CRenderTexture *a4, PPFX::CRenderTexture *a5, int a6, int a7, int a8, int a9, __m128 *a10, int a11, const __m128i *a12, char a13, unsigned int a14, unsigned int a15);
int __thiscall PPFX::CTextureUtil::ArbitraryKernelFilter_nPass(int this, int a2, int a3, int a4, int a5, int a6, float *a7, int a8, int a9, int a10, float a11, int a12, float a13, float a14, int a15, __m128 *a16, int a17, const __m128i *a18, char a19, unsigned int a20, unsigned int a21);
// int __userpurge PPFX::CTextureUtil::HexagonFilter_nPass@<eax>(int a1@<ecx>, int a2@<edi>, int a3, int a4, int a5, int a6, int a7, __int64 a8, float a9, float a10, int a11, __m128 *a12, int a13, const __m128i *a14, char a15, unsigned int a16, unsigned int a17);
// int __userpurge PPFX::CTextureUtil::HexagonFilter_Rhombic@<eax>(int a1@<ecx>, int a2@<ebp>, int a3@<edi>, int a4, PPFX::CRenderTexture *a5, int a6, int a7, float a8, float a9, float a10, int a11, float *a12, int a13, const __m128i *a14, char a15, unsigned int a16, float a17);
int __thiscall PPFX::CTextureUtil::DiscFilter3x3(PPFX::CTextureUtil *this, int a2, PPFX::CRenderTexture *a3, unsigned int a4, int a5, __m128 *a6, char a7, char a8, unsigned int a9, unsigned int a10);
int __thiscall PPFX::CTextureUtil::DiscFilter5x5(PPFX::CTextureUtil *this, int a2, PPFX::CRenderTexture *a3, float a4, int a5, float *a6, int a7, char a8, unsigned int a9, unsigned int a10);
int __thiscall PPFX::CTextureUtil::DiscFilter9x9(PPFX::CTextureUtil *this, int a2, PPFX::CRenderTexture *a3, float a4, int a5, float *a6, char a7, int a8, unsigned int a9, unsigned int a10);
int __thiscall PPFX::CTextureUtil::DiscFilter17x17_Edge(PPFX::CTextureUtil *this, int a2, PPFX::CRenderTexture *a3, float a4, char a5, int a6, float *a7, char a8, int a9, unsigned int a10, unsigned int a11);
int __thiscall PPFX::CTextureUtil::DiscFilter17x17(PPFX::CTextureUtil *this, int a2, int a3, PPFX::CRenderTexture *a4, unsigned int a5, float a6, char a7, int a8, float *a9, char a10, int a11, unsigned int a12, unsigned int a13);
int __thiscall PPFX::CTextureUtil::DiscFilter(PPFX::CTextureUtil *this, int a2, PPFX::CRenderTexture *a3, int a4, __int64 a5, __m128 *a6, int a7, int a8, unsigned int a9, unsigned int a10);
int __thiscall PPFX::CTextureUtil::ConvolutionFilter3x3(PPFX::CTextureUtil *this, int a2, PPFX::CRenderTexture *a3, int a4, char a5, int a6, float *a7, char a8, char a9, unsigned int a10, unsigned int a11);
int __thiscall PPFX::CTextureUtil::ConeFilter3x3(PPFX::CTextureUtil *this, int a2, PPFX::CRenderTexture *a3, float a4, int a5, float *a6, float a7, char a8, char a9, unsigned int a10, unsigned int a11);
// int __userpurge PPFX::CTextureUtil::GaussianFilter3x3@<eax>(PPFX::CTextureUtil *a1@<ecx>, int a2@<ebx>, char a3@<efl>, int a4, PPFX::CRenderTexture *a5, float *a6, float a7, int a8, float *a9, unsigned int a10, char a11, unsigned __int8 a12, unsigned int a13, unsigned int a14);
// int __userpurge PPFX::CTextureUtil::GaussianFilter5x5@<eax>(PPFX::CTextureUtil *a1@<ecx>, int a2@<ebx>, char a3@<efl>, int a4, PPFX::CRenderTexture *a5, float *a6, float a7, int a8, float *a9, char a10, char a11, unsigned __int8 a12, unsigned int a13, unsigned int a14);
// int __userpurge PPFX::CTextureUtil::GaussianFilterMax3x3_2Pass@<eax>(int a1@<ecx>, int a2@<ebx>, int a3, int a4, PPFX::CRenderTexture *a5, float *a6, int a7, int a8, int a9, float *a10, int a11, char a12, char a13, unsigned int a14, unsigned int a15);
// int __userpurge PPFX::CTextureUtil::GaussianFilterMax7x7_2Pass@<eax>(PPFX::CTextureUtil *a1@<ecx>, int a2@<ebx>, int a3, int a4, PPFX::CRenderTexture *a5, float *a6, int a7, int a8, int a9, float *a10, int a11, char a12, char a13, unsigned int a14, unsigned int a15);
// int __userpurge PPFX::CTextureUtil::GaussianFilterMax11x11_2Pass@<eax>(PPFX::CTextureUtil *a1@<ecx>, int a2@<ebx>, int a3, int a4, PPFX::CRenderTexture *a5, float *a6, int a7, int a8, int a9, float *a10, int a11, char a12, char a13, unsigned int a14, unsigned int a15);
// int __userpurge PPFX::CTextureUtil::GaussianFilterMax29x29_2Pass@<eax>(int a1@<edx>, int a2@<ecx>, int a3@<ebx>, char a4@<efl>, int a5, PPFX::CRenderTexture *a6, PPFX::CRenderTexture *a7, float *a8, float a9, float a10, int a11, int a12, unsigned int a13, char a14, unsigned __int8 a15, unsigned int a16, unsigned int a17);
// int __userpurge PPFX::CTextureUtil::GaussianFilterMax61x61_2Pass@<eax>(int a1@<ecx>, int a2@<ebx>, char a3@<efl>, int a4, PPFX::CRenderTexture *a5, PPFX::CRenderTexture *a6, int a7, __int64 a8, int a9, int a10, int a11, char a12, unsigned __int8 a13, unsigned int a14, unsigned int a15);
// int __userpurge PPFX::CTextureUtil::GaussianFilter_UnlimitedRadius@<eax>(int a1@<ecx>, int a2@<ebx>, int a3@<edi>, _DWORD *a4@<esi>, int a5, int a6, unsigned int a7, float *a8, __int64 a9, int a10, int a11, PPFX::CRenderTexture *a12, _DWORD *a13, float a14, int a15, int a16, char a17, unsigned __int8 a18, unsigned int a19, unsigned int a20);
int __thiscall PPFX::CTextureUtil::DrawRectGPU_CompositeColorAndAlphaEffectsMask(int this, __int64 a2, __int64 a3, int a4, int a5, char a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, float a14, unsigned int a15, int a16);
int __thiscall PPFX::CTextureUtil::CompositeColorAndAlphaEffectsMask(int this, int a2, char a3, float a4, float a5, float a6, float a7, int a8, unsigned int *a9, unsigned int *a10, int a11, int a12, int a13, int a14, unsigned int *a15, float a16, unsigned int a17, int a18, char a19, int a20);
int __fastcall PPFX::CTextureUtil::UpdateWaterHeightMap(int a1, int a2, int a3, int a4, unsigned int *a5, int *a6, int *a7, float a8, unsigned int a9, int a10, int a11);
int __thiscall PPFX::CTextureUtil::GenerateNormalMapFromHeightMap(int **this, const struct PPFX::CRenderTexture *a2, const struct PPFX::CRenderTexture *a3, __int64 a4, unsigned int a5, int a6);
int __thiscall PPFX::CTextureUtil::GetUsedTechniqueNames(PPFX::CTinyEffect ***this, char a2);
int __thiscall PPFX::CTextureUtil::GetNumUsedTechniques(PPFX::CTinyEffect ***this, bool a2);
int __thiscall PPFX::CTextureUtil::GetUsedVertexProgramNames(PPFX::CTinyEffect ***this, bool a2);
int __thiscall PPFX::CTextureUtil::GetNumUsedVertexPrograms(PPFX::CTinyEffect ***this, bool a2);
int __thiscall PPFX::CTextureUtil::GetUsedFragmentProgramNames(PPFX::CTinyEffect ***this, bool a2);
int __thiscall PPFX::CTextureUtil::GetNumUsedFragmentPrograms(PPFX::CTinyEffect ***this, bool a2);
int __thiscall PPFX::CTextureUtil::SetRenderSceneHeightReverse_Gcm(PPFX::CTextureUtil *this, bool a2);
double __cdecl PPFX::GetFimlicCurveNormalizationParameter(float this);
int __cdecl sub_7F7CF0(int a1, float *a2, float *a3);
double __cdecl sub_7F7D90(float a1, int a2);
double __cdecl sub_7F7EA0(_DWORD, _DWORD, _DWORD); // weak
double __cdecl sub_7F7F60(float a1, int a2, float a3);
// __int128 *__usercall sub_7F80C0@<eax>(int a1@<ebp>, int a2@<edi>);
_DWORD *__cdecl PPFX::GPUMath_MatrixInverseR<float>(_DWORD *a1, const __m128i *a2);
float *__cdecl PPFX::GPUMath_MatrixInverseTR<float>(float *a1, const __m128i *a2);
int __cdecl PPFX::GPUMath_MatrixRotationQuaternion<float>(int a1, float *a2);
// float *__usercall PPFX::GPUMath_QuaternionRotationMatrix<float>@<eax>(int a1@<esi>, float *a2, float *a3);
// __m128i *__usercall PPFX::GPUMath_QuaternionSlerp<float>@<eax>(int a1@<esi>, __m128i *a2, int a3, int a4, float a5);
int __cdecl PPFX::PfxDeleteArray<PPFX::PEAUTOEXPOSURE>(int a1, PPFX::CPfxMemoryAllocator *a2);
_DWORD *__cdecl PPFX::PfxNewArray<unsigned char>(int a1, PPFX::CPfxMemoryAllocator *a2, const char *a3, int a4);
_DWORD *__cdecl PPFX::PfxNewArray<unsigned short>(int a1, PPFX::CPfxMemoryAllocator *a2, const char *a3, int a4);
_DWORD *__cdecl PPFX::PfxNewArray<PPFX::PFX_PARTICLE_HEATSHIMMER>(int a1, PPFX::CPfxMemoryAllocator *a2, const char *a3, int a4);
int __thiscall PPFX::CAMERALERPABLEPARAM::CAMERALERPABLEPARAM(int this, int a2, float *a3, char a4);
PPFX::CTextureUtil *__thiscall PPFX::CTextureUtil::`vector deleting destructor'(PPFX::CTextureUtil *this, char a2);
bool __cdecl PPFX::FXFMT_IsFilterableDecode(int a1);
int __thiscall PPFX::COLORT4<float>::GetABGR8(float *this);
int __thiscall PPFX::COLORT4<double>::GetABGR8(double *this);
int __thiscall PPFX::COLORT4<float>::GetARGB8(float *this);
int __thiscall PPFX::CTextureUtil::GetHandle_tech_HeatShimmerParticle_Sn(PPFX::CTextureUtil *this, int a2, bool a3);
int __thiscall PPFX::CTextureUtil::GetHandle_tech_MotionBlurVelocityT2_Sn(_DWORD *this, int a2, char a3, char a4, char a5, char a6, int a7);
int __thiscall PPFX::CRenderTextureArray::Construct(PPFX::CRenderTextureArray *this, const char *a2);
void __thiscall PPFX::CRenderTextureArray::InitializeLocalSystemMemory(PPFX::CRenderTextureArray *__hidden this); // weak
PPFX::CRenderTextureArray *__thiscall PPFX::CRenderTextureArray::CRenderTextureArray(PPFX::CRenderTextureArray *this, const char *a2);
int __thiscall PPFX::CRenderTextureArray::Initialize(const char **this, __int64 a2, const char *a3, bool a4, const char *a5);
int __thiscall PPFX::CRenderTextureArray::SetActiveSize(PPFX::CRenderTextureArray *this, int a2, int a3, int a4, int a5, int a6);
int __thiscall PPFX::CRenderTextureArray::SetActiveSizeScale(PPFX::CRenderTextureArray *this, float a2, float a3, float a4, float a5, int a6);
int __thiscall PPFX::CRenderTextureArray::SetDepthRange(PPFX::CRenderTextureArray *this, __int64 a2, int a3);
int __thiscall PPFX::CRenderTextureArray::SetMultisampleBufferMode(int *this, int a2, int a3);
char *__thiscall PPFX::CRenderTextureArray::~CRenderTextureArray(PPFX::CRenderTextureArray *this);
int __fastcall PPFX::CRenderTextureArray::InitializeDevice(struct PPFX::IGPUDevice **this, int a2, struct PPFX::IGPUDevice *a3);
int __thiscall PPFX::CRenderTextureArray::UninitializeDevice(PPFX::CRenderTextureArray *this);
int __thiscall PPFX::CRenderTextureArray::GetAvailability(PPFX::CRenderTextureArray *this);
int __thiscall PPFX::CRenderTextureArray::UninitializeSystemObjects(PPFX::CRenderTextureArray *this);
int __thiscall PPFX::CRenderTextureArray::SetFramebuffer(_DWORD *this, int a2, char a3, int a4, const __m128i *a5, int a6, int a7, int a8, int a9, unsigned int a10);
// int __userpurge PPFX::CRenderTextureArray::ClearAllGPUResources@<eax>(PPFX::CRenderTextureArray *a1@<ecx>, int a2@<ebx>, int a3@<esi>, int a4, __int64 a5);
int __thiscall PPFX::CRenderTextureArray::ColorFill(int *this, const __m128i *a2, int a3, int a4);
GPUUTIL *__thiscall PPFX::CRenderTextureArray::CopyToSurface(_DWORD *this, int a2, int a3, int a4, unsigned int a5, float *a6, char a7, int a8);
int __thiscall PPFX::CRenderTextureArray::CopyToSurface(_DWORD *this, PPFX::CRenderTexture *a2, int a3, int a4, unsigned int a5, float *a6, char a7, int a8);
int __thiscall PPFX::CRenderTextureArray::AccumBuffers(int this, int a2, int a3, unsigned int a4, int a5, float a6, char a7);
int __thiscall PPFX::CRenderTextureArray::GenerateMipMaps(PPFX::CRenderTextureArray *this, int a2);
int __thiscall PPFX::CRenderTextureArray::UpdateDepthStencilTexture(PPFX::CRenderTextureArray *this, int a2);
GPUUTIL *__cdecl PPFX::CRenderTextureArray::CopyToSurface(int a1, PPFX::IGPUResource *a2, int a3, unsigned int a4, float *a5, int a6, size_t a7, char a8, int a9);
GPUUTIL *__cdecl PPFX::CRenderTextureArray::CopyToSurface(int a1, int a2, int a3, unsigned int a4, float *a5, char a6, int a7);
GPUUTIL *__cdecl PPFX::CRenderTextureArray::CopyToSurface(PPFX::CRenderTexture *a1, PPFX::IGPUResource *a2, int a3, unsigned int a4, float *a5, int a6, size_t a7, char a8, int a9);
int __cdecl PPFX::CRenderTextureArray::CopyToSurface(PPFX::CRenderTexture *a1, int a2, int a3, unsigned int a4, float *a5, char a6, int a7);
PPFX::CRenderTextureArray *__thiscall PPFX::CRenderTextureArray::`vector deleting destructor'(PPFX::CRenderTextureArray *this, char a2);
char __thiscall PPFX::CRenderTextureArray::DoesHaveGPUStencilBits(PPFX::CRenderTextureArray *this);
int __thiscall PPFX::CRenderTextureArray::GetGPURenderSurface(_DWORD *this, int a2, int a3, int a4);
bool __thiscall PPFX::CRenderTextureArray::IsAvailableSystemObjects(PPFX::CRenderTextureArray *__hidden this); // weak
int __thiscall PPFX::CRenderTexturePool::Construct(PPFX::CRenderTexturePool *this, const char *a2);
_DWORD *__thiscall PPFX::CRenderTexturePool::InitializeLocalSystemMemory(PPFX::CRenderTexturePool *this);
PPFX::CRenderTexturePool *__thiscall PPFX::CRenderTexturePool::CRenderTexturePool(PPFX::CRenderTexturePool *this, const char *a2);
int __thiscall PPFX::CRenderTexturePool::SearchTexture(PPFX::CRenderTexturePool *this, unsigned int a2, unsigned int a3, enum DXGI_FORMAT a4, bool a5, unsigned int a6, unsigned int a7);
unsigned int __thiscall PPFX::CRenderTexturePool::AllocateTexture(PPFX::CRenderTexturePool *this, const struct PPFX::CRenderTexture **a2, unsigned int a3, __int64 a4, bool a5, unsigned int a6, unsigned int a7);
unsigned int __thiscall PPFX::CRenderTexturePool::AllocateTextures(PPFX::CRenderTexturePool *this, int a2, const struct PPFX::CRenderTexture **const a3, unsigned int a4, __int64 a5, bool a6, unsigned int a7, unsigned int a8);
int __thiscall PPFX::CRenderTexturePool::FreeTextures(PPFX::CRenderTexturePool *this, int a2, const struct PPFX::CRenderTexture **const a3);
int __thiscall PPFX::CRenderTexturePool::FreeTexture(PPFX::CRenderTexturePool *this, const struct PPFX::CRenderTexture *a2);
int __thiscall PPFX::CRenderTexturePool::PostTexture(PPFX::CRenderTexturePool *this, const struct PPFX::CRenderTexture *a2, bool a3);
int __thiscall PPFX::CRenderTexturePool::ClearAllGPUResources(_DWORD *this, const __m128i *a2);
bool __cdecl PPFX::CRenderTexturePool::CanBeShared(const struct PPFX::CRenderTexture *, unsigned int, unsigned int, enum DXGI_FORMAT, unsigned int, unsigned int); // weak
char *__thiscall PPFX::CRenderTexturePool::~CRenderTexturePool(PPFX::CRenderTexturePool *this);
int __thiscall PPFX::CRenderTexturePool::InitializeDevice(struct PPFX::IGPUDevice **this, struct PPFX::IGPUDevice *a2);
int __thiscall PPFX::CRenderTexturePool::UninitializeDevice(PPFX::CRenderTexturePool *this);
int __thiscall PPFX::CRenderTexturePool::GetAvailability(PPFX::CRenderTexturePool *this);
int __thiscall PPFX::CRenderTexturePool::UninitializeSystemObjects(PPFX::CRenderTexturePool *this);
int __stdcall std::_List_buy<PPFX::CRenderTextureReference *>::_Buynode<PPFX::CRenderTextureReference * const &>(_DWORD *a1, _DWORD *a2, _DWORD *a3);
PPFX::CRenderTexturePool *__thiscall PPFX::CRenderTexturePool::`scalar deleting destructor'(PPFX::CRenderTexturePool *this, char a2);
void __stdcall std::_List_alloc<0,std::_List_base_types<PPFX::CRenderTextureReference *>>::_Buynode0(_DWORD *a1, _DWORD *a2);
PPFX::CStarDef *__thiscall PPFX::CStarDef::CStarDef(PPFX::CStarDef *this);
__m128i *__thiscall PPFX::CStarDef::CStarDef(__m128i *this, const __m128i *a2);
int __thiscall PPFX::CStarDef::~CStarDef(PPFX::CStarDef *this);
int __thiscall PPFX::CStarDef::Construct(PPFX::CStarDef *this);
int __thiscall PPFX::CStarDef::Destruct(PPFX::CStarDef *this);
int __thiscall PPFX::CStarDef::Release(PPFX::CStarDef *this);
int __thiscall PPFX::CStarDef::Initialize(__m128i *this, const __m128i *a2);
int __thiscall PPFX::CStarDef::Initialize(PPFX::CStarDef *this, const __m128i *a2);
// int __usercall PPFX::CStarDef::InitializeStaticStarLibs@<eax>(int a1@<ebp>);
int PPFX::CStarDef::DeleteStaticStarLibs();
__m128i *__thiscall PPFX::CGlareBaseDef::Set(__m128i *this, __m128i *a2);
PPFX::CGlareDef *__thiscall PPFX::CGlareDef::CGlareDef(PPFX::CGlareDef *this);
PPFX::CGlareDef *__thiscall PPFX::CGlareDef::CGlareDef(PPFX::CGlareDef *this, __m128i *a2);
int __thiscall PPFX::CGlareDef::~CGlareDef(PPFX::CGlareDef *this);
int __thiscall PPFX::CGlareDef::Construct(PPFX::CGlareDef *this);
int __thiscall PPFX::CGlareDef::Destruct(PPFX::CGlareDef *this);
int __thiscall PPFX::CGlareDef::Release(PPFX::CGlareDef *this);
int __thiscall PPFX::CGlareDef::Initialize(__m128i *this, __m128i *a2);
int __thiscall PPFX::CGlareDef::Initialize(__m128i *this, int a2, int a3, int a4, int a5, float a6, int a7, int a8, int a9, float a10, int a11, int a12, int a13);
int __thiscall PPFX::CGlareDef::Initialize(__m128i *this, const char *a2, __int64 a3, int a4, int a5, int a6, int a7, float a8, char a9, int a10, int a11, int a12, int a13, float a14, int a15, char a16, float a17, char a18, int a19, int a20, int a21);
// int __usercall PPFX::CGlareDef::InitializeStaticGlareLibs@<eax>(int a1@<ebp>);
int PPFX::CGlareDef::DeleteStaticGlareLibs();
void __cdecl PPFX::PfxDeleteArray<PPFX::CGlareDef>(unsigned int a1, PPFX::CPfxMemoryAllocator *a2);
void __cdecl PPFX::PfxDeleteArray<PPFX::CStarDef>(unsigned int a1, PPFX::CPfxMemoryAllocator *a2);
_DWORD *__cdecl PPFX::PfxNewArray<PPFX::CGlareDef>(int a1, PPFX::CPfxMemoryAllocator *a2, const char *a3, int a4);
// unsigned int __usercall PPFX::GLAREPARAM::FillDefaults@<eax>(PPFX::GLAREPARAM *this@<ecx>, int a2@<ebx>);
char __thiscall PPFX::CRenderGlare::IsAvailableSystemObjects(PPFX::CRenderGlare *this);
char __thiscall PPFX::CRenderGlare::IsHighPrecisionFormatGlareGeneration(PPFX::CRenderGlare *this);
char __thiscall PPFX::CRenderGlare::IsHighPrecisionFormatBloomGeneration(PPFX::CRenderGlare *this);
bool __thiscall PPFX::CRenderGlare::IsBloomLevelResultWithLowerLevels(PPFX::CRenderGlare *this, int a2);
int __thiscall PPFX::CRenderGlare::GetBloomLevelResultForComposition(PPFX::CRenderGlare *this, int a2);
bool __thiscall PPFX::CRenderGlare::IsBloomLevelResultBlur(PPFX::CRenderGlare *this, int a2);
int __thiscall PPFX::CRenderGlare::GetBloomLevelResultTexture(PPFX::CRenderGlare *this, int a2);
BOOL __thiscall PPFX::CRenderGlare::IsEnabledStar(PPFX::CRenderGlare *this);
BOOL __thiscall PPFX::CRenderGlare::IsEnabledAnamorphicFlare(PPFX::CRenderGlare *this);
BOOL __thiscall PPFX::CRenderGlare::IsEnabledGhost(PPFX::CRenderGlare *this);
BOOL __thiscall PPFX::CRenderGlare::IsEnabledAfterimage(PPFX::CRenderGlare *this);
BOOL __thiscall PPFX::CRenderGlare::IsEnabledLightShaft(PPFX::CRenderGlare *this);
int __thiscall PPFX::CRenderGlare::SetResultBlur(PPFX::CRenderGlare *this, float a2);
int __cdecl PPFX::CRenderGlare::ValidateInitParam(const struct PPFX::GLAREPARAM *a1);
int __thiscall PPFX::CRenderGlare::Construct(PPFX::CRenderGlare *this, const char *a2);
void __thiscall PPFX::CRenderGlare::InitializeLocalSystemMemory(PPFX::CRenderGlare *__hidden this); // weak
void __thiscall PPFX::CRenderGlare::InitializeLocalGPUInfos(PPFX::CRenderGlare *__hidden this); // weak
int __fastcall PPFX::CRenderGlare::CreateSystemObjects(PPFX::CRenderGlare *this);
// int __usercall PPFX::CRenderGlare::CreateDeviceResources@<eax>(PPFX::CRenderGlare *this@<ecx>, int a2@<ebx>, int a3@<edi>);
int __thiscall PPFX::CRenderGlare::GenerateGlare_Source_BrightPass(PPFX::CRenderGlare *this, const struct PPFX::CRenderTexture *a2, const struct PPFX::CRenderTexture *a3);
int __thiscall PPFX::CRenderGlare::GenerateGlare_Source(PPFX::CRenderGlare *this, PPFX **a2, enum PPFX::EPFX_GLAREMODULATORSOURCE a3, const struct PPFX::CRenderTexture *a4);
// signed int __usercall PPFX::CRenderGlare::GenerateGlare_Bloom@<eax>(PPFX::CRenderGlare *this@<ecx>, int a2@<ebx>);
// signed int __usercall PPFX::CRenderGlare::GenerateGlare_Bloom_CompositeSubLevels@<eax>(PPFX::CRenderGlare *this@<ecx>, BOOL a2@<ebx>);
int __thiscall PPFX::CRenderGlare::GenerateGlare_Star(PPFX::CRenderGlare *this, bool a2);
int __thiscall PPFX::CRenderGlare::GenerateGlare_AnamorphicFlare(PPFX::CRenderGlare *this);
// int __userpurge PPFX::CRenderGlare::GenerateGlare_StarStreaks@<eax>(PPFX::CRenderGlare *this@<ecx>, int a2@<ebx>, const struct PPFX::CStarDef *a3, const struct PPFX::CRenderTexture *a4, const struct PPFX::CRenderTexture *a5, const struct PPFX::CRenderTexture **const a6, const struct PPFX::CRenderTexture **const a7, int a8, bool a9);
int __thiscall PPFX::CRenderGlare::GenerateGlare_Ghost_GetGaussian(PPFX::CRenderGlare *this, int a2, float *a3, const struct PPFX::CRenderTexture **a4, bool a5);
// int __usercall PPFX::CRenderGlare::GenerateGlare_Ghost@<eax>(PPFX::CRenderGlare *this@<ecx>, int a2@<edi>);
// GPUUTIL *__usercall PPFX::CRenderGlare::GenerateGlare_Afterimage@<eax>(PPFX::CRenderGlare *this@<ecx>, int a2@<edi>);
// int __usercall PPFX::CRenderGlare::GenerateGlare_LightShaft@<eax>(PPFX::CRenderGlare *this@<ecx>, int a2@<ebp>);
double __thiscall PPFX::CRenderGlare::GenerateGlare_Afterimage_GetExpandRatio(PPFX::CRenderGlare *this);
int __thiscall PPFX::CRenderGlare::GenerateGlare_Composite(PPFX::CRenderGlare *this);
double __thiscall PPFX::CRenderGlare::GenerateGlare_GetGlareResultScale(PPFX::CRenderGlare *this);
__m128i *__thiscall PPFX::CRenderGlare::GenerateGlare_GetVignetteTexCoordLTRB(int this, __m128i *a2);
char __thiscall PPFX::CRenderGlare::GenerateGlare_IsOnlyBloom(PPFX::CRenderGlare *this);
double __thiscall PPFX::CRenderGlare::GenerateGlare_GetGlareRadiusFromFov(PPFX::CRenderGlare *this, float a2);
double __thiscall PPFX::CRenderGlare::GenerateGlare_GetGlareRadiusFromBufferSize(PPFX::CRenderGlare *this, float a2);
double __thiscall PPFX::CRenderGlare::GenerateGlare_GetStarRadiusScale(PPFX::CRenderGlare *this, float a2);
double __thiscall PPFX::CRenderGlare::GenerateGlare_GetLightShaftRadiusScale(PPFX::CRenderGlare *this);
double __thiscall PPFX::CRenderGlare::GetBloomLevelProcessLuminance(PPFX::CRenderGlare *this, int a2);
// double __userpurge PPFX::CRenderGlare::GetBloomLevelResultScaleForOtherSources@<st0>(int a1@<esi>, int a2);
// double __usercall PPFX::CRenderGlare::GetBloomCompositeLuminanceScale@<st0>(PPFX::CRenderGlare *this@<ecx>, int a2@<esi>);
double __thiscall PPFX::CRenderGlare::GetStarCompositeLuminanceScale(PPFX::CRenderGlare *this);
double __thiscall PPFX::CRenderGlare::GetAnamorphicFlareCompositeLuminanceScale(PPFX::CRenderGlare *this);
double __thiscall PPFX::CRenderGlare::GetStarMasterLuminanceScale(PPFX::CRenderGlare *this);
double __thiscall PPFX::CRenderGlare::GetAnamorphicFlareMasterLuminanceScale(PPFX::CRenderGlare *this);
double __thiscall PPFX::CRenderGlare::GetLightShaftCompositeLuminanceScale(PPFX::CRenderGlare *this);
double __thiscall PPFX::CRenderGlare::GetDefaultBloomGaussianRadius(PPFX::CRenderGlare *this);
double __thiscall PPFX::CRenderGlare::GetEffectiveAnamorphicFlareLuminance(PPFX::CRenderGlare *this);
double __thiscall PPFX::CRenderGlare::GetEffectiveAnamorphicFlareGhostLuminanceScale(PPFX::CRenderGlare *this);
__m128 *__thiscall PPFX::CRenderGlare::GetEffectiveAnamorphicFlareColor(int this, __m128 *a2);
__m128 *__thiscall PPFX::CRenderGlare::GetEffectiveAnamorphicFlareGhostColor(int this, __m128 *a2);
PPFX::CRenderGlare *__thiscall PPFX::CRenderGlare::CRenderGlare(PPFX::CRenderGlare *this, const char *a2);
int __thiscall PPFX::CRenderGlare::Initialize(struct PPFX::IGPUDevice **this, const struct PPFX::GLAREPARAM *a2);
// int __userpurge PPFX::CRenderGlare::ClearAllGPUResources@<eax>(int a1@<ecx>, int a2@<ebx>, const __m128i *a3);
int __thiscall PPFX::CRenderGlare::InitializeContinuousEffects(_DWORD *this, int a2, const __m128i *a3);
int __thiscall PPFX::CRenderGlare::InitializeAfterimage(_DWORD *this, int a2, const __m128i *a3);
int __thiscall PPFX::CRenderGlare::SetGlareGenerationMasterRangeFloat(PPFX::CRenderGlare *this, float a2);
int __thiscall PPFX::CRenderGlare::SetGlareGenerationMasterRangeInt16(PPFX::CRenderGlare *this, float a2);
int __thiscall PPFX::CRenderGlare::SetGlareGenerationMasterRangeInt10(PPFX::CRenderGlare *this, float a2);
int __thiscall PPFX::CRenderGlare::SetGlareGenerationMasterRangeInt8(PPFX::CRenderGlare *this, float a2);
int __thiscall PPFX::CRenderGlare::SetGlareGenerationRangeScaleFloat(PPFX::CRenderGlare *this, float a2);
int __thiscall PPFX::CRenderGlare::SetGlareGenerationRangeScaleInt16(PPFX::CRenderGlare *this, float a2);
int __thiscall PPFX::CRenderGlare::SetGlareGenerationRangeScaleInt10(PPFX::CRenderGlare *this, float a2);
int __thiscall PPFX::CRenderGlare::SetGlareGenerationRangeScaleInt8(PPFX::CRenderGlare *this, float a2);
double __thiscall PPFX::CRenderGlare::GetEffectiveGlareGenerationRange(PPFX::CRenderGlare *this);
double __thiscall PPFX::CRenderGlare::GetDefaultEffectiveGlareGenerationRange(PPFX::CRenderGlare *this);
int __thiscall PPFX::CRenderGlare::SetBufferFormatChange(_DWORD *this, int a2, int a3, int a4);
int __thiscall PPFX::CRenderGlare::SetLightShaftEnable(PPFX::CRenderGlare *this, bool a2);
int __thiscall PPFX::CRenderGlare::SetLightShaftParameters(int this, const __m128i *a2, int a3, int a4, int a5, int a6, int a7, int a8);
int __thiscall PPFX::CRenderGlare::SetLightShaftDiffractionRing(int this, int a2, int a3, int a4, int a5, const __m128i *a6);
int __thiscall PPFX::CRenderGlare::SetLightShaftPosition(_DWORD *this, _DWORD *a2);
int __thiscall PPFX::CRenderGlare::SetLensDistortionFalloffParameters(PPFX::CRenderGlare *this, float a2, float a3, float a4, float a5, float a6, float a7, float a8, float a9, float a10, enum PPFX::EPFX_DISTORTIONFOVBASE a11, float a12);
double PPFX::CRenderGlare::GetDefaultGlareGenerationRangeFloat();
double PPFX::CRenderGlare::GetDefaultGlareGenerationRangeFloat10();
double PPFX::CRenderGlare::GetDefaultGlareGenerationRangeInt16();
double PPFX::CRenderGlare::GetDefaultGlareGenerationRangeInt10();
double PPFX::CRenderGlare::GetDefaultGlareGenerationRangeInt8();
char *__thiscall PPFX::CRenderGlare::~CRenderGlare(PPFX::CRenderGlare *this);
// int __userpurge PPFX::CRenderGlare::InitializeDevice@<eax>(struct PPFX::IGPUDevice **this@<ecx>, int a2@<ebx>, int a3@<edi>, struct PPFX::IGPUDevice *a4);
int __thiscall PPFX::CRenderGlare::UninitializeDevice(PPFX::CRenderGlare *this);
int __thiscall PPFX::CRenderGlare::GetAvailability(PPFX::CRenderGlare *this);
int __thiscall PPFX::CRenderGlare::UninitializeSystemObjects(PPFX::CRenderGlare *this);
// int __userpurge PPFX::CRenderGlare::SetPerspective@<eax>(PPFX::CRenderGlare *this@<ecx>, int a2@<esi>, float a3);
// int __userpurge PPFX::CRenderGlare::SetPerspectiveByFrustum@<eax>(PPFX::CRenderGlare *this@<ecx>, int a2@<esi>, float a3, float a4, float a5);
int __thiscall PPFX::CRenderGlare::SetVignetting(PPFX::CRenderGlare *this, float a2, float a3);
int __thiscall PPFX::CRenderGlare::SetVignettingSimulationParameters(PPFX::CRenderGlare *this, float a2, float a3, float a4);
int __thiscall PPFX::CRenderGlare::SetAnamorphicFlareParameters(PPFX::CRenderGlare *this, float a2, float a3);
int __thiscall PPFX::CRenderGlare::SetAnamorphicFlareColor(int this, const __m128i *a2, const __m128i *a3);
// int __userpurge PPFX::CRenderGlare::GenerateGlare@<eax>(int a1@<ecx>, int a2@<ebx>, int a3@<edi>, PPFX **a4, float a5, float a6, float a7, int a8, int a9, int a10, int a11, char *a12, float a13, int a14, char a15, enum PPFX::EPFX_GLAREMODULATORSOURCE a16, const struct PPFX::CRenderTexture *a17);
// int __userpurge PPFX::CRenderGlare::TonemapToSurface@<eax>(int a1@<ecx>, int a2@<ebx>, _DWORD *a3, char a4, float a5, float a6, __int64 a7, int a8, int a9, char a10, float a11, int a12, float a13, float a14, int a15, float a16, float *a17, int a18, float a19, int *a20, float a21, float a22, unsigned int a23, unsigned int a24, float a25, float a26, int a27, float *a28, int a29, int a30, float a31, _DWORD *a32);
PPFX::CRenderGlare *__thiscall PPFX::CRenderGlare::`vector deleting destructor'(PPFX::CRenderGlare *this, char a2);
int __thiscall PPFX::DOFPARAM::FillDefaults(PPFX::DOFPARAM *this);
// int __userpurge PPFX::DOFLEVELPARAM::Initialize@<eax>(int a1@<ecx>, int a2@<edi>, char a3, int a4);
// int __usercall PPFX::DOFLEVELPARAM::SetApertureFilterDiameter@<eax>(PPFX::DOFLEVELPARAM *this@<ecx>, int a2@<edi>);
char __thiscall PPFX::CDepthOfField::IsAvailableSystemObjects(const struct PPFX::CRenderTexture **this);
int __thiscall PPFX::CDepthOfField::GetScatterMultiViewportsResultTexture(PPFX::CDepthOfField *this, int a2);
int __thiscall PPFX::CDepthOfField::GetEffectiveScatteredResultTexture(PPFX::CDepthOfField *this, bool a2, int a3);
int __thiscall PPFX::CDepthOfField::GetEffectiveScatteredResultTextureSparse(PPFX::CDepthOfField *this, bool a2, int a3);
int __thiscall PPFX::CDepthOfField::GetReductionSourceBuffer(PPFX::CDepthOfField *this, unsigned int a2);
int __thiscall PPFX::CDepthOfField::GetDepthOfFieldParameters(int this, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, _DWORD *a7, _DWORD *a8, __m128i *a9);
double __thiscall PPFX::CDepthOfField::GetApertureRatio(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetCircleOfConfusion(PPFX::CDepthOfField *this, float a2);
double __thiscall PPFX::CDepthOfField::GetCircleOfConfusionToScreenRatio(PPFX::CDepthOfField *this, float a2);
double __thiscall PPFX::CDepthOfField::GetPermissibleCircleOfConfusion(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetPermissibleCircleOfConfusionToScreenRatio(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetHyperfocalDistance(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetFrontDepthOfField(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetRearDepthOfField(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetNearFocusDistance(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetFarFocusDistance(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetHalfDepthOfFocus(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetImageDistance(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetMagnificationRatio(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetFocalLengthAtInfinity(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetEffectiveFnumber(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetNumericalAperture(PPFX::CDepthOfField *this, float a2);
double __thiscall PPFX::CDepthOfField::GetAiryDiscDiameter(PPFX::CDepthOfField *this, float a2, float a3);
double __thiscall PPFX::CDepthOfField::GetAiryDiscDiameterToScreenRatio(PPFX::CDepthOfField *this, float a2, float a3);
double __thiscall PPFX::CDepthOfField::GetLensBarrelObstructionDiameter(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetLensBarrelObstructionDistance(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetEffectiveVerticalFov(PPFX::CDepthOfField *this);
int __thiscall PPFX::CDepthOfField::GetOpticalVignettingFromLensBarrel(PPFX::CDepthOfField *this, float a2, float a3, float *a4, float *a5, bool a6);
int __thiscall PPFX::CDepthOfField::GetOpticalVignetting(PPFX::CDepthOfField *this, float *a2, float *a3);
int __thiscall PPFX::CDepthOfField::GetOpticalVignettingNormalized(PPFX::CDepthOfField *this, float *a2, float *a3);
int __cdecl PPFX::CDepthOfField::ValidateInitParam(const struct PPFX::CRenderTexture *a1, const struct PPFX::DOFPARAM *a2);
int __thiscall PPFX::CDepthOfField::Construct(PPFX::CDepthOfField *this, const char *a2);
void __thiscall PPFX::CDepthOfField::InitializeLocalSystemMemory(PPFX::CDepthOfField *__hidden this); // weak
void __thiscall PPFX::CDepthOfField::InitializeLocalGPUInfos(PPFX::CDepthOfField *__hidden this); // weak
int __thiscall PPFX::CDepthOfField::CreateApertureFilterLevelParams(PPFX::CDepthOfField *this);
int __thiscall PPFX::CDepthOfField::UpdateApertureFilterLevelParams(PPFX::CDepthOfField *this);
int __thiscall PPFX::CDepthOfField::CreateSystemObjects(PPFX::CDepthOfField *this);
int __thiscall PPFX::CDepthOfField::CreateDeviceResources(PPFX::CDepthOfField *this);
// int __userpurge PPFX::CDepthOfField::CorrectBokehOpticsTextureColor@<eax>(int a1@<edi>, int *a2, int a3, unsigned int a4, float *a5);
unsigned int __thiscall PPFX::CDepthOfField::GetBokehOpticsTextureFocusPoint(PPFX::CDepthOfField *this, int *a2, unsigned int a3, unsigned int a4);
double __thiscall PPFX::CDepthOfField::GetAnamorphicFocusScale(PPFX::CDepthOfField *this);
float *__thiscall PPFX::CDepthOfField::GetDepthToIndirectBokehDepthFactor(int this, float *a2, char a3);
int __thiscall PPFX::CDepthOfField::ImageBasedBokehBlur(int this, unsigned int a2, float a3, int a4, int a5, int a6, _DWORD *a7, int a8, int a9, float a10, int a11);
int __thiscall PPFX::CDepthOfField::ApplyDepthOfField_ApertureFilterLevel_EAPERTUREFM_DISC_ApplyApertureFilter(int this, int a2, float a3, float a4, float a5, PPFX::CRenderTexture **a6, const void *a7, int a8);
double __thiscall PPFX::CDepthOfField::GetScatterLevel(PPFX::CDepthOfField *this, int a2);
int __thiscall PPFX::CDepthOfField::GetLayerMaskMakeColorMask(PPFX::CDepthOfField *this, int a2);
// int __userpurge PPFX::CDepthOfField::ApplyDepthOfField_ApertureFilterLevel_EAPERTUREFM_DISC@<eax>(PPFX::CDepthOfField *this@<ecx>, int a2@<ebx>, int a3);
int __thiscall PPFX::CDepthOfField::ApplyDepthOfField_ApertureFilterLevel_EAPERTUREFM_DISC_2_R2(PPFX::CDepthOfField *this, int a2);
int __thiscall PPFX::CDepthOfField::ApplyDepthOfField_ApertureFilterLevel_EAPERTUREFM_DISC_2_R3(PPFX::CDepthOfField *this, int a2);
int __thiscall PPFX::CDepthOfField::GetDilationResultTexture(PPFX::CDepthOfField *this, bool a2, int a3);
int __thiscall PPFX::CDepthOfField::GetDilationResultTextureSparse(PPFX::CDepthOfField *this, bool a2, int a3);
// int __userpurge PPFX::CDepthOfField::ApplyDepthOfField_ApertureFilterLevel@<eax>(PPFX::CDepthOfField *this@<ecx>, int a2@<ebx>, int a3);
int __thiscall PPFX::CDepthOfField::ApplyDepthOfField_Scatter2(PPFX::CDepthOfField *this, struct PPFX::CRenderTexture *a2, struct PPFX::CRenderTexture *a3, struct PPFX::CRenderTexture *a4, struct PPFX::CRenderTexture *a5, int a6, int a7, struct PPFX::IGPUVertexBuffer *a8, struct PPFX::IGPUIndexBuffer *a9, const struct PPFX::DOFSCATTERLEVELPARAM *a10, const struct PPFX::DOFSCATTERLEVELPARAM *a11, float a12, __int128 *a13, float a14);
int __thiscall PPFX::CDepthOfField::ApplyDepthOfField_ScatterLevel(PPFX::CDepthOfField *this, int a2);
int __thiscall PPFX::CDepthOfField::ApplyDepthOfField_DilateColorLevel(PPFX::CDepthOfField *this, int a2);
// int __userpurge PPFX::CDepthOfField::ApplyDepthOfField_BlurScatterResult@<eax>(PPFX::CDepthOfField *this@<ecx>, int a2@<edi>, int a3);
int __thiscall PPFX::CDepthOfField::ApplyDepthOfField_ApertureFilterAllLevels(PPFX::CDepthOfField *this);
// int __usercall PPFX::CDepthOfField::ApplyDepthOfField_BlurFactorFromDepthTexture@<eax>(PPFX::CDepthOfField *this@<ecx>, int a2@<edi>);
int __thiscall PPFX::CDepthOfField::ApplyDepthOfField_Source(PPFX::CDepthOfField *this, const struct PPFX::CRenderTexture *a2);
int __thiscall PPFX::CDepthOfField::ApplyDepthOfField_Composite(PPFX::CDepthOfField *this, const struct PPFX::CRenderTexture *a2, const struct PPFX::CRenderTexture *a3, const struct PPFX::CRenderTexture *a4);
bool __thiscall PPFX::CDepthOfField::IsSeparateVerticalAndHorizontalFocus(PPFX::CDepthOfField *__hidden this); // weak
int __thiscall PPFX::CDepthOfField::SetImageBasedGatherParameters_Coc(PPFX::CDepthOfField *this, char a2, bool a3);
int __thiscall PPFX::CDepthOfField::SetImageBasedGatherParameters_Samples(PPFX::CDepthOfField *this, bool a2, bool a3, int a4, float a5);
// int __usercall PPFX::CDepthOfField::ApplyDepthOfField_Composite_MergeScatterLevelsToGatherLevels@<eax>(PPFX::CDepthOfField *this@<ecx>, int a2@<ebx>);
int __thiscall PPFX::CDepthOfField::ApplyDepthOfField_Composite_Scatter(PPFX::CDepthOfField *this, const struct PPFX::CRenderTexture *a2, const struct PPFX::CRenderTexture *a3, const struct PPFX::CRenderTexture *a4);
PPFX::CDepthOfField *__thiscall PPFX::CDepthOfField::CDepthOfField(PPFX::CDepthOfField *this, const char *a2);
int __thiscall PPFX::CDepthOfField::Initialize(PPFX::CDepthOfField *this, const struct PPFX::CRenderTexture *a2, const struct PPFX::DOFPARAM *a3);
int __thiscall PPFX::CDepthOfField::ClearAllGPUResources(int this, const __m128i *a2);
int __thiscall PPFX::CDepthOfField::SetResultBlurScale(PPFX::CDepthOfField *this, float a2);
int __thiscall PPFX::CDepthOfField::GetActiveEdgeQuality(_DWORD *this);
int __thiscall PPFX::CDepthOfField::SetDepthOfFieldFactorStore(PPFX::CDepthOfField *this, int a2);
int __thiscall PPFX::CDepthOfField::SetApertureFilterChangeFormat(int *this, int a2, int a3, int a4);
double __thiscall PPFX::CDepthOfField::CalculateMaximumAperture(PPFX::CDepthOfField *this, float a2, float a3, float a4);
// BOOL __userpurge PPFX::CDepthOfField::CalculateOpticalParameters@<eax>(int a1@<ecx>, int a2@<edi>, int a3, float a4, float a5, float a6, float a7, float a8, float a9, float a10, float a11, float a12, float *a13, float *a14, float *a15, float *a16, float *a17, __int128 *a18);
// BOOL __userpurge PPFX::CDepthOfField::SetDepthOfFieldParameters@<eax>(int a1@<ecx>, int a2@<edi>, int a3@<esi>, int a4, int a5, float a6, int a7, int a8, float a9, float a10, float a11, float a12, float a13, float a14, float a15, float a16, float a17);
int __thiscall PPFX::CDepthOfField::SetOpticalVignettingParameters(PPFX::CDepthOfField *this, float a2, float a3);
double __thiscall PPFX::CDepthOfField::GetBokehTextureAverageIntensity(PPFX::CDepthOfField *this, char a2, int a3);
double __thiscall PPFX::CDepthOfField::GetBokehTextureArea(PPFX::CDepthOfField *this, bool a2);
GPUUTIL *__thiscall PPFX::CDepthOfField::CreateAndSetScatterBokehTexture(PPFX::CDepthOfField *this, unsigned int a2, unsigned int a3, _DWORD *a4, int a5);
GPUUTIL *__thiscall PPFX::CDepthOfField::CreateScatterBokehTexture(_DWORD **this, unsigned int a2, unsigned int a3, _DWORD *a4, int a5, _DWORD *a6, unsigned int a7, int a8, __m128i *a9, int a10);
GPUUTIL *__thiscall PPFX::CDepthOfField::CreateAndSetScatterBokehOpticsTexture(PPFX::CDepthOfField *this, unsigned int a2, unsigned int a3, void *a4, __int64 a5, float a6, float a7);
GPUUTIL *__thiscall PPFX::CDepthOfField::CreateScatterBokehOpticsTexture(PPFX::CDepthOfField *this, unsigned int a2, unsigned int a3, void *a4, int a5, int a6, float a7, float a8, _DWORD *a9, _DWORD *a10, unsigned int a11, _DWORD *a12, unsigned int a13);
double __thiscall PPFX::CDepthOfField::GetMaximumApertureFnumber(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetApertureOpeningRatio(PPFX::CDepthOfField *this);
int __thiscall PPFX::CDepthOfField::GetApertureCircularityRatioIndex(PPFX::CDepthOfField *this);
double __thiscall PPFX::CDepthOfField::GetApertureCircularityRatio(PPFX::CDepthOfField *this);
int __thiscall PPFX::CDepthOfField::GetOpticalVignettingEclipseParameterEnable(PPFX::CDepthOfField *this);
char *__thiscall PPFX::CDepthOfField::~CDepthOfField(PPFX::CDepthOfField *this);
int __thiscall PPFX::CDepthOfField::InitializeDevice(struct PPFX::IGPUDevice **this, struct PPFX::IGPUDevice *a2);
int __thiscall PPFX::CDepthOfField::UninitializeDevice(PPFX::CDepthOfField *this);
int __thiscall PPFX::CDepthOfField::GetAvailability(PPFX::CDepthOfField *this);
int __thiscall PPFX::CDepthOfField::UninitializeSystemObjects(PPFX::CDepthOfField *this);
int __thiscall PPFX::CDepthOfField::SetEffectDepthOfFieldFactorScaleOffsetParameters(PPFX::CDepthOfField *this);
int __thiscall PPFX::CDepthOfField::ApplyDepthOfField(PPFX::CDepthOfField *this, const struct PPFX::CRenderTexture *a2, const struct PPFX::CRenderTexture *a3, const struct PPFX::CRenderTexture *a4, bool a5);
int __thiscall PPFX::CDepthOfField::ApplyApertureFilter(void *this, int a2, float *a3, unsigned int a4, int a5, int a6, char a7);
int __thiscall PPFX::CDepthOfField::ApplyApertureFilter(int this, float a2, float *a3, unsigned int a4, int a5, int a6, char a7);
BOOL __thiscall PPFX::CDepthOfField::GetNumWorkBufferNeeded(PPFX::CDepthOfField *this);
int PPFX::CDepthOfField::GetCompositeScatterWidthGather();
int __cdecl sub_81A610(int a1);
double __cdecl sub_81A660(int a1);
double __cdecl PPFX::GetStopUnitFnumber(PPFX *this, float a2);
PPFX::CDepthOfField *__thiscall PPFX::CDepthOfField::`scalar deleting destructor'(PPFX::CDepthOfField *this, char a2);
int __thiscall PPFX::COLORT4<double>::GetARGB8(double *this);
int __thiscall PPFX::CTextureUtil::GetHandle_tech_BokehBlur_Sn(_DWORD *this, int a2, char a3, char a4, char a5, char a6, int a7);
int __thiscall PPFX::CTextureUtil::GetHandle_tech_ScatterCocLevel(PPFX::CTextureUtil *this, bool a2, bool a3, bool a4, bool a5, bool a6);
double __thiscall PPFX::CDepthOfField::GetScatterAspectRatioAppliedSize(PPFX::CDepthOfField *this, float a2);
int __thiscall PPFX::CDepthOfField::GetScatterBokehLutParam(PPFX::CDepthOfField *this, int a2, int a3);
int __thiscall PPFX::CTextureLuminance::Construct(PPFX::CTextureLuminance *this, const char *a2);
void __thiscall PPFX::CTextureLuminance::InitializeLocalSystemMemory(PPFX::CTextureLuminance *__hidden this); // weak
void __thiscall PPFX::CTextureLuminance::InitializeLocalGPUInfos(PPFX::CTextureLuminance *__hidden this); // weak
int __thiscall PPFX::CTextureLuminance::CreateSystemObjects(int this, int a2, unsigned int a3, float a4);
int __thiscall PPFX::CTextureLuminance::CreateDeviceResources(PPFX::CTextureLuminance *this);
int __thiscall PPFX::CTextureLuminance::ApplyCopyCommandFromRenderTargetToSystemSurface(PPFX::CTextureLuminance *this);
// int __usercall PPFX::CTextureLuminance::GetFeedbackBufferResultIfAvailable@<eax>(PPFX::CTextureLuminance *this@<ecx>, int a2@<ebx>, int a3@<esi>);
int __thiscall PPFX::CTextureLuminance::Analyze_Source(PPFX::CTextureLuminance *this, const struct PPFX::CRenderTexture *a2);
int __thiscall PPFX::CTextureLuminance::Analyze_Process(PPFX::CTextureLuminance *this);
int __thiscall PPFX::CTextureLuminance::UpdateInternalLuminanceFromResultArray(__m128i *this);
// int __userpurge PPFX::CTextureLuminance::GetResult_UpdateInternalLuminance@<eax>(PPFX::CTextureLuminance *this@<ecx>, int a2@<ebx>, int a3);
PPFX::CTextureLuminance *__thiscall PPFX::CTextureLuminance::CTextureLuminance(PPFX::CTextureLuminance *this, const char *a2);
int __thiscall PPFX::CTextureLuminance::Initialize(PPFX::CGPUResourceManage *this, int a2, int a3, unsigned int a4, float a5);
int __thiscall PPFX::CTextureLuminance::IsReady(PPFX::CTextureLuminance *this);
int __thiscall PPFX::CTextureLuminance::Analyze(PPFX::IGPUDevice **this, const struct PPFX::CRenderTexture *a2, bool a3);
// int __userpurge PPFX::CTextureLuminance::GetResultAvailability@<eax>(PPFX::CTextureLuminance *this@<ecx>, _DWORD *a2@<ebx>, int a3);
// double __userpurge PPFX::CTextureLuminance::GetResultLuminance@<st0>(PPFX::CTextureLuminance *this@<ecx>, int a2@<ebx>, int a3);
// char *__userpurge PPFX::CTextureLuminance::GetResultIntensity@<eax>(PPFX::CTextureLuminance *a1@<ecx>, int a2@<ebx>, int a3);
unsigned int __thiscall PPFX::CTextureLuminance::SetDelayCount(PPFX::CTextureLuminance *this, unsigned int a2);
char *__thiscall PPFX::CTextureLuminance::~CTextureLuminance(PPFX::CTextureLuminance *this);
int __thiscall PPFX::CTextureLuminance::InitializeDevice(struct PPFX::IGPUDevice **this, struct PPFX::IGPUDevice *a2);
int __thiscall PPFX::CTextureLuminance::UninitializeDevice(PPFX::CTextureLuminance *this);
int __thiscall PPFX::CTextureLuminance::GetAvailability(PPFX::CTextureLuminance *this);
int __thiscall PPFX::CTextureLuminance::UninitializeSystemObjects(PPFX::CTextureLuminance *this);
int __thiscall PPFX::CTextureLuminanceManage::Construct(PPFX::CTextureLuminanceManage *this, const char *a2);
void __thiscall PPFX::CTextureLuminanceManage::InitializeLocalSystemMemory(PPFX::CTextureLuminanceManage *__hidden this); // weak
void __thiscall PPFX::CTextureLuminanceManage::InitializeLocalGPUInfos(PPFX::CTextureLuminanceManage *__hidden this); // weak
int __thiscall PPFX::CTextureLuminanceManage::CreateSystemObjects(PPFX::CTextureLuminanceManage *this);
int __thiscall PPFX::CTextureLuminanceManage::CreateDeviceResources(PPFX::CTextureLuminanceManage *this);
PPFX::CTextureLuminanceManage *__thiscall PPFX::CTextureLuminanceManage::CTextureLuminanceManage(PPFX::CTextureLuminanceManage *this, const char *a2);
int __thiscall PPFX::CTextureLuminanceManage::Initialize(__m128i *this, const __m128i *a2);
int __thiscall PPFX::CTextureLuminanceManage::IsReady(PPFX::CTextureLuminance **this);
int __thiscall PPFX::CTextureLuminanceManage::Analyze(PPFX::CTextureLuminanceManage *this, float a2, float a3, float a4, float a5, bool a6);
// int __usercall PPFX::CTextureLuminanceManage::UpdateFrame@<eax>(PPFX::CTextureLuminanceManage *this@<ecx>, _DWORD *a2@<ebx>, int a3@<edi>, int a4@<esi>);
int __thiscall PPFX::CTextureLuminanceManage::InitializeValue(int this, float a2, const __m128i *a3, float a4, int a5, int a6, int a7, char a8);
double __thiscall PPFX::CTextureLuminanceManage::GetCurrentValue(PPFX::CTextureLuminanceManage *this);
double __thiscall PPFX::CTextureLuminanceManage::GetCurrentLuminance(PPFX::CTextureLuminanceManage *this);
char *__thiscall PPFX::CTextureLuminanceManage::GetCurrentIntensity(char *this);
double __thiscall PPFX::CTextureLuminanceManage::GetDecodeTonemapPhysicalLuminance(PPFX::CTextureLuminanceManage *this, __int64 a2, float a3);
int __thiscall PPFX::CTextureLuminanceManage::SetInverseTonemapForPhysicalLuminance(PPFX::CTextureLuminanceManage *this, int a2);
char *__thiscall PPFX::CTextureLuminanceManage::~CTextureLuminanceManage(PPFX::CTextureLuminanceManage *this);
int __thiscall PPFX::CTextureLuminanceManage::InitializeDevice(struct PPFX::IGPUDevice **this, struct PPFX::IGPUDevice *a2);
int __thiscall PPFX::CTextureLuminanceManage::UninitializeDevice(PPFX::CTextureLuminanceManage *this);
int __thiscall PPFX::CTextureLuminanceManage::GetAvailability(PPFX::CTextureLuminanceManage *this);
int __thiscall PPFX::CTextureLuminanceManage::UninitializeSystemObjects(PPFX::CTextureLuminanceManage *this);
PPFX::CTextureLuminance *__thiscall PPFX::CTextureLuminance::`vector deleting destructor'(PPFX::CTextureLuminance *this, char a2);
PPFX::CTextureLuminanceManage *__thiscall PPFX::CTextureLuminanceManage::`vector deleting destructor'(PPFX::CTextureLuminanceManage *this, char a2);
int __thiscall PPFX::D3D10BASE__VIEW_DESC::Set(PPFX::D3D10BASE__VIEW_DESC *this, const struct D3D11_RENDER_TARGET_VIEW_DESC *a2);
int __thiscall PPFX::D3D10BASE__VIEW_DESC::Set(PPFX::D3D10BASE__VIEW_DESC *this, const struct D3D11_DEPTH_STENCIL_VIEW_DESC *a2);
int __thiscall PPFX::D3D10BASE__VIEW_DESC::Set(PPFX::D3D10BASE__VIEW_DESC *this, const struct D3D11_SHADER_RESOURCE_VIEW_DESC *a2);
int __cdecl PPFX::CreateRenderTargetOrDepthStencilViewFromShaderResourceView(_DWORD *a1, int a2, int a3, GPUUTIL *a4, int a5, int a6, unsigned int a7);
int __cdecl PPFX::CreateRenderTargetOrDepthStencilViewFromResource(_DWORD *a1, int a2, struct ID3D11Resource *a3, GPUUTIL *a4, int a5, int a6, int a7);
int __thiscall PPFX::D3D10BASE__RESOURCE_DESC::SetFromResource(D3D11_RESOURCE_DIMENSION *this, struct ID3D11Resource *a2);
int __thiscall PPFX::D3D10BASE__RESOURCE_DESC::SetFromRenderTargetView(D3D11_RESOURCE_DIMENSION *this, ID3D11View *a2);
int __thiscall PPFX::D3D10BASE__RESOURCE_DESC::SetFromDepthStencilView(D3D11_RESOURCE_DIMENSION *this, ID3D11View *a2);
int __thiscall PPFX::D3D10BASE__RESOURCE_DESC::SetFromShaderResourceView(D3D11_RESOURCE_DIMENSION *this, ID3D11View *a2, unsigned int a3, unsigned int a4);
int __thiscall PPFX::D3D10BASE__RESOURCE_DESC::SetFromRenderTargetOrDepthStencilView(D3D11_RESOURCE_DIMENSION *this, struct ID3D11View *a2);
int __thiscall PPFX::IGPUResource::GetResourceMemoryFlags(PPFX::IGPUResource *this);
int __thiscall PPFX::IGPUResource::GetD3DSubresourceIndex(PPFX::IGPUResource *this);
PPFX::IGPUResource *__thiscall PPFX::IGPUResource::IGPUResource(PPFX::IGPUResource *this, struct PPFX::IGPUDevice *a2);
void __thiscall PPFX::IGPUResource::~IGPUResource(PPFX::IGPUResource *__hidden this); // weak
int __thiscall PPFX::IGPUResource::GetDevice(PPFX::IGPUResource *this, struct PPFX::IGPUDevice **a2);
int __cdecl PPFX::D3D10BASE__RESOURCE_DESC__UpdateResourceViewSizes(unsigned int this);
PPFX::IGPUResource *__thiscall PPFX::IGPUResource::`vector deleting destructor'(PPFX::IGPUResource *this, char a2);
int __thiscall PPFX::IGPUSurface::GenerateFramebufferAttachmentTable(PPFX::IGPUSurface *this);
int __thiscall PPFX::IGPUSurface::Check_AttachDetachOtherSurfaceFramebuffer(PPFX::IGPUSurface *this, struct PPFX::IGPUSurface *a2, enum PPFX::EGPUFRAMEBUFFER_ATTACHMENT *a3);
int __thiscall PPFX::IGPUSurface::DetachAnAttachmentFromOtherSurfaceFramebuffer(_DWORD *this, _DWORD **a2);
int __thiscall PPFX::IGPUSurface::AttachOMRenderTargetFromOtherSurface(_DWORD *this, unsigned int a2, int a3);
PPFX::IGPUSurface *__cdecl PPFX::IGPUSurface::CreateSurface_D3DDefaultDeviceSurface(struct PPFX::IGPUDevice *a1, int a2, struct ID3D11View *a3);
PPFX::IGPUSurface *__cdecl PPFX::IGPUSurface::CreateSurface_D3DSurface(struct PPFX::IGPUDevice *a1, struct ID3D11View *a2, unsigned int a3, unsigned int a4, struct ID3D11Texture2D *a5, int a6);
PPFX::IGPUSurface *__cdecl PPFX::IGPUSurface::CreateSurface_D3DTEXTURE_ATTACHED_D3DSURFACE(struct PPFX::IGPUDevice *a1, struct PPFX::IGPUBaseTexture *a2, int a3, int a4);
PPFX::IGPUSurface *__cdecl PPFX::IGPUSurface::CreateSurface_GPUDEVICESURFACE(struct PPFX::IGPUDevice *a1, struct ID3D11View *a2, int a3, int a4, int a5);
PPFX::IGPUSurface *__thiscall PPFX::IGPUSurface::IGPUSurface(PPFX::IGPUSurface *this, struct PPFX::IGPUDevice *a2);
void __thiscall PPFX::IGPUSurface::~IGPUSurface(PPFX::IGPUSurface *__hidden this); // weak
GPUUTIL *__thiscall PPFX::IGPUSurface::RegisterD3DSurface(PPFX::IGPUSurface *this, struct ID3D11View *a2, unsigned int a3, IUnknown *a4, bool a5);
int __thiscall PPFX::IGPUSurface::RegisterD3DNonBoundRenderTextureResource(PPFX::IGPUSurface *this, ID3D11View *a2, unsigned int a3, unsigned int a4);
signed int __thiscall PPFX::IGPUSurface::CheckSetImage2D(PPFX::IGPUSurface *this, const void *a2, unsigned int a3, unsigned int a4, bool a5);
int __thiscall PPFX::IGPUSurface::SetImage2D(GPUUTIL **this, const void *a2, unsigned int a3, unsigned int a4, int a5);
int __thiscall PPFX::IGPUSurface::AttachFramebuffer(void *this, int a2, int a3);
int __thiscall PPFX::IGPUSurface::DetachFramebuffer(_DWORD *this, int a2);
int __thiscall PPFX::IGPUSurface::DetachAllFramebufferAttachment(PPFX::IGPUSurface *this);
int __thiscall PPFX::IGPUSurface::AttachToOtherSurfaceFramebuffer(void (__thiscall ***this)(void *), int a2, unsigned int a3);
int __thiscall PPFX::IGPUSurface::DetachFromOtherSurfaceFramebuffer(_DWORD *this, int a2, _DWORD *a3);
PPFX::IGPUSurface *__cdecl PPFX::IGPUSurface::CreateSurface(struct PPFX::IGPUDevice *a1, int a2, int a3, GPUUTIL *a4, unsigned int a5, int a6, int a7, int a8);
GPUUTIL *__cdecl PPFX::IGPUSurface::GetMutltisampleResolveFormat(GPUUTIL **a1, GPUUTIL **a2);
void __stdcall std::_List_buy<PPFX::GPUFB_ATTACHMENT>::_Buynode<PPFX::GPUFB_ATTACHMENT const &>(_DWORD *a1, _DWORD *a2, _DWORD *a3);
PPFX::IGPUSurface *__thiscall PPFX::IGPUSurface::`vector deleting destructor'(PPFX::IGPUSurface *this, char a2);
int __thiscall PPFX::IGPUResource::GetD3DDevice(PPFX::IGPUResource *this);
void __thiscall PPFX::ED3D10OMRENDERTARGETS::UpdateNumRenderTargetViews(PPFX::ED3D10OMRENDERTARGETS *__hidden this); // weak
void __stdcall std::_List_alloc<0,std::_List_base_types<PPFX::GPUFB_ATTACHMENT>>::_Buynode0(_DWORD *a1, _DWORD *a2);
_DWORD *__thiscall std::list<PPFX::GPUFB_ATTACHMENT>::push_back(_DWORD *this, _DWORD *a2);
PPFX::IGPUInterface *__thiscall PPFX::IGPUInterface::IGPUInterface(PPFX::IGPUInterface *this);
void __thiscall PPFX::IGPUInterface::~IGPUInterface(PPFX::IGPUInterface *__hidden this); // weak
int __thiscall PPFX::IGPUInterface::AddRef(PPFX::IGPUInterface *this);
int __thiscall PPFX::IGPUInterface::Release(PPFX::IGPUInterface *this);
PPFX::IGPUBaseInterface *__thiscall PPFX::IGPUBaseInterface::`scalar deleting destructor'(PPFX::IGPUBaseInterface *this, char a2);
PPFX::IGPUBaseTexture *__thiscall PPFX::IGPUBaseTexture::IGPUBaseTexture(PPFX::IGPUBaseTexture *this, struct PPFX::IGPUDevice *a2);
void __thiscall PPFX::IGPUBaseTexture::~IGPUBaseTexture(PPFX::IGPUBaseTexture *__hidden this); // weak
int __thiscall PPFX::IGPUBaseTexture::GetLevelCount(PPFX::IGPUBaseTexture *this);
int __thiscall PPFX::IGPUBaseTexture::Release(PPFX::IGPUBaseTexture *this);
int __thiscall PPFX::IGPUBaseTexture::SetImage2D(PPFX::IGPUBaseTexture *this, const void *a2, unsigned int a3, unsigned int a4, bool a5);
int __thiscall PPFX::IGPUBaseTexture::InvalidateSamplerStateModeCache(PPFX::IGPUBaseTexture *this);
int __thiscall PPFX::IGPUBaseTexture::SetSamplerStateMode(_DWORD *this, unsigned int a2);
int __thiscall PPFX::IGPUBaseTexture::GetSamplerStateMode(_DWORD *this);
int __thiscall PPFX::IGPUBaseTexture::SetSamplerStateMode_Filter(_DWORD *this, unsigned int a2);
int __thiscall PPFX::IGPUBaseTexture::SetSamplerStateMode_Address(_DWORD *this, unsigned int a2);
int __thiscall PPFX::IGPUBaseTexture::GetSamplerStateMode_Filter(_DWORD *this);
int __thiscall PPFX::IGPUBaseTexture::GetSamplerStateMode_Address(int *this);
int __thiscall PPFX::IGPUBaseTexture::ApplyDeviceSamplerStateMode(PPFX::IGPUBaseTexture *this, unsigned int a2, int a3);
int __thiscall PPFX::IGPUTexture::CreateLevelSurfacesAttachToTexture(PPFX::IGPUTexture *this);
int __thiscall PPFX::IGPUTexture::ReleaseLevelSurfacesAttachToTexture(PPFX::IGPUTexture *this);
PPFX::IGPUTexture *__thiscall PPFX::IGPUTexture::IGPUTexture(PPFX::IGPUTexture *this, struct PPFX::IGPUDevice *a2);
void __thiscall PPFX::IGPUTexture::~IGPUTexture(PPFX::IGPUTexture *__hidden this); // weak
int __thiscall PPFX::IGPUTexture::RegisterD3DTexture(PPFX::IGPUTexture *this, struct ID3D11ShaderResourceView *a2, bool a3);
int __thiscall PPFX::IGPUTexture::GetSurfaceLevel(PPFX::IGPUTexture *this, unsigned int a2, struct PPFX::IGPUSurface **a3);
int __thiscall PPFX::IGPUTexture::GetLevelDesc(PPFX::IGPUTexture *this, unsigned int a2, struct PPFX::GPUPIXELCONTAINER_DESC *a3);
int __thiscall PPFX::IGPUTexture::SetImage2D(PPFX::IGPUTexture *this, const void *a2, unsigned int a3, unsigned int a4, int a5);
PPFX::IGPUTexture *__cdecl PPFX::IGPUTexture::CreateTexture(PPFX::IGPUDevice *a1, int a2, int a3, int a4, GPUUTIL *a5, int a6, int a7, char a8, char a9);
int PPFX::IGPUTexture::CreateTexture();
PPFX::IGPUPixelContainer *__cdecl PPFX::IGPUTexture::CreateTexture_D3DTexture(struct PPFX::IGPUDevice *a1, struct ID3D11ShaderResourceView *a2, int a3);
PPFX::IGPUPixelContainer *__cdecl PPFX::IGPUTexture::CreateTexture_GPUDEVICETEXTURE(struct PPFX::IGPUDevice *a1, struct ID3D11ShaderResourceView *a2, unsigned int a3, unsigned int a4, unsigned int a5, int a6);
PPFX::IGPUCubeTexture *__thiscall PPFX::IGPUCubeTexture::IGPUCubeTexture(PPFX::IGPUCubeTexture *this, struct PPFX::IGPUDevice *a2);
int __thiscall PPFX::IGPUVolumeTexture::CreateLevelSurfacesAttachToTexture(PPFX::IGPUVolumeTexture *this);
int __thiscall PPFX::IGPUVolumeTexture::ReleaseLevelSurfacesAttachToTexture(PPFX::IGPUVolumeTexture *this);
PPFX::IGPUVolumeTexture *__thiscall PPFX::IGPUVolumeTexture::IGPUVolumeTexture(PPFX::IGPUVolumeTexture *this, struct PPFX::IGPUDevice *a2);
void __thiscall PPFX::IGPUVolumeTexture::~IGPUVolumeTexture(PPFX::IGPUVolumeTexture *__hidden this); // weak
int __thiscall PPFX::IGPUVolumeTexture::RegisterD3DTexture(PPFX::IGPUVolumeTexture *this, struct ID3D11ShaderResourceView *a2, bool a3);
int PPFX::IGPUVolumeTexture::CreateVolumeTexture();
PPFX::IGPUPixelContainer *__cdecl PPFX::IGPUVolumeTexture::CreateVolumeTexture_D3DVolumeTexture(struct PPFX::IGPUDevice *a1, struct ID3D11ShaderResourceView *a2, int a3);
PPFX::IGPUPixelContainer *__cdecl PPFX::IGPUVolumeTexture::CreateVolumeTexture_GPUDEVICETEXTURE(struct PPFX::IGPUDevice *a1, struct ID3D11ShaderResourceView *a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6, int a7);
PPFX::IGPUCubeTexture *__thiscall PPFX::IGPUCubeTexture::`vector deleting destructor'(PPFX::IGPUCubeTexture *this, char a2);
PPFX::IGPUTexture *__thiscall PPFX::IGPUTexture::`scalar deleting destructor'(PPFX::IGPUTexture *this, char a2);
PPFX::IGPUVolumeTexture *__thiscall PPFX::IGPUVolumeTexture::`vector deleting destructor'(PPFX::IGPUVolumeTexture *this, char a2);
PPFX::IGPUBuffer *__thiscall PPFX::IGPUBuffer::IGPUBuffer(PPFX::IGPUBuffer *this, struct PPFX::IGPUDevice *a2);
void __thiscall PPFX::IGPUBuffer::~IGPUBuffer(PPFX::IGPUBuffer *__hidden this); // weak
int __thiscall PPFX::IGPUBuffer::BuildBuffer(PPFX::IGPUBuffer *this, unsigned int a2, unsigned int a3, void *a4);
int __thiscall PPFX::IGPUBuffer::Map(int this, int a2, int a3, int a4);
int __thiscall PPFX::IGPUBuffer::Unmap(PPFX::IGPUBuffer *this);
void __thiscall PPFX::IGPUBuffer::SetPostDraw(PPFX::IGPUBuffer *__hidden this); // weak
PPFX::IGPUVertexBuffer *__thiscall PPFX::IGPUVertexBuffer::IGPUVertexBuffer(PPFX::IGPUVertexBuffer *this, struct PPFX::IGPUDevice *a2);
void __thiscall PPFX::IGPUVertexBuffer::~IGPUVertexBuffer(PPFX::IGPUVertexBuffer *__hidden this); // weak
int __thiscall PPFX::IGPUVertexBuffer::BuildVertexBuffer(PPFX::IGPUVertexBuffer *this, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, void *a6);
PPFX::IGPUVertexBuffer *__cdecl PPFX::IGPUVertexBuffer::CreateVertexBuffer(struct PPFX::IGPUDevice *a1, const char *a2, unsigned int a3, unsigned int a4, unsigned int a5, void *a6);
PPFX::IGPUIndexBuffer *__thiscall PPFX::IGPUIndexBuffer::IGPUIndexBuffer(PPFX::IGPUIndexBuffer *this, struct PPFX::IGPUDevice *a2);
void __thiscall PPFX::IGPUIndexBuffer::~IGPUIndexBuffer(PPFX::IGPUIndexBuffer *__hidden this); // weak
int __thiscall PPFX::IGPUIndexBuffer::BuildIndexBuffer(PPFX::IGPUBuffer *this, unsigned int a2, unsigned int a3, int a4, int a5, int a6, void *a7);
PPFX::IGPUIndexBuffer *__cdecl PPFX::IGPUIndexBuffer::CreateIndexBuffer(struct PPFX::IGPUDevice *a1, const char *a2, unsigned int a3, int a4, int a5, int a6, void *a7);
PPFX::IGPUInputAttribute *__thiscall PPFX::IGPUInputAttribute::IGPUInputAttribute(PPFX::IGPUInputAttribute *this, struct PPFX::IGPUDevice *a2);
void __thiscall PPFX::IGPUInputAttribute::~IGPUInputAttribute(PPFX::IGPUInputAttribute *__hidden this); // weak
int __thiscall PPFX::IGPUInputAttribute::BuildInputAttribute(PPFX::IGPUInputAttribute *this, const struct PPFX::GPUINPUTELEMENT *a2, unsigned int a3, const void *a4, unsigned int a5);
int __thiscall PPFX::IGPUInputAttribute::Uninitialize(PPFX::IGPUInputAttribute *this);
PPFX::IGPUInterface *__cdecl PPFX::IGPUInputAttribute::CreateInputAttribute(struct PPFX::IGPUDevice *a1, const struct PPFX::GPUINPUTELEMENT *a2, unsigned int a3, const void *a4, unsigned int a5);
PPFX::IGPUBuffer *__thiscall PPFX::IGPUBuffer::`scalar deleting destructor'(PPFX::IGPUBuffer *this, char a2);
PPFX::IGPUIndexBuffer *__thiscall PPFX::IGPUIndexBuffer::`vector deleting destructor'(PPFX::IGPUIndexBuffer *this, char a2);
PPFX::IGPUInputAttribute *__thiscall PPFX::IGPUInputAttribute::`vector deleting destructor'(PPFX::IGPUInputAttribute *this, char a2);
PPFX::IGPUVertexBuffer *__thiscall PPFX::IGPUVertexBuffer::`vector deleting destructor'(PPFX::IGPUVertexBuffer *this, char a2);
int __cdecl PPFX::GPUIEFMT_GetNumComponents(int a1);
int __cdecl PPFX::GetD3DMapFromGPUMAPACCESSTYPE(int a1);
PPFX::IGPUBaseQuery *__thiscall PPFX::IGPUBaseQuery::IGPUBaseQuery(PPFX::IGPUBaseQuery *this, struct PPFX::IGPUDevice *a2);
void __thiscall PPFX::IGPUBaseQuery::~IGPUBaseQuery(PPFX::IGPUBaseQuery *__hidden this); // weak
int __thiscall PPFX::IGPUBaseQuery::Uninitialize(PPFX::IGPUBaseQuery *this);
int __thiscall PPFX::IGPUBaseQuery::BuildQuery(PPFX::IGPUBaseQuery *this, int a2);
int __thiscall PPFX::IGPUBaseQuery::CreateDeviceQuery(PPFX::IGPUBaseQuery *this);
int __thiscall PPFX::IGPUBaseQuery::IsReadyForIssue(PPFX::IGPUBaseQuery *this);
int __thiscall PPFX::IGPUBaseQuery::IsReadyForBegin(PPFX::IGPUBaseQuery *this);
unsigned int __thiscall PPFX::IGPUBaseQuery::IsReadyForEnd(PPFX::IGPUBaseQuery *this);
int __thiscall PPFX::IGPUBaseQuery::Begin(PPFX::IGPUBaseQuery *this);
int __thiscall PPFX::IGPUBaseQuery::End(PPFX::IGPUBaseQuery *this);
int __thiscall PPFX::IGPUBaseQuery::GetResultAvailability(PPFX::IGPUBaseQuery *this, bool a2);
PPFX::IGPUQueryOcclusion *__thiscall PPFX::IGPUQueryOcclusion::IGPUQueryOcclusion(PPFX::IGPUQueryOcclusion *this, struct PPFX::IGPUDevice *a2);
void __thiscall PPFX::IGPUQueryOcclusion::~IGPUQueryOcclusion(PPFX::IGPUQueryOcclusion *__hidden this); // weak
int __thiscall PPFX::IGPUQueryOcclusion::Uninitialize(PPFX::IGPUQueryOcclusion *this);
void __thiscall PPFX::IGPUQueryOcclusion::ResetResult(PPFX::IGPUQueryOcclusion *__hidden this); // weak
int __thiscall PPFX::IGPUQueryOcclusion::UpdateInternalResult(PPFX::IGPUQueryOcclusion *this, unsigned int a2);
int __thiscall PPFX::IGPUQueryOcclusion::GetResult(PPFX::IGPUQueryOcclusion *this, int *a2, int a3);
char PPFX::IGPUQueryOcclusion::IsSupported();
PPFX::IGPUInterface *__cdecl PPFX::IGPUQueryOcclusion::CreateQueryOcclusion(struct PPFX::IGPUDevice *a1);
PPFX::IGPUBaseQuery *__thiscall PPFX::IGPUBaseQuery::`vector deleting destructor'(PPFX::IGPUBaseQuery *this, char a2);
int __thiscall PPFX::IGPUEffect::RegisterEffect(PPFX::IGPUEffect *this, struct PPFX::CTinyEffect *a2);
PPFX::IGPUEffect *__thiscall PPFX::IGPUEffect::IGPUEffect(PPFX::IGPUEffect *this, struct PPFX::IGPUDevice *a2);
void __thiscall PPFX::IGPUEffect::~IGPUEffect(PPFX::IGPUEffect *__hidden this); // weak
int __thiscall PPFX::IGPUEffect::SetGPUContext(PPFX::IGPUEffect *this, struct ID3D11DeviceContext *a2);
int __thiscall PPFX::IGPUEffect::OnResetDevice(PPFX::IGPUEffect *this);
int __thiscall PPFX::IGPUEffect::OnLostDevice(PPFX::IGPUEffect *this);
int __thiscall PPFX::IGPUEffect::GetParameterByName(PPFX::IGPUEffect *this, int a2, const char *a3);
int __thiscall PPFX::IGPUEffect::GetParameterBySemantic(PPFX::IGPUEffect *this, int a2, const char *a3);
int __thiscall PPFX::IGPUEffect::GetTechniqueByIndex(PPFX::IGPUEffect *this, unsigned int a2);
int __thiscall PPFX::IGPUEffect::GetTechniqueByName(PPFX::IGPUEffect *this, const char *a2);
int __thiscall PPFX::IGPUEffect::GetTechniqueByNameReverse(PPFX::IGPUEffect *this, const char *a2);
int __thiscall PPFX::IGPUEffect::GetTechniqueName(PPFX::IGPUEffect *this, int a2);
int __thiscall PPFX::IGPUEffect::SetFloat(PPFX::IGPUEffect *this, int a2, float a3);
int __thiscall PPFX::IGPUEffect::SetFloatArray(PPFX::IGPUEffect *this, int a2, const float *a3, unsigned int a4);
int __thiscall PPFX::IGPUEffect::SetVector(_DWORD **this);
int __thiscall PPFX::IGPUEffect::GetVector(_DWORD **this);
int __thiscall PPFX::IGPUEffect::SetVectorArray(_DWORD *this, int a2, int a3, int a4);
int __thiscall PPFX::IGPUEffect::GetVectorArray(_DWORD **this, int a2, int a3, int a4);
int __thiscall PPFX::IGPUEffect::SetMatrix(PPFX::IGPUEffect *this, int a2, const float *a3);
int __thiscall PPFX::IGPUEffect::SetMatrixArray(_DWORD **this, int a2, int a3, int a4);
int __thiscall PPFX::IGPUEffect::SetTexture(PPFX::IGPUEffect *this, int a2, struct PPFX::IGPUBaseTexture *a3);
int __thiscall PPFX::IGPUEffect::ValidateTechnique(PPFX::IGPUEffect *this, int a2);
int __thiscall PPFX::IGPUEffect::ValidateTechniqueShaderSupported(PPFX::IGPUEffect *this, int a2);
int __thiscall PPFX::IGPUEffect::SetTechnique(PPFX::IGPUEffect *this, int a2);
int __thiscall PPFX::IGPUEffect::GetCurrentTechnique(PPFX::IGPUEffect *this);
int __thiscall PPFX::IGPUEffect::GetVertexProgram(PPFX::IGPUEffect *this, int a2);
int __thiscall PPFX::IGPUEffect::GetFragmentProgram(PPFX::IGPUEffect *this, int a2);
int __thiscall PPFX::IGPUEffect::Begin(PPFX::IGPUEffect *this, unsigned int *a2, unsigned int a3);
int __thiscall PPFX::IGPUEffect::End(PPFX::IGPUEffect *this);
int __thiscall PPFX::IGPUEffect::BeginPass(PPFX::IGPUEffect *this, unsigned int a2);
int __thiscall PPFX::IGPUEffect::EndPass(PPFX::IGPUEffect *this);
int __thiscall PPFX::IGPUEffect::GetVertexProgramCode(PPFX::CTinyEffect **this, int a2);
int __thiscall PPFX::IGPUEffect::GetFragmentProgramCode(PPFX::CTinyEffect **this, int a2);
int __thiscall PPFX::IGPUEffect::GetVertexProgramCodeSize(PPFX::CTinyEffect **this, int a2);
int __thiscall PPFX::IGPUEffect::GetFragmentProgramCodeSize(PPFX::CTinyEffect **this, int a2);
int __thiscall PPFX::IGPUEffect::ApplyVertexInput(PPFX::IGPUEffect *this, struct PPFX::IGPUInputAttribute *a2, struct PPFX::IGPUVertexBuffer *a3, int a4, int a5, unsigned int a6, int a7);
int __thiscall PPFX::IGPUEffect::ResetVertexInputs(PPFX::IGPUEffect *this);
int __thiscall PPFX::IGPUEffect::GetUsedTechniqueNames(PPFX::CTinyEffect **this, char a2);
int __thiscall PPFX::IGPUEffect::GetNumUsedTechniques(PPFX::CTinyEffect **this, bool a2);
int __thiscall PPFX::IGPUEffect::GetUsedVertexProgramNames(PPFX::CTinyEffect **this, bool a2);
int __thiscall PPFX::IGPUEffect::GetNumUsedVertexPrograms(PPFX::CTinyEffect **this, bool a2);
int __thiscall PPFX::IGPUEffect::GetUsedFragmentProgramNames(PPFX::CTinyEffect **this, bool a2);
int __thiscall PPFX::IGPUEffect::GetNumUsedFragmentPrograms(PPFX::CTinyEffect **this, bool a2);
int __cdecl PPFX::IGPUEffect::CreateEffect(ID3D11DeviceChild **a1, const char *a2, unsigned int a3, const char **a4, struct PPFX::IGPUEffect **a5, const char **a6, bool a7);
int __cdecl PPFX::IGPUEffect::CreateEffectFromFile(ID3D11DeviceChild **a1, char *a2, const char **a3, struct PPFX::IGPUEffect **a4);
int __cdecl sub_821C30(int a1, int a2);
const char *__cdecl PPFX::BinarySearchTechnique(_DWORD *a1, char *a2);
PPFX::IGPUEffect *__thiscall PPFX::IGPUEffect::`vector deleting destructor'(PPFX::IGPUEffect *this, char a2);
int __thiscall PPFX::IGPUEffect::ApplyVertexInputs(PPFX::IGPUEffect *this, struct PPFX::IGPUInputAttribute *a2, struct PPFX::IGPUVertexBuffer *const *a3, const unsigned int *a4, const unsigned int *a5, unsigned int a6, unsigned int a7, bool a8);
int __thiscall PPFX::IGPUEffect::GetDesc(PPFX::IGPUEffect *this, __m128i *a2);
void *PPFX::GetData_ppfxTexUtil_tfxo();
void __cdecl PPFX::ReleaseData_ppfxTexUtil_tfxo(void *Block);
int __thiscall PPFX::GPUPIXELCONTAINER_DESC::SetFromD3DResourceDesc(PPFX::GPUPIXELCONTAINER_DESC *this, const struct PPFX::D3D10BASE__RESOURCE_DESC *a2);
int __thiscall PPFX::GPUPIXELCONTAINER_DESC::SetFromD3DRenderTargetView(PPFX::GPUPIXELCONTAINER_DESC *this, ID3D11View *a2);
int __thiscall PPFX::GPUPIXELCONTAINER_DESC::SetFromD3DDepthStencilView(PPFX::GPUPIXELCONTAINER_DESC *this, ID3D11View *a2);
int __thiscall PPFX::GPUPIXELCONTAINER_DESC::SetFromD3DShaderResourceView(PPFX::GPUPIXELCONTAINER_DESC *this, ID3D11View *a2);
int __thiscall PPFX::GPUPIXELCONTAINER_DESC::SetFromD3DSurface(PPFX::GPUPIXELCONTAINER_DESC *this, struct ID3D11View *a2);
int __thiscall PPFX::IGPUPixelContainer::UpdateGPUUSAGE_QUERY(PPFX::IGPUPixelContainer *this);
PPFX::IGPUPixelContainer *__thiscall PPFX::IGPUPixelContainer::IGPUPixelContainer(PPFX::IGPUPixelContainer *this, struct PPFX::IGPUDevice *a2);
void __thiscall PPFX::IGPUPixelContainer::~IGPUPixelContainer(PPFX::IGPUPixelContainer *__hidden this); // weak
unsigned int __thiscall PPFX::IGPUPixelContainer::CheckSetImage2D(PPFX::IGPUPixelContainer *this, const void *a2, unsigned int a3, unsigned int a4, bool a5);
int __thiscall PPFX::IGPUPixelContainer::GetDesc(PPFX::IGPUPixelContainer *this, struct PPFX::GPUPIXELCONTAINER_DESC *a2);
PPFX::IGPUPixelContainer *__thiscall PPFX::IGPUPixelContainer::`vector deleting destructor'(PPFX::IGPUPixelContainer *this, char a2);
HRESULT __thiscall PPFX::CManualProgramParameterTable::CreateTable(PPFX::CManualProgramParameterTable *this, struct PPFX::CTinyEffectProgram *a2);
int __thiscall PPFX::CManualProgramParameterTable::~CManualProgramParameterTable(PPFX::CManualProgramParameterTable *this);
int __thiscall PPFX::CManualProgramParameterTable::GetNamedParameterIndex(PPFX::CManualProgramParameterTable *this, const char *a2);
int __thiscall PPFX::CManualProgramParameterTable::GetParameterByName(PPFX::CManualProgramParameterTable *this, const char *a2);
bool __thiscall PPFX::CManualProgramParameterTable::IsParameterValid(PPFX::CManualProgramParameterTable *__hidden this, const struct PPFX::CManualProgramParameter *); // weak
char __thiscall PPFX::CManualProgramParameterTable::IsParameterReferenced(PPFX::CManualProgramParameterTable *this, const struct PPFX::CManualProgramParameter *a2);
const struct PPFX::CManualProgramParameter *__thiscall PPFX::CManualProgramParameterTable::GetElementParameter(PPFX::CManualProgramParameterTable *this, const struct PPFX::CManualProgramParameter *a2, int a3);
PPFX::CManualProgramParameterTable *__cdecl PPFX::CManualProgramParameterTable::CreateParameterTable(struct PPFX::CTinyEffectProgram *a1);
int __thiscall PPFX::CTinyEffectGlobalParameter::Uninitialize(PPFX::CTinyEffectGlobalParameter *this);
int __thiscall PPFX::CTinyEffectProgram::Uninitialize(PPFX::CTinyEffectProgram *this);
int __thiscall PPFX::CTinyEffectProgram::CreateD3DParameterTable(PPFX::CTinyEffectProgram *this);
int __thiscall PPFX::CTinyEffectProgram::GetNumUniformParameters(PPFX::CTinyEffectProgram *this);
int __thiscall PPFX::CTinyEffectProgram::GetNumAttributeParameters(PPFX::CTinyEffectProgram *this);
int __thiscall PPFX::CTinyEffectProgram::GetIndexedUniformParameter(PPFX::CTinyEffectProgram *this, int a2, struct PPFX::String *a3);
int __thiscall PPFX::CTinyEffectProgram::GetIndexedAttributeParameter(PPFX::CTinyEffectProgram *this, int a2, struct PPFX::String *a3);
int __thiscall PPFX::CTinyEffectProgram::GetNamedParameter(PPFX::CTinyEffectProgram *this, const char *a2);
bool __thiscall PPFX::CTinyEffectProgram::IsParameter(PPFX::CManualProgramParameterTable **this, const struct PPFX::CManualProgramParameter *a2);
bool __thiscall PPFX::CTinyEffectProgram::IsParameterReferenced(PPFX::CManualProgramParameterTable **this, const struct PPFX::CManualProgramParameter *a2);
const struct PPFX::CManualProgramParameter *__thiscall PPFX::CTinyEffectProgram::GetElementParameter(PPFX::CManualProgramParameterTable **this, const struct PPFX::CManualProgramParameter *a2, int a3);
PPFX::CTinyEffect *__thiscall PPFX::CTinyEffect::CTinyEffect(PPFX::CTinyEffect *this);
char *__thiscall PPFX::CTinyEffect::~CTinyEffect(PPFX::CTinyEffect *this);
int __thiscall PPFX::CTinyEffect::Initialize(ID3D11Device **this, ID3D11DeviceChild *a2);
int __thiscall PPFX::CTinyEffect::Uninitialize(PPFX::CTinyEffect *this);
char __thiscall PPFX::CTinyEffect::IsEffectMemoryImageNeeded(PPFX::CTinyEffect *this);
int __thiscall PPFX::CTinyEffect::ReleaseEffectSourceMemoryImage(PPFX::CTinyEffect *this);
int __thiscall PPFX::CTinyEffect::CreateParameter(PPFX::CTinyEffect *this, PPFX::CManualProgramParameterTable **a2, const char *a3);
int __thiscall PPFX::CTinyEffect::CreateParameter(PPFX::CTinyEffect *this, const char *a2);
int __thiscall PPFX::CTinyEffect::BuildEffect(const char **this);
int __thiscall PPFX::CTinyEffect::CreateFromMemory(ID3D11Device **this, const char *Src, ID3D11DeviceChild *a3, bool a4);
int __thiscall PPFX::CTinyEffect::CreateFromFile(PPFX::CTinyEffect *this, char *FileName, ID3D11DeviceChild *a3);
int __thiscall PPFX::CTinyEffect::SearchProgramByFileName(PPFX::CTinyEffect *this, const char *a2);
int __thiscall PPFX::CTinyEffect::BinarySearchTechniqueByName(PPFX::CTinyEffect *this, char *a2);
int __thiscall PPFX::CTinyEffect::SearchTechniqueByName(PPFX::CTinyEffect *this, char *a2);
int __thiscall PPFX::CTinyEffect::BinarySearchGlobalParameterByName(PPFX::CTinyEffect *this, char *a2, bool a3);
int __thiscall PPFX::CTinyEffect::SearchGlobalParameterByName(PPFX::CTinyEffect *this, char *a2, bool a3);
int __thiscall PPFX::CTinyEffect::CreateGlobalParameter(PPFX::CTinyEffect *this, int a2, int a3, int a4, char a5);
int __thiscall PPFX::CTinyEffect::CreateShaderProgram(PPFX::CTinyEffect *this, struct PPFX::TINYEFFECTPROGRAM *a2);
int __thiscall PPFX::CTinyEffect::GetShaderObjectCodeIndex(PPFX::CTinyEffect *this, const char **a2);
int __thiscall PPFX::CTinyEffect::GetShaderObjectCode(PPFX::CTinyEffect *this, const char **a2, unsigned int *a3);
int __thiscall PPFX::CTinyEffect::GetShaderObjectCode(PPFX::CTinyEffect *this, struct PPFX::TINYEFFECTPROGRAM *a2, unsigned int *a3);
unsigned int __thiscall PPFX::CTinyEffect::GetShaderObjectCodeSize(PPFX::CTinyEffect *__hidden this, struct PPFX::TINYEFFECTPROGRAM *); // weak
int __thiscall PPFX::CTinyEffect::CreateVertexProgramAttributeResource(PPFX::CTinyEffect *this, struct PPFX::CTinyEffectProgram *a2);
int __thiscall PPFX::CTinyEffect::CreateProgram(struct PPFX::CTinyEffect *this, int a2, int a3, int a4, PPFX::CTinyEffectProgram *a5);
int __cdecl PPFX::CTinyEffect::GetParameterElementSizeInBytes(int a1, char a2);
int __cdecl PPFX::CTinyEffect::GetParameterRegisterCount(int a1);
const char *__cdecl PPFX::CTinyEffect::GetParameterTypeName(int a1);
_DWORD __thiscall PPFX::CTinyEffect::SetPassState(PPFX::CTinyEffect *__hidden this); // weak
int __fastcall PPFX::CTinyEffect::ResetPassState(PPFX::CTinyEffect *this);
int __thiscall PPFX::CTinyEffect::GetTechniqueIndex(PPFX::CTinyEffect *this, int a2);
int __thiscall PPFX::CTinyEffect::GetVertexProgramCode(PPFX::CTinyEffect *this, int a2);
int __thiscall PPFX::CTinyEffect::GetFragmentProgramCode(PPFX::CTinyEffect *this, int a2);
int __thiscall PPFX::CTinyEffect::GetVertexProgramCodeSize(PPFX::CTinyEffect *this, int a2);
int __thiscall PPFX::CTinyEffect::GetFragmentProgramCodeSize(PPFX::CTinyEffect *this, int a2);
int __thiscall PPFX::CTinyEffect::CreateDeviceProgram(PPFX::CTinyEffect *this, struct PPFX::CTinyEffectProgram *a2);
int __thiscall PPFX::CTinyEffect::CreateTechniqueDevicePrograms(PPFX::CTinyEffect *this, int a2);
int __thiscall PPFX::CTinyEffect::OnResetDevice(PPFX::CTinyEffect *this);
int __thiscall PPFX::CTinyEffect::OnLostDevice(PPFX::CTinyEffect *this);
int __thiscall PPFX::CTinyEffect::GetNamedEffectParameter(PPFX::CTinyEffect *this, char *a2);
int __thiscall PPFX::CTinyEffect::GetNamedTechnique(PPFX::CTinyEffect *this, char *a2);
int __thiscall PPFX::CTinyEffect::GetIndexedTechnique(PPFX::CTinyEffect *this, unsigned int a2);
int __thiscall PPFX::CTinyEffect::GetTechniqueName(PPFX::CTinyEffect *this, int a2);
int __thiscall PPFX::CTinyEffect::SetFloat(PPFX::CTinyEffect *this, int a2, float a3);
int __thiscall PPFX::CTinyEffect::SetFloatArray(PPFX::CTinyEffect *this, int a2, const float *Src, unsigned int a4);
int __thiscall PPFX::CTinyEffect::SetVector(_DWORD *this, unsigned int a2, void *Src);
int __thiscall PPFX::CTinyEffect::GetVector(_DWORD *this, unsigned int a2, void *a3);
int __thiscall PPFX::CTinyEffect::SetVectorArray(_DWORD *this, int a2, void *Src, unsigned int a4);
int __thiscall PPFX::CTinyEffect::GetVectorArray(_DWORD *this, int a2, void *a3, unsigned int a4);
int __thiscall PPFX::CTinyEffect::SetMatrix(PPFX::CTinyEffect *this, unsigned int a2, const float *Src);
int __thiscall PPFX::CTinyEffect::SetMatrixArray(_DWORD *this, int a2, void *Src, unsigned int a4);
int __thiscall PPFX::CTinyEffect::SetTexture(PPFX::CTinyEffect *this, int a2, struct PPFX::IGPUPixelContainer *Src);
int __thiscall PPFX::CTinyEffect::ValidateTechnique(PPFX::CTinyEffect *this, int a2);
int __thiscall PPFX::CTinyEffect::SetTechnique(PPFX::CTinyEffect *this, int a2);
int __thiscall PPFX::CTinyEffect::GetCurrentTechnique(PPFX::CTinyEffect *this);
int __thiscall PPFX::CTinyEffect::GetVertexProgram(PPFX::CTinyEffect *this, int a2);
int __thiscall PPFX::CTinyEffect::GetFragmentProgram(PPFX::CTinyEffect *this, int a2);
int __thiscall PPFX::CTinyEffect::Begin(PPFX::CTinyEffect *this, unsigned int *a2, unsigned int a3);
int __thiscall PPFX::CTinyEffect::End(PPFX::CTinyEffect *this);
int __thiscall PPFX::CTinyEffect::BeginPass(PPFX::CTinyEffect *this, unsigned int a2);
// int __userpurge PPFX::CTinyEffect::ApplyVertexInputs@<eax>(PPFX::CTinyEffect *this@<ecx>, int a2@<esi>, struct PPFX::IGPUInputAttribute *a3, struct PPFX::IGPUVertexBuffer *const *a4, const unsigned int *a5, char *a6, unsigned int a7, unsigned int a8, bool a9);
char *__thiscall PPFX::CTinyEffect::GetUsedTechniqueNames(PPFX::CTinyEffect *this, char a2);
int __thiscall PPFX::CTinyEffect::GetNumUsedTechniques(PPFX::CTinyEffect *this, bool a2);
char *__thiscall PPFX::CTinyEffect::GetUsedVertexProgramNames(PPFX::CTinyEffect *this, bool a2);
int __thiscall PPFX::CTinyEffect::GetNumUsedVertexPrograms(PPFX::CTinyEffect *this, bool a2);
char *__thiscall PPFX::CTinyEffect::GetUsedFragmentProgramNames(PPFX::CTinyEffect *this, bool a2);
int __thiscall PPFX::CTinyEffect::GetNumUsedFragmentPrograms(PPFX::CTinyEffect *this, bool a2);
ID3D11Device **__cdecl PPFX::CTinyEffect::CreateEffect(const char *a1, ID3D11DeviceChild *a2, bool a3);
PPFX::CTinyEffect *__cdecl PPFX::CTinyEffect::CreateEffectFromFile(char *a1, ID3D11DeviceChild *a2);
int __cdecl PPFX::GPUMath_MatrixTranspose<float>(int a1, const __m128i *a2);
PPFX::CTinyEffectProgram *__thiscall PPFX::CTinyEffectProgram::CTinyEffectProgram(PPFX::CTinyEffectProgram *this, struct PPFX::CTinyEffect *a2, const char **a3);
PPFX::CTinyEffectProgramParameter *__thiscall PPFX::CTinyEffectProgramParameter::CTinyEffectProgramParameter(PPFX::CTinyEffectProgramParameter *this, struct PPFX::CTinyEffect *a2);
PPFX::TINYEFFECTPROGRAM *__thiscall PPFX::TINYEFFECTPROGRAM::TINYEFFECTPROGRAM(PPFX::TINYEFFECTPROGRAM *this, struct PPFX::CTinyEffect *a2);
void __thiscall PPFX::CInheritanceTypedReferenceManager<PPFX::__CManualProgramParameterTable>::~CInheritanceTypedReferenceManager<PPFX::__CManualProgramParameterTable>(_DWORD *this);
void __thiscall PPFX::CInheritanceTypedReferenceManager<PPFX::__CTinyEffect>::~CInheritanceTypedReferenceManager<PPFX::__CTinyEffect>(_DWORD *this);
char *__thiscall PPFX::CTinyEffectSubBase::~CTinyEffectSubBase(PPFX::CTinyEffectSubBase *this);
char *__thiscall PPFX::TINYEFFECTPROGRAM::~TINYEFFECTPROGRAM(PPFX::TINYEFFECTPROGRAM *this);
_DWORD *__thiscall PPFX::CInheritanceTypedReferenceManager<PPFX::__CManualProgramParameterTable>::`scalar deleting destructor'(_DWORD *this, char a2);
_DWORD *__thiscall PPFX::CInheritanceTypedReferenceManager<PPFX::__CTinyEffect>::`vector deleting destructor'(_DWORD *this, char a2);
PPFX::CManualProgramParameterTable *__thiscall PPFX::CManualProgramParameterTable::`scalar deleting destructor'(PPFX::CManualProgramParameterTable *this, char a2);
PPFX::CTinyEffect *__thiscall PPFX::CTinyEffect::`scalar deleting destructor'(PPFX::CTinyEffect *this, char a2);
char *__thiscall std::vector<PPFX::CTinyEffectTechnique *>::_Reallocate(_DWORD *this, unsigned int a2);
char *__thiscall std::vector<PPFX::CManualProgramParameter *>::_Reserve(_DWORD *this, unsigned int a2);
char *__thiscall std::vector<PPFX::CRenderTexture const *>::push_back(_DWORD *this, char *a2);
ovrMatrix4f_ *__cdecl ovrMatrix4f_Projection(ovrMatrix4f_ *result, ovrFovPort_ fov, float znear, float zfar, unsigned int projectionModFlags);
void __cdecl ovr_CalcEyePoses(int headPose, int headPose_4, int headPose_8, int headPose_12, __int128 headPose_16, ovrPosef_ *outEyePoses);
// void __usercall ovr_GetEyePoses(int a1@<ebp>, struct ovrHmdStruct *session, __int64 frameIndex, char latencyMarker, const ovrVector3f_ *hmdToEyeOffset, ovrPosef_ *outEyePoses, long double *outSensorSampleTime);
void __thiscall OVR::Matrix4<float>::Matrix4<float>(OVR::Matrix4<float> *this);
OVR::Matrix4<float> *__cdecl OVR::CreateProjection(OVR::Matrix4<float> *result, bool leftHanded, bool isOpenGL, OVR::FovPort tanHalfFov, OVR::StereoEye __formal, float zNear, float zFar, bool flipZ, bool farAtInfinity);
// int __stdcall FMOD_System_GetDriver(_DWORD, _DWORD); weak
// int __stdcall FMOD::System::getOutput(_DWORD, _DWORD); weak
// int __stdcall FMOD::System::getNumDrivers(_DWORD, _DWORD); weak
// int __stdcall FMOD::System::getDriverInfo(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::System::setDriver(_DWORD, _DWORD); weak
// int __stdcall FMOD::System::getDriver(_DWORD, _DWORD); weak
// int __stdcall FMOD::System::setSoftwareChannels(_DWORD, _DWORD); weak
// int __stdcall FMOD::System::setSoftwareFormat(_DWORD, _DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::System::getSoftwareFormat(_DWORD, _DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::System::getDSPBufferSize(_DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::System::setAdvancedSettings(_DWORD, _DWORD); weak
// int __stdcall FMOD::System::setCallback(_DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::System::set3DSettings(_DWORD, _DWORD, _DWORD, _DWORD); weak
// int __cdecl FMOD::System::get3DSettings(_DWORD, _DWORD); weak
// int __stdcall FMOD::System::getVersion(_DWORD, _DWORD); weak
// int __stdcall FMOD::System::getChannelsPlaying(_DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::System::createReverb3D(_DWORD, _DWORD); weak
// int __stdcall FMOD::System::getMasterChannelGroup(_DWORD, _DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::System::createGeometry(_DWORD, _DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::System::setGeometrySettings(_DWORD, _DWORD); weak
// int __stdcall FMOD::System::getGeometryOcclusion(_DWORD, _DWORD, _DWORD, _DWORD); weak
// int __cdecl FMOD::ChannelControl::setVolume(_DWORD, _DWORD); weak
// int __stdcall FMOD::ChannelControl::setReverbProperties(_DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::Geometry::release(_DWORD); weak
// int __stdcall FMOD::Geometry::addPolygon(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::Geometry::getNumPolygons(_DWORD, _DWORD); weak
// int __stdcall FMOD::Geometry::setPolygonAttributes(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::Geometry::setActive(_DWORD, _DWORD); weak
// int __stdcall FMOD::Reverb3D::release(_DWORD); weak
// int __stdcall FMOD::Reverb3D::set3DAttributes(_DWORD, _DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::Reverb3D::get3DAttributes(_DWORD, _DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::Reverb3D::setProperties(_DWORD, _DWORD); weak
// int __stdcall FMOD::Reverb3D::setActive(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::System::create(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::System::setAdvancedSettings(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::System::initialize(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::System::release(_DWORD); weak
// int __stdcall FMOD::Studio::System::update(_DWORD); weak
// int __stdcall FMOD::Studio::System::flushCommands(_DWORD); weak
// int __stdcall FMOD::Studio::System::getLowLevelSystem(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::System::getEventByID(_DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::System::getListenerAttributes(_DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::System::setListenerAttributes(_DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::System::loadBankFile(_DWORD, _DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::System::getCPUUsage(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::System::getBufferUsage(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::System::registerPlugin(_DWORD, _DWORD); weak
// int __cdecl FMOD::Studio::EventDescription::getMaximumDistance(_DWORD); weak
// int __stdcall FMOD::Studio::EventDescription::createInstance(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::EventDescription::loadSampleData(_DWORD); weak
// int __stdcall FMOD::Studio::EventDescription::unloadSampleData(_DWORD); weak
// int __stdcall FMOD::Studio::EventInstance::setVolume(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::EventInstance::setPitch(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::EventInstance::get3DAttributes(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::EventInstance::set3DAttributes(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::EventInstance::getPaused(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::EventInstance::setPaused(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::EventInstance::start(_DWORD); weak
// int __stdcall FMOD::Studio::EventInstance::stop(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::EventInstance::setTimelinePosition(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::EventInstance::getPlaybackState(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::EventInstance::getChannelGroup(_DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::EventInstance::release(_DWORD); weak
// int __stdcall FMOD::Studio::EventInstance::setParameterValue(_DWORD, _DWORD, _DWORD); weak
// int __stdcall FMOD::Studio::Bank::unload(_DWORD); weak
// HRESULT __stdcall D3DReflect(LPCVOID pSrcData, SIZE_T SrcDataSize, const IID *const pInterface, void **ppReflector);
// ULONG __stdcall GetAdaptersInfo(PIP_ADAPTER_INFO AdapterInfo, PULONG SizePointer);
// DWORD __stdcall XInputGetState(DWORD dwUserIndex, XINPUT_STATE *pState);
// DWORD __stdcall XInputSetState(DWORD dwUserIndex, XINPUT_VIBRATION *pVibration);
int __fastcall load__VR_GetVRInitErrorAsEnglishDescription(int a1, int a2);
// int __usercall _tailMerge_openvr_api_dll@<eax>(int (__stdcall **a1)()@<eax>, int a2@<edx>, int a3@<ecx>);
int __fastcall load__VR_GetGenericInterface(int a1, int a2);
int __fastcall load__VR_IsInterfaceVersionValid(int a1, int a2);
int __fastcall load__VR_GetInitToken(int a1, int a2);
int __fastcall load__VR_InitInternal(int a1, int a2);
int __fastcall load__VR_ShutdownInternal(int a1, int a2);
// BOOL __stdcall IsProcessorFeaturePresent(DWORD ProcessorFeature);
HRESULT __stdcall FW1CreateFactory(unsigned int Version, IFW1Factory **ppFactory);
void __thiscall FW1FontWrapper::CFW1Factory::CFW1Factory(FW1FontWrapper::CFW1Factory *this);
FW1FontWrapper::CFW1Factory *__thiscall FW1FontWrapper::CFW1Factory::`scalar deleting destructor'(FW1FontWrapper::CFW1Factory *this, unsigned int a2);
HRESULT __thiscall FW1FontWrapper::CFW1Factory::createDWriteFactory(FW1FontWrapper::CFW1Factory *this, IDWriteFactory **ppDWriteFactory);
void __thiscall FW1FontWrapper::CFW1Factory::setErrorString(FW1FontWrapper::CFW1Factory *this, const wchar_t *str);
HRESULT __stdcall FW1FontWrapper::CFW1Factory::CreateColor(FW1FontWrapper::CFW1Factory *this, unsigned int Color, IFW1ColorRGBA **ppColor);
HRESULT __stdcall FW1FontWrapper::CFW1Factory::CreateDWriteRenderTarget(FW1FontWrapper::CFW1Factory *this, IDWriteFactory *pDWriteFactory, unsigned int RenderTargetWidth, unsigned int RenderTargetHeight, IFW1DWriteRenderTarget **ppRenderTarget);
// HRESULT __userpurge FW1FontWrapper::CFW1Factory::CreateFontWrapper@<eax>(int a1@<ebx>, int a2@<esi>, FW1FontWrapper::CFW1Factory *this, ID3D11Device *pDevice, IDWriteFactory *pDWriteFactory, const FW1_FONTWRAPPERCREATEPARAMS *pCreateParams, IDWriteFontCollection *kunos_pFontCollection, IFW1FontWrapper **ppFontWrapper, IDWriteFontCollection *a9, IFW1GlyphRenderStates *a10);
HRESULT __stdcall FW1FontWrapper::CFW1Factory::CreateFontWrapper(FW1FontWrapper::CFW1Factory *this, ID3D11Device *pDevice, IFW1GlyphAtlas *pGlyphAtlas, IFW1GlyphProvider *pGlyphProvider, IFW1GlyphVertexDrawer *pGlyphVertexDrawer, IFW1GlyphRenderStates *pGlyphRenderStates, IDWriteFactory *pDWriteFactory, const FW1_DWRITEFONTPARAMS *pDefaultFontParams, IDWriteFontCollection *kunos_pFontCollection, IFW1FontWrapper **ppFontWrapper);
HRESULT __stdcall FW1FontWrapper::CFW1Factory::CreateFontWrapper(FW1FontWrapper::CFW1Factory *this, ID3D11Device *pDevice, const wchar_t *pszFontFamily, IFW1FontWrapper **ppFontWrapper);
HRESULT __stdcall FW1FontWrapper::CFW1Factory::CreateGlyphAtlas(FW1FontWrapper::CFW1Factory *this, ID3D11Device *pDevice, unsigned int GlyphSheetWidth, unsigned int GlyphSheetHeight, int HardwareCoordBuffer, int AllowOversizedGlyph, unsigned int MaxGlyphCountPerSheet, unsigned int MipLevels, unsigned int MaxGlyphSheetCount, IFW1GlyphAtlas **ppGlyphAtlas);
HRESULT __stdcall FW1FontWrapper::CFW1Factory::CreateGlyphProvider(FW1FontWrapper::CFW1Factory *this, IFW1GlyphAtlas *pGlyphAtlas, IDWriteFactory *pDWriteFactory, IDWriteFontCollection *pFontCollection, unsigned int MaxGlyphWidth, unsigned int MaxGlyphHeight, IFW1GlyphProvider **ppGlyphProvider);
HRESULT __stdcall FW1FontWrapper::CFW1Factory::CreateGlyphRenderStates(FW1FontWrapper::CFW1Factory *this, ID3D11Device *pDevice, int DisableGeometryShader, int AnisotropicFiltering, IFW1GlyphRenderStates **ppGlyphRenderStates);
HRESULT __stdcall FW1FontWrapper::CFW1Factory::CreateGlyphSheet(FW1FontWrapper::CFW1Factory *this, ID3D11Device *pDevice, unsigned int GlyphSheetWidth, unsigned int GlyphSheetHeight, int HardwareCoordBuffer, int AllowOversizedGlyph, unsigned int MaxGlyphCount, unsigned int MipLevels, IFW1GlyphSheet **ppGlyphSheet);
HRESULT __stdcall FW1FontWrapper::CFW1Factory::CreateGlyphVertexDrawer(FW1FontWrapper::CFW1Factory *this, ID3D11Device *pDevice, unsigned int VertexBufferSize, IFW1GlyphVertexDrawer **ppGlyphVertexDrawer);
HRESULT __stdcall FW1FontWrapper::CFW1Factory::CreateTextGeometry(FW1FontWrapper::CFW1Factory *this, IFW1TextGeometry **ppTextGeometry);
HRESULT __stdcall FW1FontWrapper::CFW1Factory::CreateTextRenderer(FW1FontWrapper::CFW1Factory *this, IFW1GlyphProvider *pGlyphProvider, IFW1TextRenderer **ppTextRenderer);
HRESULT __stdcall FW1FontWrapper::CFW1Factory::QueryInterface(FW1FontWrapper::CFW1Factory *this, const _GUID *riid, void **ppvObject);
signed __int32 __stdcall FW1FontWrapper::CFW1Factory::Release(FW1FontWrapper::CFW1Factory *this);
void __thiscall std::_Deque_alloc<0,std::_Deque_base_types<IFW1TextRenderer *>>::_Deque_alloc<0,std::_Deque_base_types<IFW1TextRenderer *>>(std::_Deque_alloc<0,std::_Deque_base_types<IFW1DWriteRenderTarget *> > *this, const std::allocator<IFW1DWriteRenderTarget *> *__formal);
void __thiscall FW1FontWrapper::CFW1FontWrapper::CFW1FontWrapper(FW1FontWrapper::CFW1FontWrapper *this);
void __thiscall FW1FontWrapper::CFW1Object<IFW1FontWrapper>::~CFW1Object<IFW1FontWrapper>(FW1FontWrapper::CFW1Object<IFW1FontWrapper> *this);
void __thiscall std::stack<IFW1TextGeometry *>::~stack<IFW1TextGeometry *,std::deque<IFW1TextGeometry *>>(std::stack<IFW1DWriteRenderTarget *> *this);
void __thiscall FW1FontWrapper::CFW1FontWrapper::~CFW1FontWrapper(FW1FontWrapper::CFW1FontWrapper *this);
std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<IFW1DWriteRenderTarget *> > > *__thiscall std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<IFW1TextGeometry *>>>::operator-(std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<IFW1DWriteRenderTarget *> > > *this, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<IFW1DWriteRenderTarget *> > > *result, int _Off);
FW1FontWrapper::CFW1Object<IFW1FontWrapper> *__thiscall FW1FontWrapper::CFW1Object<IFW1FontWrapper>::`vector deleting destructor'(FW1FontWrapper::CFW1Object<IFW1FontWrapper> *this, unsigned int a2);
FW1FontWrapper::CFW1FontWrapper *__thiscall FW1FontWrapper::CFW1FontWrapper::`vector deleting destructor'(FW1FontWrapper::CFW1FontWrapper *this, unsigned int a2);
signed __int32 __stdcall FW1FontWrapper::CFW1Object<IFW1FontWrapper>::Release(FW1FontWrapper::CFW1Object<IFW1FontWrapper> *this);
IDWriteTextLayout *__thiscall FW1FontWrapper::CFW1FontWrapper::createTextLayout(FW1FontWrapper::CFW1FontWrapper *this, const wchar_t *pszString, const wchar_t *pszFontFamily, float fontSize, const FW1_RECTF *pLayoutRect, unsigned int flags);
std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<IFW1DWriteRenderTarget *> > > *__thiscall std::deque<IFW1TextGeometry *>::end(std::deque<IFW1DWriteRenderTarget *> *this, std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<IFW1DWriteRenderTarget *> > > *result);
HRESULT __thiscall FW1FontWrapper::CFW1FontWrapper::initFontWrapper(FW1FontWrapper::CFW1FontWrapper *this, IFW1Factory *pFW1Factory, ID3D11Device *pDevice, IFW1GlyphAtlas *pGlyphAtlas, IFW1GlyphProvider *pGlyphProvider, IFW1GlyphVertexDrawer *pGlyphVertexDrawer, IFW1GlyphRenderStates *pGlyphRenderStates, IDWriteFactory *pDWriteFactory, const FW1_DWRITEFONTPARAMS *pDefaultFontParams, IDWriteFontCollection *kunos_pFontCollection);
IFW1TextGeometry **__thiscall std::stack<IFW1TextGeometry *>::top(std::stack<IFW1TextGeometry *> *this);
void __thiscall FW1FontWrapper::CFW1GlyphVertexDrawer::CFW1GlyphVertexDrawer(FW1FontWrapper::CFW1GlyphVertexDrawer *this);
void __thiscall FW1FontWrapper::CFW1Object<IFW1GlyphVertexDrawer>::~CFW1Object<IFW1GlyphVertexDrawer>(FW1FontWrapper::CFW1Object<IFW1GlyphVertexDrawer> *this);
void __thiscall FW1FontWrapper::CFW1GlyphVertexDrawer::~CFW1GlyphVertexDrawer(FW1FontWrapper::CFW1GlyphVertexDrawer *this);
FW1FontWrapper::CFW1Object<IFW1GlyphVertexDrawer> *__thiscall FW1FontWrapper::CFW1Object<IFW1GlyphVertexDrawer>::`scalar deleting destructor'(FW1FontWrapper::CFW1Object<IFW1GlyphVertexDrawer> *this, unsigned int a2);
FW1FontWrapper::CFW1GlyphVertexDrawer *__thiscall FW1FontWrapper::CFW1GlyphVertexDrawer::`vector deleting destructor'(FW1FontWrapper::CFW1GlyphVertexDrawer *this, unsigned int a2);
HRESULT __thiscall FW1FontWrapper::CFW1GlyphVertexDrawer::createBuffers(FW1FontWrapper::CFW1GlyphVertexDrawer *this);
unsigned int __thiscall FW1FontWrapper::CFW1GlyphVertexDrawer::drawGlyphsAsQuads(FW1FontWrapper::CFW1GlyphVertexDrawer *this, ID3D11DeviceContext *pContext, IFW1GlyphAtlas *pGlyphAtlas, const FW1_VERTEXDATA *vertexData, unsigned int preboundSheet);
unsigned int __thiscall FW1FontWrapper::CFW1GlyphVertexDrawer::drawVertices(FW1FontWrapper::CFW1GlyphVertexDrawer *this, ID3D11DeviceContext *pContext, IFW1GlyphAtlas *pGlyphAtlas, const FW1_VERTEXDATA *vertexData, unsigned int preboundSheet);
HRESULT __thiscall FW1FontWrapper::CFW1GlyphVertexDrawer::initVertexDrawer(FW1FontWrapper::CFW1GlyphVertexDrawer *this, IFW1Factory *pFW1Factory, ID3D11Device *pDevice, unsigned int vertexBufferSize);
void __thiscall FW1FontWrapper::CFW1GlyphRenderStates::CFW1GlyphRenderStates(FW1FontWrapper::CFW1GlyphRenderStates *this);
void __thiscall FW1FontWrapper::CFW1Object<IFW1GlyphRenderStates>::~CFW1Object<IFW1GlyphRenderStates>(FW1FontWrapper::CFW1Object<IFW1GlyphRenderStates> *this);
void __thiscall FW1FontWrapper::CFW1GlyphRenderStates::~CFW1GlyphRenderStates(FW1FontWrapper::CFW1GlyphRenderStates *this);
FW1FontWrapper::CFW1Object<IFW1GlyphRenderStates> *__thiscall FW1FontWrapper::CFW1Object<IFW1GlyphRenderStates>::`scalar deleting destructor'(FW1FontWrapper::CFW1Object<IFW1GlyphRenderStates> *this, unsigned int a2);
FW1FontWrapper::CFW1GlyphRenderStates *__thiscall FW1FontWrapper::CFW1GlyphRenderStates::`scalar deleting destructor'(FW1FontWrapper::CFW1GlyphRenderStates *this, unsigned int a2);
signed __int32 __stdcall FW1FontWrapper::CFW1Object<IFW1GlyphRenderStates>::Release(FW1FontWrapper::CFW1Object<IFW1GlyphRenderStates> *this);
HRESULT __thiscall FW1FontWrapper::CFW1GlyphRenderStates::createConstantBuffer(FW1FontWrapper::CFW1GlyphRenderStates *this);
HRESULT __thiscall FW1FontWrapper::CFW1GlyphRenderStates::createGlyphShaders(FW1FontWrapper::CFW1GlyphRenderStates *this);
HRESULT __thiscall FW1FontWrapper::CFW1GlyphRenderStates::createPixelShaders(FW1FontWrapper::CFW1GlyphRenderStates *this);
HRESULT __thiscall FW1FontWrapper::CFW1GlyphRenderStates::createQuadShaders(FW1FontWrapper::CFW1GlyphRenderStates *this);
HRESULT __thiscall FW1FontWrapper::CFW1GlyphRenderStates::createRenderStates(FW1FontWrapper::CFW1GlyphRenderStates *this, bool anisotropicFiltering);
HRESULT __thiscall FW1FontWrapper::CFW1GlyphRenderStates::initRenderResources(FW1FontWrapper::CFW1GlyphRenderStates *this, IFW1Factory *pFW1Factory, ID3D11Device *pDevice, bool wantGeometryShader, bool anisotropicFiltering);
void __thiscall FW1FontWrapper::CFW1TextRenderer::CFW1TextRenderer(FW1FontWrapper::CFW1TextRenderer *this);
void __thiscall FW1FontWrapper::CFW1Object<IFW1TextRenderer>::~CFW1Object<IFW1TextRenderer>(FW1FontWrapper::CFW1Object<IFW1TextRenderer> *this);
FW1FontWrapper::CFW1Object<IFW1TextRenderer> *__thiscall FW1FontWrapper::CFW1Object<IFW1TextRenderer>::`scalar deleting destructor'(FW1FontWrapper::CFW1Object<IFW1TextRenderer> *this, unsigned int a2);
FW1FontWrapper::CFW1TextRenderer *__thiscall FW1FontWrapper::CFW1TextRenderer::`scalar deleting destructor'(FW1FontWrapper::CFW1TextRenderer *this, unsigned int a2);
unsigned int __stdcall FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy::AddRef(FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy *this);
HRESULT __stdcall FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy::DrawGlyphRun(FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy *this, void *clientDrawingContext, float baselineOriginX, float baselineOriginY, DWRITE_MEASURING_MODE measuringMode, const DWRITE_GLYPH_RUN *glyphRun, const DWRITE_GLYPH_RUN_DESCRIPTION *glyphRunDescription, IUnknown *clientDrawingEffect);
HRESULT __stdcall FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy::DrawInlineObject(FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy *this, void *clientDrawingContext, float originX, float originY, IDWriteInlineObject *inlineObject, int isSideways, int isRightToLeft, IUnknown *clientDrawingEffect);
HRESULT __stdcall FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy::DrawUnderline(FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy *this, void *clientDrawingContext, float baselineOriginX, float baselineOriginY, const DWRITE_UNDERLINE *underline, IUnknown *clientDrawingEffect);
HRESULT __stdcall FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy::GetCurrentTransform(FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy *this, void *clientDrawingContext, DWRITE_MATRIX *transform);
HRESULT __stdcall FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy::GetPixelsPerDip(FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy *this, void *clientDrawingContext, float *pixelsPerDip);
HRESULT __stdcall FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy::IsPixelSnappingDisabled(FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy *this, void *clientDrawingContext, int *isDisabled);
HRESULT __stdcall FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy::QueryInterface(FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy *this, const _GUID *riid, void **ppvObject);
signed __int32 __stdcall FW1FontWrapper::CFW1Object<IFW1TextRenderer>::Release(FW1FontWrapper::CFW1Object<IFW1TextRenderer> *this);
unsigned int __stdcall FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy::Release(FW1FontWrapper::CFW1TextRenderer::CDWriteTextRendererProxy *this);
HRESULT __thiscall FW1FontWrapper::CFW1TextRenderer::initTextRenderer(FW1FontWrapper::CFW1TextRenderer *this, IFW1Factory *pFW1Factory, IFW1GlyphProvider *pGlyphProvider);
void __thiscall FW1FontWrapper::CFW1TextGeometry::CFW1TextGeometry(FW1FontWrapper::CFW1TextGeometry *this);
void __thiscall FW1FontWrapper::CFW1TextGeometry::~CFW1TextGeometry(FW1FontWrapper::CFW1TextGeometry *this);
FW1FontWrapper::CFW1Object<IFW1TextGeometry> *__thiscall FW1FontWrapper::CFW1Object<IFW1TextGeometry>::`vector deleting destructor'(FW1FontWrapper::CFW1Object<IFW1TextGeometry> *this, unsigned int a2);
FW1FontWrapper::CFW1TextGeometry *__thiscall FW1FontWrapper::CFW1TextGeometry::`vector deleting destructor'(FW1FontWrapper::CFW1TextGeometry *this, unsigned int a2);
signed __int32 __stdcall FW1FontWrapper::CFW1Object<IFW1TextGeometry>::Release(FW1FontWrapper::CFW1Object<IFW1TextGeometry> *this);
HRESULT __thiscall FW1FontWrapper::CFW1TextGeometry::initTextGeometry(FW1FontWrapper::CFW1TextGeometry *this, IFW1Factory *pFW1Factory);
void __cdecl std::_Destroy_range<std::_Wrap_alloc<std::allocator<FW1FontWrapper::CFW1GlyphProvider::FontInfo>>>(FW1FontWrapper::CFW1GlyphProvider::FontInfo *_First, FW1FontWrapper::CFW1GlyphProvider::FontInfo *_Last);
FW1FontWrapper::CFW1GlyphProvider::FontInfo *__cdecl std::_Uninit_move<FW1FontWrapper::CFW1GlyphProvider::FontInfo *,FW1FontWrapper::CFW1GlyphProvider::FontInfo *,std::allocator<FW1FontWrapper::CFW1GlyphProvider::FontInfo>,FW1FontWrapper::CFW1GlyphProvider::FontInfo>(FW1FontWrapper::CFW1GlyphProvider::FontInfo *_First, FW1FontWrapper::CFW1GlyphProvider::FontInfo *_Last, FW1FontWrapper::CFW1GlyphProvider::FontInfo *_Dest);
void __thiscall std::vector<wchar_t>::vector<wchar_t>(std::vector<wchar_t> *this, unsigned int _Count);
void __thiscall FW1FontWrapper::CFW1GlyphProvider::CFW1GlyphProvider(FW1FontWrapper::CFW1GlyphProvider *this);
void __thiscall FW1FontWrapper::CFW1Object<IFW1GlyphProvider>::~CFW1Object<IFW1GlyphProvider>(FW1FontWrapper::CFW1Object<IFW1GlyphProvider> *this);
void __thiscall std::vector<FW1FontWrapper::CFW1GlyphProvider::FontInfo>::~vector<FW1FontWrapper::CFW1GlyphProvider::FontInfo>(std::vector<FW1FontWrapper::CFW1GlyphProvider::FontInfo> *this);
void __thiscall FW1FontWrapper::CFW1GlyphProvider::~CFW1GlyphProvider(FW1FontWrapper::CFW1GlyphProvider *this);
FW1FontWrapper::CFW1Object<IFW1GlyphProvider> *__thiscall FW1FontWrapper::CFW1Object<IFW1GlyphProvider>::`scalar deleting destructor'(FW1FontWrapper::CFW1Object<IFW1GlyphProvider> *this, unsigned int a2);
FW1FontWrapper::CFW1GlyphProvider *__thiscall FW1FontWrapper::CFW1GlyphProvider::`vector deleting destructor'(FW1FontWrapper::CFW1GlyphProvider *this, unsigned int a2);
signed __int32 __stdcall FW1FontWrapper::CFW1Object<IFW1ColorRGBA>::Release(FW1FontWrapper::CFW1Object<IFW1GlyphProvider> *this);
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::pair<unsigned int,std::pair<unsigned int,float>> const,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>> > *this);
void __thiscall std::deque<IFW1DWriteRenderTarget *>::_Growmap(std::deque<IFW1DWriteRenderTarget *> *this, unsigned int _Count);
void __thiscall std::vector<FW1FontWrapper::CFW1GlyphProvider::FontInfo>::_Reallocate(std::vector<FW1FontWrapper::CFW1GlyphProvider::FontInfo> *this, unsigned int _Count);
void __thiscall std::vector<FW1FontWrapper::CFW1GlyphProvider::FontInfo>::_Reserve(std::vector<FW1FontWrapper::CFW1GlyphProvider::FontInfo> *this, unsigned int _Count);
unsigned int __thiscall FW1FontWrapper::CFW1GlyphProvider::getFontIndexFromFontFace(FW1FontWrapper::CFW1GlyphProvider *this, IDWriteFontFace *pFontFace);
std::wstring *__thiscall FW1FontWrapper::CFW1GlyphProvider::getUniqueNameFromFontFace(FW1FontWrapper::CFW1GlyphProvider *this, std::wstring *result, IDWriteFontFace *pFontFace);
HRESULT __thiscall FW1FontWrapper::CFW1GlyphProvider::initGlyphProvider(FW1FontWrapper::CFW1GlyphProvider *this, IFW1Factory *pFW1Factory, IFW1GlyphAtlas *pGlyphAtlas, IDWriteFactory *pDWriteFactory, IDWriteFontCollection *pFontCollection, unsigned int maxGlyphWidth, unsigned int maxGlyphHeight);
unsigned int __thiscall FW1FontWrapper::CFW1GlyphProvider::insertNewGlyph(FW1FontWrapper::CFW1GlyphProvider *this, FW1FontWrapper::CFW1GlyphProvider::GlyphMap *glyphMap, unsigned __int16 glyphIndex, IDWriteFontFace *pFontFace);
void __thiscall std::deque<IFW1TextGeometry *>::push_back(std::deque<IFW1DWriteRenderTarget *> *this, IFW1DWriteRenderTarget *const *_Val);
void __thiscall std::vector<FW1FontWrapper::CFW1GlyphProvider::FontInfo>::push_back(std::vector<FW1FontWrapper::CFW1GlyphProvider::FontInfo> *this, const FW1FontWrapper::CFW1GlyphProvider::FontInfo *_Val);
std::_Tree_node<std::pair<enum DWRITE_RENDERING_MODE const ,IDWriteRenderingParams *>,void *> *__thiscall std::_Tree_buy<std::pair<enum DWRITE_RENDERING_MODE const,IDWriteRenderingParams *>>::_Buynode<std::pair<enum DWRITE_RENDERING_MODE,IDWriteRenderingParams *>>(std::_Tree_buy<std::pair<enum DWRITE_RENDERING_MODE const ,IDWriteRenderingParams *>> *this, std::pair<enum DWRITE_RENDERING_MODE,IDWriteRenderingParams *> *<_Val_0>);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum DWRITE_RENDERING_MODE const ,IDWriteRenderingParams *> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<enum SystemMessageType,bool,std::less<enum SystemMessageType>,std::allocator<std::pair<enum SystemMessageType const,bool>>,0>>::_Insert_nohint<std::pair<enum SystemMessageType const,bool> &,std::_Tree_node<std::pair<enum SystemMessageType const,bool>,void *> *>(std::_Tree<std::_Tmap_traits<enum DWRITE_RENDERING_MODE,IDWriteRenderingParams *,std::less<enum DWRITE_RENDERING_MODE>,std::allocator<std::pair<enum DWRITE_RENDERING_MODE const ,IDWriteRenderingParams *> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum DWRITE_RENDERING_MODE const ,IDWriteRenderingParams *> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum DWRITE_RENDERING_MODE const ,IDWriteRenderingParams *> > > > _Leftish, std::pair<enum DWRITE_RENDERING_MODE const ,IDWriteRenderingParams *> *_Val, std::_Tree_node<std::pair<enum DWRITE_RENDERING_MODE const ,IDWriteRenderingParams *>,void *> *_Newnode);
void __thiscall FW1FontWrapper::CFW1DWriteRenderTarget::CFW1DWriteRenderTarget(FW1FontWrapper::CFW1DWriteRenderTarget *this);
void __thiscall FW1FontWrapper::CFW1Object<IFW1DWriteRenderTarget>::~CFW1Object<IFW1DWriteRenderTarget>(FW1FontWrapper::CFW1Object<IFW1DWriteRenderTarget> *this);
void __thiscall FW1FontWrapper::CFW1DWriteRenderTarget::~CFW1DWriteRenderTarget(FW1FontWrapper::CFW1DWriteRenderTarget *this);
FW1FontWrapper::CFW1Object<IFW1DWriteRenderTarget> *__thiscall FW1FontWrapper::CFW1Object<IFW1DWriteRenderTarget>::`vector deleting destructor'(FW1FontWrapper::CFW1Object<IFW1DWriteRenderTarget> *this, unsigned int a2);
FW1FontWrapper::CFW1DWriteRenderTarget *__thiscall FW1FontWrapper::CFW1DWriteRenderTarget::`vector deleting destructor'(FW1FontWrapper::CFW1DWriteRenderTarget *this, unsigned int a2);
signed __int32 __stdcall FW1FontWrapper::CFW1Object<IFW1DWriteRenderTarget>::Release(FW1FontWrapper::CFW1Object<IFW1DWriteRenderTarget> *this);
std::_Tree_node<std::pair<unsigned int const ,bool>,void *> **__thiscall std::_Tree_buy<std::pair<ID3D11ShaderResourceView * const,PPFX::CRenderTexture *>>::_Buynode0(std::_Tree_buy<std::pair<unsigned int const ,bool>> *this);
HRESULT __thiscall FW1FontWrapper::CFW1DWriteRenderTarget::createRenderTarget(FW1FontWrapper::CFW1DWriteRenderTarget *this, IDWriteFactory *pDWriteFactory);
void __thiscall FW1FontWrapper::CFW1DWriteRenderTarget::initGlyphData(FW1FontWrapper::CFW1DWriteRenderTarget *this, const DWRITE_FONT_METRICS *fontMetrics, const DWRITE_GLYPH_METRICS *glyphMetrics, float fontSize, FW1FontWrapper::CFW1DWriteRenderTarget::DWGlyphData *outGlyphData);
HRESULT __thiscall FW1FontWrapper::CFW1DWriteRenderTarget::initRenderTarget(FW1FontWrapper::CFW1DWriteRenderTarget *this, IFW1Factory *pFW1Factory, IDWriteFactory *pDWriteFactory, unsigned int renderTargetWidth, unsigned int renderTargetHeight);
void __thiscall FW1FontWrapper::CFW1GlyphAtlas::CFW1GlyphAtlas(FW1FontWrapper::CFW1GlyphAtlas *this);
void __thiscall FW1FontWrapper::CFW1Object<IFW1GlyphAtlas>::~CFW1Object<IFW1GlyphAtlas>(FW1FontWrapper::CFW1Object<IFW1GlyphAtlas> *this);
void __thiscall FW1FontWrapper::CFW1GlyphAtlas::~CFW1GlyphAtlas(FW1FontWrapper::CFW1GlyphAtlas *this);
FW1FontWrapper::CFW1Object<IFW1GlyphAtlas> *__thiscall FW1FontWrapper::CFW1Object<IFW1GlyphAtlas>::`vector deleting destructor'(FW1FontWrapper::CFW1Object<IFW1GlyphAtlas> *this, unsigned int a2);
FW1FontWrapper::CFW1GlyphAtlas *__thiscall FW1FontWrapper::CFW1GlyphAtlas::`scalar deleting destructor'(FW1FontWrapper::CFW1GlyphAtlas *this, unsigned int a2);
HRESULT __stdcall FW1FontWrapper::CFW1Object<IFW1GlyphAtlas>::GetFactory(FW1FontWrapper::CFW1Object<IFW1TextRenderer> *this, IFW1Factory **ppFW1Factory);
HRESULT __thiscall FW1FontWrapper::CFW1GlyphAtlas::createGlyphSheet(FW1FontWrapper::CFW1GlyphAtlas *this, IFW1GlyphSheet **ppGlyphSheet);
HRESULT __thiscall FW1FontWrapper::CFW1GlyphAtlas::initGlyphAtlas(FW1FontWrapper::CFW1GlyphAtlas *this, IFW1Factory *pFW1Factory, ID3D11Device *pDevice, unsigned int sheetWidth, unsigned int sheetHeight, bool coordBuffer, bool allowOversizedGlyph, unsigned int maxGlyphCount, unsigned int mipLevelCount, unsigned int maxSheetCount);
void __thiscall FW1FontWrapper::CFW1GlyphSheet::CFW1GlyphSheet(FW1FontWrapper::CFW1GlyphSheet *this);
void __thiscall FW1FontWrapper::CFW1Object<IFW1GlyphSheet>::~CFW1Object<IFW1GlyphSheet>(FW1FontWrapper::CFW1Object<IFW1GlyphSheet> *this);
void __thiscall FW1FontWrapper::CFW1GlyphSheet::~CFW1GlyphSheet(FW1FontWrapper::CFW1GlyphSheet *this);
FW1FontWrapper::CFW1Object<IFW1GlyphSheet> *__thiscall FW1FontWrapper::CFW1Object<IFW1GlyphSheet>::`vector deleting destructor'(FW1FontWrapper::CFW1Object<IFW1GlyphSheet> *this, unsigned int a2);
FW1FontWrapper::CFW1GlyphSheet *__thiscall FW1FontWrapper::CFW1GlyphSheet::`vector deleting destructor'(FW1FontWrapper::CFW1GlyphSheet *this, unsigned int a2);
signed __int32 __stdcall FW1FontWrapper::CFW1Object<IFW1TextRenderer>::AddRef(FW1FontWrapper::CFW1Object<IFW1TextRenderer> *this);
signed __int32 __stdcall FW1FontWrapper::CFW1Object<IFW1GlyphAtlas>::Release(FW1FontWrapper::CFW1Object<IFW1GlyphSheet> *this);
HRESULT __thiscall FW1FontWrapper::CFW1GlyphSheet::createDeviceResources(FW1FontWrapper::CFW1GlyphSheet *this);
unsigned int __thiscall FW1FontWrapper::CFW1GlyphSheet::HeightRange::findMin(FW1FontWrapper::CFW1GlyphSheet::HeightRange *this, unsigned int width, unsigned int *outMin);
HRESULT __thiscall FW1FontWrapper::CFW1GlyphSheet::initGlyphSheet(FW1FontWrapper::CFW1GlyphSheet *this, IFW1Factory *pFW1Factory, ID3D11Device *pDevice, unsigned int sheetWidth, unsigned int sheetHeight, int coordBuffer, bool allowOversizedGlyph, unsigned int maxGlyphCount, unsigned int mipLevelCount);
void __thiscall FW1FontWrapper::CFW1GlyphSheet::HeightRange::update(FW1FontWrapper::CFW1GlyphSheet::HeightRange *this, unsigned int startX, unsigned int width, unsigned int newHeight);
void __thiscall FW1FontWrapper::CFW1ColorRGBA::CFW1ColorRGBA(FW1FontWrapper::CFW1ColorRGBA *this);
FW1FontWrapper::CFW1ColorRGBA *__thiscall FW1FontWrapper::CFW1Object<IFW1ColorRGBA>::`scalar deleting destructor'(FW1FontWrapper::CFW1ColorRGBA *this, unsigned int a2);
HRESULT __thiscall FW1FontWrapper::CFW1ColorRGBA::initColor(FW1FontWrapper::CFW1ColorRGBA *this, IFW1Factory *pFW1Factory, unsigned int initialColor32);
void __stdcall FW1FontWrapper::CFW1FontWrapper::AnalyzeString(FW1FontWrapper::CFW1FontWrapper *this, ID3D11DeviceContext *pContext, const wchar_t *pszString, const wchar_t *pszFontFamily, float FontSize, const FW1_RECTF *pLayoutRect, unsigned int Color, unsigned int Flags, IFW1TextGeometry *pTextGeometry);
void __stdcall FW1FontWrapper::CFW1FontWrapper::AnalyzeTextLayout(FW1FontWrapper::CFW1FontWrapper *this, ID3D11DeviceContext *pContext, IDWriteTextLayout *pTextLayout, float OriginX, float OriginY, unsigned int Color, unsigned int Flags, IFW1TextGeometry *pTextGeometry);
void __stdcall FW1FontWrapper::CFW1FontWrapper::DrawGeometry(FW1FontWrapper::CFW1FontWrapper *this, ID3D11DeviceContext *pContext, IFW1TextGeometry *pGeometry, const FW1_RECTF *pClipRect, const float *pTransformMatrix, unsigned int Flags);
void __stdcall FW1FontWrapper::CFW1FontWrapper::DrawString(FW1FontWrapper::CFW1FontWrapper *this, ID3D11DeviceContext *pContext, const wchar_t *pszString, const wchar_t *pszFontFamily, float FontSize, float X, float Y, unsigned int Color, unsigned int Flags);
void __stdcall FW1FontWrapper::CFW1FontWrapper::DrawString(FW1FontWrapper::CFW1FontWrapper *this, ID3D11DeviceContext *pContext, const wchar_t *pszString, const wchar_t *pszFontFamily, float FontSize, const FW1_RECTF *pLayoutRect, unsigned int Color, const FW1_RECTF *pClipRect, const float *pTransformMatrix, unsigned int Flags);
void __stdcall FW1FontWrapper::CFW1FontWrapper::DrawString(FW1FontWrapper::CFW1FontWrapper *this, ID3D11DeviceContext *pContext, const wchar_t *pszString, float FontSize, float X, float Y, unsigned int Color, unsigned int Flags);
void __stdcall FW1FontWrapper::CFW1FontWrapper::DrawTextLayout(FW1FontWrapper::CFW1FontWrapper *this, ID3D11DeviceContext *pContext, IDWriteTextLayout *pTextLayout, float OriginX, float OriginY, unsigned int Color, unsigned int Flags);
void __stdcall FW1FontWrapper::CFW1FontWrapper::DrawTextLayout(FW1FontWrapper::CFW1FontWrapper *this, ID3D11DeviceContext *pContext, IDWriteTextLayout *pTextLayout, float OriginX, float OriginY, unsigned int Color, const FW1_RECTF *pClipRect, const float *pTransformMatrix, unsigned int Flags);
void __stdcall FW1FontWrapper::CFW1FontWrapper::Flush(FW1FontWrapper::CFW1FontWrapper *this, ID3D11DeviceContext *pContext);
HRESULT __stdcall FW1FontWrapper::CFW1FontWrapper::GetDWriteFactory(FW1FontWrapper::CFW1FontWrapper *this, IDWriteFactory **ppDWriteFactory);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphProvider::GetDWriteFontCollection(FW1FontWrapper::CFW1GlyphProvider *this, IDWriteFontCollection **ppFontCollection);
HRESULT __stdcall FW1FontWrapper::CFW1FontWrapper::GetGlyphProvider(FW1FontWrapper::CFW1FontWrapper *this, IFW1GlyphProvider **ppGlyphProvider);
HRESULT __stdcall FW1FontWrapper::CFW1FontWrapper::GetRenderStates(FW1FontWrapper::CFW1FontWrapper *this, IFW1GlyphRenderStates **ppRenderStates);
HRESULT __stdcall FW1FontWrapper::CFW1FontWrapper::GetVertexDrawer(FW1FontWrapper::CFW1FontWrapper *this, IFW1GlyphVertexDrawer **ppVertexDrawer);
// FW1_RECTF *__userpurge FW1FontWrapper::CFW1FontWrapper::MeasureString@<eax>(int a1@<edi>, FW1FontWrapper::CFW1FontWrapper *this, FW1_RECTF *result, const wchar_t *pszString, const wchar_t *pszFontFamily, float FontSize, const FW1_RECTF *pLayoutRect, unsigned int Flags);
HRESULT __stdcall FW1FontWrapper::CFW1FontWrapper::QueryInterface(FW1FontWrapper::CFW1FontWrapper *this, const _GUID *riid, void **ppvObject);
unsigned int __stdcall FW1FontWrapper::CFW1GlyphVertexDrawer::DrawVertices(FW1FontWrapper::CFW1GlyphVertexDrawer *this, ID3D11DeviceContext *pContext, IFW1GlyphAtlas *pGlyphAtlas, const FW1_VERTEXDATA *pVertexData, unsigned int Flags, unsigned int PreboundSheet);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphVertexDrawer::GetDevice(FW1FontWrapper::CFW1GlyphVertexDrawer *this, ID3D11Device **ppDevice);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphVertexDrawer::QueryInterface(FW1FontWrapper::CFW1GlyphVertexDrawer *this, const _GUID *riid, void **ppvObject);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphRenderStates::GetDevice(FW1FontWrapper::CFW1GlyphRenderStates *this, ID3D11Device **ppDevice);
BOOL __stdcall FW1FontWrapper::CFW1GlyphRenderStates::HasGeometryShader(FW1FontWrapper::CFW1GlyphRenderStates *this);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphRenderStates::QueryInterface(FW1FontWrapper::CFW1GlyphRenderStates *this, const _GUID *riid, void **ppvObject);
void __stdcall FW1FontWrapper::CFW1GlyphRenderStates::SetStates(FW1FontWrapper::CFW1GlyphRenderStates *this, ID3D11DeviceContext *pContext, unsigned int Flags);
void __stdcall FW1FontWrapper::CFW1GlyphRenderStates::UpdateShaderConstants(FW1FontWrapper::CFW1GlyphRenderStates *this, ID3D11DeviceContext *pContext, const FW1_RECTF *pClipRect, const float *pTransformMatrix);
HRESULT __thiscall FW1FontWrapper::CFW1TextRenderer::DrawGlyphRun(FW1FontWrapper::CFW1TextRenderer *this, void *clientDrawingContext, float baselineOriginX, float baselineOriginY, DWRITE_MEASURING_MODE measuringMode, const DWRITE_GLYPH_RUN *glyphRun, const DWRITE_GLYPH_RUN_DESCRIPTION *glyphRunDescription, IUnknown *clientDrawingEffect);
HRESULT __thiscall FW1FontWrapper::CFW1TextRenderer::DrawInlineObject(FW1FontWrapper::CFW1TextRenderer *this, void *clientDrawingContext, float originX, float originY, IDWriteInlineObject *inlineObject, int isSideways, int isRightToLeft, IUnknown *clientDrawingEffect);
HRESULT __thiscall FW1FontWrapper::CFW1TextRenderer::DrawStrikethrough(FW1FontWrapper::CFW1TextRenderer *this, void *clientDrawingContext, float baselineOriginX, float baselineOriginY, const DWRITE_UNDERLINE *underline, IUnknown *clientDrawingEffect);
HRESULT __stdcall FW1FontWrapper::CFW1TextRenderer::DrawTextLayout(FW1FontWrapper::CFW1TextRenderer *this, IDWriteTextLayout *pTextLayout, float OriginX, float OriginY, unsigned int Color, unsigned int Flags, IFW1TextGeometry *pTextGeometry);
HRESULT __thiscall FW1FontWrapper::CFW1TextRenderer::GetCurrentTransform(FW1FontWrapper::CFW1TextRenderer *this, void *clientDrawingContext, DWRITE_MATRIX *transform);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphAtlas::GetDevice(FW1FontWrapper::CFW1TextRenderer *this, IFW1GlyphProvider **ppGlyphProvider);
HRESULT __thiscall FW1FontWrapper::CFW1TextRenderer::GetPixelsPerDip(FW1FontWrapper::CFW1TextRenderer *this, void *clientDrawingContext, float *pixelsPerDip);
HRESULT __thiscall FW1FontWrapper::CFW1TextRenderer::IsPixelSnappingDisabled(FW1FontWrapper::CFW1TextRenderer *this, void *clientDrawingContext, int *isDisabled);
HRESULT __stdcall FW1FontWrapper::CFW1TextRenderer::QueryInterface(FW1FontWrapper::CFW1TextRenderer *this, const _GUID *riid, void **ppvObject);
void __cdecl std::_Uninit_def_fill_n<FW1_GLYPHVERTEX *,unsigned int,std::allocator<FW1_GLYPHVERTEX>,FW1_GLYPHVERTEX>(FW1_GLYPHVERTEX *_First, unsigned int _Count);
void __stdcall FW1FontWrapper::CFW1TextGeometry::AddGlyphVertex(FW1FontWrapper::CFW1TextGeometry *this, const FW1_GLYPHVERTEX *pVertex);
void __stdcall FW1FontWrapper::CFW1TextGeometry::Clear(FW1FontWrapper::CFW1TextGeometry *this);
FW1_VERTEXDATA *__stdcall FW1FontWrapper::CFW1TextGeometry::GetGlyphVerticesTemp(FW1FontWrapper::CFW1TextGeometry *this, FW1_VERTEXDATA *result);
HRESULT __stdcall FW1FontWrapper::CFW1Object<IFW1TextRenderer>::QueryInterface(FW1FontWrapper::CFW1Object<IFW1TextRenderer> *this, const _GUID *riid, void **ppvObject);
HRESULT __stdcall FW1FontWrapper::CFW1TextGeometry::QueryInterface(FW1FontWrapper::CFW1TextGeometry *this, const _GUID *riid, void **ppvObject);
void __thiscall std::vector<FW1_GLYPHVERTEX>::resize(std::vector<FW1_GLYPHVERTEX> *this, unsigned int _Newsize);
std::_Tree_node<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>,void *> *__thiscall std::_Tree_buy<std::pair<std::pair<unsigned int,std::pair<unsigned int,float>> const,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>>::_Buynode<std::pair<std::pair<unsigned int,std::pair<unsigned int,float>>,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>>(std::_Tree_buy<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>> *this, std::pair<std::pair<unsigned int,std::pair<unsigned int,float> >,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *> *<_Val_0>);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::pair<unsigned int,std::pair<unsigned int,float>>,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *,std::less<std::pair<unsigned int,std::pair<unsigned int,float>>>,std::allocator<std::pair<std::pair<unsigned int,std::pair<unsigned int,float>> const,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>>,0>>::_Insert_at<std::pair<std::pair<unsigned int,std::pair<unsigned int,float>> const,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *> &,std::_Tree_node<std::pair<std::pair<unsigned int,std::pair<unsigned int,float>> const,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>,void *> *>(std::_Tree<std::_Tmap_traits<std::pair<unsigned int,std::pair<unsigned int,float> >,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *,std::less<std::pair<unsigned int,std::pair<unsigned int,float> > >,std::allocator<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *> > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>,void *> *_Wherenode, std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *> *_Val, std::_Tree_node<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>,void *> *_Node);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::pair<unsigned int,std::pair<unsigned int,float>>,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *,std::less<std::pair<unsigned int,std::pair<unsigned int,float>>>,std::allocator<std::pair<std::pair<unsigned int,std::pair<unsigned int,float>> const,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>>,0>>::_Insert_nohint<std::pair<std::pair<unsigned int,std::pair<unsigned int,float>> const,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *> &,std::_Tree_node<std::pair<std::pair<unsigned int,std::pair<unsigned int,float>> const,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>,void *> *>(std::_Tree<std::_Tmap_traits<std::pair<unsigned int,std::pair<unsigned int,float> >,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *,std::less<std::pair<unsigned int,std::pair<unsigned int,float> > >,std::allocator<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *> > > > _Leftish, std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *> *_Val, std::_Tree_node<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>,void *> *_Newnode);
unsigned int __stdcall FW1FontWrapper::CFW1GlyphProvider::GetAtlasIdFromGlyphIndex(FW1FontWrapper::CFW1GlyphProvider *this, const void *pGlyphMap, unsigned __int16 GlyphIndex, IDWriteFontFace *pFontFace, unsigned int FontFlags);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphProvider::GetDWriteFactory(FW1FontWrapper::CFW1GlyphProvider *this, IDWriteFactory **ppDWriteFactory);
FW1FontWrapper::CFW1GlyphProvider::GlyphMap *__stdcall FW1FontWrapper::CFW1GlyphProvider::GetGlyphMapFromFont(FW1FontWrapper::CFW1GlyphProvider *this, IDWriteFontFace *pFontFace, float FontSize, unsigned int FontFlags);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphProvider::QueryInterface(FW1FontWrapper::CFW1GlyphProvider *this, const _GUID *riid, void **ppvObject);
std::_Tree_node<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>,void *> **__thiscall std::_Tree_buy<std::pair<std::pair<unsigned int,std::pair<unsigned int,float>> const,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>>::_Buynode0(std::_Tree_buy<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>> *this);
std::_Tree_node<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>,void *> *__thiscall std::_Tree<std::_Tmap_traits<std::pair<unsigned int,std::pair<unsigned int,float>>,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *,std::less<std::pair<unsigned int,std::pair<unsigned int,float>>>,std::allocator<std::pair<std::pair<unsigned int,std::pair<unsigned int,float>> const,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *>>,0>>::_Lbound(std::_Tree<std::_Tmap_traits<std::pair<unsigned int,std::pair<unsigned int,float> >,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *,std::less<std::pair<unsigned int,std::pair<unsigned int,float> > >,std::allocator<std::pair<std::pair<unsigned int,std::pair<unsigned int,float> > const ,FW1FontWrapper::CFW1GlyphProvider::GlyphMap *> >,0> > *this, const std::pair<unsigned int,std::pair<unsigned int,float> > *_Keyval);
HRESULT __stdcall FW1FontWrapper::CFW1DWriteRenderTarget::DrawGlyphTemp(FW1FontWrapper::CFW1DWriteRenderTarget *this, IDWriteFontFace *pFontFace, unsigned __int16 GlyphIndex, float FontSize, DWRITE_RENDERING_MODE RenderingMode, DWRITE_MEASURING_MODE MeasuringMode, FW1_GLYPHIMAGEDATA *pOutData);
HRESULT __stdcall FW1FontWrapper::CFW1DWriteRenderTarget::QueryInterface(FW1FontWrapper::CFW1DWriteRenderTarget *this, const _GUID *riid, void **ppvObject);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum DWRITE_RENDERING_MODE const ,IDWriteRenderingParams *> > > > *__thiscall std::_Tree<std::_Tmap_traits<enum SessionType,ReplayAutosave,std::less<enum SessionType>,std::allocator<std::pair<enum SessionType const,ReplayAutosave>>,0>>::find(std::_Tree<std::_Tmap_traits<enum DWRITE_RENDERING_MODE,IDWriteRenderingParams *,std::less<enum DWRITE_RENDERING_MODE>,std::allocator<std::pair<enum DWRITE_RENDERING_MODE const ,IDWriteRenderingParams *> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<enum DWRITE_RENDERING_MODE const ,IDWriteRenderingParams *> > > > *result, const DWRITE_RENDERING_MODE *_Keyval);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphAtlas::BindSheet(FW1FontWrapper::CFW1GlyphAtlas *this, ID3D11DeviceContext *pContext, unsigned int SheetIndex, unsigned int Flags);
void __stdcall FW1FontWrapper::CFW1GlyphAtlas::Flush(FW1FontWrapper::CFW1GlyphAtlas *this, ID3D11DeviceContext *pContext);
const FW1_GLYPHCOORDS *__stdcall FW1FontWrapper::CFW1GlyphAtlas::GetGlyphCoords(FW1FontWrapper::CFW1GlyphAtlas *this, unsigned int SheetIndex);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphAtlas::GetSheet(FW1FontWrapper::CFW1GlyphAtlas *this, unsigned int SheetIndex, IFW1GlyphSheet **ppGlyphSheet);
unsigned int __stdcall FW1FontWrapper::CFW1GlyphAtlas::GetSheetCount(FW1FontWrapper::CFW1GlyphAtlas *this);
int __stdcall FW1FontWrapper::CFW1GlyphAtlas::GetTotalGlyphCount(FW1FontWrapper::CFW1GlyphAtlas *this);
int __stdcall FW1FontWrapper::CFW1GlyphAtlas::InsertGlyph(FW1FontWrapper::CFW1GlyphAtlas *this, const FW1_GLYPHMETRICS *pGlyphMetrics, const void *pGlyphData, unsigned int RowPitch, unsigned int PixelStride);
unsigned int __stdcall FW1FontWrapper::CFW1GlyphAtlas::InsertSheet(FW1FontWrapper::CFW1GlyphAtlas *this, IFW1GlyphSheet *pGlyphSheet);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphAtlas::QueryInterface(FW1FontWrapper::CFW1GlyphAtlas *this, const _GUID *riid, void **ppvObject);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphSheet::BindSheet(FW1FontWrapper::CFW1GlyphSheet *this, ID3D11DeviceContext *pContext, unsigned int Flags);
void __stdcall FW1FontWrapper::CFW1GlyphSheet::CloseSheet(FW1FontWrapper::CFW1GlyphSheet *this);
void __stdcall FW1FontWrapper::CFW1GlyphSheet::Flush(FW1FontWrapper::CFW1GlyphSheet *this, ID3D11DeviceContext *pContext);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphSheet::GetCoordBuffer(FW1FontWrapper::CFW1GlyphSheet *this, ID3D11ShaderResourceView **ppCoordBufferSRV);
void __stdcall FW1FontWrapper::CFW1GlyphSheet::GetDesc(FW1FontWrapper::CFW1GlyphSheet *this, FW1_GLYPHSHEETDESC *pDesc);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphSheet::GetDevice(FW1FontWrapper::CFW1GlyphSheet *this, ID3D11Device **ppDevice);
FW1_GLYPHCOORDS *__stdcall FW1FontWrapper::CFW1GlyphSheet::GetGlyphCoords(FW1FontWrapper::CFW1GlyphSheet *this);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphSheet::GetSheetTexture(FW1FontWrapper::CFW1GlyphSheet *this, ID3D11ShaderResourceView **ppSheetTextureSRV);
unsigned int __stdcall FW1FontWrapper::CFW1GlyphSheet::InsertGlyph(FW1FontWrapper::CFW1GlyphSheet *this, const FW1_GLYPHMETRICS *pGlyphMetrics, const void *pGlyphData, unsigned int RowPitch, unsigned int PixelStride);
HRESULT __stdcall FW1FontWrapper::CFW1GlyphSheet::QueryInterface(FW1FontWrapper::CFW1GlyphSheet *this, const _GUID *riid, void **ppvObject);
unsigned int __stdcall FW1FontWrapper::CFW1ColorRGBA::GetColor32(FW1FontWrapper::CFW1ColorRGBA *this);
HRESULT __stdcall FW1FontWrapper::CFW1ColorRGBA::QueryInterface(FW1FontWrapper::CFW1ColorRGBA *this, const _GUID *riid, void **ppvObject);
void __stdcall FW1FontWrapper::CFW1ColorRGBA::SetColor(FW1FontWrapper::CFW1ColorRGBA *this, unsigned int Color);
void __stdcall FW1FontWrapper::CFW1ColorRGBA::SetColor(FW1FontWrapper::CFW1ColorRGBA *this, float Red, float Green, float Blue, float Alpha);
void __stdcall FW1FontWrapper::CFW1ColorRGBA::SetColor(FW1FontWrapper::CFW1ColorRGBA *this, const unsigned __int8 *pColor);
void __stdcall FW1FontWrapper::CFW1ColorRGBA::SetColor(FW1FontWrapper::CFW1ColorRGBA *this, const float *pColor);
void __thiscall FW1FontWrapper::CFW1StateSaver::CFW1StateSaver(FW1FontWrapper::CFW1StateSaver *this);
void __thiscall FW1FontWrapper::CFW1StateSaver::~CFW1StateSaver(FW1FontWrapper::CFW1StateSaver *this);
void __thiscall FW1FontWrapper::CFW1StateSaver::releaseSavedState(FW1FontWrapper::CFW1StateSaver *this);
HRESULT __thiscall FW1FontWrapper::CFW1StateSaver::restoreSavedState(FW1FontWrapper::CFW1StateSaver *this);
HRESULT __thiscall FW1FontWrapper::CFW1StateSaver::saveCurrentState(FW1FontWrapper::CFW1StateSaver *this, ID3D11DeviceContext *pContext);
void __thiscall GameTime::GameTime(GameTime *this);
void __thiscall GameTime::~GameTime(GameTime *this);
GameTime *__thiscall GameTime::`vector deleting destructor'(GameTime *this, unsigned int a2);
void __thiscall GameTime::update(GameTime *this);
void __thiscall RayPicker::RayPicker(RayPicker *this, float sW, float sH);
void __thiscall RayPickerTraverser::RayPickerTraverser(RayPickerTraverser *this, const vec3f *ray_org, const vec3f *ray_dir);
void __thiscall RayPicker::~RayPicker(RayPicker *this);
void __thiscall RayPickerTraverser::~RayPickerTraverser(RayPickerTraverser *this);
RayPicker *__thiscall RayPicker::`scalar deleting destructor'(RayPicker *this, unsigned int a2);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_79aed8583d974a0b4e89939487f0dfeb_,0>,std::allocator<std::_Func_class<void,Node *>>,void,Node *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_79aed8583d974a0b4e89939487f0dfeb>,0>,std::allocator<std::_Func_class<void,Node *> >,void,Node *> *this, Node **<_Args_0>);
char __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d9b93fd7105a45e42093d57c28a75eb1_,0>,std::allocator<std::_Func_class<bool,Node *>>,bool,Node *>::_Do_call(std::_Func_impl<std::_Callable_obj<<lambda_d9b93fd7105a45e42093d57c28a75eb1>,0>,std::allocator<std::_Func_class<bool,Node *> >,bool,Node *> *this, Node **<_Args_0>);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_79aed8583d974a0b4e89939487f0dfeb_,0>,std::allocator<std::_Func_class<void,Node *>>,void,Node *>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_79aed8583d974a0b4e89939487f0dfeb>,0>,std::allocator<std::_Func_class<void,Node *> >,void,Node *> *this, void *_Where);
void __thiscall std::_Func_impl<std::_Callable_obj<_lambda_d9b93fd7105a45e42093d57c28a75eb1_,0>,std::allocator<std::_Func_class<bool,Node *>>,bool,Node *>::_Move(std::_Func_impl<std::_Callable_obj<<lambda_d9b93fd7105a45e42093d57c28a75eb1>,0>,std::allocator<std::_Func_class<bool,Node *> >,bool,Node *> *this, void *_Where);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_79aed8583d974a0b4e89939487f0dfeb_,0>,std::allocator<std::_Func_class<void,Node *>>,void,Node *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_79aed8583d974a0b4e89939487f0dfeb>,0>,std::allocator<std::_Func_class<void,Node *> >,void,Node *> *this);
const type_info *__thiscall std::_Func_impl<std::_Callable_obj<_lambda_d9b93fd7105a45e42093d57c28a75eb1_,0>,std::allocator<std::_Func_class<bool,Node *>>,bool,Node *>::_Target_type(std::_Func_impl<std::_Callable_obj<<lambda_d9b93fd7105a45e42093d57c28a75eb1>,0>,std::allocator<std::_Func_class<bool,Node *> >,bool,Node *> *this);
char __thiscall RayPickerTraverser::onNode(RayPickerTraverser *this, Node *node);
// Mesh *__userpurge RayPicker::pick@<eax>(RayPicker *this@<ecx>, __m128 a2@<xmm0>, int px, int py, Camera *cam, Node *startNode);
void __thiscall MatrixStack::MatrixStack(MatrixStack *this);
void __thiscall MatrixStack::~MatrixStack(MatrixStack *this);
MatrixStack *__thiscall MatrixStack::`scalar deleting destructor'(MatrixStack *this, unsigned int a2);
mat44f *__thiscall MatrixStack::getCurrentMatrix(MatrixStack *this, mat44f *result);
void __thiscall MatrixStack::multMatrix(MatrixStack *this, mat44f *m);
void __thiscall MatrixStack::popMatrix(MatrixStack *this);
void __thiscall MatrixStack::pushAndSetMatrix(MatrixStack *this, mat44f *m);
void __thiscall MatrixStack::reset(MatrixStack *this);
char __cdecl Collisions::rayMeshIntersect(const vec3f *rayOrg, const vec3f *rayDir, Mesh *m, float *t);
std::_Tree_node<std::pair<std::wstring const ,TagDocumentText>,void *> *__thiscall std::_Tree_buy<std::pair<std::wstring const,TagDocumentText>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring &&>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,TagDocumentText>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring &&> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_node<std::pair<std::wstring const ,TagDocumentText>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,TagDocumentText>>::_Buynode<std::piecewise_construct_t const &,std::tuple<std::wstring const &>,std::tuple<>>(std::_Tree_buy<std::pair<std::wstring const ,TagDocumentText>> *this, const std::piecewise_construct_t *<_Val_0>, std::tuple<std::wstring const &> *<_Val_1>, std::tuple<> *<_Val_2>);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,TagDocumentText,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TagDocumentText>>,0>>::_Insert_at<std::pair<std::wstring const,TagDocumentText> &,std::_Tree_node<std::pair<std::wstring const,TagDocumentText>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,TagDocumentText,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TagDocumentText> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > > *result, bool _Addleft, std::_Tree_node<std::pair<std::wstring const ,TagDocumentText>,void *> *_Wherenode, std::pair<std::wstring const ,TagDocumentText> *_Val, std::_Tree_node<std::pair<std::wstring const ,TagDocumentText>,void *> *_Node);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,TagDocumentText,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TagDocumentText>>,0>>::_Insert_hint<std::pair<std::wstring const,TagDocumentText> &,std::_Tree_node<std::pair<std::wstring const,TagDocumentText>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,TagDocumentText,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TagDocumentText> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > > _Where, std::pair<std::wstring const ,TagDocumentText> *_Val, std::_Tree_node<std::pair<std::wstring const ,TagDocumentText>,void *> *_Newnode);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > >,bool> *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,TagDocumentText,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TagDocumentText>>,0>>::_Insert_nohint<std::pair<std::wstring const,TagDocumentText> &,std::_Tree_node<std::pair<std::wstring const,TagDocumentText>,void *> *>(std::_Tree<std::_Tmap_traits<std::wstring,TagDocumentText,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TagDocumentText> >,0> > *this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > >,bool> *result, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > > _Leftish, std::pair<std::wstring const ,TagDocumentText> *_Val, std::_Tree_node<std::pair<std::wstring const ,TagDocumentText>,void *> *_Newnode);
void __thiscall TagDocumentReader::TagDocumentReader(TagDocumentReader *this, std::wstring inputFile);
void __thiscall TagDocumentReader::TagDocumentReader(TagDocumentReader *this);
void __thiscall std::map<std::wstring,TagDocumentText>::~map<std::wstring,TagDocumentText>(TagDocumentReader *this);
TagDocumentText *__thiscall std::map<std::wstring,TagDocumentText>::operator[](std::map<std::wstring,TagDocumentText> *this, const std::wstring *_Keyval);
void __thiscall std::_Tree_alloc<0,std::_Tree_base_types<std::pair<CarAvatar * const,Lap>>>::_Buyheadnode(std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::wstring const ,TagDocumentText>> > *this);
std::_Tree_node<std::pair<std::wstring const ,TagDocumentText>,void *> **__thiscall std::_Tree_buy<std::pair<std::wstring const,TagDocumentText>>::_Buynode0(std::_Tree_buy<std::pair<std::wstring const ,TagDocumentText>> *this);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,TagDocumentText,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TagDocumentText>>,0>>::_Destroy_if_not_nil(std::_Tree<std::_Tmap_traits<std::wstring,TagDocumentText,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TagDocumentText> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,TagDocumentText>,void *> *_Newnode);
void __thiscall std::_Tree<std::_Tmap_traits<std::wstring,TagDocumentText,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,TagDocumentText>>,0>>::_Erase(std::_Tree<std::_Tmap_traits<std::wstring,TagDocumentText,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TagDocumentText> >,0> > *this, std::_Tree_node<std::pair<std::wstring const ,TagDocumentText>,void *> *_Rootnode);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > > *__thiscall std::_Tree<std::_Tmap_traits<std::wstring,std::wstring,std::less<std::wstring>,std::allocator<std::pair<std::wstring const,std::wstring>>,0>>::erase(std::_Tree<std::_Tmap_traits<std::wstring,TagDocumentText,std::less<std::wstring >,std::allocator<std::pair<std::wstring const ,TagDocumentText> >,0> > *this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > > *result, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > > _First, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::wstring const ,TagDocumentText> > > > _Last);
TagDocumentText *__thiscall TagDocumentReader::getText(TagDocumentReader *this, TagDocumentText *result, std::wstring key);
void __thiscall TagDocumentReader::load(TagDocumentReader *this, std::wstring inputFile);
void __thiscall PIDController::PIDController(PIDController *this);
double __thiscall PIDController::eval(PIDController *this, float targetv, float currentv, float dt);
void __thiscall PIDController::reset(PIDController *this);
void __thiscall PIDController::setPID(PIDController *this, float p, float i, float d);
void __thiscall TyreTester::TyreTester(TyreTester *this, const std::wstring *dataPath, int index);
TyreTester *__thiscall TyreTester::`vector deleting destructor'(char *this, unsigned int a2);
TyreTester *__thiscall TyreTester::`vector deleting destructor'(TyreTester *this, unsigned int a2);
vec3f *__thiscall TyreTester::getBasePosition(TyreTester *this, vec3f *result);
std::vector<DebugLine> *__thiscall TyreTester::getDebugLines(TyreTester *this, std::vector<DebugLine> *result, const mat44f *bodyMatrix, const mat44f *hubMatrix);
mat44f *__thiscall TyreTester::getHubWorldMatrix(TyreTester *this, mat44f *result);
double __thiscall TyreTester::getLoad(TyreTester *this);
vec3f *__thiscall TyreTester::getPointVelocity(TyreTester *this, vec3f *result, const vec3f *p);
SuspensionStatus *__thiscall TyreTester::getStatus(TyreTester *this);
char __thiscall TyreTester::rayCast(TyreTester *this, const vec3f *org, const vec3f *dir, RayCastResult *result, float length);
std::vector<TyreTestFrame> *__thiscall TyreTester::slipAngleSweep(TyreTester *this, std::vector<TyreTestFrame> *result, float minSA, float maxSA, float aload, int steps);
std::vector<TyreTestFrame> *__thiscall TyreTester::slipRatioSweep(TyreTester *this, std::vector<TyreTestFrame> *result, float minSR, float maxSR, float aload, int steps);
std::vector<TyreTestFrame> *__thiscall TyreTester::srSASweep(TyreTester *this, std::vector<TyreTestFrame> *result, float sa, float minsr, float maxsr, float load, int steps);
// __m128 __cdecl _libm_sse2_log_precise();
// __m128 __stdcall _libm_sse2_pow_precise(_DWORD); weak
// __m128 __thiscall _libm_sse2_tan_precise(_DWORD); weak
// __m128 _libm_sse2_acos_precise(void); weak
// __m128 _libm_sse2_asin_precise(void); weak
// __m128 __stdcall _libm_sse2_exp_precise(_DWORD, _DWORD); weak
// __m128 __cdecl _libm_sse2_sqrt_precise(_DWORD);
// double __cdecl floor(double X);
__m128 __vdecl_pow2(void); // weak
unsigned int __cdecl B1_1(int a1, int a2);
double __cdecl _vmldPow_HA_scalar(double a1, double a2);
void _raise_zerodivide();
// __m128i __usercall __spoils<ecx,st0> pow_scalar@<xmm0>(int a1@<ecx>, __int64 a2@<xmm0>, __int64 a3@<xmm1>);
// __m128d __usercall __sse2_pow2@<xmm0>(__m128i a1@<xmm0>, __m128i a2@<xmm1>);
void _raise_invalid();
// HRESULT __stdcall D3DCompile(LPCVOID pSrcData, SIZE_T SrcDataSize, LPCSTR pSourceName, const D3D_SHADER_MACRO *pDefines, ID3DInclude *pInclude, LPCSTR pEntrypoint, LPCSTR pTarget, UINT Flags1, UINT Flags2, ID3DBlob **ppCode, ID3DBlob **ppErrorMsgs);
// __m128 __libm_sse2_atan(void); weak
